@using BusinessEntities;
@using System.Configuration;
@{
    Dictionary<int, bool> dict = (Dictionary<int, bool>)TempData["MenuAccess"];
    TempData.Keep("MenuAccess");

    if (TempData["MenuAccess"] == null)
    {
        Response.Redirect("/Authentication/Authentication/Login");
    }

    #region Master
    bool isClinicSettings = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ClinicSettings)) ? dict[(int)Pages.ClinicSettings] : false);
    bool isDesignation = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Designations)) ? dict[(int)Pages.Designations] : false);
    bool isPrefixes = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Prefixes)) ? dict[(int)Pages.Prefixes] : false);
    bool isDepartments = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Departments)) ? dict[(int)Pages.Departments] : false);
    bool isInsuranceCompanies = (dict == null) ? false : ((dict.ContainsKey((int)Pages.InsuranceCompanies)) ? dict[(int)Pages.InsuranceCompanies] : false);
    bool isEmployees = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Employees)) ? dict[(int)Pages.Employees] : false);
    bool isDiagnosis = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Diagnosis)) ? dict[(int)Pages.Diagnosis] : false);
    bool isTreatmentGroup = (dict == null) ? false : ((dict.ContainsKey((int)Pages.TreatmentGroup)) ? dict[(int)Pages.TreatmentGroup] : false);
    bool isTreatments = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Treatments)) ? dict[(int)Pages.Treatments] : false);
    bool isVouchers = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Vouchers)) ? dict[(int)Pages.Vouchers] : false);
    bool isDiscounts = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Discounts)) ? dict[(int)Pages.Discounts] : false);
    bool isToothTreatmentsCategory = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ToothTreatmentsCategory)) ? dict[(int)Pages.ToothTreatmentsCategory] : false);
    bool isCPTCodeItemsMapping = (dict == null) ? false : ((dict.ContainsKey((int)Pages.CPTCodeItemsMapping)) ? dict[(int)Pages.CPTCodeItemsMapping] : false);
    bool isVaccinations = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Vaccinations)) ? dict[(int)Pages.Vaccinations] : false);
    bool isReferals = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Referals)) ? dict[(int)Pages.Referals] : false);
    bool isRooms = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Rooms)) ? dict[(int)Pages.Rooms] : false);
    bool isComplaints = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ComplaintsMaster)) ? dict[(int)Pages.ComplaintsMaster] : false);
    bool isAppointmentStatusColor = (dict == null) ? false : ((dict.ContainsKey((int)Pages.AppointmentStatusColor)) ? dict[(int)Pages.AppointmentStatusColor] : false);
    bool isMessageTypes = (dict == null) ? false : ((dict.ContainsKey((int)Pages.MessageTypes)) ? dict[(int)Pages.MessageTypes] : false);
    bool isSourceCampaigns = (dict == null) ? false : ((dict.ContainsKey((int)Pages.SourceCampaigns)) ? dict[(int)Pages.SourceCampaigns] : false);
    bool isDenialCodes = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DenialCodes)) ? dict[(int)Pages.DenialCodes] : false);
    bool isLinkCouponsToProcedures = (dict == null) ? false : ((dict.ContainsKey((int)Pages.LinkCouponsToProcedures)) ? dict[(int)Pages.LinkCouponsToProcedures] : false);
    bool isTemplates = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Templates)) ? dict[(int)Pages.Templates] : false);
    bool isMedicines = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Medicines)) ? dict[(int)Pages.Medicines] : false);

    bool isTreatmentMenu = (isTreatmentGroup || isTreatments);
    bool isMasterMenu = (isDesignation || isPrefixes || isDepartments || isDepartments || isInsuranceCompanies || isDiagnosis || isEmployees ||
        isTreatmentMenu || isVouchers || isDiscounts || isToothTreatmentsCategory || isCPTCodeItemsMapping || isCPTCodeItemsMapping ||
        isVaccinations || isReferals || isReferals || isRooms || isComplaints || isAppointmentStatusColor || isSourceCampaigns ||
        isDenialCodes || isLinkCouponsToProcedures || isTemplates || isMessageTypes);

    bool isMasterGroup = (isClinicSettings || isMasterMenu);
    #endregion Master

    #region Dashboard
    bool isDashboard = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Dashboard)) ? dict[(int)Pages.Dashboard] : false);
    #endregion Dashboard

    #region Patients
    bool isPatient = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Patients)) ? dict[(int)Pages.Patients] : false);
    #endregion Patients

    #region Appointments
    bool isAppointmentList = (dict == null) ? false : ((dict.ContainsKey((int)Pages.AppointmentList)) ? dict[(int)Pages.AppointmentList] : false);
    bool isAppointments = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Appointments)) ? dict[(int)Pages.Appointments] : false);
    bool isRoomSchedule = (dict == null) ? false : ((dict.ContainsKey((int)Pages.RoomSchedule)) ? dict[(int)Pages.RoomSchedule] : false);
    bool isDHAReports = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DHAReports)) ? dict[(int)Pages.DHAReports] : false);

    bool isAppointmentGroup = (isAppointmentList || isAppointments || isRoomSchedule || isDHAReports);
    #endregion Appointments

    #region Enquiry
    bool isMarketingDashboard = (dict == null) ? false : ((dict.ContainsKey((int)Pages.MarketingDashboard)) ? dict[(int)Pages.MarketingDashboard] : false);
    bool isEnquiries = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Enquiries)) ? dict[(int)Pages.Enquiries] : false);
    bool isDailyReportsHandledBy = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DailyReportsHandledBy)) ? dict[(int)Pages.DailyReportsHandledBy] : false);
    bool isYearlyReportsHandledBy = (dict == null) ? false : ((dict.ContainsKey((int)Pages.YearlyReportsHandledBy)) ? dict[(int)Pages.YearlyReportsHandledBy] : false);
    bool isDailyReportsBySource = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DailyReportsBySource)) ? dict[(int)Pages.DailyReportsBySource] : false);
    bool isYearlyReportsBySource = (dict == null) ? false : ((dict.ContainsKey((int)Pages.YearlyReportsBySource)) ? dict[(int)Pages.YearlyReportsBySource] : false);
    bool isEnquiryReportsByStatus = (dict == null) ? false : ((dict.ContainsKey((int)Pages.EnquiryReportsByStatus)) ? dict[(int)Pages.EnquiryReportsByStatus] : false);
    bool isPatientSummaryReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PatientSummaryReport)) ? dict[(int)Pages.PatientSummaryReport] : false);
    bool isGraphicalReportSummary = (dict == null) ? false : ((dict.ContainsKey((int)Pages.GraphicalReportSummary)) ? dict[(int)Pages.GraphicalReportSummary] : false);

    bool isMarketingReportMenu = (isDailyReportsHandledBy || isYearlyReportsHandledBy || isDailyReportsBySource || isYearlyReportsBySource
        || isEnquiryReportsByStatus || isPatientSummaryReport || isGraphicalReportSummary);

    bool isMarketingGroup = (isMarketingDashboard || isEnquiries || isMarketingReportMenu);
    #endregion Enquiry

    #region Invoice
    bool isInvoice = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Invoice)) ? dict[(int)Pages.Invoice] : false);
    bool isReceipts = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Receipts)) ? dict[(int)Pages.Receipts] : false);
    bool isAdvanceLoyaltyRefund = (dict == null) ? false : ((dict.ContainsKey((int)Pages.AdvanceLoyaltyRefund)) ? dict[(int)Pages.AdvanceLoyaltyRefund] : false);
    bool isCreditNote = (dict == null) ? false : ((dict.ContainsKey((int)Pages.CreditNote)) ? dict[(int)Pages.CreditNote] : false);

    bool isInvoiceGroup = (isInvoice || isReceipts || isAdvanceLoyaltyRefund || isCreditNote);
    #endregion Invoice

    #region eClaimsAndPriorRequest
    bool iseClaims = (dict == null) ? false : ((dict.ContainsKey((int)Pages.eClaims)) ? dict[(int)Pages.eClaims] : false);
    bool isPriorRequests = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PriorRequests)) ? dict[(int)Pages.PriorRequests] : false);
    bool iseClaimsGroup = (iseClaims || isPriorRequests);
    #endregion eClaimsAndPriorRequest

    #region Reports
    bool isCollectionReports = (dict == null) ? false : ((dict.ContainsKey((int)Pages.CollectionReports)) ? dict[(int)Pages.CollectionReports] : false);
    bool isVATReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.VATReport)) ? dict[(int)Pages.VATReport] : false);
    bool isEmailReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.EmailReport)) ? dict[(int)Pages.EmailReport] : false);
    bool isReferredByMeReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ReferredByMeReport)) ? dict[(int)Pages.ReferredByMeReport] : false);
    bool isReferredToMeReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ReferredToMeReport)) ? dict[(int)Pages.ReferredToMeReport] : false);
    bool isPatientNonVisitsReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PatientNonVisitsReport)) ? dict[(int)Pages.PatientNonVisitsReport] : false);
    bool isTreatmentsReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.TreatmentsReport)) ? dict[(int)Pages.TreatmentsReport] : false);
    bool isDailyCollections = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DailyCollections)) ? dict[(int)Pages.DailyCollections] : false);
    bool isDoctorsCommission = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DoctorsCommission)) ? dict[(int)Pages.DoctorsCommission] : false);
    bool isSurveyGraphicalCharts = (dict == null) ? false : ((dict.ContainsKey((int)Pages.SurveyGraphicalCharts)) ? dict[(int)Pages.SurveyGraphicalCharts] : false);
    bool isTreatmentValidityReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.TreatmentValidityReport)) ? dict[(int)Pages.TreatmentValidityReport] : false);
    bool isDoctorsCollectionsReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DoctorsCollectionsReport)) ? dict[(int)Pages.DoctorsCollectionsReport] : false);
    bool isProfitLossReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ProfitLossReport)) ? dict[(int)Pages.ProfitLossReport] : false);
    bool isDoctorTreatmentTypewiseReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DoctorTreatmentTypewiseReport)) ? dict[(int)Pages.DoctorTreatmentTypewiseReport] : false);
    bool isDayMonthYearTDReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DayMonthYearTDReport)) ? dict[(int)Pages.DayMonthYearTDReport] : false);
    bool isDoctorBranchwiseSummaryReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DoctorBranchwiseSummaryReport)) ? dict[(int)Pages.DoctorBranchwiseSummaryReport] : false);
    bool isReceptionWiseCollection = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ReceptionWiseCollection)) ? dict[(int)Pages.ReceptionWiseCollection] : false);
    bool isBranchSummaryReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.BranchSummaryReport)) ? dict[(int)Pages.BranchSummaryReport] : false);
    bool isDailyRevenue = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DailyRevenue)) ? dict[(int)Pages.DailyRevenue] : false);
    bool isInsuranceOutstandingSummary = (dict == null) ? false : ((dict.ContainsKey((int)Pages.InsuranceOutstandingSummary)) ? dict[(int)Pages.InsuranceOutstandingSummary] : false);
    bool isInsuranceClaimsOutstandingReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.InsuranceClaimsOutstandingReport)) ? dict[(int)Pages.InsuranceClaimsOutstandingReport] : false);
    bool isInvoiceSummaryReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.InvoiceSummaryReport)) ? dict[(int)Pages.InvoiceSummaryReport] : false);
    bool isDoctorPatientCollectionReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DoctorPatientCollectionReport)) ? dict[(int)Pages.DoctorPatientCollectionReport] : false);
    bool isPackagesReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PackagesReport)) ? dict[(int)Pages.PackagesReport] : false);
    bool isInternalStockConsumptionReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.InternalStockComsumptionReport)) ? dict[(int)Pages.InternalStockComsumptionReport] : false);
    bool isMonthlyReferralReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.MonthlyReferralReport)) ? dict[(int)Pages.MonthlyReferralReport] : false);
    bool isYearlyReferralReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.YearlyReferralReport)) ? dict[(int)Pages.YearlyReferralReport] : false);
    bool isPreSubmissionsReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PreSubmissionsReport)) ? dict[(int)Pages.PreSubmissionsReport] : false);
    bool isInsuranceEMRReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.InsuranceEMRCheckingReport)) ? dict[(int)Pages.InsuranceEMRCheckingReport] : false);

    bool isAppointmentStatusReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.AppointmentStatusReport)) ? dict[(int)Pages.AppointmentStatusReport] : false);
    bool isPatientDiagnosisReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PatientDiagnosisReport)) ? dict[(int)Pages.PatientDiagnosisReport] : false);
    bool isMedicationReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.MedicationReport)) ? dict[(int)Pages.MedicationReport] : false);
    bool isChiefComplaintsReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ChiefComplaintsReport)) ? dict[(int)Pages.ChiefComplaintsReport] : false);
    bool isVitalSignsReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.VitalSignsReport)) ? dict[(int)Pages.VitalSignsReport] : false);
    bool isAuditLogsReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.AuditLogsReport)) ? dict[(int)Pages.AuditLogsReport] : false);
    bool isProgressNotesReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ProgressNotesReport)) ? dict[(int)Pages.ProgressNotesReport] : false);
    bool isSignedDocumentReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.NurseNotes)) ? dict[(int)Pages.NurseNotes] : false);

    bool isSummaryReports = (isCollectionReports || isVATReport || isEmailReport || isReferredByMeReport || isReferredToMeReport ||
        isPatientNonVisitsReport || isTreatmentsReport || isDailyCollections || isDoctorsCommission || isSurveyGraphicalCharts ||
        isTreatmentValidityReport || isDoctorsCollectionsReport || isProfitLossReport || isDoctorTreatmentTypewiseReport || isDayMonthYearTDReport ||
        isDoctorBranchwiseSummaryReport || isReceptionWiseCollection || isBranchSummaryReport || isDailyRevenue || isInsuranceOutstandingSummary ||
        isInsuranceClaimsOutstandingReport || isInvoiceSummaryReport || isDoctorPatientCollectionReport || isPackagesReport || isInternalStockConsumptionReport ||
        isYearlyReferralReport || isMonthlyReferralReport);

    bool isKPIReports = (isAppointmentStatusReport || isPatientDiagnosisReport || isMedicationReport || isChiefComplaintsReport ||
        isVitalSignsReport || isAuditLogsReport || isProgressNotesReport || isSignedDocumentReport);

    bool isReportGroup = (isSummaryReports || isKPIReports);
    #endregion Reports

    #region Accounts & Material Management
    bool isAccountsDashboard = (dict == null) ? false : ((dict.ContainsKey((int)Pages.AccountsDashboard)) ? dict[(int)Pages.AccountsDashboard] : false);

    bool isUOM = (dict == null) ? false : ((dict.ContainsKey((int)Pages.UOM)) ? dict[(int)Pages.UOM] : false);
    bool isItemLocation = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ItemLocation)) ? dict[(int)Pages.ItemLocation] : false);
    bool isStockGroup = (dict == null) ? false : ((dict.ContainsKey((int)Pages.StockGroup)) ? dict[(int)Pages.StockGroup] : false);
    bool isCentralStore = (dict == null) ? false : ((dict.ContainsKey((int)Pages.CentralStore)) ? dict[(int)Pages.CentralStore] : false);
    bool isSupplier = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Supplier)) ? dict[(int)Pages.Supplier] : false);

    bool isPurchaseRequests = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PurchaseRequests)) ? dict[(int)Pages.PurchaseRequests] : false);
    bool isPurchaseOrders = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PurchaseOrders)) ? dict[(int)Pages.PurchaseOrders] : false);
    bool isGRN = (dict == null) ? false : ((dict.ContainsKey((int)Pages.GRN)) ? dict[(int)Pages.GRN] : false);
    bool isPurchaseInvoices = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PurchaseInvoices)) ? dict[(int)Pages.PurchaseInvoices] : false);
    bool isPurchaseReturn = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PurchaseReturn)) ? dict[(int)Pages.PurchaseReturn] : false);
    bool isStockQtyAdjustment = (dict == null) ? false : ((dict.ContainsKey((int)Pages.StockQtyAdjustment)) ? dict[(int)Pages.StockQtyAdjustment] : false);
    bool isMaterialsConsumption = (dict == null) ? false : ((dict.ContainsKey((int)Pages.MaterialsConsumption)) ? dict[(int)Pages.MaterialsConsumption] : false);
    bool isDirectStockTransfer = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DirectStockTransfer)) ? dict[(int)Pages.DirectStockTransfer] : false);
    bool isStockTransferRequest = (dict == null) ? false : ((dict.ContainsKey((int)Pages.StockTransferRequest)) ? dict[(int)Pages.StockTransferRequest] : false);
    bool isTransferStock = (dict == null) ? false : ((dict.ContainsKey((int)Pages.TransferStock)) ? dict[(int)Pages.TransferStock] : false);

    bool isPaymentAgainstInvoices = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PaymentAgainstInvoices)) ? dict[(int)Pages.PaymentAgainstInvoices] : false);
    bool isDirectPayments = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DirectPayments)) ? dict[(int)Pages.DirectPayments] : false);
    bool isAdvancePayments = (dict == null) ? false : ((dict.ContainsKey((int)Pages.AdvancePayments)) ? dict[(int)Pages.AdvancePayments] : false);

    bool isStockExpiryReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.StockExpiryReport)) ? dict[(int)Pages.StockExpiryReport] : false);
    bool isStockAvailableReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.StockAvailableReport)) ? dict[(int)Pages.StockAvailableReport] : false);
    bool isOutofStockItemsReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.OutofStockItemsReport)) ? dict[(int)Pages.OutofStockItemsReport] : false);
    bool isPendingPurchaseOrdersReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PendingPurchaseOrdersReport)) ? dict[(int)Pages.PendingPurchaseOrdersReport] : false);
    bool isPurchaseOrdersSummaryReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PurchaseOrdersSummaryReport)) ? dict[(int)Pages.PurchaseOrdersSummaryReport] : false);
    bool isPurchaseInvoicesSummaryReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PurchaseInvoicesSummaryReport)) ? dict[(int)Pages.PurchaseInvoicesSummaryReport] : false);
    bool isStockItemsConsumptionsReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.StockItemsConsumptionsReport)) ? dict[(int)Pages.StockItemsConsumptionsReport] : false);

    bool isDefaultAccounts = (dict == null) ? false : ((dict.ContainsKey((int)Pages.DefaultAccounts)) ? dict[(int)Pages.DefaultAccounts] : false);
    bool isAccountPeriods = (dict == null) ? false : ((dict.ContainsKey((int)Pages.AccountPeriods)) ? dict[(int)Pages.AccountPeriods] : false);
    bool isAccountGroup = (dict == null) ? false : ((dict.ContainsKey((int)Pages.AccountGroups)) ? dict[(int)Pages.AccountGroups] : false);
    bool isAccountCategories = (dict == null) ? false : ((dict.ContainsKey((int)Pages.AccountCategories)) ? dict[(int)Pages.AccountCategories] : false);
    bool isChartOfAccounts = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ChartOfAccounts)) ? dict[(int)Pages.ChartOfAccounts] : false);
    bool isJournals = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Journals)) ? dict[(int)Pages.Journals] : false);
    bool isTransactions = (dict == null) ? false : ((dict.ContainsKey((int)Pages.Transactions)) ? dict[(int)Pages.Transactions] : false);
    bool isFundsTransfer = (dict == null) ? false : ((dict.ContainsKey((int)Pages.FundsTransfer)) ? dict[(int)Pages.FundsTransfer] : false);
    bool isPDCReceivables = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PDCReceivables)) ? dict[(int)Pages.PDCReceivables] : false);
    bool isPDCPayables = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PDCPayables)) ? dict[(int)Pages.PDCPayables] : false);
    bool isFixedAssets = (dict == null) ? false : ((dict.ContainsKey((int)Pages.FixedAssets)) ? dict[(int)Pages.FixedAssets] : false);
    bool isItemWiseReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ItemWiseReport)) ? dict[(int)Pages.ItemWiseReport] : false);
    bool isItemBatchWiseReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ItemBatchWiseReport)) ? dict[(int)Pages.ItemBatchWiseReport] : false);


    bool isProfitAndLossSummary = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ProfitAndLossSummary)) ? dict[(int)Pages.ProfitAndLossSummary] : false);
    bool isProfitAndLossDetail = (dict == null) ? false : ((dict.ContainsKey((int)Pages.ProfitAndLossDetail)) ? dict[(int)Pages.ProfitAndLossDetail] : false);
    bool isBalanceSheetSummary = (dict == null) ? false : ((dict.ContainsKey((int)Pages.BalanceSheetSummary)) ? dict[(int)Pages.BalanceSheetSummary] : false);
    bool isBalanceSheetDetail = (dict == null) ? false : ((dict.ContainsKey((int)Pages.BalanceSheetDetail)) ? dict[(int)Pages.BalanceSheetDetail] : false);
    bool isCashFlowStatement = (dict == null) ? false : ((dict.ContainsKey((int)Pages.CashFlowStatement)) ? dict[(int)Pages.CashFlowStatement] : false);
    bool isTrialBalance = (dict == null) ? false : ((dict.ContainsKey((int)Pages.TrialBalance)) ? dict[(int)Pages.TrialBalance] : false);
    bool isAccountReconciliation = (dict == null) ? false : ((dict.ContainsKey((int)Pages.AccountReconciliation)) ? dict[(int)Pages.AccountReconciliation] : false);
    bool isSuppliersAgeAnalysis = (dict == null) ? false : ((dict.ContainsKey((int)Pages.SuppliersAgeAnalysis)) ? dict[(int)Pages.SuppliersAgeAnalysis] : false);
    bool isPatientsAgeAnalysis = (dict == null) ? false : ((dict.ContainsKey((int)Pages.PatientsAgeAnalysis)) ? dict[(int)Pages.PatientsAgeAnalysis] : false);
    bool isInsuranceAgeAnalysis = (dict == null) ? false : ((dict.ContainsKey((int)Pages.InsuranceAgeAnalysis)) ? dict[(int)Pages.InsuranceAgeAnalysis] : false);
    bool isAccountVATReport = (dict == null) ? false : ((dict.ContainsKey((int)Pages.AccountVATReport)) ? dict[(int)Pages.AccountVATReport] : false);
    bool isStatementofAccount = (dict == null) ? false : ((dict.ContainsKey((int)Pages.StatementofAccount)) ? dict[(int)Pages.StatementofAccount] : false);






    bool isAccMastersMenu = (isUOM || isItemLocation || isStockGroup || isCentralStore || isSupplier);
    bool isAccMaterialMenu = (isPurchaseRequests || isPurchaseOrders || isGRN || isPurchaseInvoices || isPurchaseReturn || isStockQtyAdjustment || isMaterialsConsumption
        || isDirectStockTransfer || isStockTransferRequest || isTransferStock);

    bool isAccPaymentMenu = (isPaymentAgainstInvoices || isDirectPayments || isAdvancePayments);

    bool isMaterialReportMenu = (isStockExpiryReport || isStockAvailableReport || isOutofStockItemsReport || isPendingPurchaseOrdersReport || isPurchaseOrdersSummaryReport
        || isPurchaseInvoicesSummaryReport || isStockItemsConsumptionsReport);

    bool isAccReportMenu = (isProfitAndLossSummary || isProfitAndLossDetail || isBalanceSheetSummary || isBalanceSheetDetail || isCashFlowStatement ||
        isTrialBalance || isAccountReconciliation || isSuppliersAgeAnalysis || isPatientsAgeAnalysis || isInsuranceAgeAnalysis || isAccountVATReport || isStatementofAccount);

    bool isAccountMenu = (isDefaultAccounts || isAccountGroup || isAccountPeriods || isAccountCategories || isChartOfAccounts || isJournals || isTransactions || isFundsTransfer
        || isPDCReceivables || isPDCPayables || isFixedAssets || isItemWiseReport || isItemBatchWiseReport);

    bool isAccountAndMaterialGroup = (isAccountsDashboard || isAccMastersMenu || isAccMaterialMenu || isAccPaymentMenu || isMaterialReportMenu || isAccReportMenu || isAccountMenu);

    #endregion Accounts & Material Management

    #region Tools
    bool isMyTickets = (dict == null) ? false : ((dict.ContainsKey((int)Pages.MyTickets)) ? dict[(int)Pages.MyTickets] : false);
    #endregion Tools
}

<!--aside open-->
<aside class="app-sidebar">
    <div class="app-sidebar__logo">
        <a class="header-brand" href="@Url.Action("DashboardIndex", "MyDashboard", new { area="Dashboard"})">
            <img src="~/assets/images/brand/logo3.png" class="header-brand-img desktop-lgo" alt="Vision Technologies ClinicSoft Logo">
            <img src="~/assets/images/brand/logo1.png" class="header-brand-img dark-logo" alt="Vision Technologies ClinicSoft Logo">
            <img src="~/assets/images/brand/favicon.png" class="header-brand-img mobile-logo" alt="Vision Technologies ClinicSoft Logo">
            <img src="~/assets/images/brand/favicon1.png" class="header-brand-img darkmobile-logo" alt="Vision Technologies ClinicSoft Logo">
        </a>
    </div>

    <ul class="side-menu app-sidebar3">
        @if (isMasterGroup)
        {
            <li class="side-item side-item-category">Masters &amp; Settings</li>
            if (isClinicSettings)
            {
                <li class="slide">
                    <a class="side-menu__item" href="@Url.Action("ClinicSettingIndex", "ClinicSettings", new { area="Masters"})">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-database-gear" viewBox="0 0 16 16">
                            <path d="M12.096 6.223A4.92 4.92 0 0 0 13 5.698V7c0 .289-.213.654-.753 1.007a4.493 4.493 0 0 1 1.753.25V4c0-1.007-.875-1.755-1.904-2.223C11.022 1.289 9.573 1 8 1s-3.022.289-4.096.777C2.875 2.245 2 2.993 2 4v9c0 1.007.875 1.755 1.904 2.223C4.978 15.71 6.427 16 8 16c.536 0 1.058-.034 1.555-.097a4.525 4.525 0 0 1-.813-.927C8.5 14.992 8.252 15 8 15c-1.464 0-2.766-.27-3.682-.687C3.356 13.875 3 13.373 3 13v-1.302c.271.202.58.378.904.525C4.978 12.71 6.427 13 8 13h.027a4.552 4.552 0 0 1 0-1H8c-1.464 0-2.766-.27-3.682-.687C3.356 10.875 3 10.373 3 10V8.698c.271.202.58.378.904.525C4.978 9.71 6.427 10 8 10c.262 0 .52-.008.774-.024a4.525 4.525 0 0 1 1.102-1.132C9.298 8.944 8.666 9 8 9c-1.464 0-2.766-.27-3.682-.687C3.356 7.875 3 7.373 3 7V5.698c.271.202.58.378.904.525C4.978 6.711 6.427 7 8 7s3.022-.289 4.096-.777ZM3 4c0-.374.356-.875 1.318-1.313C5.234 2.271 6.536 2 8 2s2.766.27 3.682.687C12.644 3.125 13 3.627 13 4c0 .374-.356.875-1.318 1.313C10.766 5.729 9.464 6 8 6s-2.766-.27-3.682-.687C3.356 4.875 3 4.373 3 4Z" />
                            <path d="M11.886 9.46c.18-.613 1.048-.613 1.229 0l.043.148a.64.64 0 0 0 .921.382l.136-.074c.561-.306 1.175.308.87.869l-.075.136a.64.64 0 0 0 .382.92l.149.045c.612.18.612 1.048 0 1.229l-.15.043a.64.64 0 0 0-.38.921l.074.136c.305.561-.309 1.175-.87.87l-.136-.075a.64.64 0 0 0-.92.382l-.045.149c-.18.612-1.048.612-1.229 0l-.043-.15a.64.64 0 0 0-.921-.38l-.136.074c-.561.305-1.175-.309-.87-.87l.075-.136a.64.64 0 0 0-.382-.92l-.148-.045c-.613-.18-.613-1.048 0-1.229l.148-.043a.64.64 0 0 0 .382-.921l-.074-.136c-.306-.561.308-1.175.869-.87l.136.075a.64.64 0 0 0 .92-.382l.045-.148ZM14 12.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z" />
                        </svg>
                        <span class="side-menu__label">Clinic Settings</span>
                    </a>
                </li>
            }

            if (isMasterMenu)
            {
                <li class="slide">
                    <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-house-gear" viewBox="0 0 16 16">
                            <path d="M7.293 1.5a1 1 0 0 1 1.414 0L11 3.793V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v3.293l2.354 2.353a.5.5 0 0 1-.708.708L8 2.207l-5 5V13.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 2 13.5V8.207l-.646.647a.5.5 0 1 1-.708-.708L7.293 1.5Z" />
                            <path d="M11.886 9.46c.18-.613 1.048-.613 1.229 0l.043.148a.64.64 0 0 0 .921.382l.136-.074c.561-.306 1.175.308.87.869l-.075.136a.64.64 0 0 0 .382.92l.149.045c.612.18.612 1.048 0 1.229l-.15.043a.64.64 0 0 0-.38.921l.074.136c.305.561-.309 1.175-.87.87l-.136-.075a.64.64 0 0 0-.92.382l-.045.149c-.18.612-1.048.612-1.229 0l-.043-.15a.64.64 0 0 0-.921-.38l-.136.074c-.561.305-1.175-.309-.87-.87l.075-.136a.64.64 0 0 0-.382-.92l-.148-.044c-.613-.181-.613-1.049 0-1.23l.148-.043a.64.64 0 0 0 .382-.921l-.074-.136c-.306-.561.308-1.175.869-.87l.136.075a.64.64 0 0 0 .92-.382l.045-.148ZM14 12.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0Z" />
                        </svg>
                        <span class="side-menu__label">Masters</span><i class="angle fe fe-chevron-right"></i>
                    </a>
                    <ul class="slide-menu">
                        @if (isPrefixes)
                        {
                            <li><a href="@Url.Action("Prefixes", "Prefixes", new { area = "Masters" })" class="slide-item"> Prefixes</a></li>
                        }@if (isDesignation)
                        {
                            <li><a href="@Url.Action("Designations", "Designation", new { area = "Masters" })" class="slide-item"> Designations</a></li>
                        }
                        @if (isDepartments)
                        {
                            <li><a href="@Url.Action("Departments", "Departments", new { area = "Masters" })" class="slide-item"> Departments</a></li>
                        }
                        @if (isInsuranceCompanies)
                        {
                            <li><a href="@Url.Action("InsuranceCompanies", "InsuranceCompanies", new { area = "Masters" })" class="slide-item"> Insurance Companies</a></li>
                        }
                        @if (isEmployees)
                        {
                            <li><a href="@Url.Action("Employees", "Employees", new { area = "Masters" })" class="slide-item"> Employees & Security</a></li>
                        }
                        @if (isDiagnosis)
                        {
                            <li><a href="@Url.Action("Diagnosis", "Diagnosis", new { area = "Masters" })" class="slide-item"> Diagnosis</a></li>
                        }
                        @if (isTreatmentMenu)
                        {
                            <li class="sub-slide">
                                <a class="sub-side-menu__item" data-bs-toggle="sub-slide" href="javascript:void(0);"><span class="sub-side-menu__label">Treatments</span><i class="sub-angle fe fe-chevron-right"></i></a>
                                <ul class="sub-slide-menu">
                                    @if (isTreatmentGroup)
                                    {
                                        <li><a href="@Url.Action("PackagesAndServices", "PackagesAndServices", new { area = "Masters" })" class="sub-slide-item"> Packages / Services</a></li>
                                        <li class="d-none"><a href="@Url.Action("TreatmentGroups", "TreatmentGroups", new { area = "Masters" })" class="sub-slide-item" style="@ViewBag.tg_active">Treatment Groups / Packages</a></li>
                                    }
                                    @if (isTreatmentGroup)
                                    {
                                        <li><a href="@Url.Action("Treatments", "Treatments", new { area = "Masters" })" class="sub-slide-item" style="@ViewBag.tt_active">Treatments / Tariff</a></li>

                                    }
                                </ul>
                            </li>
                        }

                        @if (isVouchers)
                        {
                            <li><a href="@Url.Action("Vouchers", "Vouchers", new { area = "Masters" })" class="slide-item"> Vouchers</a></li>
                        }
                        @if (isDiscounts)
                        {
                            <li><a href="@Url.Action("Coupons", "Coupons", new { area = "Masters" })" class="slide-item"> Discounts</a></li>
                        }
                        @if (isToothTreatmentsCategory)
                        {
                            <li><a href="@Url.Action("ToothTreatmentsCategory", "ToothTreatmentsCategory", new { area = "Masters" })" class="slide-item">Tooth Treatments Category</a></li>
                        }
                        @if (isMedicines)
                        {
                            <li><a href="@Url.Action("Medicines", "Medicines", new { area = "Masters" })" class="slide-item">Medicines</a></li>
                        }
                        @if (isCPTCodeItemsMapping)
                        {
                            <li><a href="@Url.Action("CPTCodeItemsMapping", "CPTCodeItemsMapping", new { area = "Masters" })" class="slide-item">CPT Code - Items Mapping</a></li>
                        }
                        @if (isVaccinations)
                        {
                            <li><a href="@Url.Action("Vaccinations", "Vaccinations", new { area = "Masters" })" class="slide-item">Vaccinations</a></li>
                        }
                        @if (isReferals)
                        {
                            <li><a href="@Url.Action("Referals", "Referals", new { area = "Masters" })" class="slide-item">Referrals</a></li>
                        }
                        @if (isRooms)
                        {
                            <li><a href="@Url.Action("Rooms", "Rooms", new { area = "Masters" })" class="slide-item">Rooms</a></li>
                        }
                        @if (isComplaints)
                        {
                            <li><a href="@Url.Action("ComplaintsMaster", "ComplaintsMaster", new { area = "Masters" })" class="slide-item">Complaints Master</a></li>
                        }
                        @if (isAppointmentStatusColor)
                        {
                            <li><a href="@Url.Action("AppointmentStatusColor", "AppointmentStatusColor", new { area = "Masters" })" class="slide-item">Appointment Status Color</a></li>
                        }
                        @if (isSourceCampaigns)
                        {
                            <li><a href="@Url.Action("SourceCampaigns", "SourceCampaigns", new { area = "Masters" })" class="slide-item">Source & Campaigns Master</a></li>
                        }
                        @if (isMessageTypes)
                        {
                            <li><a href="@Url.Action("MessageType", "MessageType", new { area = "Masters" })" class="slide-item d-none">Message Type</a></li>
                        }
                        @if (isDenialCodes)
                        {
                            <li><a href="@Url.Action("DenialCodes", "DenialCodes", new { area = "Masters" })" class="slide-item"> Denial Codes</a></li>
                        }
                        @if (isLinkCouponsToProcedures)
                        {
                            <li><a href="@Url.Action("LinkCouponsToProcedure", "LinkCouponsToProcedure", new { area = "Masters" })" class="slide-item">Link Coupons To Procedure</a></li>
                        }
                        @if (isTemplates)
                        {
                            <li><a href="@Url.Action("Templates", "Templates", new { area = "Masters" })" class="slide-item">Templates</a></li>
                        }
                    </ul>
                </li>
            }
        }

        @if (isDashboard || isMarketingGroup)
        {
            <li class="side-item side-item-category">Analytics &amp; Customer Engagement</li>
            if (isDashboard)
            {
                <li class="slide">
                    <a class="side-menu__item" href="@Url.Action("DashboardIndex", "MyDashboard", new { area = "Dashboard" })">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-speedometer" viewBox="0 0 16 16">
                            <path d="M8 2a.5.5 0 0 1 .5.5V4a.5.5 0 0 1-1 0V2.5A.5.5 0 0 1 8 2zM3.732 3.732a.5.5 0 0 1 .707 0l.915.914a.5.5 0 1 1-.708.708l-.914-.915a.5.5 0 0 1 0-.707zM2 8a.5.5 0 0 1 .5-.5h1.586a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8zm9.5 0a.5.5 0 0 1 .5-.5h1.5a.5.5 0 0 1 0 1H12a.5.5 0 0 1-.5-.5zm.754-4.246a.389.389 0 0 0-.527-.02L7.547 7.31A.91.91 0 1 0 8.85 8.569l3.434-4.297a.389.389 0 0 0-.029-.518z" />
                            <path fill-rule="evenodd" d="M6.664 15.889A8 8 0 1 1 9.336.11a8 8 0 0 1-2.672 15.78zm-4.665-4.283A11.945 11.945 0 0 1 8 10c2.186 0 4.236.585 6.001 1.606a7 7 0 1 0-12.002 0z" />
                        </svg>
                        <span class="side-menu__label">Dashboard</span>
                    </a>
                </li>
            }
            if (isMarketingGroup)
            {
                <li class="slide">
                    <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-megaphone" viewBox="0 0 16 16">
                            <path d="M13 2.5a1.5 1.5 0 0 1 3 0v11a1.5 1.5 0 0 1-3 0v-.214c-2.162-1.241-4.49-1.843-6.912-2.083l.405 2.712A1 1 0 0 1 5.51 15.1h-.548a1 1 0 0 1-.916-.599l-1.85-3.49a68.14 68.14 0 0 0-.202-.003A2.014 2.014 0 0 1 0 9V7a2.02 2.02 0 0 1 1.992-2.013 74.663 74.663 0 0 0 2.483-.075c3.043-.154 6.148-.849 8.525-2.199V2.5zm1 0v11a.5.5 0 0 0 1 0v-11a.5.5 0 0 0-1 0zm-1 1.35c-2.344 1.205-5.209 1.842-8 2.033v4.233c.18.01.359.022.537.036 2.568.189 5.093.744 7.463 1.993V3.85zm-9 6.215v-4.13a95.09 95.09 0 0 1-1.992.052A1.02 1.02 0 0 0 1 7v2c0 .55.448 1.002 1.006 1.009A60.49 60.49 0 0 1 4 10.065zm-.657.975 1.609 3.037.01.024h.548l-.002-.014-.443-2.966a68.019 68.019 0 0 0-1.722-.082z" />
                        </svg>
                        <span class="side-menu__label">Marketing</span><i class="angle fe fe-chevron-right"></i>
                    </a>
                    <ul class="slide-menu">
                        @if (isMarketingDashboard)
                        {
                            <li><a href="@Url.Action("MarketingDashboard", "MarketingDashboard", new { area = "Marketing" })" class="slide-item"> Dashboard</a></li>
                        }
                        @if (isEnquiries)
                        {
                            <li><a href="@Url.Action("Marketing", "Marketing", new { area = "Marketing" })" class="slide-item"> Enquiries</a></li>
                            <li><a href="@Url.Action("Feedback", "Feedback", new { area = "Marketing" })" class="slide-item"> Feedback</a></li>
                        }
                        @if (isMarketingReportMenu)
                        {
                            <li class="sub-slide">
                                <a class="sub-side-menu__item" data-bs-toggle="sub-slide" href="javascript:void(0);"><span class="sub-side-menu__label">Reports</span><i class="sub-angle fe fe-chevron-right"></i></a>
                                <ul class="sub-slide-menu">
                                    <li><a class="sub-slide-item" href="@Url.Action("DailyReportsManagedBy", "Reports", new { area = "Marketing" })" style="@ViewBag.d_active">Daily Enquiries Detailed Report (Managed By)</a></li>
                                    <li><a class="sub-slide-item" href="@Url.Action("YearlyReportsManagedBy", "Reports", new { area = "Marketing" })" style="@ViewBag.y_active">Yearly Enquiries Detailed Report (Managed By)</a></li>
                                    <li><a class="sub-slide-item" href="@Url.Action("DailyReportsBySoure", "Reports", new { area = "Marketing" })" style="@ViewBag.ds_active">Daily Enquiries Detailed Report (By Source)</a></li>
                                    <li><a class="sub-slide-item" href="@Url.Action("YearlyReportsBySoure", "Reports", new { area = "Marketing" })" style="@ViewBag.ys_active">Yearly Enquiries Detailed Report (By Source)</a></li>
                                    <li><a class="sub-slide-item" href="@Url.Action("EnquiryReportStatus", "Reports", new { area = "Marketing" })" style="@ViewBag.st_active">Enquiries Detailed Reports (By Status)</a></li>
                                    <li><a class="sub-slide-item" href="@Url.Action("PatientAnalysisSummary", "Reports", new { area = "Marketing" })" style="@ViewBag.pat_active">Patient Analysis Report Summary</a></li>
                                    <li><a class="sub-slide-item" href="@Url.Action("GraphicalReport", "Reports", new { area = "Marketing" })" style="@ViewBag.gr_active">Enquiry Details Graphical Report Summary</a></li>
                                </ul>
                            </li>
                        }
                    </ul>
                </li>
            }
        }

        @if (isAppointmentGroup || isPatient || isInvoiceGroup)
        {
            <li class="side-item side-item-category">Patient Scheduling &amp; Billing</li>
            if (isPatient)
            {
                <li class="slide">
                    <a class="side-menu__item" href="@Url.Action("PatientIndex", "Patient", new { area="Patient"})">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-people" viewBox="0 0 16 16">
                            <path d="M15 14s1 0 1-1-1-4-5-4-5 3-5 4 1 1 1 1h8Zm-7.978-1A.261.261 0 0 1 7 12.996c.001-.264.167-1.03.76-1.72C8.312 10.629 9.282 10 11 10c1.717 0 2.687.63 3.24 1.276.593.69.758 1.457.76 1.72l-.008.002a.274.274 0 0 1-.014.002H7.022ZM11 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4Zm3-2a3 3 0 1 1-6 0 3 3 0 0 1 6 0ZM6.936 9.28a5.88 5.88 0 0 0-1.23-.247A7.35 7.35 0 0 0 5 9c-4 0-5 3-5 4 0 .667.333 1 1 1h4.216A2.238 2.238 0 0 1 5 13c0-1.01.377-2.042 1.09-2.904.243-.294.526-.569.846-.816ZM4.92 10A5.493 5.493 0 0 0 4 13H1c0-.26.164-1.03.76-1.724.545-.636 1.492-1.256 3.16-1.275ZM1.5 5.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0Zm3-2a2 2 0 1 0 0 4 2 2 0 0 0 0-4Z" />
                        </svg>
                        <span class="side-menu__label">Patients</span>
                    </a>
                </li>
            }
            if (isAppointmentGroup)
            {
                <li class="slide">
                    <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-calendar4-week" viewBox="0 0 16 16">
                            <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM2 2a1 1 0 0 0-1 1v1h14V3a1 1 0 0 0-1-1H2zm13 3H1v9a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V5z" />
                            <path d="M11 7.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-2 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1z" />
                        </svg>
                        <span class="side-menu__label">Appointments</span><i class="angle fe fe-chevron-right"></i>
                    </a>
                    <ul class="slide-menu">
                        @if (isAppointmentList)
                        {
                            <li><a href="@Url.Action("AppointmentList", "AppointmentList", new { area = "Appointment" })" class="slide-item"> Appointments</a></li>
                        }
                        @if (isAppointments)
                        {
                            <li><a href="@Url.Action("AppointmentIndex", "Appointment", new { area = "Appointment" })" class="slide-item">Schedule Doctors</a></li>
                        }
                        @if (isRoomSchedule)
                        {
                            <li><a href="@Url.Action("RoomSchedulerIndex", "RoomScheduler", new { area = "Appointment" })" class="slide-item">Schedule Rooms</a></li>
                        }

                        @if (isDHAReports)
                        {
                            <li class="sub-slide">
                                <a class="sub-side-menu__item" data-bs-toggle="sub-slide" href="javascript:void(0);"><span class="sub-side-menu__label">DHA Reports 1</span><i class="sub-angle fe fe-chevron-right"></i></a>
                                <ul class="sub-slide-menu">
                                    <li><a class="sub-slide-item" href="@Url.Action("PatientCountByNationality", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_1"><span class="menu-prefix">- </span>Distribution of Patients By Nationality &amp; Diagnosis</a></li>
                                    <li class="mt-2"><a class="sub-slide-item" href="@Url.Action("PatientsTreatmentsByNationality", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_2"><span class="menu-prefix">- </span>Distribution of Patients By Nationality &amp; Treatments</a></li>
                                    <li><a class="sub-slide-item" href="@Url.Action("LaboratoryTestsByNationality", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_3"><span class="menu-prefix">- </span>Laboratory Tests By Nationality</a></li>
                                    <li><a class="sub-slide-item" href="@Url.Action("DentalPatientTreatmentByNationality", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_4"><span class="menu-prefix">- </span>Dental Patient Treatment By Nationality</a></li>
                                    <li class="mt-2"><a class="sub-slide-item" href="@Url.Action("SkinCareTreatmentByNationality", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_5"><span class="menu-prefix">- </span>Skin Care Treatment By Nationality</a></li>
                                    <li class="mt-2 mb-4"><a class="sub-slide-item" href="@Url.Action("PatientCountByNationalityTreatment", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_6"><span class="menu-prefix">- </span>Patient Count By Nationality &amp; Treatments</a></li>
                                    <li class="mt-2 mb-4"><a class="sub-slide-item" href="@Url.Action("PatientCountNewVisits", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_7"><span class="menu-prefix">- </span>02 A - Out-Patients New Visits By Nationality, Sex, Age, Groups & Diagnosis</a></li>
                                    <li class="mt-5 mb-4"><a class="sub-slide-item" href="@Url.Action("PatientCountFollowUpVisits", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_8"><span class="menu-prefix">- </span>02 B - Out-Patients Follow Up Visits By Nationality, Sex, Age, Groups & Diagnosis</a></li>
                                    <li class="mt-5 mb-4"><a class="sub-slide-item" href="@Url.Action("PatientVisitsToGPDoctors", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_9"><span class="menu-prefix">- </span>04 A - Out-Patients Visits To G.P. Doctors By Nationality, Sex, Age, Groups & Diagnosis</a></li>
                                    <li class="mt-5 mb-3"><a class="sub-slide-item" href="@Url.Action("PatientVisitsToFMDoctors", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_10"><span class="menu-prefix">- </span>04 B - Out-Patients Visits To F.M. Doctors By Nationality, Sex, Age, Groups & Diagnosis</a></li>
                                    <li class="mt-5 mb-3"><a class="sub-slide-item" href="@Url.Action("LaboraoryTestsByNationality", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_11"><span class="menu-prefix">- </span>Laboratory Tests By Nationality, Sex, Age, Groups & Type of Test</a></li>
                                    <li class="mt-5 mb-3"><a class="sub-slide-item" href="@Url.Action("RadiologyExaminationsByNationality", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_12"><span class="menu-prefix">- </span>Radiology Examinations By Nationality, Sex, Age, Groups & Type of Examination</a></li>
                                    <li class="mt-6 mb-2"><a class="sub-slide-item" href="@Url.Action("RehabilitationByNationality", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_13"><span class="menu-prefix">- </span>Rehabilitation (Physiotherapy) Out-patients by Nationality, Sex, Age, Groups & Type of Treatment</a></li>
                                </ul>
                            </li>
                            <li class="sub-slide">
                                <a class="sub-side-menu__item" data-bs-toggle="sub-slide" href="javascript:void(0);"><span class="sub-side-menu__label">DHA Reports 2</span><i class="sub-angle fe fe-chevron-right"></i></a>
                                <ul class="sub-slide-menu">
                                    <li class="mt-5 mb-6"><a class="sub-slide-item" href="@Url.Action("WaitingTimeForNewAppointmentBySpeciality", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_14"><span class="menu-prefix">- </span>Out-patients Waiting Time For New Appointment by Speciality, Nationality, Gender, Age, Group (in Days)</a></li>
                                    <li class="mt-7 mb-4"><a class="sub-slide-item" href="@Url.Action("DentalPatientsTreatmentsByNationality", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_15"><span class="menu-prefix">- </span>Dental Patients And Treatments By Nationality, Sex, Age, Groups And Type of Treatment</a></li>
                                    <li class="mt-1"><a class="sub-slide-item" href="@Url.Action("NonResidents", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_16"><span class="menu-prefix">- </span>Non Residents (Tourists)</a></li>
                                    <li><a class="sub-slide-item" href="@Url.Action("ResidentsUAENationals", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_17"><span class="menu-prefix">- </span>UAE Nationals (City of Residence)</a></li>
                                    <li class=""><a class="sub-slide-item" href="@Url.Action("OutPatientStatisticsReport", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_18"><span class="menu-prefix">- </span>Out-Patients Statistics Report</a></li>
                                </ul>
                            </li>
                            <li class="sub-slide">
                                <a class="sub-side-menu__item" data-bs-toggle="sub-slide" href="javascript:void(0);"><span class="sub-side-menu__label">DHA Reports 3</span><i class="sub-angle fe fe-chevron-right"></i></a>
                                <ul class="sub-slide-menu">
                                    <li class="mt-4 mb-6"><a class="sub-slide-item" href="@Url.Action("PatientVisitByDiagnosis", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_19"><span class="menu-prefix">- </span>Distribution of Patients By Nationality &amp; Diagnosis (Yearly)</a></li>
                                    <li class="mt-5 mb-4"><a class="sub-slide-item" href="@Url.Action("OutPatientsWaitingTimeByMinutes", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_20"><span class="menu-prefix">- </span>Out-Patients Waiting Time To meet The Physician By Speciality, Sex & Age Groups (By Minutes)</a></li>
                                    <li class="mt-5 mb-2"><a class="sub-slide-item" href="@Url.Action("DentalPatientsAndTreatments", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_21"><span class="menu-prefix">- </span>Dental Patients And Treatments</a></li>
                                    <li class="mb-3"><a class="sub-slide-item" href="@Url.Action("SkinCareTreatments", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_22"><span class="menu-prefix">- </span>Skin Care Treatments By Nationality</a></li>
                                    <li class="mt-4"><a class="sub-slide-item" href="@Url.Action("LaboratoryTests", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_23"><span class="menu-prefix">- </span>Laboratory Tests By Nationality, Sex, Age Groups & Type Of Test</a></li>
                                    <li class="mt-5 mb-4"><a class="sub-slide-item" href="@Url.Action("RadiologyExaminations", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_24"><span class="menu-prefix">- </span>Radiology Examinations By Nationality, Sex, Age Groups & Type Of Examination</a></li>
                                    <li class="mt-5 mb-4"><a class="sub-slide-item" href="@Url.Action("UnderFiveImmunizations", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_25"><span class="menu-prefix">- </span>Under Five Immunizations By Type ,nationality, Sex & Age Groups</a></li>
                                    <li class="mt-5 mb-5"><a class="sub-slide-item" href="@Url.Action("AboveFiveImmunizations", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_26"><span class="menu-prefix">- </span>Above Five Immunizations By Type ,nationality, Sex & Age Groups</a></li>
                                    <li class="mt-6 mb-3"><a class="sub-slide-item" href="@Url.Action("OutPatientsRehabilitation", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_28"><span class="menu-prefix">- </span>Rehabilitation(Physiotherapy) Out-Patients By Nationality, Sex, Age Groups & Type Of Treatment</a></li>
                                    <li class="mt-4"><a class="sub-slide-item" href="@Url.Action("EmiratiPatientsData", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_29"><span class="menu-prefix">- </span>Emirati Patients Data</a></li>
                                    <li><a class="sub-slide-item" href="@Url.Action("InternationalPatientsData", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_30"><span class="menu-prefix">- </span>International Patients Data</a></li>
                                    <li><a class="sub-slide-item" href="@Url.Action("ResidentPatientsData", "DHAReports", new { area = "Appointment" })" style="@ViewBag.dha_31"><span class="menu-prefix">- </span>Resident Patients Data</a></li>
                                </ul>
                            </li>
                        }
                    </ul>
                </li>
            }
            if (isInvoiceGroup)
            {
                <li class="slide">
                    <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-journals" viewBox="0 0 16 16">
                            <path d="M5 0h8a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2 2 2 0 0 1-2 2H3a2 2 0 0 1-2-2h1a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1H1a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v9a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1H3a2 2 0 0 1 2-2z" />
                            <path d="M1 6v-.5a.5.5 0 0 1 1 0V6h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V9h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 2.5v.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1H2v-.5a.5.5 0 0 0-1 0z" />
                        </svg>
                        <span class="side-menu__label">Invoices &amp; Receipts</span><i class="angle fe fe-chevron-right"></i>
                    </a>
                    <ul class="slide-menu">
                        @if (isInvoice)
                        {
                            <li><a href="@Url.Action("InvoiceIndex", "Invoice", new { area = "Invoice" })" class="slide-item"> Invoices</a></li>
                        }
                        @if (isReceipts)
                        {
                            <li><a href="@Url.Action("ReceiptIndex", "Receipt", new { area = "Invoice" })" class="slide-item"> Receipts</a></li>
                        }
                        @if (isAdvanceLoyaltyRefund)
                        {
                            <li><a href="@Url.Action("AdvanceLoyaltyRefundIndex", "AdvanceLoyaltyRefund", new { area = "Invoice" })" class="slide-item"> Advance-Loyalty-Refund</a></li>
                        }
                        @if (isCreditNote)
                        {
                            <li><a href="@Url.Action("CreditNoteIndex", "CreditNote", new { area = "Invoice" })" class="slide-item"> Credit Note</a></li>
                        }
                    </ul>
                </li>
            }
        }

        @if (iseClaimsGroup)
        {
            <li class="side-item side-item-category">e-Claims &amp; Authorizations</li>
            <li class="slide">
                <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-explicit" viewBox="0 0 16 16">
                        <path d="M6.826 10.88H10.5V12h-5V4.002h5v1.12H6.826V7.4h3.457v1.073H6.826v2.408Z" />
                        <path d="M2.5 0A2.5 2.5 0 0 0 0 2.5v11A2.5 2.5 0 0 0 2.5 16h11a2.5 2.5 0 0 0 2.5-2.5v-11A2.5 2.5 0 0 0 13.5 0h-11ZM1 2.5A1.5 1.5 0 0 1 2.5 1h11A1.5 1.5 0 0 1 15 2.5v11a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 1 13.5v-11Z" />
                    </svg>
                    <span class="side-menu__label">e-Claims</span><i class="angle fe fe-chevron-right"></i>
                </a>
                <ul class="slide-menu">
                    @if (iseClaims)
                    {
                        <li><a href="@Url.Action("Submissions", "EClaims", new { area="EClaims"})" class="slide-item"> Submissions(DHA)</a></li>
                        <li><a href="@Url.Action("SubmissionsHAAD", "EClaims", new { area="EClaims"})" class="slide-item"> Submissions(HAAD)</a></li>
                        <li><a href="@Url.Action("SubmissionsRiyati", "EClaims", new { area="EClaims"})" class="slide-item"> Submissions(Riayati)</a></li>
                    }
                </ul>
            </li>
            if (isPriorRequests)
            {
                <li class="slide">
                    <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-envelope-open" viewBox="0 0 16 16">
                            <path d="M8.47 1.318a1 1 0 0 0-.94 0l-6 3.2A1 1 0 0 0 1 5.4v.817l5.75 3.45L8 8.917l1.25.75L15 6.217V5.4a1 1 0 0 0-.53-.882l-6-3.2ZM15 7.383l-4.778 2.867L15 13.117V7.383Zm-.035 6.88L8 10.082l-6.965 4.18A1 1 0 0 0 2 15h12a1 1 0 0 0 .965-.738ZM1 13.116l4.778-2.867L1 7.383v5.734ZM7.059.435a2 2 0 0 1 1.882 0l6 3.2A2 2 0 0 1 16 5.4V14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V5.4a2 2 0 0 1 1.059-1.765l6-3.2Z" />
                        </svg>
                        <span class="side-menu__label">Prior Requests</span><i class="angle fe fe-chevron-right"></i>
                    </a>
                    <ul class="slide-menu">
                        <li><a href="@Url.Action("PriorRequests", "PriorRequests", new { area="PriorRequests"})" class="slide-item">Prior Requests</a></li>
                        <li><a href="@Url.Action("PriorRequestDownload", "PriorRequestDownload", new { area="PriorRequests"})" class="slide-item">Download Authorizations</a></li>
                        <li class="d-none"><a href="@Url.Action("PriorApprovalDownload", "PriorApprovalDownload", new { area="PriorRequests"})" class="slide-item">Download Authorizations</a></li>
                    </ul>
                </li>
            }
        }

        @if (isAccountAndMaterialGroup)
        {
            <li class="side-item side-item-category">Accounts &amp; Material Management</li>
            if (isDashboard)
            {
                <li class="slide">
                    <a class="side-menu__item" href="@Url.Action("Dashboard", "Dashboard", new { area="MaterialManagement"})">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-speedometer2" viewBox="0 0 16 16">
                            <path d="M8 4a.5.5 0 0 1 .5.5V6a.5.5 0 0 1-1 0V4.5A.5.5 0 0 1 8 4zM3.732 5.732a.5.5 0 0 1 .707 0l.915.914a.5.5 0 1 1-.708.708l-.914-.915a.5.5 0 0 1 0-.707zM2 10a.5.5 0 0 1 .5-.5h1.586a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 10zm9.5 0a.5.5 0 0 1 .5-.5h1.5a.5.5 0 0 1 0 1H12a.5.5 0 0 1-.5-.5zm.754-4.246a.389.389 0 0 0-.527-.02L7.547 9.31a.91.91 0 1 0 1.302 1.258l3.434-4.297a.389.389 0 0 0-.029-.518z" />
                            <path fill-rule="evenodd" d="M0 10a8 8 0 1 1 15.547 2.661c-.442 1.253-1.845 1.602-2.932 1.25C11.309 13.488 9.475 13 8 13c-1.474 0-3.31.488-4.615.911-1.087.352-2.49.003-2.932-1.25A7.988 7.988 0 0 1 0 10zm8-7a7 7 0 0 0-6.603 9.329c.203.575.923.876 1.68.63C4.397 12.533 6.358 12 8 12s3.604.532 4.923.96c.757.245 1.477-.056 1.68-.631A7 7 0 0 0 8 3z" />
                        </svg>
                        <span class="side-menu__label">Dashboard</span>
                    </a>
                </li>
            }

            if (isAccMastersMenu)
            {
                <li class="slide">
                    <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-gear" viewBox="0 0 16 16">
                            <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z" />
                            <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z" />
                        </svg>
                        <span class="side-menu__label">Masters</span><i class="angle fe fe-chevron-right"></i>
                    </a>
                    <ul class="slide-menu">
                        @if (isUOM)
                        {
                            <li><a href="@Url.Action("UOM", "UOM", new { area="MaterialManagement"})" class="slide-item">UOM</a></li>
                        }
                        @if (isItemLocation)
                        {
                            <li><a href="@Url.Action("ItemLocation", "ItemLocation", new { area="MaterialManagement"})" class="slide-item">Stock Locations</a></li>
                        }
                        @if (isStockGroup)
                        {
                            <li><a href="@Url.Action("StockGroups", "StockGroups", new { area="MaterialManagement"})" class="slide-item">Stock Groups</a></li>
                        }
                        @if (isCentralStore)
                        {
                            <li><a href="@Url.Action("CentralStore", "CentralStore", new { area="MaterialManagement"})" class="slide-item">Central Store</a></li>
                        }
                        @if (isSupplier)
                        {
                            <li><a href="@Url.Action("Supplier", "Supplier", new { area="MaterialManagement"})" class="slide-item">Suppliers</a></li>
                        }
                    </ul>
                </li>
            }

            if (isAccMaterialMenu)
            {
                <li class="slide">
                    <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-boxes" viewBox="0 0 16 16">
                            <path d="M7.752.066a.5.5 0 0 1 .496 0l3.75 2.143a.5.5 0 0 1 .252.434v3.995l3.498 2A.5.5 0 0 1 16 9.07v4.286a.5.5 0 0 1-.252.434l-3.75 2.143a.5.5 0 0 1-.496 0l-3.502-2-3.502 2.001a.5.5 0 0 1-.496 0l-3.75-2.143A.5.5 0 0 1 0 13.357V9.071a.5.5 0 0 1 .252-.434L3.75 6.638V2.643a.5.5 0 0 1 .252-.434L7.752.066ZM4.25 7.504 1.508 9.071l2.742 1.567 2.742-1.567L4.25 7.504ZM7.5 9.933l-2.75 1.571v3.134l2.75-1.571V9.933Zm1 3.134 2.75 1.571v-3.134L8.5 9.933v3.134Zm.508-3.996 2.742 1.567 2.742-1.567-2.742-1.567-2.742 1.567Zm2.242-2.433V3.504L8.5 5.076V8.21l2.75-1.572ZM7.5 8.21V5.076L4.75 3.504v3.134L7.5 8.21ZM5.258 2.643 8 4.21l2.742-1.567L8 1.076 5.258 2.643ZM15 9.933l-2.75 1.571v3.134L15 13.067V9.933ZM3.75 14.638v-3.134L1 9.933v3.134l2.75 1.571Z" />
                        </svg>
                        <span class="side-menu__label">Material Mgmt.</span><i class="angle fe fe-chevron-right"></i>
                    </a>
                    <ul class="slide-menu">
                        @if (isPurchaseRequests)
                        {
                            <li><a href="@Url.Action("PurchaseRequests", "PurchaseRequests", new { area="MaterialManagement"})" class="slide-item">Purchase Requests</a></li>
                        }
                        @if (isPurchaseOrders)
                        {
                            <li><a href="@Url.Action("PurchaseOrders", "PurchaseOrders", new { area="MaterialManagement"})" class="slide-item">Purchase Orders</a></li>
                        }
                        @if (isGRN)
                        {
                            <li><a href="@Url.Action("GRN", "GRN", new { area="MaterialManagement"})" class="slide-item">Goods Received Note</a></li>
                        }
                        @if (isPurchaseInvoices)
                        {
                            <li><a href="@Url.Action("PurchaseInvoices", "PurchaseInvoice", new { area="MaterialManagement"})" class="slide-item">Invoice Against GRN</a></li>
                        }
                        @if (isPurchaseReturn)
                        {
                            <li><a href="@Url.Action("PurchaseReturn", "PurchaseReturn", new { area="MaterialManagement"})" class="slide-item">Return / Debit Note</a></li>
                        }
                        @if (isStockQtyAdjustment)
                        {
                            <li><a href="@Url.Action("StockAdjustment", "StockQtyAdjustment", new { area="MaterialManagement"})" class="slide-item">Stock Quantity Adjustment</a></li>
                        }
                        @if (isMaterialsConsumption)
                        {
                            <li><a href="@Url.Action("MaterialsConsumptions", "MaterialsConsumption", new { area="MaterialManagement"})" class="slide-item">Materials Consumption</a></li>
                        }
                        @if (isDirectStockTransfer)
                        {
                            <li><a href="@Url.Action("DirectStockTransfer", "StockTransfer", new { area="MaterialManagement"})" class="slide-item">Direct Stock Transfer</a></li>
                        }
                        @if (isStockTransferRequest)
                        {
                            <li><a href="@Url.Action("StockTransferRequest", "StockTransfer", new { area="MaterialManagement"})" class="slide-item">Stock Transfer Request</a></li>
                        }
                        @if (isTransferStock)
                        {
                            <li><a href="@Url.Action("TransferStock", "StockTransfer", new { area="MaterialManagement"})" class="slide-item">Transfer Stock On Request</a></li>
                        }

                    </ul>
                </li>
            }

            if (isAccPaymentMenu)
            {
                <li class="slide">
                    <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-wallet2" viewBox="0 0 16 16">
                            <path d="M12.136.326A1.5 1.5 0 0 1 14 1.78V3h.5A1.5 1.5 0 0 1 16 4.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 13.5v-9a1.5 1.5 0 0 1 1.432-1.499L12.136.326zM5.562 3H13V1.78a.5.5 0 0 0-.621-.484L5.562 3zM1.5 4a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-13z" />
                        </svg>
                        <span class="side-menu__label">Payments</span><i class="angle fe fe-chevron-right"></i>
                    </a>
                    <ul class="slide-menu">
                        @if (isPaymentAgainstInvoices)
                        {
                            <li><a href="@Url.Action("PaymentAgainstInvoices", "PaymentAgainstInvoices", new { area="MaterialManagement"})" class="slide-item">Payments Against Invoice</a></li>
                        }
                        @if (isDirectPayments)
                        {
                            <li><a href="@Url.Action("DirectPayments", "DirectPayments", new { area="MaterialManagement"})" class="slide-item">Direct Payments</a></li>
                        }
                        @if (isAdvancePayments)
                        {
                            <li><a href="@Url.Action("AdvancePayments", "AdvancePayments", new { area="MaterialManagement"})" class="slide-item">Advance Payments</a></li>
                        }
                    </ul>
                </li>
            }

            if (isMaterialReportMenu)
            {
                <li class="slide">
                    <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-journal-check" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M10.854 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 8.793l2.646-2.647a.5.5 0 0 1 .708 0z" />
                            <path d="M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z" />
                            <path d="M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z" />
                        </svg>
                        <span class="side-menu__label">Reports</span><i class="angle fe fe-chevron-right"></i>
                    </a>
                    <ul class="slide-menu">
                        @if (isStockExpiryReport)
                        {
                            <li><a href="@Url.Action("StockExpiryReport", "Reports", new { area="MaterialManagement"})" class="slide-item">Stock Expiry Reports</a></li>
                        }
                        @if (isStockAvailableReport)
                        {
                            <li><a href="@Url.Action("AvaliableStockQtyReport", "Reports", new { area="MaterialManagement"})" class="slide-item">Avaliable Stock Reports</a></li>
                        }
                        @if (isOutofStockItemsReport)
                        {
                            <li><a href="@Url.Action("OutofStockQtyReport", "Reports", new { area="MaterialManagement"})" class="slide-item">Out of Stock Reports</a></li>
                        }
                        @if (isPendingPurchaseOrdersReport)
                        {
                            <li><a href="@Url.Action("PurchaseOrderPendingReport", "Reports", new { area="MaterialManagement"})" class="slide-item">Pending Purchase Orders Reports</a></li>
                        }
                        @if (isPurchaseOrdersSummaryReport)
                        {
                            <li><a href="@Url.Action("SupplierWisePOSummaryReport", "Reports", new { area="MaterialManagement"})" class="slide-item">Supplier Wise PO Summary Report</a></li>
                        }
                        @if (isPurchaseInvoicesSummaryReport)
                        {
                            <li><a href="@Url.Action("SupplierWiseInvoiceSummaryReport", "Reports", new { area="MaterialManagement"})" class="slide-item">Supplier Wise Invoice Summary Report</a></li>
                        }
                        @if (isStockItemsConsumptionsReport)
                        {
                            <li><a href="@Url.Action("StockComsumptionReport", "Reports", new { area="MaterialManagement"})" class="slide-item">Stock Items Comsumption Report</a></li>
                        }
                        @if (isStockAvailableReport)
                        {
                            <li><a href="@Url.Action("InternalStockTransferReport", "Reports", new { area="MaterialManagement"})" class="slide-item">Branch Stock Transfer Report</a></li>
                        }
                        @if (isItemWiseReport)
                        {
                            <li><a href="@Url.Action("ItemWiseReport", "Reports", new { area = "MaterialManagement"})" class="slide-item">Item Wise Report</a></li>
                        }
                        @if (isItemBatchWiseReport)
                        {
                            <li><a href="@Url.Action("BatchWiseItemReport", "Reports", new { area = "MaterialManagement"})" class="slide-item">Item Batch Wise Report</a></li>
                        }
                    </ul>
                </li>
            }

            if (isAccountMenu)
            {
                <li class="slide">
                    <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-graph-up-arrow" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M0 0h1v15h15v1H0V0Zm10 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V4.9l-3.613 4.417a.5.5 0 0 1-.74.037L7.06 6.767l-3.656 5.027a.5.5 0 0 1-.808-.588l4-5.5a.5.5 0 0 1 .758-.06l2.609 2.61L13.445 4H10.5a.5.5 0 0 1-.5-.5Z" />
                        </svg>
                        <span class="side-menu__label">Accounts</span><i class="angle fe fe-chevron-right"></i>
                    </a>
                    <ul class="slide-menu">
                        @if (isDefaultAccounts)
                        {
                            <li><a href="@Url.Action("Index", "DefaultAccounts", new { area = "Accounts"})" class="slide-item">Default Accounts</a></li>
                        }
                        @if (isAccountPeriods)
                        {
                            <li><a href="@Url.Action("AccountPeriods", "AccountPeriods", new { area = "Accounts"})" class="slide-item">Account Periods</a></li>
                        }
                        @if (isAccountGroup)
                        {
                            <li><a href="@Url.Action("AccountGroups", "AccountGroups", new { area = "Accounts"})" class="slide-item">Account Groups</a></li>
                        }
                        @if (isAccountCategories)
                        {
                            <li><a href="@Url.Action("AccountCategories", "AccountCategories", new { area = "Accounts"})" class="slide-item">Account Categories</a></li>
                        }
                        @if (isChartOfAccounts)
                        {
                            <li><a href="@Url.Action("ChartOfAccounts", "ChartOfAccounts", new { area = "Accounts"})" class="slide-item">Chart of Accounts</a></li>
                        }
                        @if (isJournals)
                        {
                            <li><a href="@Url.Action("Journals", "Journals", new { area = "Accounts"})" class="slide-item">Journals</a></li>
                        }
                        @if (isTransactions)
                        {
                            <li><a href="@Url.Action("Transactions", "Transactions", new { area = "Accounts"})" class="slide-item">Transactions</a></li>
                        }
                        @if (isFundsTransfer)
                        {
                            <li><a href="@Url.Action("FundsTransfer", "FundsTransfer", new { area = "Accounts"})" class="slide-item">Funds Transfer</a></li>
                        }
                        @if (isPDCReceivables)
                        {
                            <li><a href="@Url.Action("PDCReceivables", "PDCReceivables", new { area = "Accounts"})" class="slide-item">PDC Receivables</a></li>
                        }
                        @if (isPDCPayables)
                        {
                            <li><a href="@Url.Action("PDCPayables", "PDCPayables", new { area = "Accounts"})" class="slide-item">PDC Payables</a></li>
                        }
                        @if (isFixedAssets)
                        {
                            <li><a href="@Url.Action("FixedAssets", "FixedAssets", new { area = "Accounts"})" class="slide-item">Fixed Assets</a></li>
                        }


                    </ul>
                </li>
            }
            if (isAccReportMenu)
            {
                <li class="slide">
                    <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-journal-check" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M10.854 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 8.793l2.646-2.647a.5.5 0 0 1 .708 0z" />
                            <path d="M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2z" />
                            <path d="M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1H1z" />
                        </svg>
                        <span class="side-menu__label">Account Reports</span><i class="angle fe fe-chevron-right"></i>
                    </a>
                    <ul class="slide-menu">
                        @if (isProfitAndLossSummary)
                        {
                            <li><a href="@Url.Action("ProfitLossReportSummary", "Reports", new { area = "Accounts"})" class="slide-item">Profit & Loss Summary</a></li>
                        }
                        @if (isProfitAndLossDetail)
                        {
                            <li><a href="@Url.Action("ProfitLossReport", "Reports", new { area = "Accounts"})" class="slide-item">Profit & Loss Detail</a></li>
                        }
                        @if (isBalanceSheetSummary)
                        {
                            <li><a href="@Url.Action("BalanceSheetReportSummary", "Reports", new { area = "Accounts"})" class="slide-item">Balance Sheet Summary</a></li>
                        }
                        @if (isBalanceSheetDetail)
                        {
                            <li><a href="@Url.Action("BalanceSheetReport", "Reports", new { area = "Accounts"})" class="slide-item">Balance Sheet Detail</a></li>
                        }
                        @if (isCashFlowStatement)
                        {
                            <li><a href="@Url.Action("CashFlowStatement", "Reports", new { area = "Accounts"})" class="slide-item">Cash Flow Statement</a></li>
                        }
                        @if (isTrialBalance)
                        {
                            <li><a href="@Url.Action("TrialBalance", "Reports", new { area = "Accounts"})" class="slide-item">Trial Balance</a></li>
                        }
                        @if (isAccountReconciliation)
                        {
                            <li><a href="@Url.Action("AccountReconciliation", "Reports", new { area = "Accounts"})" class="slide-item">Account Reconciliation</a></li>
                        }
                        @if (isSuppliersAgeAnalysis)
                        {
                            <li><a href="@Url.Action("SupplierAgeAnalysis", "Reports", new { area = "Accounts"})" class="slide-item">Suppliers Age Analysis</a></li>
                        }
                        @if (isPatientsAgeAnalysis)
                        {
                            <li><a href="@Url.Action("PatientAgeAnalysis", "Reports", new { area = "Accounts"})" class="slide-item">Patients Age Analysis</a></li>
                        }
                        @if (isInsuranceAgeAnalysis)
                        {
                            <li><a href="@Url.Action("InsuranceAgeAnalysis", "Reports", new { area = "Accounts"})" class="slide-item">Insurance Age Analysis</a></li>
                        }
                        @if (isAccountVATReport)
                        {
                            <li><a href="@Url.Action("AccountVATReport", "Reports", new { area = "Accounts"})" class="slide-item">Account VAT Report</a></li>
                        }
                        @if (isStatementofAccount)
                        {
                            <li><a href="@Url.Action("StatementOfAccount", "Reports", new { area = "Accounts"})" class="slide-item">Statement of Account</a></li>
                        }
                    </ul>
                </li>
            }
        }

        @if (isReportGroup)
        {
            <li class="side-item side-item-category">Summary &amp; Overview</li>
            if (isSummaryReports)
            {
                <li class="slide">
                    <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-clipboard-data" viewBox="0 0 16 16">
                            <path d="M4 11a1 1 0 1 1 2 0v1a1 1 0 1 1-2 0v-1zm6-4a1 1 0 1 1 2 0v5a1 1 0 1 1-2 0V7zM7 9a1 1 0 0 1 2 0v3a1 1 0 1 1-2 0V9z" />
                            <path d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z" />
                            <path d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z" />
                        </svg>
                        <span class="side-menu__label">Reports</span><i class="angle fe fe-chevron-right"></i>
                    </a>
                    <ul class="slide-menu">
                        @if (isCollectionReports)
                        {
                            <li><a href="@Url.Action("CollectionReports", "Reports", new { area = "Reports" })" class="slide-item">Collection Reports</a></li>
                        }
                        @if (isVATReport)
                        {
                            <li><a href="@Url.Action("VATReport", "VATReport", new { area = "Reports" })" class="slide-item d-none">VAT Report</a></li>
                            <li><a href="@Url.Action("VATReports", "VATReport", new { area = "Reports" })" class="slide-item">Sales VAT Report</a></li>
                            <li><a href="@Url.Action("PurchaseVATReport", "VATReport", new { area = "Reports" })" class="slide-item">Purchase VAT Report</a></li>
                        }
                        @if (isEmailReport)
                        {
                            <li><a href="@Url.Action("EmailReport", "InvoicesEmailReport", new { area = "Reports" })" class="slide-item">Invoices By Email Report</a></li>
                        }
                        @if (isReferredByMeReport)
                        {
                            <li><a href="@Url.Action("ReferredByMe", "ReferredByMeAppointmentReport", new { area = "Reports" })" class="slide-item">Referred By Me Appointment Report</a></li>
                        }
                        @if (isReferredToMeReport)
                        {
                            <li><a href="@Url.Action("ReferredToMe", "ReferredToMeAppointmentReport", new { area = "Reports" })" class="slide-item">Referred To Me Appointment Report</a></li>
                        }
                        @if (isPatientNonVisitsReport)
                        {
                            <li><a href="@Url.Action("Last30Days", "PatientNonVisit", new { area = "Reports" })" class="slide-item">Patients Not Visited Last 30 days</a></li>
                            <li><a href="@Url.Action("Last90Days", "PatientNonVisit", new { area = "Reports" })" class="slide-item">Patients Not Visited Last 90 days</a></li>
                            <li><a href="@Url.Action("Last180Days", "PatientNonVisit", new { area = "Reports" })" class="slide-item">Patients Not Visited Last 180 days</a></li>
                            <li><a href="@Url.Action("Last360Days", "PatientNonVisit", new { area = "Reports" })" class="slide-item">Patients Not Visited Last 360 days</a></li>
                            <li><a href="@Url.Action("Last2Years", "PatientNonVisit", new { area = "Reports" })" class="slide-item">Patients Not Visited Last 2 Years</a></li>
                        }
                        @if (isTreatmentsReport)
                        {
                            <li><a href="@Url.Action("TreatmentsReport", "TreatmentsReport", new { area = "Reports" })" class="slide-item">Treatments Report</a></li>
                        }
                        @if (isDailyCollections)
                        {
                            <li><a href="@Url.Action("DailyCollection", "DailyCollection", new { area = "Reports" })" class="slide-item">Daily Collection Report</a></li>
                        }
                        @if (isDoctorsCommission)
                        {
                            <li><a href="@Url.Action("DoctorsComissionReport", "DoctorsComissionsReport", new { area = "Reports" })" class="slide-item">Doctors Comission Report</a></li>
                        }
                        @if (isSurveyGraphicalCharts)
                        {
                            <li><a href="@Url.Action("SurveyGraphicalCharts", "SurveyGraphicalCharts", new { area = "Reports" })" class="slide-item">Survey Graphical Charts</a></li>
                        }
                        @if (isTreatmentValidityReport)
                        {
                            <li><a href="@Url.Action("TreatmentValidityReport", "TreatmentValidityReport", new { area = "Reports" })" class="slide-item">Treatments Validity Report</a></li>
                        }
                        @if (isDoctorsCollectionsReport)
                        {
                            <li><a href="@Url.Action("DoctorsCollections", "DoctorsCollections", new { area = "Reports" })" class="slide-item">Doctors Collections Report</a></li>
                        }
                        @if (isProfitLossReport)
                        {
                            <li><a href="@Url.Action("ProfitLossReport", "ProfitLossReport", new { area = "Reports" })" class="slide-item">Doctorwise Profit & Loss Report</a></li>
                        }
                        @if (isDoctorTreatmentTypewiseReport)
                        {
                            <li><a href="@Url.Action("TreatmentTypewiseReport", "TreatmentTypewiseReport", new { area = "Reports" })" class="slide-item">Doctor/Treatment Typewise Report</a></li>
                        }
                        @if (isDayMonthYearTDReport)
                        {
                            <li><a href="@Url.Action("DayMonthYearTD", "DayMonthYearTD", new { area = "Reports" })" class="slide-item">Day / Month / Year (Till Date) Report</a></li>
                        }
                        @if (isBranchSummaryReport)
                        {
                            <li><a href="@Url.Action("BranchwiseSummaryReport", "BranchwiseSummaryReport", new { area = "Reports" })" class="slide-item">Branchwise Summary</a></li>
                        }
                        @if (isDoctorBranchwiseSummaryReport)
                        {
                            <li><a href="@Url.Action("DoctorsAndBranchwiseSummary", "DoctorsAndBranchwiseSummary", new { area = "Reports" })" class="slide-item">Doctors & Branchwise Summary</a></li>
                        }
                        @if (isDoctorBranchwiseSummaryReport)
                        {
                            <li><a href="@Url.Action("DoctorswiseSummary", "DoctorswiseSummary", new { area = "Reports" })" class="slide-item">Doctorwise Summary</a></li>
                        }
                        @if (isReceptionWiseCollection)
                        {
                            <li><a href="@Url.Action("ReceptionWiseCollection", "ReceptionWiseCollection", new { area = "Reports" })" class="slide-item">Receptionist Wise Summary</a></li>
                        }
                        @if (isDailyRevenue)
                        {
                            <li><a href="@Url.Action("DailyRevenue", "DailyRevenue", new { area = "Reports" })" class="slide-item">Daily Revenue</a></li>
                        }
                        @if (isInsuranceOutstandingSummary)
                        {
                            <li><a href="@Url.Action("InsuranceOutstandingSummary", "InsuranceOutstandingSummary", new { area = "Reports" })" class="slide-item d-none">Insurance Outstanding Summary</a></li>
                        }
                        @if (isInsuranceClaimsOutstandingReport)
                        {
                            <li><a href="@Url.Action("InsuranceClaimsOutstandingReport", "InsuranceClaimsOutstandingReport", new { area = "Reports" })" class="slide-item d-none">Insurance Claims Outstanding Report</a></li>
                        }
                        @if (isInsuranceClaimsOutstandingReport)
                        {
                            <li><a href="@Url.Action("InsuranceClaimsOutstandingReport", "InsuranceClaimsOutstandingReport", new { area = "Reports" })" class="slide-item d-none">Insurance Claims Outstanding Report</a></li>
                        }
                        @if (isInvoiceSummaryReport)
                        {
                            <li><a href="@Url.Action("InvoiceSummaryReport", "InvoiceSummaryReport", new { area = "Reports" })" class="slide-item">Invoice Summary Report</a></li>
                        }
                        @if (isDoctorPatientCollectionReport)
                        {
                            <li><a href="@Url.Action("DoctorPatientCollectionReport", "DoctorPatientCollectionReport", new { area = "Reports" })" class="slide-item">Doctor &amp; Patient Collection Report (Daywise)</a></li>
                            <li><a href="@Url.Action("DoctorwiseCollectionReport", "DoctorPatientCollectionReport", new { area = "Reports" })" class="slide-item">Doctor &amp; Patient Collection Report (Doctorwise)</a></li>
                        }
                        @if (isPackagesReport)
                        {
                            <li><a href="@Url.Action("PackagesReport", "PackagesReport", new { area = "Reports" })" class="slide-item"> Patient Packages Report</a></li>
                        }
                        @if (isInternalStockConsumptionReport)
                        {
                            <li><a href="@Url.Action("InternalStockComsumptionReport", "InternalStockComsumptionReport", new { area = "Reports" })" class="slide-item"> Internal Stock Consumption Report</a></li>
                        }
                        @if (isMonthlyReferralReport)
                        {
                            <li><a href="@Url.Action("MonthlyReferralReport", "ReferralReport", new { area = "Reports" })" class="slide-item"> Monthly Referral Report</a></li>
                        }
                        @if (isYearlyReferralReport)
                        {
                            <li><a href="@Url.Action("YearlyReferralReport", "ReferralReport", new { area = "Reports" })" class="slide-item"> Yearly Referral Report</a></li>
                        }
                        @if (isPreSubmissionsReport)
                        {
                            <li>
                                <a href="@Url.Action("PreSubmissionReport", "PreSubmissionReport", new { area = "Reports" })" class="slide-item">
                                    Pre Submissions Report
                                    <span class="badge bg-info side-badge ms-2">New</span>
                                </a>
                            </li>
                        }
                        @if (isInsuranceEMRReport)
                        {
                            <li>
                                <a href="@Url.Action("InsuranceEMRCheckingReport", "InsuranceEMRCheckingReport", new { area = "Reports" })" class="slide-item">
                                    Insurance EMR Checking Report
                                    <span class="badge bg-info side-badge ms-2">New</span>
                                </a>
                            </li>
                        }
                        <li>
                            <a href="@Url.Action("InsRemittanceReport", "InsRemittanceReport", new { area = "Reports" })" class="slide-item">
                                Claim Wise Report
                                <span class="badge bg-info side-badge ms-2">New</span>
                            </a>
                        </li>

                    </ul>
                </li>
            }
            if (isKPIReports)
            {
                <li class="slide">
                    <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-bar-chart-line" viewBox="0 0 16 16">
                            <path d="M11 2a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1v-3a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3h1V7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7h1V2zm1 12h2V2h-2v12zm-3 0V7H7v7h2zm-5 0v-3H2v3h2z" />
                        </svg>
                        <span class="side-menu__label">KPI Reports</span><i class="angle fe fe-chevron-right"></i>
                    </a>
                    <ul class="slide-menu">
                        @if (isAppointmentStatusReport)
                        {
                            <li><a href="@Url.Action("AppointmentStatusReport", "AppointmentStatusReport", new { area = "KPIReports" })" class="slide-item">Appointment Status Report</a></li>
                        }
                        @if (isPatientDiagnosisReport)
                        {
                            <li><a href="@Url.Action("PatientDiagnosisReport", "PatientDiagnosisReport", new { area = "KPIReports" })" class="slide-item">Patient Diagnosis Report</a></li>
                        }
                        @if (isMedicationReport)
                        {
                            <li><a href="@Url.Action("MedicationReport", "MedicationReport", new { area = "KPIReports" })" class="slide-item">Medication Report</a></li>
                        }
                        @if (isProgressNotesReport)
                        {
                            <li><a href="@Url.Action("ProgressNotesReport", "ProgressNotesReport", new { area = "KPIReports" })" class="slide-item">Progress Notes Report</a></li>
                        }
                        @if (isChiefComplaintsReport)
                        {
                            <li><a href="@Url.Action("ChiefComplaintsReport", "ChiefComplaintsReport", new { area = "KPIReports" })" class="slide-item">Chief Complaints Report</a></li>
                        }
                        @if (isVitalSignsReport)
                        {
                            <li><a href="@Url.Action("VitalSignsReport", "VitalSignsReport", new { area = "KPIReports" })" class="slide-item">Vital Signs Report</a></li>
                        }
                        @if (isAuditLogsReport)
                        {
                            <li><a href="@Url.Action("AuditLogsReport", "AuditLogsReport", new { area = "KPIReports" })" class="slide-item">Audit Logs Report</a></li>
                        }
                        @if (isSignedDocumentReport)
                        {
                            <li><a href="@Url.Action("SignedDocumentsReport", "SignedDocuments", new { area = "KPIReports" })" class="slide-item">Signed Documents Report</a></li>
                        }
                    </ul>
                </li>
            }
        }

        @{
            string support_link = ConfigurationManager.AppSettings["SupportEndPoint"].ToString();
            string aboutus_link = ConfigurationManager.AppSettings["AboutUsEndPoint"].ToString();
        }
        <li class="side-item side-item-category">Resources &amp; Support</li>
        <li class="slide">
            <a class="side-menu__item" data-bs-toggle="slide" href="javascript:void(0);">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="side-menu__icon bi bi-tools" viewBox="0 0 16 16">
                    <path d="M1 0 0 1l2.2 3.081a1 1 0 0 0 .815.419h.07a1 1 0 0 1 .708.293l2.675 2.675-2.617 2.654A3.003 3.003 0 0 0 0 13a3 3 0 1 0 5.878-.851l2.654-2.617.968.968-.305.914a1 1 0 0 0 .242 1.023l3.27 3.27a.997.997 0 0 0 1.414 0l1.586-1.586a.997.997 0 0 0 0-1.414l-3.27-3.27a1 1 0 0 0-1.023-.242L10.5 9.5l-.96-.96 2.68-2.643A3.005 3.005 0 0 0 16 3c0-.269-.035-.53-.102-.777l-2.14 2.141L12 4l-.364-1.757L13.777.102a3 3 0 0 0-3.675 3.68L7.462 6.46 4.793 3.793a1 1 0 0 1-.293-.707v-.071a1 1 0 0 0-.419-.814L1 0Zm9.646 10.646a.5.5 0 0 1 .708 0l2.914 2.915a.5.5 0 0 1-.707.707l-2.915-2.914a.5.5 0 0 1 0-.708ZM3 11l.471.242.529.026.287.445.445.287.026.529L5 13l-.242.471-.026.529-.445.287-.287.445-.529.026L3 15l-.471-.242L2 14.732l-.287-.445L1.268 14l-.026-.529L1 13l.242-.471.026-.529.445-.287.287-.445.529-.026L3 11Z" />
                </svg>
                <span class="side-menu__label">Tools</span><i class="angle fe fe-chevron-right"></i>
            </a>
            <ul class="slide-menu">
                @if (isMyTickets)
                {
                    <li><a href="@Url.Action("Tickets", "Ticket", new { area = "Tools" })" class="slide-item">My Tickets</a></li>
                    <li><a href="@Url.Action("Queries", "Queries", new { area="Common"})" class="slide-item d-none">Queries</a></li>
                }
                <li><a href="@aboutus_link" target="_blank" class="slide-item">About Us</a></li>
                <li><a href="javascript:void(0)" class="slide-item d-none">Activity Logs</a></li>
                <li><a href="javascript:void(0)" class="slide-item d-none">Invoice Logs History</a></li>
                <li><a href="@support_link" target="_blank" class="slide-item">Support</a></li>
                <li><a href="@Url.Action("UserManual", "UserManual", new { area = "Tools" })" class="slide-item">Help Panel</a></li>

                <li><a href="@Url.Action("DeveloperTool", "DeveloperTool", new { area = "Tools" })" class="slide-item">Developer Tool</a></li>

            </ul>
        </li>
    </ul>
</aside>
<!--aside closed-->