@using System.Security.Claims;
@{
    ViewBag.Title = "Account Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var empId = claims.Where(c => c.Type == ClaimTypes.Sid).Select(c => c.Value).SingleOrDefault();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    var company = claims.Where(c => c.Type == ClaimTypes.PrimarySid).Select(c => c.Value).SingleOrDefault();
    var emp_branch = claims.Where(c => c.Type == ClaimTypes.GroupSid).Select(c => c.Value).SingleOrDefault();
}
<link href="~/assets/plugins/morris/morris.css" rel="stylesheet" />
<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary">
            <span data-lang-key="account-material-management-dashboard">Account & Material Management Dashboard</span>
        </h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list">
            <button class="btn btn-outline-primary mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#searchFilter" aria-expanded="false" aria-controls="collapseExample">
                <i class="fa fa-filter"></i>
                <span data-lang-key="advance-filter">Advanced Filters</span>
            </button>
        </div>
    </div>
</div>
<div class="row mb-3">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card mb-0">
            <div class="card-status bg-primary-transparent"></div>
            <div class="collapse" id="searchFilter">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-12 col-md-6 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="branches">Branch<small>(es)</small></span>
                                </label>
                                <select class="form-control" id="select_branch" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="from-date">From Date</span>
                                </label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_from" class="form-control" placeholder="Select From Date" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="to-date">To Date</span>
                                </label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_to" class="form-control" placeholder="Select To Date" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">&nbsp;</label>
                                <button class="btn btn-primary mb-2" type="button" id="btnSearch">
                                    <i class="fa fa-search-plus"></i>
                                    <span data-lang-key="search">Search</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xl-3 col-lg-6 col-md-6 col-xm-12">
        <div class="card overflow-hidden">
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        <p class="mb-1 semibold-text"><span class="fs-14 font-weight-normal" data-lang-key="total-purchase-invoices">Total Purchase Invoices</span></p>
                        <h3 class="mb-0 font-weight-bold text-success"><span id="pinv_net" class="curpointer" onclick="ViewPurchaseInvoices();">AED 0.00</span></h3>
                    </div>
                    <div class="col">
                        <div id="spar_pinv"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-lg-6 col-md-6 col-xm-12">
        <div class="card overflow-hidden">
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        <p class="mb-1 semibold-text"><span class="fs-14 font-weight-normal" data-lang-key="total-VAT">Total VAT</span></p>
                        <h3 class="mb-0 font-weight-bold" style="color: #cb8938"><span id="pinv_vat" class="curpointer" onclick="ViewPurchaseVAT();">AED 0.00</span></h3>
                    </div>
                    <div class="col">
                        <div id="spar_vat"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-lg-6 col-md-6 col-xm-12">
        <div class="card overflow-hidden">
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        <p class="mb-1 semibold-text"><span class="fs-14 font-weight-normal" data-lang-key="total-payments">Total Payments</span></p>
                        <h3 class="mb-0 font-weight-bold" style="color: #cb3d38"><span id="Payment" class="curpointer" onclick="ViewPaymentDetail();">AED 0.00</span></h3>
                    </div>
                    <div class="col">
                        <div id="spar_payment"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-lg-6 col-md-6 col-xm-12">
        <div class="card overflow-hidden">
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        <p class="mb-1 semibold-text"><span class="fs-14 font-weight-normal" data-lang-key="total-balance">Invoices Balance</span></p>
                        <h3 class="mb-0 font-weight-bold" style="color: #cbbc38"><span id="balance" class="curpointer" onclick="ViewPurchaseBalance();">AED 0.00</span></h3>
                    </div>
                    <div class="col">
                        <div id="spar_balance"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-lg-6 col-md-6 col-xm-12">
        <div class="card overflow-hidden">
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        <p class="mb-1 semibold-text"><span class="fs-14 font-weight-normal" data-lang-key="total-advance-paid">Total Adavnce Paid</span></p>
                        <h3 class="mb-0 font-weight-bold" style="color: #3878cb"><span id="Advance" class="curpointer" onclick="ViewAdvancePayments();">AED 0.00</span></h3>
                    </div>
                    <div class="col">
                        <div id="spar_advance"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-lg-6 col-md-6 col-xm-12">
        <div class="card overflow-hidden">
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        <p class="mb-1 semibold-text"><span class="fs-14 font-weight-normal" data-lang-key="total-direct-payment">Total Direct Payment</span></p>
                        <h3 class="mb-0 font-weight-bold" style="color: #3c8c8a"><span id="direct_payment" class="curpointer" onclick="ViewPurchaseInvoices();">AED 0.00</span></h3>
                    </div>
                    <div class="col">
                        <div id="spar_dpay"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-lg-6 col-md-6 col-xm-12">
        <div class="card overflow-hidden">
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        <p class="mb-1 semibold-text"><span class="fs-14 font-weight-normal" data-lang-key="total-fund-transfered">Total Fund Transfered</span></p>
                        <h3 class="mb-0 font-weight-bold" style="color: #6f3c8c"><span id="fund_transfered" class="curpointer" onclick="ViewPurchaseInvoices();">AED 0.00</span></h3>
                    </div>
                    <div class="col">
                        <div id="spar_transfer"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-lg-6 col-md-6 col-xm-12">
        <div class="card overflow-hidden">
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        <p class="mb-1 semibold-text">Total Expenses</p>
                        <h3 class="mb-0 font-weight-bold" style="color: #106b59"><span id="total_expenses" class="curpointer" onclick="ViewPurchaseInvoices();">AED 0.00</span></h3>
                    </div>
                    <div class="col">
                        <div id="spar_expenses"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<div class="row">

    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title text-indigo" data-lang-key="monthly-purchase-detail">Monthly Purchases Detail</h3>
                <div class="card-options">
                    <a href="javascript:void(0);" class="card-options-collapse me-2" data-bs-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a>
                    <a href="javascript:void(0);" class="card-options-fullscreen me-2" data-bs-toggle="card-fullscreen"><i class="fe fe-maximize"></i></a>
                </div>
            </div>
            <div class="card-body pt-0">
                <div class="chart-wrapper">
                    <div id="PurchasesMonthWise"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title text-indigo" data-lang-key="monthly-profit-and-loss-detail">Monthly Profit & Loss Detail</h3>
                <div class="card-options">
                    <a href="javascript:void(0);" class="card-options-collapse me-2" data-bs-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a>
                    <a href="javascript:void(0);" class="card-options-fullscreen me-2" data-bs-toggle="card-fullscreen"><i class="fe fe-maximize"></i></a>
                </div>
            </div>
            <div class="card-body pt-0">
                <div class="chart-wrapper">
                    <div id="pl_MonthWise"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title text-indigo" data-lang-key="payments-activity">Payments Activity</h3>
                <div class="card-options">
                    <a href="javascript:void(0);" class="card-options-collapse me-2" data-bs-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a>
                    <a href="javascript:void(0);" class="card-options-fullscreen me-2" data-bs-toggle="card-fullscreen"><i class="fe fe-maximize"></i></a>
                </div>
            </div>
            <div class="card-body pt-0">
                <div class="chart-wrapper">
                    <div id="PurchasesPayments"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Row-1 -->

<div class="row">
    <div class="col-sm-12 col-lg-3">
        <div class="card">
            <div class="card-body text-center list-icons">
                <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-0-circle" viewBox="0 0 16 16" style="fill: red;">
                    <path d="M7.988 12.158c-1.851 0-2.941-1.57-2.941-3.99V7.84c0-2.408 1.101-3.996 2.965-3.996 1.857 0 2.935 1.57 2.935 3.996v.328c0 2.408-1.101 3.99-2.959 3.99M8 4.951c-1.008 0-1.629 1.09-1.629 2.895v.31c0 1.81.627 2.895 1.629 2.895s1.623-1.09 1.623-2.895v-.31c0-1.8-.621-2.895-1.623-2.895" />
                    <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8" />
                </svg>

                <p class="card-text mt-3 mb-0">No. of Items Expired</p>
                <p class="h2 text-center font-weight-bold" id="Item_exp" onclick="ViewItems(0);"></p>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-lg-3">
        <div class="card">
            <div class="card-body text-center list-icons">
                <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-calendar4-week" viewBox="0 0 16 16" style="fill: orange;">
                    <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M2 2a1 1 0 0 0-1 1v1h14V3a1 1 0 0 0-1-1zm13 3H1v9a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1z" />
                    <path d="M11 7.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5zm-3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5zm-2 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5zm-3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5z" />
                </svg>

                <p class="card-text mt-3 mb-0">No.of Items Expiring within 7 Days</p>
                <p class="h2 text-center font-weight-bold" id="Item_exp_7D" onclick="ViewItems(7);"></p>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-lg-3">
        <div class="card">
            <div class="card-body text-center list-icons">
                <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-calendar" viewBox="0 0 16 16" style="fill: blue;">
                    <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z" />
                </svg>

                <p class="card-text mt-3 mb-0">No.of Items Expiring within 1 Month</p>
                <p class="h2 text-center font-weight-bold" id="Item_exp_1M" onclick="ViewItems(30);"></p>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-lg-3">
        <div class="card">
            <div class="card-body text-center list-icons">
                <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-calendar3" viewBox="0 0 16 16" style="fill: green;">
                    <path d="M14 0H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2M1 3.857C1 3.384 1.448 3 2 3h12c.552 0 1 .384 1 .857v10.286c0 .473-.448.857-1 .857H2c-.552 0-1-.384-1-.857z" />
                    <path d="M6.5 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2" />
                </svg>


                <p class="card-text mt-3 mb-0">No.of Items Expiring within 3 Months</p>
                <p class="h2 text-center font-weight-bold" id="Item_exp_3M" onclick="ViewItems(90);"></p>
            </div>
        </div>
    </div>
</div>
<!-- End Row-1 -->
@* View Purchase Invoice Detail popup Model *@
<div class="modal fade overflow-auto" id="PurchaseInvoicesView_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="PurchaseInvoicesView_body">
        </div>
    </div>
</div>

@* View Purchase Payment Detail popup Model *@
<div class="modal fade overflow-auto" id="paymentView_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="paymentVATView_body">
        </div>
    </div>
</div>


@* View Purchase Invoice VAT Detail popup Model *@
<div class="modal fade overflow-auto" id="PurchaseBalView_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="PurchaseBalView_body">
        </div>
    </div>
</div>

<div class="modal fade overflow-auto" id="ItemsView_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="ItemsView_body">
        </div>
    </div>
</div>


@section myScripts{
    <script src="~/assets/js/widgets.js"></script>
    <script src="~/assets/plugins/morris/raphael-min.js"></script>
    <script src="~/assets/plugins/morris/morris.js"></script>
    <script src="~/assets/plugins/chart/chart.bundle.js"></script>
    <script src="~/assets/plugins/chart/utils.js"></script>
    <script src="~/assets/js/apexcharts.js"></script>
    <script type="text/javascript">

        //#region Page Load & Initialization
        $(function () {
            // Load Advanced Filters
            load_filters();
        });
        //#endregion

        //#region Load Advanced Filters
        // Initialize All Items
        var load_filters = function () {

            $('#select_date_from').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            $("#select_date_from").bootstrapdatepicker("setDate", "-1m");
            $('#select_date_to').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            $("#select_date_to").bootstrapdatepicker("setDate", "tomorrow");

            $('#select_date_from').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });

            $('#select_date_to').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });
            load_branches();
        }
        // Load Branches
        var load_branches = function () {
            $('#select_branch').SumoSelect({
                placeholder: 'Select Branch(es)',
                captionFormat: '{0} Branch(es) Selected',
                captionFormatAllSelected: 'All {0} Branches selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $.ajax({
                url: '@Url.Action("GetBranches", "MyDashboard", new { area = "Dashboard" })',
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    $('#select_branch').html('');
                    $('#select_branch')[0].sumo.reload();

                    if ("@emp_designation.ToString()" === "Super Administrator") {
                        $.each(response, function (j) {
                            $('#select_branch')[0].sumo.add(response[j].id, response[j].text);
                            $('#select_branch')[0].sumo.selectItem(["@emp_branch.ToString()"]);
                        });
                    }
                    else {
                        $('#select_branch')[0].sumo.add(@emp_branch.ToString(), "@company.ToString()");
                        $('#select_branch')[0].sumo.selectItem(["@emp_branch.ToString()"]);
                    }
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                }
            }).done(function () {
                $('#select_branch')[0].sumo.reload();
                // Load Dashboard Data
                GetDashboardReports(0);
            });
        }
        //#endregion

        //#region Search Dashboard Click
        $("#btnSearch").click(function (e){
            e.preventDefault();
            if ($("#select_branch").val() != null && $("#select_branch").val() != 0 && $("#select_branch").val() != "") {
                let isValid = true;
                let date_frm = moment($("#select_date_from").val(), "DD-MMMM-YYYY");
                let date_to = moment($("#select_date_to").val(), "DD-MMMM-YYYY");

                // Check if Date From is a valid Date
                if ($("#select_date_from").val() != null && $("#select_date_from").val() != 0 && $("#select_date_from").val() != "" && $("#select_date_from").val() != undefined) {
                    if (!date_frm.isValid()) {
                        isValid = false;
                        e.stopPropagation();
                        return $.growl.error({
                            title: "Error",
                            message: "Invalid From Date!"
                        });
                    }
                }

                // Check if Date To is a valid Date
                if ($("#select_date_to").val() != null && $("#select_date_to").val() != 0 && $("#select_date_to").val() != "" && $("#select_date_to").val() != undefined) {
                    if (!date_to.isValid()) {
                        isValid = false;
                        e.stopPropagation();
                        return $.growl.error({
                            title: "Error",
                            message: "Invalid To Date!"
                        });
                    }
                }

                // Check if Date Range is valid
                if (($("#select_date_from").val() != null && $("#select_date_from").val() != 0 && $("#select_date_from").val() != "" && $("#select_date_from").val() != undefined) && ($("#select_date_to").val() != null && $("#select_date_to").val() != 0 && $("#select_date_to").val() != "" && $("#select_date_to").val() != undefined)) {
                    if (date_frm.isValid() && date_to.isValid()) {
                        if (date_to.diff(date_frm, 'days') <= 0) {
                            isValid = false;

                            var index = [];
                            index.push("select_date_from");
                            index.push("select_date_to_app");

                            $.each(index, function (i, v) {
                                if (index[i] != null && index[i] != "") {
                                    var elem = $("#" + index[i]);
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                    }
                                    else {
                                        $(elem).addClass(" is-invalid");
                                    }

                                    setTimeout(function () {
                                        if (elem.hasClass("select2-hidden-accessible")) {
                                            $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                        }
                                        else {
                                            $(elem).removeClass("is-invalid");
                                        }
                                    }, 5000);
                                }
                            });

                            e.stopPropagation();

                            return $.growl.error({
                                title: "Error!",
                                message: "Filter From Date hould be less than To Date Filter!"
                            });
                        }
                    }
                }

                // Check If Valid
                if (isValid) {
                    GetDashboardReports(1);
                }
            }
            else {
                Swal.fire({
                    title: "Attention!",
                    text: "You need to select atleast 1 Branch to Filter Dashboard Reports!",
                    icon: "warning",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                });
            }
        });
        //#endregion

        //#region Dashboard Reports
        // Get Dashboard Data
        var GetDashboardReports = function (search_type) {

            var empId = "";

            if ("@emp_designation.ToString()" === "Super Administrator") {
                empId = 0;
            }
            else {
                empId = @empId.ToString();
            }

            var _data = {
                "empId"         : empId,
                "branch"        : $('#select_branch').val().toString(),
                "from_date"     : $('#select_date_from').val(),
                "to_date"       : $('#select_date_to').val()
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetDashboardDetails", "Dashboard", new { area = "MaterialManagement" })",
                data: _data,
                beforeSend: function () {
                    $('#toastBody').html('');
                    $('#toastBody').html('<i class="fe fe-info me-2 text-info"></i> <b>Generating Report..</b> Please wait!');
                    $('#toastDash').removeClass("d-none");
                    $('#dashToast').show();
                },
                start_time: new Date().getTime(),
                success: function (response) {
                    if (response.isAuthorized != false) {
                        $("#pinv_net").html(  response.pinv_net.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                        callChartFunction('spar_pinv', 'Total Purchase Invoices', '#38cb89', response.pinv_net);

                        $("#pinv_vat").html(  response.pinv_vat.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                        callChartFunction('spar_vat', 'Total VAT', '#cb8938', response.pinv_vat);

                        $("#Payment").html(  response.Payment.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                        callChartFunction('spar_payment', 'Total Payments', '#cb3d38', response.Payment);

                        $("#balance").html(  response.balance.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                        callChartFunction('spar_balance', 'Invoices Balance', '#cbbc38', response.balance);

                        $("#Advance").html(  response.Advance.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                        callChartFunction('spar_advance', 'Total Adavance Paid', '#3878cb', response.Advance);

                        $("#direct_payment").html(  response.direct_payment.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                        callChartFunction('spar_dpay', 'Total Direct Payment', '#3c8c8a', response.direct_payment);

                        $("#fund_transfered").html(  response.fund_transfered.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                        callChartFunction('spar_transfer', 'Total Fund Transfered', '#6f3c8c', response.fund_transfered);

                        $("#total_expenses").html( response.total_expenses.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                        callChartFunction('spar_expenses', 'Total Expenses', '#106b59', response.total_expenses);

                        // Month wise Purchase
                        bindPurchases(response);

                        // Month wise Payments
                        bindPayments(response);

                        // Month wise Profit & Loss Detail
                        bind_profit_loss(response);

                        $("#Item_exp").html(response.Item_exp.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 0 }));
                        $("#Item_exp_7D").html(response.Item_exp_7D.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 0 }));
                        $("#Item_exp_1M").html(response.Item_exp_1M.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 0 }));
                        $("#Item_exp_3M").html(response.Item_exp_3M.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 0 }));


                        //$('#expiryItemsList').empty();
                        //$.each(response.Expiry_Items, function (index, item) {
                        //    var li = $('<li>').addClass('mb-5 mt-5');
                        //    var div = $('<div>').appendTo(li);
                        //    var countSpan = $('<span>').addClass('activity-timeline bg-primary text-white').text(item.item_count).appendTo(div);
                        //    var contentDiv = $('<div>').addClass('activity-timeline-content').appendTo(div);
                        //    var statusSpan = $('<span>').addClass('font-weight-normal1 fs-13').text(item.expiry_status).appendTo(contentDiv);

                        //    // Append the list item to the list
                        //    li.appendTo('#expiryItemsList');
                        //});

                    }
                    else
                    {
                        console.log("You are not Authorized To View This Page!");
                    }
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                    $('#progress-loader').hide();
                }
            }).done(function () {
                setTimeout(function () {
                    $('#dashToast').fadeOut('fast');
                    $('#toastDash').addClass("d-none");
                }, 5000);
            });
        }

        var callChartFunction = function (sparkID, showText, colorCode, amount) {
            var _data = [];

            $('#' + sparkID).text('');

            if (parseFloat(amount) > 0) {
                _data.push(0, 45, 54, 38, 56, 24, 65, 31, 37, 39, 62, 51, 35, 41, 35, 27, 93, 53, 61, 27, 54, 43, 19, 46);
            }
            else {
                _data.push(0,0,0,0,0,0.01);
            }

            var spark1 = {
                chart: {
                    type: 'area',
                    height: 60,
                    width: 160,
                    sparkline: {
                        enabled: true
                    },
                    dropShadow: {
                        enabled: true,
                        blur: 3,
                        opacity: 0.2,
                        show: false,
                    }
                },
                stroke: {
                    show: true,
                    curve: 'smooth',
                    lineCap: 'butt',
                    colors: undefined,
                    width: 2,
                    dashArray: 0,
                },
                fill: {
                    gradient: {
                        enabled: false
                    }
                },
                series: [{
                    name: showText,
                    data: _data
                }],
                yaxis: {
                    min: 0
                },
                colors: [colorCode],

            }
            var spark1 = new ApexCharts(document.querySelector("#" + sparkID), spark1);
            spark1.render();
        }
        //#endregion

        //#region Payments

        var bindPayments = function (response) {
            var _data = response.monthwise_payments;

            var series = [{
                name: 'Paid by Cash',
                data: _data.map(metricData => metricData.cash_paid)
            }, {
                name: 'Paid by Card',
                data: _data.map(metricData => metricData.card_paid)
            }, {
                name: 'Paid by Cheque',
                data: _data.map(metricData => metricData.chq_paid)
            }, {
                name: 'Paid by Bank Transferred',
                data: _data.map(metricData => metricData.bank_transfer_paid)
            }, {
                name: 'Advance Received',
                data: _data.map(metricData => metricData.advance_paid)
            }];



            $('#PurchasesPayments').empty('');

            var options = {
                series: series,
                chart: {
                    type: 'bar',
                    height: 375
                },
                grid: {
                    borderColor: '#eff2f6',
                },
                colors: ["#664dc9", '#44c4fa', '#28b525', '#a77322', '#a79e22'],
                plotOptions: {
                    bar: {
                        horizontal: false,
                        columnWidth: '30%',
                        endingShape: 'rounded'
                    },
                },
                dataLabels: {
                    enabled: false
                },
                stroke: {
                    show: true,
                    width: 3,
                    colors: ['transparent']
                },
                states: {
                    hover: {
                        filter: {
                            type: 'none'
                        }
                    }
                },
                xaxis: {
                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                    axisBorder: {
                        show: true,
                        color: '#e6ebf1',
                        offsetX: 0,
                        offsetY: 0,
                    },
                    axisTicks: {
                        show: true,
                        borderType: 'solid',
                        color: '#e6ebf1',
                        width: 6,
                        offsetX: 0,
                        offsetY: 0
                    },
                },
                fill: {
                    opacity: 1
                },
                legend: {
                    position: "bottom"
                },
            };

            var chart = new ApexCharts(document.querySelector("#PurchasesPayments"), options);
            chart.render();
        }
        //#endregion

        //#region Purchases with Pendings
        var bindPurchases = function (response) {
            var _data = response.monthly_purchase;

            var series = [{
                name: 'Total Purchase',
                data: _data.map(metricData => metricData.pinv_net)
            }, {
                name: 'VAT Amount',
                data: _data.map(metricData => metricData.pinv_vat)
            }, {
                name: 'Paid Amount',
                data: _data.map(metricData => metricData.balance)
            }, {
                name: 'Pending Balance',
                data: _data.map(metricData => metricData.paid)
                }
            ];

            $('#PurchasesMonthWise').empty('');

            var options = {
                series: series,
                chart: {
                    type: 'bar',
                    height: 375
                },
                grid: {
                    borderColor: '#eff2f6',
                },
                colors: ["#664dc9", '#44c4fa', '#28b525', '#a79e22'],
                plotOptions: {
                    bar: {
                        horizontal: false,
                        columnWidth: '30%',
                        endingShape: 'rounded'
                    },
                },
                dataLabels: {
                    enabled: false
                },
                stroke: {
                    show: true,
                    width: 3,
                    colors: ['transparent']
                },
                states: {
                    hover: {
                        filter: {
                            type: 'none'
                        }
                    }
                },
                xaxis: {
                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                    axisBorder: {
                        show: true,
                        color: '#e6ebf1',
                        offsetX: 0,
                        offsetY: 0,
                    },
                    axisTicks: {
                        show: true,
                        borderType: 'solid',
                        color: '#e6ebf1',
                        width: 6,
                        offsetX: 0,
                        offsetY: 0
                    },
                },
                fill: {
                    opacity: 1
                },
                legend: {
                    position: "bottom"
                },
            };

            var chart = new ApexCharts(document.querySelector("#PurchasesMonthWise"), options);
            chart.render();
        }
        //#endregion

        //#region Monthwiese Profit & Loss Detail
        var bind_profit_loss = function (response) {
            var _data = response.pl_monthwise;

            var series = [{
                name: 'Incomes',
                data: _data.map(metricData => metricData.incomes)
            },
            {
                name: 'Expenses',
                data: _data.map(metricData => metricData.expenses)
            }
            ];

            var months = _data.map(metricData => metricData.month_name);

            $('#pl_MonthWise').empty('');

            var options = {
                series: series,
                chart: {
                    type: 'bar',
                    height: 375
                },
                grid: {
                    borderColor: '#eff2f6',
                },
                colors: ["#1c941c", '#e72d2d'],
                plotOptions: {
                    bar: {
                        horizontal: false,
                        columnWidth: '30%',
                        endingShape: 'rounded'
                    },
                },
                dataLabels: {
                    enabled: false
                },
                stroke: {
                    show: true,
                    width: 2,
                    colors: ['transparent']
                },
                states: {
                    hover: {
                        filter: {
                            type: 'none'
                        }
                    }
                },
                xaxis: {
                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                    axisBorder: {
                        show: true,
                        color: '#e6ebf1',
                        offsetX: 0,
                        offsetY: 0,
                    },
                    axisTicks: {
                        show: true,
                        borderType: 'solid',
                        color: '#e6ebf1',
                        width: 6,
                        offsetX: 0,
                        offsetY: 0
                    },
                },
                fill: {
                    opacity: 1
                },
                legend: {
                    position: "bottom"
                },
            };

            var chart = new ApexCharts(document.querySelector("#pl_MonthWise"), options);
            chart.render();
        }
        //#endregion

        //#region Purchase Invoice Detail View
        var ViewPurchaseInvoices = function () {

            $("#spinner2").show();
            var empId = "";

            if ("@emp_designation.ToString()" === "Super Administrator") {
                empId = 0;
            }
            else {
                empId = @empId.ToString();
            }

            var _data = {
                "empId": empId,
                "branch": $('#select_branch').val().toString(),
                "from_date": $('#select_date_from').val(),
                "to_date": $('#select_date_to').val()
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetPurchaseInvoicesDetails", "Dashboard", new { area = "MaterialManagement" })",
                contentType: "application/json",
                dataType: "html",
                data: _data,
                success: function (data) {
                    $("#PurchaseInvoicesView_body").html(data);
                    $("#PurchaseInvoicesView_modal").modal("show");
                },
                error: function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    $("#spinner2").hide();
                }
            });

        };
        //#endregion

        //#region Purchase Invoice Detail View
        var ViewItems = function (duration) {

            $("#spinner2").show();

            var _data = {
                "duration": duration
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetExpItemsDetails", "Dashboard", new { area = "MaterialManagement" })?days=" + duration,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#ItemsView_body").html(data);
                    $("#ItemsView_modal").modal("show");
                },
                error: function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    $("#spinner2").hide();
                }
            });

        };
        //#endregion

        //#region Purchase VAT Detail View
        var ViewPurchaseVAT = function () {

            $("#spinner2").show();
            var empId = "";

            if ("@emp_designation.ToString()" === "Super Administrator") {
                empId = 0;
            }
            else {
                empId = @empId.ToString();
            }

            var _data = {
                "empId": empId,
                "branch": $('#select_branch').val().toString(),
                "from_date": $('#select_date_from').val(),
                "to_date": $('#select_date_to').val()
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetPurchaseVATDetails", "Dashboard", new { area = "MaterialManagement" })",
                contentType: "application/json",
                dataType: "html",
                data: _data,
                success: function (data) {
                    $("#PurchaseInvoicesView_body").html(data);
                    $("#PurchaseInvoicesView_modal").modal("show");
                },
                error: function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    $("#spinner2").hide();
                }
            });

        };
        //#endregion

        //#region Purchase Balance Detail View
        var ViewPurchaseBalance = function () {

            $("#spinner2").show();
            var empId = "";

            if ("@emp_designation.ToString()" === "Super Administrator") {
                empId = 0;
            }
            else {
                empId = @empId.ToString();
            }

            var _data = {
                "empId": empId,
                "branch": $('#select_branch').val().toString(),
                "from_date": $('#select_date_from').val(),
                "to_date": $('#select_date_to').val()
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetPurchaseBalanceDetails", "Dashboard", new { area = "MaterialManagement" })",
                contentType: "application/json",
                dataType: "html",
                data: _data,
                success: function (data) {
                    $("#PurchaseInvoicesView_body").html(data);
                    $("#PurchaseInvoicesView_modal").modal("show");
                },
                error: function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    $("#spinner2").hide();
                }
            });

        };
        //#endregion

        //#region Purchase Payment Detail View
        var ViewPaymentDetail = function () {

            $("#spinner2").show();
            var empId = "";

            if ("@emp_designation.ToString()" === "Super Administrator") {
                empId = 0;
            }
            else {
                empId = @empId.ToString();
            }

            var _data = {
                "empId": empId,
                "branch": $('#select_branch').val().toString(),
                "from_date": $('#select_date_from').val(),
                "to_date": $('#select_date_to').val()
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetPurchasePaymentDetails", "Dashboard", new { area = "MaterialManagement" })",
                contentType: "application/json",
                dataType: "html",
                data: _data,
                success: function (data) {
                    $("#PurchaseInvoicesView_body").html(data);
                    $("#PurchaseInvoicesView_modal").modal("show");
                },
                error: function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    $("#spinner2").hide();
                }
            });

        };
        //#endregion

        //#region Advance Payments Detail View
        var ViewAdvancePayments = function () {

            $("#spinner2").show();
            var empId = "";

            if ("@emp_designation.ToString()" === "Super Administrator") {
                empId = 0;
            }
            else {
                empId = @empId.ToString();
            }

            var _data = {
                "empId": empId,
                "branch": $('#select_branch').val().toString(),
                "from_date": $('#select_date_from').val(),
                "to_date": $('#select_date_to').val()
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAdvancePaymentDetails", "Dashboard", new { area = "MaterialManagement" })",
                contentType: "application/json",
                dataType: "html",
                data: _data,
                success: function (data) {
                    $("#PurchaseInvoicesView_body").html(data);
                    $("#PurchaseInvoicesView_modal").modal("show");
                },
                error: function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    $("#spinner2").hide();
                }
            });

        };
        //#endregion

        //var callChartFunction0 = function (count, total) {
        //    debugger;
        //    var _data = [];
        //    var avg = ((count * 100) / total).toFixed(2);
        //    var options8 = {
        //        series: [avg],
        //        chart: {
        //            height: 200,
        //            type: 'radialBar',
        //        },
        //        plotOptions: {
        //            radialBar: {
        //                hollow: {
        //                    size: '70%', // Set size dynamically based on avg
        //                }
        //            },
        //        },
        //        labels: ['Sales'],
        //        colors: ['#4454c3'],
        //        responsive: [{
        //            options: {
        //                legend: {
        //                    show: false,
        //                }
        //            }
        //        }]
        //    };
        //    var chart8 = new ApexCharts(document.querySelector("#chart8"), options8);
        //    chart8.render();
        //}

        //var callChartFunction3 = function (count, total) {
        //    var _data = [];
        //    var avg = ((count * 100) / total).toFixed(2);
        //    var options10 = {
        //        series: [avg],
        //        chart: {
        //            height: 200,
        //            type: 'radialBar',
        //        },
        //        plotOptions: {
        //            radialBar: {
        //                hollow: {
        //                    size: '70%',
        //                }
        //            },
        //        },
        //        labels: ['Sales'],
        //        colors: ['#4454c3'],
        //        responsive: [{
        //            options: {
        //                legend: {
        //                    show: false,
        //                }
        //            }
        //        }]
        //    };
        //    var chart10 = new ApexCharts(document.querySelector("#chart10"), options10);
        //    chart10.render();
        //}

    </script>
}
