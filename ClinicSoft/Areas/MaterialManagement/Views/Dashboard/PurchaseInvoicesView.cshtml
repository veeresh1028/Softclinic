@model  BusinessEntities.Accounts.MaterialManagement.PurchaseInvoiceList

<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold" id="exampleModalLongTitle">Purchase Invoices Detail For <span class="text-azure">@Model.branch_name</span> <span class="text-cyan">[ From : @Model.from_date - From : @Model.to_date]</span></h5>
    <button aria-label="Close" data-bs-dismiss="modal" class="btn-close" type="button"><span aria-hidden="true">×</span></button>
</div>
<div class="modal-body p-4">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div id="progress-loader" style="display:none;">
            <div class="progress progress-sm mb-3">
                <div class="progress-bar progress-bar-striped progress-bar-animated bg-teal progress-bar-indeterminate"></div>
            </div>
        </div>
        <div class="table-responsive">
            <table id="tbl_purchaseinvoices_view" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                <thead>
                    <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                        <th class="border-bottom-0 font-weight-semibold text-white text-center"></th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Branch</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Invoice No</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Date</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Order No</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Supplier NO</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Supplier</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Total</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Disc</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Net</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">VAT</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Net + VAT</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Paid</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Balance</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Status</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Posted</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th class="table_footer_align"><span class="text-right text-dark"> Total : &nbsp;</span></th>
                        <th class="table_footer_align"></th>
                        <th class="table_footer_align"></th>
                        <th class="table_footer_align"></th>
                        <th class="table_footer_align"></th>
                        <th class="table_footer_align"></th>
                        <th class="table_footer_align"></th>
                        <th class="table_footer_align"></th>
                        <th></th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>

<script>

    $(function () {
       var pinv_detail = @Html.Raw(Json.Encode(Model.purchaseInvoiceList));
        BindPurchaseInvoices(pinv_detail);
    });

    //#region Bind Datatable
    var BindPurchaseInvoices = function (response) {

        var table = $("#tbl_purchaseinvoices_view").DataTable({
            fixedHeader: {
                header: true,
                footer: true
            },
            processing: true,
            "deferRender": true,
            "pageLength": 100,
            "retrieve": true,
            lengthChange: true,
            scrollX: true,
            scrollY: 500,
            scrollCollapse: true,
            "aaData": response,
            "aoColumns": [
                {
                    className: 'dt-control',
                    orderable: false,
                    data: null,
                    defaultContent: '<span class="fs-15 text-success font-weight-bold spn-control"><i class="fa fa-plus-circle"></i></span>'
                },
                {
                    "className": "td_max_width",
                    "mData": "branch_name"
                },
                {
                    "mData": "pinv_icode",
                },
                {
                    "mData": "pinv_idate",
                },
                {
                    "mData": "pinv_pocode",
                    "className": "font-weight-bold text-info",
                    "render": function (data, type, full, meta) {
                        return '<a data-bs-toggle="modal" data-bs-target="#PurchaseHistory_modal" onclick="PurchaseHistory(\'' + full.pinv_pocode + '\',\'' + full.pinv_branch + '\')">' + data + '</a>';
                    }
                },
                {
                    "mData": "pinv_invno",
                },
                {
                    "className": "td_max_width",
                    "mData": "supplier_name",
                    "className": "font-weight-bold text-info",
                    "render": function (data, type, full, meta) {
                        return '<a data-bs-toggle="modal" data-bs-target="#SupplierHistory_modal" onclick="SupplierHistory(\'' + full.pinv_supplier + '\',\'' + full.pinv_branch + '\')">' + data + '</a>';
                    }
                },
                {
                    "mData": "pinv_total",
                    "searchable": false,
                    "orderable": false,
                },
                {
                    "mData": "pinv_disc_value",
                    "searchable": false,
                    "orderable": false,
                },
                {
                    "mData": "pinv_net",
                    "searchable": false,
                    "orderable": false,
                    "className": "text-info text-right fs-14"
                },
                {
                    "mData": "pinv_vat",
                    "searchable": false,
                    "orderable": false,
                    "visible": false,
                },
                {
                    "mData": "pinv_net",
                    "searchable": false,
                    "orderable": false,
                    "visible": false,
                    "render": function (pinv_vat, type, full, meta) {
                        return '<span>' + parseFloat(parseFloat(full.pinv_net) + parseFloat(full.pinv_vat)).toFixed(2) + '</span>'
                    }
                },
                {
                    "mData": "pinv_paid",
                    "searchable": false,
                    "orderable": false,
                    "visible": false,
                },
                {
                    "mData": "pinv_balance",
                    "searchable": false,
                    "orderable": false,
                    "visible": false,
                },
                {
                    "mData": "pinvId",
                    "className": "td_status_width",
                    "render": function (pinvId, type, full, meta) {
                        var visible = full.actionvisible;
                        var pr_status = full.pinv_status;
                        if (pr_status === "Unpaid") {
                            return '<i class="dot-label bg-success me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-success">Unpaid</span>'
                        }
                        else if (pr_status === "Deleted") {
                            return '<i class="dot-label bg-danger me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-danger">Deleted</span>'
                        }
                        else if (pr_status === "Paid") {
                            return '<i class="dot-label bg-indigo me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-indigo">Paid</span>'
                        }
                        else if (pr_status === "Partly Paid") {
                            return '<i class="dot-label bg-info me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-info">Partly Paid</span>'
                        }
                        else {
                            return '<i class="dot-label bg-primary me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-primary">' + pr_status + '</span>'
                        }
                    }
                },
                {
                    "mData": "pinv_status2",
                    "className": "td_status_width",
                    "render": function (pinvId, type, full, meta) {
                        var visible = full.actionvisible;
                        var pr_status = full.pinv_status2;
                        if (pr_status === "Posted") {
                            return '<i class="dot-label bg-success me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-success">Posted</span>'
                        }
                        else if (pr_status === "Pending") {
                            return '<i class="dot-label bg-warning me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-warning">Pending</span>'
                        }
                        else if (pr_status === "Deleted") {
                            return '<i class="dot-label bg-danger me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-danger">Deleted</span>'
                        }
                        else if (pr_status === "Verified") {
                            return '<i class="dot-label bg-teal me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-teal">Verified</span>'
                        }
                        else {
                            return '<i class="dot-label bg-primary me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-primary">' + pr_status + '</span>'
                        }
                    }
                }                
            ],
            "aoColumnDefs": [
                {
                    "aTargets": [5],
                    "orderable": false,
                    "searchable": false,
                    "visible": false
                },
                {
                    "aTargets": [7],
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "aTargets": [8],
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "aTargets": [9],
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "aTargets": [10],
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "aTargets": [11],
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "aTargets": [12],
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "aTargets": [13],
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
            ],
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },
            order: [[2, 'desc']],
            buttons: [
                {
                    extend: 'excel',
                    title: 'Purchase Invoice Detail',
                    footer: 'true',
                    exportOptions: {
                        columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Purchase Invoice Detail',
                    footer: 'true',
                    exportOptions: {
                        columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
                    }
                },
                {
                    extend: 'csv',
                    title: 'Purchase Invoice Detail',
                    footer: 'true',
                    exportOptions: {
                        columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
                    }
                },
                {
                    extend: 'print',
                    title: 'Purchase Invoice Detail',
                    footer: 'true',
                    exportOptions: {
                        columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
                    }
                }
            ],
            language: {
                searchPlaceholder: 'Search...',
                zeroRecords: "No Record Match - Sorry",
                sSearch: '<span class="text-primary font-weight-semi-bold">Search By Code / Date / Supplier / Branch / Status </span>',
                sEmptyTable: '<span class="text-secondary">No Records Available Based On Request</span>',
                scrollX: "100%",
                lengthMenu: '_MENU_',
            },            
            footerCallback: function (row, data, start, end, display) {
                var api = this.api();

                // Remove the formatting to get integer data for summation
                var intVal = function (i) {
                    return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                };
                var numFormat = $.fn.dataTable.render.number('\,', '.', 2, '').display;

                // Total Balance Amount
                total_balance = api.column(14).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(14).footer()).html(numFormat(total_balance));

                // Total Amount
                _total = api.column(8).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(8).footer()).html(numFormat(_total));

                // Total Discount
                total_discount = api.column(9).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(9).footer()).html(numFormat(total_discount));

                // Total Net Amount
                total_net = api.column(10).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(10).footer()).html(numFormat(total_net));

                // Total VAT Amount
                total_vat = api.column(11).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(11).footer()).html(numFormat(total_vat));

                // Total NETVAT Amount
                total_netvat = api.column(12).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(12).footer()).html(numFormat(total_netvat));

                // Total Paid Amount
                total_paid = api.column(13).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(13).footer()).html(numFormat(total_paid));

            }
        });
        table.buttons().container().appendTo('#tbl_purchaseinvoices_view_wrapper .col-md-6:eq(0)');

        // Add event listener for opening and closing details
        table.on('click', 'td.dt-control', function () {
            var tr = $(this).closest('tr');
            var row = table.row(tr);
            var _span = tr.find('.spn-control');
            if (row.child.isShown()) {
                $(_span).removeClass('text-danger');
                $(_span).addClass('text-success');
                $(_span).html('<i class="fa fa-plus-circle"></i>');
                row.child.hide();
                tr.removeClass('shown');

                localStorage.removeItem("patId");
                localStorage.removeItem("pat_info");
            } else {

                $(_span).removeClass('text-success');
                $(_span).addClass('text-danger');
                $(_span).html('<i class="fa fa-minus-circle"></i>');

                var _data = table.row(this).data();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetPurchaseInvoiceItems", "PurchaseInvoice", new { area = "MaterialManagement" })?pinvId=' + _data.pinvId,
                    contentType: "application/json",
                    dataType: "html",
                    success: function (response) {
                        row.child(response).show();
                        tr.addClass('shown');
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });

            }
        });

        resizedt_name('tbl_purchaseinvoices_view');
    }
    //#endregion Bind Datatable
</script>