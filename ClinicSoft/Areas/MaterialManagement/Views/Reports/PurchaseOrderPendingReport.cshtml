@using System.Security.Claims;
@{
    ViewBag.Title = "Accounts & Material Management - Purchase Orders";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var emp_branch = claims.Where(c => c.Type == ClaimTypes.GroupSid).Select(c => c.Value).SingleOrDefault();
}
<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary">Pending Purchase Orders Report</h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list btn-animation">            
            <button class="btn btn-outline-primary mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#searchFilter" aria-expanded="false" aria-controls="collapseExample">
                <i class="fa fa-filter"></i> Advanced Filters
            </button>           
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card mb-0">
            <div class="collapse" id="searchFilter">
                <div class="card-body">                   
                    <div class="row">
                        <div class="col-sm-12 col-md-6 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Branch</label>
                                @Html.DropDownList("select_branch", (IEnumerable<SelectListItem>)ViewData["BranchList"], "Any Branch", new { @class = "form-select select2" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Supplier</label>
                                <select id="select_supplier" class="form-control mb-4" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Order Code</label>
                                <input class="form-control" placeholder="Enter Purchase Order Code" id="text_code" autocomplete="off" />
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Order From</label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_from" class="form-control" placeholder="DD-MM-YYYY" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Order To</label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_to" class="form-control" placeholder="DD-MM-YYYY" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-sm-12 col-md-6 col-lg-2">
                                <div class="form-group mb-2">
                                    <label class="form-label font-weight-semibold">&nbsp;</label>
                                    <button class="btn btn-primary mb-2" type="button" id="btnSearch">
                                        <i class="fa fa-search-plus"></i> Search
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                <strong>Error!&nbsp;</strong>@TempData["ErrorMessage"]
            </div>
        </div>
    }
    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="PurchaseOrderAlert"></div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-status bg-blue"></div>
            <div class="card-body">

                <div id="progress-loader" style="display:none;">
                    <div class="progress progress-sm mb-3">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-teal progress-bar-indeterminate"></div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tbl_purchaseorder" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                <th class="border-bottom-0 font-weight-semibold text-white text-center"></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Branch</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Order No</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Date</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Supplier</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Total</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Disc</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Net</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">VAT Amount</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Status</th>                                
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th class="table_footer_align"><span class="text-right text-dark"> Total : &nbsp;</span></th>
                                <th class="table_footer_align"></th>
                                <th class="table_footer_align"></th>
                                <th class="table_footer_align"></th>
                                <th class="table_footer_align"></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section myScripts{
    <style>
        .modal-lg {
            max-width: 1500px;
        }

        @@media (min-width: 1124px) {
            .dataTables_scrollHeadInner, .table {
                width: 100% !important
            }
        }
    </style>

    <script>
        //#region Page Load
        $(function () {
            $('#select_date_from').keypress(function (e) {
                var charCode = (e.which) ? e.which : event.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });

            $('#select_date_to').keypress(function (e) {
                var charCode = (e.which) ? e.which : event.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });
            $('#select_branch').select2({
                minimumResultsForSearch: '',
                placeholder: 'Any Branch',
                width: '100%'
            });
            $('#choose_action').select2({
                minimumResultsForSearch: '',
                placeholder: 'Choose Any Action',
                width: '100%'
            });
            $('#select_date_from').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });

            $('#select_date_to').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });

            $("#select_date_to").bootstrapdatepicker("setDate", "tomorrow");
            $("#select_date_from").bootstrapdatepicker("setDate", "today");

            $('#select_supplier').SumoSelect({
                placeholder: 'Any Suppliers',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Enter here.',
                selectAll: true
            });
            var today_date = moment(new Date()).format('MM/DD/YYYY');
            $('#select_branch').val("@emp_branch.ToString()").trigger("change").trigger('select2:select');
            GetPurchaseOrders(today_date, today_date);
            // Focus on select2 Dropdown
            $(document).on('select2:open', () => {
                document.querySelector('.select2-search__field').focus();
            });
        });
        //#endregion

        //#region load Suppliers Detail
        $('#select_branch').on('select2:select', function (e) {
            $('#select_supplier').html('');
            $('#select_supplier')[0].sumo.reload();
            var branchId = $('#select_branch').val();
            if (branchId.length > 0) {
                $.ajax({
                    url: '@Url.Action("GetSupplierByBranches", "PurchaseOrders", new { area = "MaterialManagement" })?branchId=' + branchId,
                    type: "GET",
                    dataType: "json",
                    async: false,
                    success: function (response) {
                        $.each(response, function (j) {
                            $('#select_supplier')[0].sumo.add(response[j].Value, response[j].Text);
                        });
                    },
                    error: function (xhr) {
                        console.log(xhr);
                        alert(xhr);
                    }
                });
            }

        });
        //#endregion 

        //#region Filter on Button Click
        $("#btnSearch").click(function (e) {
            e.preventDefault();
            let isValid = true;
            var from_date = moment($('#select_date_from').val().trim(), "DD-MMMM-YYYY");
            var to_date = moment($('#select_date_to').val().trim(), "DD-MMMM-YYYY");
            // Check if Date From is a valid Date
            if (from_date != null && from_date != 0 && from_date != "" && from_date != undefined) {
                if (!from_date.isValid()) {
                    isValid = false;
                    e.stopPropagation();
                    return $.growl.error({
                        title: "Error",
                        message: "Invalid From Date!"
                    });
                }
            }
            // Check if Date To is a valid Date
            if (to_date != null && to_date != 0 && to_date != "" && to_date != undefined) {
                if (!to_date.isValid()) {
                    isValid = false;
                    e.stopPropagation();
                    return $.growl.error({
                        title: "Error",
                        message: "Invalid To Date!"
                    });
                }
            }
            if ((from_date != null && from_date != 0 && from_date != "" && from_date != undefined) && (to_date != null && to_date != 0 && to_date != "" && to_date != undefined)) {
                if (from_date.isValid() && to_date.isValid()) {
                    if (to_date.diff(from_date, 'days') < 0) {
                        isValid = false;
                        var index = [];
                        index.push("select_date_from_app");
                        index.push("select_date_to_app");

                        $.each(index, function (i, v) {
                            if (index[i] != null && index[i] != "") {
                                var elem = $("#" + index[i]);
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                }
                                else {
                                    $(elem).addClass(" is-invalid");
                                }

                                setTimeout(function () {
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                    }
                                    else {
                                        $(elem).removeClass("is-invalid");
                                    }
                                }, 5000);
                            }
                        });

                        e.stopPropagation();

                        return $.growl.error({
                            title: "Error!",
                            message: "Filter From Date should be less than To Date!"
                        });
                    }
                }
            }
            if (isValid) {
                search_PO();
            }
        });
        //#endregion

        //#region Load Items
        function GetPurchaseOrders(fromdate, todate) {
            var _data = {
                "purid" : 0,
                "pur_branch": $('#select_branch').val().toString(),
                "pur_ocode": $('#text_code').val().trim(),
                "from_date": fromdate,
                "to_date": todate,
                "pur_omadeby": 0,
                "pur_type": '',
                "pur_supplier": $('#select_supplier').val().toString()
            }
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetPurchaseOrders", "Reports", new { area = "MaterialManagement"})",
                dataType: 'json',
                data: _data,
                beforeSend: function () {
                    $('#progress-loader').show();
                },
                success: function (response) {
                    $('#searchFilter').collapse('hide');
                    if (response.isAuthorized != false) {
                        var table;
                        if ($.fn.dataTable.isDataTable('#tbl_purchaseorder')) {
                           table = $('#tbl_purchaseorder').DataTable();
                           table.clear();
                           table.rows.add(response).draw();
                        }
                        else {
                            BindDataTable(response);
                        }
                    }
                    $('#progress-loader').hide();
                },
                error: function (xhr) {
                    console.log(xhr);
                    $('#progress-loader').hide();
                    $('#RowsCountToast').hide();
                }
            });
        }
        //#endregion

        //#region Bind Datatable
        var BindDataTable = function (response) {
            var table = $("#tbl_purchaseorder").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                "aaData": response,
                "aoColumns": [
                    {
                        className: 'dt-control  pt-4',
                        orderable: false,
                        data: null,
                        defaultContent: '<span class="fs-15 text-success font-weight-bold spn-control"><i class="fa fa-plus-circle"></i></span>'
                    },
                    {
                        "className": "td_max_width",
                        "mData": "branch_name"
                    },
                    {
                        "mData": "pur_ocode"
                    },
                    {
                        "mData": "pur_odate"
                    },
                    {
                        "className": "td_max_width",
                        "mData": "sup_name",
                    },
                    {
                        "mData": "pur_total",
                        "searchable": false,
                        "orderable": false,
                    },
                   {
                        "mData": "pur_disc",
                        "searchable": false,
                        "orderable": false,
                    },
                    {
                        "mData": "pur_net",
                        "searchable": false,
                        "orderable": false,
                    },
                    {
                        "mData": "pur_vat",
                        "searchable": false,
                        "orderable": false,
                    },
                    {
                        "mData": "purId",
                        "className": "td_status_width",
                        "render": function (purId, type, full, meta) {
                            var visible = full.actionvisible;
                            var pur_status = full.pur_status;
                                if (pur_status === "New") {
                                    return '<i class="dot-label bg-success me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-success">New</span>'
                                }
                                else if (pur_status === "Approved") {
                                    return '<i class="dot-label bg-warning me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-warning">Approved</span>'
                                }
                                else if (pur_status === "Deleted") {
                                    return '<i class="dot-label bg-danger me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-danger">Deleted</span>'
                                }
                                else if (pur_status === "Invoiced") {
                                    return '<i class="dot-label bg-teal me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-teal">Invoiced</span>'
                                }
                                else if (pur_status === "Delivered") {
                                    return '<i class="dot-label bg-secondary me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-secondary">Delivered</span>'
                                }
                                else if (pur_status === "Partly Delivered") {
                                    return '<i class="dot-label bg-info me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-info">Partly Delivered</span>'
                                }
                                else if (pur_status === "Paid") {
                                    return '<i class="dot-label bg-indigo me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-indigo">Paid</span>'
                                }
                                else if (pur_status === "Partly Paid") {
                                    return '<i class="dot-label bg-info me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-info">Partly Paid</span>'
                                }
                                else {
                                    return '<i class="dot-label bg-primary me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-primary">' + pur_status +'</span>'
                                }
                        }
                    },
                ],
                "aoColumnDefs": [
                    {
                        "aTargets": [5],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [6],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [7],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [8],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                ],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                order:[[3, 'desc']],
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Pending Purchase Orders Report',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9]
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Pending Purchase Orders Report',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9]
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Pending Purchase Orders Report',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9]
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Pending Purchase Orders Report',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9]
                        }
                    }
                ],
                language: {
                    searchPlaceholder: 'Search...',
                    zeroRecords: "No Record Match - Sorry",
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Code / Date / Supplier / Branch </span>',
                    sEmptyTable: '<span class="text-secondary">No Records Available Based On Request</span>',
                    scrollX: "100%",
                    lengthMenu: '_MENU_',
                },
                "drawCallback": function () {
                    $("#tbl_purchaseorder tr").each(function () {
                        if ($(this).find("td:eq(10)").text().trim() != "New" && $(this).find("td:eq(10)").text().trim() != "Approved") {
                            $($(this)).find("td:eq(0)").find("input[type='checkbox']").remove();
                        }

                    });
                },
                footerCallback: function (row, data, start, end, display) {
                    var api = this.api();

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                    };
                    var numFormat = $.fn.dataTable.render.number('\,', '.', 2, '').display;

                    // Total Amount
                    total_grn_purchase = api.column(5).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(5).footer()).html(numFormat(total_grn_purchase));

                    // Total Discount
                    total_d_purchase = api.column(6).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(6).footer()).html(numFormat(total_d_purchase));

                    // Total Net Amount
                    total_payment = api.column(7).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(7).footer()).html(numFormat(total_payment));

                    // Total VAT Amount
                    total_balance = api.column(8).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(8).footer()).html(numFormat(total_balance));

                }
            });
            table.buttons().container().appendTo('#tbl_purchaseorder_wrapper .col-md-6:eq(0)');

            // Add event listener for opening and closing details
            table.on('click', 'td.dt-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);
                var _span = tr.find('.spn-control');
                if (row.child.isShown()) {
                    $(_span).removeClass('text-danger');
                    $(_span).addClass('text-success');
                    $(_span).html('<i class="fa fa-plus-circle"></i>');
                    row.child.hide();
                    tr.removeClass('shown');

                    localStorage.removeItem("patId");
                    localStorage.removeItem("pat_info");
                } else {

                    $(_span).removeClass('text-success');
                    $(_span).addClass('text-danger');
                    $(_span).html('<i class="fa fa-minus-circle"></i>');

                    var _data = table.row(this).data();
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("GetChildTableItems", "PurchaseOrders", new { area = "MaterialManagement" })?purId=' + _data.purId,
                        contentType: "application/json",
                        dataType: "html",
                        success: function (response) {
                            row.child(response).show();
                            tr.addClass('shown');
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });

                }
            });
        }
        //#endregion Bind Datatable

        //#region Search Purchase Order Conditions
        var search_PO = function ()
        {
            var from_date = $('#select_date_from').val().trim();
            var to_date = $('#select_date_to').val().trim();
            GetPurchaseOrders(from_date, to_date)
        }
        //#endregion

        //#region Alert Timeout
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
        //#endregion Alert Timeout

    </script>
}
