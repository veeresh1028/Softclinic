@model List<BusinessEntities.Accounts.MaterialManagement.MultiPaymentInvoices>

<div class="modal-body p-0">
    <div class="row row-deck">
        <div class="col-md-12 col-sm-12 col-lg-12 col-xl-12">
            <div class="card">
                <div class="card-header p-0">
                    <h3 class="card-title">
                        @Model.Count.ToString("D2") Invoice(s) Selected
                    </h3>
                    <div class="card-options">
                        <a href="javascript:void(0);" class="btn btn-sm btn-primary me-2">Total : AED @Model.Sum(m => m.pinv_netvat).ToString("N2")</a>
                        <a href="javascript:void(0);" class="btn btn-sm btn-danger">O/S : AED @Model.Sum(m => m.outstanding).ToString("N2")</a>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive" style="min-height:50px;">
                        <table class="table table-hover card-table table-vcenter text-nowrap">
                            <thead class="border-bottom-0 pt-3 pb-3">
                                <tr>
                                    <th class="text-center">S.No</th>
                                    <th>Invoice No</th>
                                    <th>Date</th>
                                    <th class="text-end">Net</th>
                                    <th class="text-end">Paid</th>
                                    <th class="text-end">Outstanding</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int count = 0;
                                    foreach (BusinessEntities.Accounts.MaterialManagement.MultiPaymentInvoices m in Model)
                                    {
                                        decimal paid = m.pinv_netvat - m.outstanding;
                                        count++;
                                        <tr>
                                            <td class="text-center">@count.ToString("D2")</td>
                                            <td><span class="font-weight-normal1">@m.pinv_icode</span></td>
                                            <td class="text-muted">@m.pinv_idate</td>
                                            <td class="fs-13 text-info text-end">@m.pinv_netvat.ToString("N2")</td>
                                            <td class="fs-13 text-success text-end">@paid.ToString("N2")</td>
                                            <td class="fs-13 text-danger text-end">@m.outstanding.ToString("N2")</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                @if (Model.Count > 0)
                {
                    <div class="card-footer">
                        <button type="button" class="btn btn-outline-info me-2" id="proceed_multi_payments"><i class="fe fe-shopping-cart"></i>&nbsp; Proceed to Payment</button>
                        <button type="button" class="btn btn-outline-danger me-2" id="reset_multi_payments"><i class="fe fe-refresh-cw"></i>&nbsp; Reset Invoice</button>
                    </div>
                }
            </div>

        </div>
    </div>

    <div class="row" id="divMultiPayOptions">
        <form id="form_multi_receipt_pay" >
            <div class="">

                <div class="row">
                    <div class="col-sm-12 col-md-12 col-lg-12 mb-4 font-weight-semibold">
                        <span class="text-secondary" style="font-size:smaller">Required atleat one payment mode *</span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12 col-md-6 col-lg-2">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Cash</span>&nbsp;<span class="text-secondary">*</span></label>
                            <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" maxlength="12" id="pay_cash" name="pay_cash" oninput="validate(this, 1000000)">
                        </div>
                    </div>

                    <div class="col-sm-12 col-md-6 col-lg-2">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Credit Card</span>&nbsp;<span class="text-secondary">*</span></label>
                            <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" maxlength="12" id="pay_cc" name="pay_cc" oninput="validate(this,1000000)">
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-2">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Chrg. (%)</span></label>
                            <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" maxlength="5" id="pay_cc_per" name="pay_cc_per" oninput="validate(this,99)">
                        </div>
                    </div>

                    <div class="col-sm-12 col-md-6 col-lg-2" id="divCq">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Cheque Amt. </span>&nbsp;<span class="text-secondary">*</span></label>
                            <input class="form-control font-weight-semibold" placeholder="" type="text" value="0.00" maxlength="12" id="pay_chq" name="pay_chq" oninput="validate(this,1000000)">
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3" id="divCqNo">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Cheque No. </span></label>
                            <input class="form-control font-weight-semibold" placeholder="Eg:123456" type="text" id="pay_chq_no" maxlength="15" name="pay_chq_no">
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3" id="divCqBank">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Bank Name </span></label>
                            <input class="form-control font-weight-semibold" placeholder="Eg:ADCB" type="text" maxlength="49" id="pay_chq_bank" name="pay_chq_bank">
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3" id="divCqDate">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Cheque Date </span></label>
                            <input type="text" id="pay_chq_date" class="form-control font-weight-semibold" maxlength="18" placeholder="Ex:DD-MMMM-YYYY" />
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-2" id="divBT">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Bank Transfer </span>&nbsp;<span class="text-secondary">*</span></label>
                            <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" maxlength="12" id="pay_bt" name="pay_bt" oninput="validate(this,1000000)">
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3" id="divBT_Bank">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Bank Name </span></label>
                            <select class="form-select select2" id="pay_bt_bank"></select>
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3" id="divAdv">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Advance </span>&nbsp;<span class="text-secondary">*</span></label>
                            <select class="form-select select2" id="pay_advance"></select>
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-2" id="divAdvName">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Allocated </span></label>
                            <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" id="pay_allocated" name="pay_allocated" oninput="validate(this,0)">
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-12 col-sm-12 col-md-12">
                        <textarea id="pay_notes" name="pay_notes" class="form-control" rows="5" placeholder="Enter Payment Notes..."></textarea>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
                        <div class="form-group">
                            <div id="error"></div>
                        </div>
                        <div class="form-group">
                            <label class="form-label mt-1">&nbsp;<span class="text-danger" id="error_receipts"></span></label>
                        </div>
                    </div>
                </div>

                <div class="float-end mb-4">
                    <button type="button" class="btn btn-primary me-2" id="pay_receipts"><i class="si si-wallet"></i> Pay Receipt</button>
                    <button type="button" class="btn btn-outline-dark me-2" id="reset_receipts"><i class="fe fe-x"></i> Reset</button>

                </div>
            </div>
        </form>
    </div>
</div>



<script type="text/javascript">
//#region Load Event
    $(function () {
        $("#divMultiPayOptions").hide();
        $('#reset_multi_payments').hide();

        $('#pay_chq_date').bootstrapdatepicker({
            format: "dd-MM-yyyy",
            viewMode: "date",
            todayHighlight: true,
            autoclose: true,
            multidate: false,
            multidateSeparator: "-"
        });

        $("#pay_chq_date").bootstrapdatepicker("setDate", 'today');

        $("#pay_bt_bank").select2({
            placeholder: 'Select Bank',
            width: '100%',
            dropdownParent: $('#form_multi_receipt_pay')
        });

        $("#pay_advance").select2({
            placeholder: 'Select Advance',
            width: '100%',
            dropdownParent: $('#form_multi_receipt_pay')
        });
        load_banks();
        load_advances();
        receipt_validation();
    });
//#endregion Load Event

$('#proceed_multi_payments').on('click', function (e) {
    $(".chkbox").prop('disabled', true);
    $(".chkbox-inner").removeClass('bg-lime');
    $(".chkbox-inner").addClass('bg-gray');

    $("#divMultiPayOptions").show();
    $('#reset_multi_payments').show();
    $('#proceed_multi_payments').hide();
});

$('#reset_multi_payments').on('click', function (e) {
    $(".chkbox").prop('disabled', false);
    temp_arr = [];
    $(".chkbox").prop('checked', false);
    $(".chkbox-inner").addClass('bg-lime');
    $(".chkbox-inner").removeClass('bg-gray');
    $("#pinv_tab_content").html('');
});


//Load Banks
var load_banks = function () {
    $.ajax({
        url: '@Url.Action("BankNamesForBankTransfers", "Receipt", new { area = "Invoice" })',
        type: "GET",
        dataType: "JSON",
        async: false,
        success: function (response) {
            $('#pay_bt_bank').empty();
            var _data = response;
            if (_data.length > 0) {
                var optNone = new Option("Select Any", "0", false, false);
                $('#pay_bt_bank').append(optNone).trigger('change');

                $.each(response, function (j) {
                    var label = response[j]["acc_code"] + " | " + response[j]["acc_name"] + " | " + response[j]["acc_cbal"];
                    var newOption = new Option(label, response[j]["acc_code"],  false, false);
                    $('#pay_bt_bank').append(newOption).trigger('change');
                });

                $('#pay_bt_bank').val("0").trigger('change');
            }
        },
        error: function (xhr) {
            console.log("Failed! Error Message : " + xhr.statusText);
        }
    })
}

//Load Receipt Advance
var load_advances = function () {
    $.ajax({
        url: '@Url.Action("AdvancePaymentsBySupllier", "PaymentAgainstInvoices", new { area = "MaterialManagement" })?pay_supplier=' + @Model[0].pay_supplier,
        type: "GET",
        dataType: "JSON",
        async: false,
        success: function (response) {
            $('#pay_advance').empty();
            var _data = response;
            if (_data.length > 0) {
                $.each(response, function (j) {
                    var label = response[j]["pay_code"] + " | " + response[j]["pay_date"] + " | " + response[j]["pay_advance"];
                    var newOption = new Option(label, response[j]["payId"],  false, false);
                    $('#pay_advance').append(newOption).trigger('change');
                });

                $('#pay_advance').val(0).trigger('change');
            }
        },
        error: function (xhr) {
            console.log("Failed! Error Message : " + xhr.statusText);
        }
    })
}


    //Receipt Validation
    var receipt_validation = function () {
        $('#pay_cash').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#pay_cc').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#pay_cc_per').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#pay_chq').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#pay_bt').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#pay_allocated').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });
    }

    //Bank Transfer Bank Change Event
    $('#pay_bt_bank').on('select2:select', function (e) {
        calculation_receipts();
    });

    //Advance Receipt Change Event
    $('#pay_advance').on('select2:select', function (e) {
        calculation_receipts();
    });

//Calculation for Receipts
    var calculation_receipts = function () {
        $("#error_receipts").html("");
    var error = 0;

    var _cash = $("#pay_cash").val();
    var _cc = $("#pay_cc").val();
    var _cc_per = $("#pay_cc_per").val();
    var _chq = $("#pay_chq").val();
    var _bt = $("#pay_bt").val();
    var _allocated = $("#pay_allocated").val();


    //Advance Allocated
    if (($("#pay_advance").val() != null) &&
        ($("#pay_advance").val() != undefined) &&
        ($("#pay_advance").val() != "") && ($("#pay_advance").val() != NaN)) {
        var selected_text = $("#pay_advance option:selected").text();
        var value_arr = selected_text.split("|");
        var amount = value_arr[2].trim().replace(" ", "");

        if (!(parseFloat(amount) >= parseFloat(_allocated))) {
            error++;
            $("#error_receipts").html("Allocated Amount Should be less than or equal to " + amount);
            $("#pay_advance").attr("style", "border:1px solid red;color:red;");
            $("#pay_allocated").attr("style", "border:1px solid red;color:red;");
        }
        else {
            $("#error_receipts").html("");
            $("#pay_advance").attr("style", "border:1px solid #ecebf1;color:#728096;");
            $("#pay_allocated").attr("style", "border:1px solid #ecebf1;color:#728096;");
        }
    }


    //Cheque
    if (parseFloat(_chq) > 0) {
        if (!(($("#pay_chq_no").val() != null) &&
            ($("#pay_chq_no").val() != undefined) && ($("#pay_chq_no").val() != "") &&
            ($("#pay_chq_no").val() != NaN))) {
            error++;
            $("#error_receipts").html("Cheque No is Required ");
            $("#pay_chq_no").attr("style", "border:1px solid red;color:red;");
        }
        else {
            $("#error_receipts").html("");
            $("#pay_chq_no").attr("style", "border:1px solid #ecebf1;color:#728096;");
        }

        if (!(($("#pay_chq_date").val() != null) &&
            ($("#pay_chq_date").val() != undefined) &&
            ($("#pay_chq_date").val() != "") && ($("#pay_chq_date").val() != NaN))) {
            error++;
            $("#error_receipts").html("Cheque Date is Required ");
            $("#pay_chq_date").attr("style", "border:1px solid red;color:red;");
        }
        else {
            $("#error_receipts").html("");
            $("#pay_chq_date").attr("style", "border:1px solid #ecebf1;color:#728096;");
        }

        if (!(($("#pay_chq_bank").val() != null) &&
            ($("#pay_chq_bank").val() != undefined) &&
            ($("#pay_chq_bank").val() != "") && ($("#pay_chq_bank").val() != NaN))) {
            error++;
            $("#error_receipts").html("Bank Name is Required ");
            $("#pay_chq_bank").attr("style", "border:1px solid red;color:red;");
        }
        else {
            $("#error_receipts").html("");
            $("#pay_chq_bank").attr("style", "border:1px solid #ecebf1;color:#728096;");
        }
    }

    //Bank Transfer
    if (parseFloat(_bt) > 0) {
        if (($("#pay_bt_bank").val() != null) &&
            ($("#pay_bt_bank").val() != undefined) &&
            ($("#pay_bt_bank").val() != "") &&
            ($("#pay_bt_bank").val() != NaN)) {
            $("#error_receipts").html("");
            $("#pay_bt_bank").attr("style", "border:1px solid #ecebf1;color:#728096;");

            var selected_text = $("#pay_bt_bank option:selected").text();
            var value_arr = selected_text.split("|");
            var amount = value_arr[2].trim().replace(" ", "");

            if (!(parseFloat(amount) >= parseFloat(_bt))) {
                error++;
                $("#error_receipts").html("Bank Transferred Should be less than or equal to " + amount);
                $("#pay_bt").attr("style", "border:1px solid red;color:red;");
                $("#pay_bt_bank").attr("style", "border:1px solid red;color:red;");
            }
            else {
                $("#error_receipts").html("");
                $("#pay_bt").attr("style", "border:1px solid #ecebf1;color:#728096;");
                $("#pay_bt_bank").attr("style", "border:1px solid #ecebf1;color:#728096;");
            }
        }
        else {
            error++;
            $("#error_receipts").html("Bank Account is Required for Bank Transfers");
            $("#pay_bt_bank").attr("style", "border:1px solid red;color:red;");
        }
    }

    if (error == 0) {
        var pay_total = parseFloat(_cash) + parseFloat(_cc) + parseFloat(_chq) + parseFloat(_bt) + parseFloat(_allocated) ;

        var invTotal = parseFloat(@Model.Sum(m=> m.outstanding));

        if (parseFloat(invTotal) >= parseFloat(pay_total)) {
            $('#pay_receipts').show();
        }
        else {
            $('#pay_receipts').hide();
            $("#error_receipts").html("Payment should be less than invoice outstanding");
        }
    }
    else {
        $('#pay_receipts').hide();
    }
}


//Clear Treatments
var clearReceipts = function () {
    $("#pay_cash").val("0.00");
    $("#pay_cc").val("0.00");
    $("#pay_cc_per").val("0.00");
    $("#pay_chq").val("0.00");
    $("#pay_chq_no").val("");
    $("#pay_chq_bank").val("");
    $("#pay_chq_date").bootstrapdatepicker("setDate", 'today');
    $("#pay_bt").val("0.00");
    $("#pay_bt_bank").val("");
    $("#pay_advance").empty();
    $("#pay_allocated").val("0.00");
    $("#pay_notes").val("");
    $("#pay_receipts").hide();
    $("#error_receipts").html("");
    }

    //#region Validate Max value for Controls
    var validate = function (e, max) {
        var t = e.value;
        var j = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), 3)) : t;
        e.value = (max == 0) ? j : ((j >= max) ? max : j);
    }
    //#endregion Validate Max value for Controls

    //#region Focus In/Out Events
    $("#pay_cash").focusin(function () {
        localStorage.setItem("temp_cash", $(this).val());
    });

    $("#pay_cash").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 0) {
            localStorage.removeItem("temp_cash");
            calculation_receipts();
        }
        else {
            $(this).val(localStorage.getItem("temp_cash"));
            localStorage.removeItem("temp_cash");
        }
    });

    $("#pay_cc").focusin(function () {
        localStorage.setItem("temp_cc", $(this).val());
    });

    $("#pay_cc").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 0) {
            localStorage.removeItem("temp_cc");
            calculation_receipts();
        }
        else {
            $(this).val(localStorage.getItem("temp_cc"));
            localStorage.removeItem("temp_cc");
        }
    });

    $("#pay_cc_per").focusin(function () {
        localStorage.setItem("temp_cc_per", $(this).val());
    });

    $("#pay_cc_per").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 0) {
            localStorage.removeItem("temp_cc_per");
            calculation_receipts();
        }
        else {
            $(this).val(localStorage.getItem("temp_cc_per"));
            localStorage.removeItem("temp_cc_per");
        }
    });

    $("#pay_chq").focusin(function () {
        localStorage.setItem("temp_chq", $(this).val());
    });

    $("#pay_chq").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 0) {
            localStorage.removeItem("temp_chq");
            calculation_receipts();
        }
        else {
            $(this).val(localStorage.getItem("temp_chq"));
            localStorage.removeItem("temp_chq");
        }
    });

    $("#pay_chq_no").focusout(function () {
        calculation_receipts();
    });

    $("#pay_chq_bank").focusout(function () {
        calculation_receipts();
    });

    $("#pay_chq_date").focusout(function () {
        calculation_receipts();
    });

    $("#pay_bt").focusin(function () {
        localStorage.setItem("temp_bt", $(this).val());
    });

    $("#pay_bt").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 0) {
            localStorage.removeItem("temp_bt");
            calculation_receipts();
        }
        else {
            $(this).val(localStorage.getItem("temp_bt"));
            localStorage.removeItem("temp_bt");
        }
    });

    $("#pay_allocated").focusin(function () {
        localStorage.setItem("temp_allocated", $(this).val());
    });

    $("#pay_allocated").focusout(function () {
        if (($("#pay_advance").val() != null) && ($("#pay_advance").val() != undefined) && ($("#pay_advance").val() != "") && ($("#pay_advance").val() != NaN)) {
            var val = parseFloat($(this).val());
            if (val >= 0) {
                localStorage.removeItem("temp_allocated");
                calculation_receipts();
            }
            else {
                $(this).val(localStorage.getItem("temp_allocated"));
                localStorage.removeItem("temp_allocated");
            }
        }
        else {
            $(this).val("0.00");
            localStorage.removeItem("temp_allocated");
        }
    });

//#endregion Focus In/Out Events

    //Alert Timeout
    function timeout() {
        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 4200);
    }

    $('#reset_receipts').on('click', function (e) {
        clearReceipts();
    });

    $('#pay_receipts').on('click', function (e) {
        
        var _payments = {
            "payId": 0,
            "pay_code": "",
            "pay_type": 'Invoice',
            "pay_date": $("#pay_chq_date").val(),
            "pay_supplier": @Model[0].pay_supplier,
            "pay_invoice": @Model[0].pinvId,
            "pay_cash": parseFloat($('#pay_cash').val()),
            "pay_cc": parseFloat($('#pay_cc').val()),
            "pay_cc_per": parseFloat($('#pay_cc_per').val()),
            "pay_chq": parseFloat($('#pay_chq').val()),
            "pay_chq_no": $('#pay_chq_no').val().trim(),
            "pay_chq_date": $('#pay_chq_date').val().trim(),
            "pay_bt": parseFloat($('#pay_bt').val()),
            "pay_chq_bank": $('#pay_chq_bank').val(),
            "pay_bt_bank": $('#pay_bt_bank').val(),
            "pay_advance": $('#pay_advance').val(),
            "pay_allocated": parseFloat($("#pay_allocated").val()),
            "pay_notes": $('#pay_notes').val().trim(),
            "pay_branch": @Model[0].pay_branch,
            "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
        }

        var _multiPaymentsViewModal = {
            "payments": _payments,
            "payinvoices": @Html.Raw(Json.Encode(Model)),
        }

        console.log(_multiPaymentsViewModal)

        $.ajax({
            url: '@Url.Action("GenerateMultiPayments", "PaymentAgainstInvoices", new { area = "MaterialManagement" })',
            type: "POST",
            dataType: "json",
            data: _multiPaymentsViewModal,
            async: false,
            success: function (data) {
                if (data.isSuccess) {
                    e.preventDefault();
                    e.stopPropagation();
                    $.growl.notice({
                        title: "Success",
                        message: data.message
                    });
                    $('#pay_supplier').val(@Model[0].pay_supplier).trigger('change');
                    $('#pay_supplier').trigger({
                        type: 'select2:select'
                    });
                }
                else {
                    let html = "<div class='alert alert-danger alert-dismissible' role='alert'>" +
                        "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='Close' aria-label='Close'>×</button>" +
                        "<strong>Error.. " + data.message + "</strong><br/>" +
                        "</div>";
                    $("#error").html(html);
                    timeout();
                }
            },
            error: function (xhr) {
                console.log(xhr);
                alert(xhr);
            }
        });

    });
</script>

