@model BusinessEntities.Accounts.MaterialManagement.PaymentViewModal
@Html.AntiForgeryToken()
<div class="modal-header py-3 px-4" id="pay_head_div">
    <h5 class="modal-title text-primary font-weight-semibold" id="exampleModalLongTitle">New Purchase Invoice Payment </h5>
    <button type="button" class="btn-close close-modal" data-bs-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body p-4" id="pay_div">
    <div class="row">
        <form id="form_pinv_payment" >
            <div class="">
                <h3 class="card-title">
                    <span class="badge rounded-pill bg-danger mt-2 pull-right" id="spn_outstanding">Outstanding Balance of <strong> &nbsp;@Model.paymentInfo.pinv_icode</strong> is, &nbsp; AED <strong> &nbsp;@Model.paymentInfo.outstanding</strong></span>
                </h3>
                <div class="row">
                    <div class="col-sm-12 col-md-12 col-lg-12 mb-4 font-weight-semibold">
                        <span class="text-secondary" style="font-size:smaller">Required atleat one payment mode *</span>
                    </div>
                </div>
                <div class="row">
                    <input type="hidden" id="hipayId" value="0" />
                    <input type="hidden" id="hipayCode" value="" />
                    <input type="hidden" id="hiTotal" value="0" />
                    <div class="col-sm-12 col-md-6 col-lg-2">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Cash</span>&nbsp;<span class="text-secondary">*</span></label>
                            <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" maxlength="12" id="pay_cash" name="pay_cash" oninput="validate(this, 1000000)">
                        </div>
                    </div>

                    <div class="col-sm-12 col-md-6 col-lg-2">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Credit Card</span>&nbsp;<span class="text-secondary">*</span></label>
                            <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" maxlength="12" id="pay_cc" name="pay_cc" oninput="validate(this,1000000)">
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-2">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Chrg. (%)</span></label>
                            <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" maxlength="5" id="pay_cc_per" name="pay_cc_per" oninput="validate(this,99)">
                        </div>
                    </div>

                    <div class="col-sm-12 col-md-6 col-lg-2" id="divCq">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Cheque Amt. </span>&nbsp;<span class="text-secondary">*</span></label>
                            <input class="form-control font-weight-semibold" placeholder="" type="text" value="0.00" maxlength="12" id="pay_chq" name="pay_chq" oninput="validate(this,1000000)">
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3" id="divCqNo">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Cheque No. </span></label>
                            <input class="form-control font-weight-semibold" placeholder="Eg:123456" type="text" id="pay_chq_no" maxlength="15" name="pay_chq_no">
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3" id="divCqBank">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Bank Name </span></label>
                            <input class="form-control font-weight-semibold" placeholder="Eg:ADCB" type="text" maxlength="49" id="pay_chq_bank" name="pay_chq_bank">
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3" id="divCqDate">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Cheque Date </span></label>
                            <input type="text" id="pay_chq_date" class="form-control font-weight-semibold" maxlength="18" placeholder="Ex:DD-MMMM-YYYY" />
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-2" id="divBT">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Bank Transfer </span>&nbsp;<span class="text-secondary">*</span></label>
                            <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" maxlength="12" id="pay_bt" name="pay_bt" oninput="validate(this,1000000)">
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3" id="divBT_Bank">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Bank Name </span></label>
                            <select class="form-select select2" id="pay_bt_bank"></select>
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3" id="divAdv">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Advance </span>&nbsp;<span class="text-secondary">*</span></label>
                            <select class="form-select select2" id="pay_advance"></select>
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-2" id="divAdvName">
                        <div class="form-group">
                            <label class="form-label"><span class="text-info">Allocated </span></label>
                            <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" id="pay_allocated" name="pay_allocated" oninput="validate(this,0)">
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-lg-12 col-sm-12 col-md-12">
                        <textarea id="pay_notes" name="pay_notes" class="form-control" rows="5" placeholder="Enter payment notes..."></textarea>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
                        <div class="form-group">
                            <div id="error"></div>
                        </div>
                        <div class="form-group">
                            <label class="form-label mt-1">&nbsp;<span class="text-danger" id="payment_error"></span></label>
                        </div>
                    </div>
                </div>

                <div class="float-end mb-4">
                    <button type="button" class="btn btn-primary me-2" id="insert_payment"><i class="si si-wallet"></i> Create Payment</button>
                    <button type="button" class="btn btn-warning me-2" id="update_inv_payment"><i class="si si-wallet"></i> Update Payment</button>
                    <button type="button" class="btn btn-outline-dark me-2" id="reset_payment"><i class="fe fe-x"></i> Reset</button>
                </div>
            </div>
        </form>
    </div>

    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12">
            <div class="table-responsive" id="tbl_payment_data">
                <table id="tbl_invoice_payments" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%;">
                    <thead>
                        <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D;">
                            <th class="border-bottom-0 font-weight-semibold text-white"></th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Code</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Date</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Amount</th>
                            <th class="border-bottom-0 font-weight-semibold text-white"></th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th colspan="3" class="text-end fs-14 font-weight-semibold" style="text-align: right !important;">Total:</th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                        </tr>
                    </tfoot>
                </table>
            </div>

            <div class="alert alert-light-info" role="alert" id="tbl_pay_no_data">
                <strong>Info!</strong>  No Payments Found.. Please create a new Payments.
            </div>

        </div>
    </div>

</div>

<!-- Modal Documents -->
<div class="modal fade overflow-auto" id="payment_documents" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="payments">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="sizeAL">
        <div class="modal-content" id="payment_documents_body">
        </div>
    </div>
</div>
<!-- End Modal Documents -->
<!-- Modal Invoice Log Details -->
<div class="modal fade overflow-auto" id="payment_log" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="payment-list">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="payment_log_body">
        </div>
    </div>
</div>
<!-- End Modal Invoice Log Details -->

<script type="text/javascript">

    //#region Load Event
    $(function () {
        $("#tbl_pay_no_data").hide();
        $("#tbl_payment_data").hide();
        $("#update_inv_payment").hide();
        $("#insert_payment").show();
        $("#hipayId").val("0");
        $("#hipayCode").val("");

        $('#pay_chq_date').bootstrapdatepicker({
            format: "dd-MM-yyyy",
            viewMode: "date",
            todayHighlight: true,
            autoclose: true,
            multidate: false,
            multidateSeparator: "-"
        });

        $("#pay_chq_date").bootstrapdatepicker("setDate", 'today');

        $("#pay_bt_bank").select2({
            placeholder: 'Select Bank',
            width: '100%',
            dropdownParent: $('#form_pinv_payment')
        });

        $("#pay_advance").select2({
            placeholder: 'Select Advance',
            width: '100%',
            dropdownParent: $('#form_pinv_payment')
        });

        load_banks();
        load_advances();
        payment_validation();


        if (localStorage.getItem("pay_from") === "invoice_payment") {
            $("#pay_head_div").hide();
            $("#pay_div").removeClass("p-4");
            localStorage.removeItem("pay_from");
        }

        var response = @Html.Raw(Json.Encode(Model.paymentList));
        get_payment_list(response);
    });
    //#endregion Load Event

    //#region Datatable Client Side Processing
    // Get Receipts
        var get_payment_list = function (response) {
        if (response.length > 0) {
            $("#tbl_pay_no_data").hide();
            $("#tbl_payment_data").show();
            if (response != null && response != undefined) {
                var table;
                if ($.fn.dataTable.isDataTable('#tbl_invoice_payments')) {
                    table = $('#tbl_invoice_payments').DataTable();
                    table.clear();
                    table.rows.add(response).draw();
                }
                else {
                    bindDataTable(response);
                }
            }
        }
        else {
            $("#tbl_pay_no_data").show();
            $("#tbl_payment_data").hide();
        }
    }

    // Bind Datatable
    var bindDataTable = function (response) {
        var numberRenderer1 = $.fn.dataTable.render.number(',', '.', 2,).display;

        var table = $("#tbl_invoice_payments").DataTable({
            processing: true,
            "deferRender": true,
            "pageLength": 50,
            "retrieve": true,
            lengthChange: true,
            "aaData": response,
            "aoColumns": [
                { "mData": "payId" },
                { "mData": "pay_code" },
                { "mData": "pay_date" },
                { "mData": "total_paid" },
                { "mData": "payId" }

            ],
            "aoColumnDefs": [
                {
                    "aTargets": [0],
                    "className": "fs-13 text-center",
                    "orderable": false,
                    "searchable": false,
                    "render": function (data, type, row, meta) {
                        let _index = (meta.row) + 1;
                        if (_index >= 10) {
                            return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>" + _index + "</a>";
                        }
                        else {
                            return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>0" + _index + "</a>";
                        }
                    }
                },
                {
                    "aTargets": [1],
                    "className": "fs-13"
                },
                {
                    "aTargets": [2],
                    "className": "fs-13",
                    "render": function (data) {
                        return moment(data, "DD/MM/YYYY").format("DD-MM-YYYY");
                    }
                },
                {
                    "aTargets": [3],
                    "className": "text-end fs-13 font-weight-semibold",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "aTargets": [4],
                    "className": 'text-center',
                    "orderable": false,
                    "searchable": false,
                    "render": function (data, type, row, meta) {
                        var more = '<div class="btn-list">' +
                            '<a href="javascript:void(0)" onclick="editPayment(\'' + data + '\')"><i class="fe fe-edit-2 text-success" style="font-size: 15px;margin-right: 0.5rem;" title="Edit Pay Receipt"></i></a>' +
                            '<a href="javascript:void(0)" onclick="deletePayment(\'' + data + '\')"><i class="fe fe-trash text-danger" style="font-size: 15px;margin-right: 0.5rem;" title="Delete Pay Receipt"></i></a>' +
                            '<a href="javascript:void(0)" onclick="printPayment(\'' + data + '\')"><i class="fe fe-printer text-azure" style="font-size: 15px;margin-right: 0.5rem;" title="Print Pay Receipt"></i></a>' +
                            '<a href="javascript:void(0)" onclick="documentsPayment(\'' + data + '\', \'' + row.pay_code +'\')"><i class="fe fe-folder-plus text-info" style="font-size: 15px;margin-right: 0.5rem;" title="Documents Upload"></i></a>' +
                            '<a href="javascript:void(0)"><i class="fa fa-whatsapp text-success" style="font-size: 15px;margin-right: 0.5rem;" title="Send Receipt in Whatsapp"></i></a>' +
                            '<a href="javascript:void(0)"><i class="fe fe-mail text-secondary" style="font-size: 15px;margin-right: 0.5rem;" title="Send Receipt in Email"></i></a>' +
                            '<a href="javascript:void(0)" onclick="paymentLog(\'' + row.pay_code + '\')"><i class="fe fe-eye" style="font-size: 15px;margin-right: 0.5rem;" title="Receipt Log"></i></a>' +
                            '</div>';

                        return more;
                    }
                }
            ],
            order: [[2, 'asc']],
            fixedHeader: {
                header: true,
                footer: true
            },
            buttons: [
                {
                    extend: 'excel',
                    title: 'Payments',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2, 3]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Payments',
                    footer: 'true',
                    orientation: 'landscape',
                    pageSize: 'LEGAL',
                    exportOptions: {
                        columns: [0, 1, 2, 3]
                    }
                },
                {
                    extend: 'csv',
                    title: 'Payments',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2, 3]
                    }
                },
                {
                    extend: 'print',
                    title: 'Payments',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2, 3]
                    }
                }
            ],
            language: {
                searchPlaceholder: 'Search...',
                sSearch: '<span class="text-primary font-weight-semi-bold">Search Payments </span>',
                lengthMenu: '_MENU_',
            },
            scrollX: true,
            scrollY: 500,
            scrollCollapse: true,
            fixedColumns: true,
            footerCallback: function (row, data, start, end, display) {
                var api = this.api();

                // Remove the formatting to get integer data for summation
                var intVal = function (i) {
                    return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                };

                pay_total = api.column(3).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(3).footer()).html(numberRenderer1(pay_total.toFixed(2)));


            },
            //rowCallback: function (row, data, index) {
            //    if (data.rec_status === "Deleted") {
            //        $('td:eq(0)', row).find("input[type='checkbox']").remove();
            //    }
            //},
        });

        table.buttons().container().appendTo('#tbl_invoice_payments_wrapper .col-md-6:eq(0)');
    }
    //#endregion Datatable Client Side Processing

    //#region Payment Section

    //Load Banks
    var load_banks = function () {
        $.ajax({
            url: '@Url.Action("BankNamesForBankTransfers", "Receipt", new { area = "Invoice" })',
            type: "GET",
            dataType: "JSON",
            async: false,
            success: function (response) {
                $('#pay_bt_bank').empty();
                var _data = response;
                if (_data.length > 0) {
                    var optNone = new Option("Select Any", "0", false, false);
                    $('#pay_bt_bank').append(optNone).trigger('change');

                    $.each(response, function (j) {
                        var label = response[j]["acc_code"] + " | " + response[j]["acc_name"] + " | " + response[j]["acc_cbal"];
                        var newOption = new Option(label, response[j]["acc_code"],  false, false);
                        $('#pay_bt_bank').append(newOption).trigger('change');
                    });

                    $('#pay_bt_bank').val("0").trigger('change');
                }
            },
            error: function (xhr) {
                console.log("Failed! Error Message : " + xhr.statusText);
            }
        })
    }

    //Load Payment Advance
    var load_advances = function () {
        $.ajax({
            url: '@Url.Action("AdvancePaymentsBySupllier", "PaymentAgainstInvoices", new { area = "MaterialManagement" })?pay_supplier=' + @Model.paymentInfo.pay_supplier,
            type: "GET",
            dataType: "JSON",
            async: false,
            success: function (response) {
                $('#pay_advance').empty();
                var _data = response;
                if (_data.length > 0) {
                    $.each(response, function (j) {
                        var label = response[j]["pay_code"] + " | " + response[j]["pay_date"] + " | " + response[j]["pay_advance"];
                        var newOption = new Option(label, response[j]["payId"],  false, false);
                        $('#pay_advance').append(newOption).trigger('change');
                    });

                    $('#pay_advance').val(0).trigger('change');
                }
            },
            error: function (xhr) {
                console.log("Failed! Error Message : " + xhr.statusText);
            }
        })
    }


    //Payment Validation
    var payment_validation = function () {
        $('#pay_cash').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#pay_cc').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#pay_cc_per').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#pay_chq').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#pay_bt').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#pay_allocated').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });
    }

    //Bank Transfer Bank Change Event
    $('#pay_bt_bank').on('select2:select', function (e) {
        calculation_payment();
    });

    //Advance Payment Change Event
    $('#pay_advance').on('select2:select', function (e) {
        calculation_payment();
    });

    //Calculation for Payments
    var calculation_payment = function () {
        var error = 0;
        var _cash = $("#pay_cash").val();
        var _cc = $("#pay_cc").val();
        var _cc_per = $("#pay_cc_per").val();
        var _chq = $("#pay_chq").val();
        var _bt = $("#pay_bt").val();
        var _allocated = $("#pay_allocated").val();
        var _vamount = 0;

        //Advance Allocated
        if (($("#pay_advance").val() != null) && ($("#pay_advance").val() != undefined) && ($("#pay_advance").val() != "") && ($("#pay_advance").val() != NaN)) {
            var selected_text = $("#pay_advance option:selected").text();
            var value_arr = selected_text.split("|");
            var amount = value_arr[2].replace(" ", "");

            if (!(parseFloat(amount) >= parseFloat(_allocated))) {
                error++;
                $("#payment_error").html("Allocated Amount Should be less than or equal to " + amount);
                $("#pay_advance").attr("style", "border:1px solid red;color:red;");
                $("#pay_allocated").attr("style", "border:1px solid red;color:red;");
            }
            else {
                $("#payment_error").html("");
                $("#pay_advance").attr("style", "border:1px solid #ecebf1;color:#728096;");
                $("#pay_allocated").attr("style", "border:1px solid #ecebf1;color:#728096;");
            }
        }


        //Cheque
        if (parseFloat(_chq) > 0) {
            if (!(($("#pay_chq_no").val() != null) &&
                ($("#pay_chq_no").val() != undefined) && ($("#pay_chq_no").val() != "") &&
                ($("#pay_chq_no").val() != NaN))) {
                error++;
                $("#payment_error").html("Cheque No is Required ");
                $("#pay_chq_no").attr("style", "border:1px solid red;color:red;");
            }
            else {
                $("#payment_error").html("");
                $("#pay_chq_no").attr("style", "border:1px solid #ecebf1;color:#728096;");
            }

            if (!(($("#pay_chq_date").val() != null) &&
                ($("#pay_chq_date").val() != undefined) &&
                ($("#pay_chq_date").val() != "") && ($("#pay_chq_date").val() != NaN))) {
                error++;
                $("#payment_error").html("Cheque Date is Required ");
                $("#pay_chq_date").attr("style", "border:1px solid red;color:red;");
            }
            else {
                $("#payment_error").html("");
                $("#pay_chq_date").attr("style", "border:1px solid #ecebf1;color:#728096;");
            }

            if (!(($("#pay_chq_bank").val() != null) &&
                ($("#pay_chq_bank").val() != undefined) &&
                ($("#pay_chq_bank").val() != "") && ($("#pay_chq_bank").val() != NaN))) {
                error++;
                $("#payment_error").html("Bank Name is Required ");
                $("#pay_chq_bank").attr("style", "border:1px solid red;color:red;");
            }
            else {
                $("#payment_error").html("");
                $("#pay_chq_bank").attr("style", "border:1px solid #ecebf1;color:#728096;");
            }
        }

        //Bank Transfer
        if (parseFloat(_bt) > 0) {
            if (($("#pay_bt_bank").val() != null) &&
                ($("#pay_bt_bank").val() != undefined) &&
                ($("#pay_bt_bank").val() != "") &&
                ($("#pay_bt_bank").val() != NaN)) {
                $("#payment_error").html("");
                $("#pay_bt_bank").attr("style", "border:1px solid #ecebf1;color:#728096;");

                var selected_text = $("#pay_bt_bank option:selected").text();
                var value_arr = selected_text.split("|");
                var amount = value_arr[2].replace(" ", "");

                if (!(parseFloat(amount) >= parseFloat(_bt))) {
                    error++;
                    $("#payment_error").html("Bank Transferred Should be less than or equal to " + amount);
                    $("#pay_bt").attr("style", "border:1px solid red;color:red;");
                    $("#pay_bt_bank").attr("style", "border:1px solid red;color:red;");
                }
                else {
                    $("#payment_error").html("");
                    $("#pay_bt").attr("style", "border:1px solid #ecebf1;color:#728096;");
                    $("#pay_bt_bank").attr("style", "border:1px solid #ecebf1;color:#728096;");
                }
            }
            else {
                error++;
                $("#payment_error").html("Bank Account is Required for Bank Transfers");
                $("#pay_bt_bank").attr("style", "border:1px solid red;color:red;");
            }
        }

        if (error == 0) {
            var pay_total = parseFloat(_cash) + parseFloat(_cc) + parseFloat(_chq) + parseFloat(_bt) + parseFloat(_allocated);

            var pinvTotal = 0;

            if (parseInt($("#hipayId").val()) > 0) {
                pinvTotal = parseFloat(@Model.paymentInfo.outstanding) + parseFloat($("#hiTotal").val());
            }
            else {
                pinvTotal = parseFloat(@Model.paymentInfo.outstanding);
            }

            if (parseFloat(pinvTotal) >= parseFloat(pay_total)) {

                if (parseFloat(_vamount) > 0) {
                    pay_total = pay_total + parseFloat(_vamount);
                }
                else {
                    $("#payment_error").html("");
                }

                if (parseInt($("#hipayId").val()) > 0) {
                    $("#update_inv_payment").show();
                    $("#insert_payment").hide();
                }
                else {
                    $('#insert_payment').show();
                    $("#update_inv_payment").hide();
                }
            }
            else {
                $('#insert_payment').hide();
                $("#update_inv_payment").hide();
                $("#payment_error").html("Payment should be less than invoice outstanding");
            }
        }
        else {
            $('#insert_payment').hide();
            $("#update_inv_payment").hide();
        }
    }

    //Clear Payments Fields
    var clearPayment = function () {
        $("#pay_cash").val("0.00");
        $("#pay_cc").val("0.00");
        $("#pay_cc_per").val("0.00");
        $("#pay_chq").val("0.00");
        $("#pay_chq_no").val("");
        $("#pay_chq_bank").val("");
        $("#pay_chq_date").bootstrapdatepicker("setDate", 'today');
        $("#pay_bt").val("0.00");
        $("#pay_bt_bank").val("");
        $("#pay_advance").empty();
        $("#pay_allocated").val("0.00");
        $("#insert_payment").hide();
        $("#update_inv_payment").hide();
        $("#hipayId").val("0");
        $("#hipayCode").val("");
        $("#spn_outstanding").html("Outstanding Balance of <strong> &nbsp;@Model.paymentInfo.pinv_icode</strong> is, &nbsp; AED <strong> &nbsp;@Model.paymentInfo.outstanding</strong>");
    }

    //#endregion

    //#region Validate Max value for Controls
    var validate = function (e, max) {
        var t = e.value;
        var j = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), 3)) : t;
        e.value = (max == 0) ? j : ((j >= max) ? max : j);
    }
    //#endregion Validate Max value for Controls

    //#region Focus In/Out Events
    $("#pay_cash").focusin(function () {
        localStorage.setItem("temp_cash", $(this).val());
    });

    $("#pay_cash").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 0) {
            localStorage.removeItem("temp_cash");
            calculation_payment();
        }
        else {
            $(this).val(localStorage.getItem("temp_cash"));
            localStorage.removeItem("temp_cash");
        }
    });

    $("#pay_cc").focusin(function () {
        localStorage.setItem("temp_cc", $(this).val());
    });

    $("#pay_cc").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 0) {
            localStorage.removeItem("temp_cc");
            calculation_payment();
        }
        else {
            $(this).val(localStorage.getItem("temp_cc"));
            localStorage.removeItem("temp_cc");
        }
    });

    $("#pay_cc_per").focusin(function () {
        localStorage.setItem("temp_cc_per", $(this).val());
    });

    $("#pay_cc_per").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 0) {
            localStorage.removeItem("temp_cc_per");
            calculation_payment();
        }
        else {
            $(this).val(localStorage.getItem("temp_cc_per"));
            localStorage.removeItem("temp_cc_per");
        }
    });

    $("#pay_chq").focusin(function () {
        localStorage.setItem("temp_chq", $(this).val());
    });

    $("#pay_chq").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 0) {
            localStorage.removeItem("temp_chq");
            calculation_payment();
        }
        else {
            $(this).val(localStorage.getItem("temp_chq"));
            localStorage.removeItem("temp_chq");
        }
    });

    $("#pay_chq_no").focusout(function () {
        calculation_payment();
    });

    $("#pay_chq_bank").focusout(function () {
        calculation_payment();
    });

    $("#pay_chq_date").focusout(function () {
        calculation_payment();
    });

    $("#pay_bt").focusin(function () {
        localStorage.setItem("temp_bt", $(this).val());
    });

    $("#pay_bt").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 0) {
            localStorage.removeItem("temp_bt");
            calculation_payment();
        }
        else {
            $(this).val(localStorage.getItem("temp_bt"));
            localStorage.removeItem("temp_bt");
        }
    });

    $("#pay_allocated").focusin(function () {
        localStorage.setItem("temp_allocated", $(this).val());
    });

    $("#pay_allocated").focusout(function () {
        if (($("#pay_advance").val() != null) && ($("#pay_advance").val() != undefined) && ($("#pay_advance").val() != "") && ($("#pay_advance").val() != NaN)) {
            var val = parseFloat($(this).val());
            if (val >= 0) {
                localStorage.removeItem("temp_allocated");
                calculation_payment();
            }
            else {
                $(this).val(localStorage.getItem("temp_allocated"));
                localStorage.removeItem("temp_allocated");
            }
        }
        else {
            $(this).val("0.00");
            localStorage.removeItem("temp_allocated");
        }
    });

    //#endregion Focus In/Out Events

    //Alert Timeout
        function timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }

        $('#reset_payment').on('click', function (e) {
            clearPayment();
        });

        $('#insert_payment').on('click', function (e) {
            var _payments = {
                "payId": 0,
                "pay_code": "",
                "pay_type": 'Invoice',
                "pay_date": '@Model.paymentInfo.pay_date',
                "pay_supplier": @Model.paymentInfo.pay_supplier,
                "pay_invoice": @Model.paymentInfo.pinvId,
                "pay_cash": parseFloat($('#pay_cash').val()),
                "pay_cc": parseFloat($('#pay_cc').val()),
                "pay_cc_per": parseFloat($('#pay_cc_per').val()),
                "pay_chq": parseFloat($('#pay_chq').val()),
                "pay_chq_no": $('#pay_chq_no').val().trim(),
                "pay_chq_date": $('#pay_chq_date').val().trim(),
                "pay_bt": parseFloat($('#pay_bt').val()),
                "pay_chq_bank": $('#pay_chq_bank').val(),
                "pay_bt_bank": $('#pay_bt_bank').val(),
                "pay_advance": $('#pay_advance').val(),
                "pay_allocated": parseFloat($("#pay_allocated").val()),
                "pay_notes": $('#pay_notes').val().trim(),
                "pay_branch": @Model.paymentInfo.pinv_branch,
                "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
            }
            $.ajax({
                url: '@Url.Action("InsertPayment", "PaymentAgainstInvoices", new { area = "MaterialManagement" })',
                type: "POST",
                dataType: "json",
                data: _payments,
                async: false,
                success: function (data) {
                    if (data.isSuccess) {
                        e.preventDefault();
                        e.stopPropagation();
                        $.growl.notice({
                            title: "Success",
                            message: data.message
                        });
                        $('#pay_supplier').val(@Model.paymentInfo.pay_supplier).trigger('change');
                        $('#pay_supplier').trigger({
                            type: 'select2:select'
                        });

                        let el = "#li_" + @Model.paymentInfo.pinvId;
                        $(el).trigger("click");

                    }
                    else if (data.message === "Error While Adding Payment!") {
                        let html = "<div class='alert alert-danger alert-dismissible' role='alert'>" +
                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='Close' aria-label='Close'>×</button>" +
                            "<strong>Error.. " + data.message + "</strong><br/>" +
                            "</div>";
                        $("#error").html(html);
                        timeout();
                    }
                    else {

                        let html = "<div class='alert alert-danger alert-dismissible' role='alert'>" +
                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='Close' aria-label='Close'>×</button>" +
                            "<strong>Error.. </strong><br/>";
                        $.each(data.message, function (index, value) {
                            if (value.length > 0)
                                html += "<li><small>" + value + "</small><li>";
                            var elem = $("#" + index);
                            if (elem.hasClass("select2-hidden-accessible")) {
                                $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                            }
                            else {
                                $(elem).addClass(" is-invalid");
                            }
                            setTimeout(function () {
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                }
                                else {
                                    $(elem).removeClass("is-invalid");
                                }
                            }, 5000);
                        });
                        html += "</div>";
                        $("#error").html(html);
                        timeout();
                    }

                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr);
                }
            });

        });

        var editPayment = function (payId) {
            $("#hipayId").val(payId);

        $.ajax({
            url: '@Url.Action("GetPaymentById", "PaymentAgainstInvoices", new { area = "MaterialManagement" })?payId=' + payId,
            type: "GET",
            dataType: "JSON",
            async: false,
            success: function (data) {
                if (data.isAuthorized) {
                    if (data.isSuccess) {
                        $("#update_inv_payment").show();
                        $("#insert_payment").hide();

                        var _data = data.data;
                        $("#hiTotal").val(_data.total_paid);
                        $("#hipayCode").val(_data.pay_code);

                        var total = @Model.paymentInfo.outstanding;


                        $("#spn_outstanding").html("Outstanding Balance of <strong> &nbsp;@Model.paymentInfo.pinv_icode</strong> is, &nbsp; AED <strong> &nbsp;" + (parseFloat(total) + parseFloat(_data.total_paid)).toFixed(2) + "</strong>");

                        if (parseFloat(_data.pay_cash) > 0) {
                            $("#pay_cash").val(_data.pay_cash);
                        }
                        else {
                            $("#pay_cash").val("0.00");
                        }

                        if (parseFloat(_data.pay_cc) > 0) {
                            $("#pay_cc").val(_data.pay_cc);
                        }
                        else {
                            $("#pay_cc").val("0.00");
                        }

                        if (parseFloat(_data.pay_cc_per) > 0) {
                            $("#pay_cc_per").val(_data.pay_cc_per);
                        }
                        else {
                            $("#pay_cc_per").val("0.00");
                        }

                        if (parseFloat(_data.pay_chq) > 0) {
                            $("#pay_chq").val(_data.pay_chq);
                            $("#pay_chq_no").val(_data.pay_chq_no);
                            $("#pay_chq_bank").val(_data.pay_chq_bank);
                            $("#pay_chq_date").bootstrapdatepicker("setDate", moment(_data.pay_chq_date, 'DD/MM/YYYY').format("DD-MM-YYYY"));
                        }
                        else {
                            $("#pay_chq").val("0.00");
                            $("#pay_chq_no").val("");
                            $("#pay_chq_bank").val("");
                            $("#pay_chq_date").bootstrapdatepicker("setDate", 'today');
                        }

                        if (parseFloat(_data.pay_bt) > 0) {
                            $("#pay_bt").val(_data.pay_bt);
                            $("#pay_bt_bank").val(_data.pay_bt_bank).trigger('change');
                        }
                        else {
                            $("#pay_bt").val("0.00");
                            $('#pay_bt_bank').val("0").trigger('change');
                        }

                        if (parseFloat(_data.pay_allocated) > 0) {
                            $("#pay_allocated").val(_data.pay_allocated);
                            $("#pay_advance").val(_data.pay_advance).trigger('change');
                        }
                        else {
                            $("#pay_allocated").val("0.00");
                            $('#pay_advance').val("0").trigger('change');
                        }
                        $("#pay_notes").val(_data.pay_notes);
                    }
                    else {
                        $("#update_inv_payment").hide();
                        $("#insert_payment").show();
                        let html = "<div class='alert alert-warning alert-dismissible' role='alert'>" +
                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='Close' aria-label='Close'>×</button>" +
                            "<strong>" + message +" </strong><br/>" +
                            "</div>";
                        $("#error").html(html);
                        timeout();
                    }
                }
                else {
                    $("#update_inv_payment").hide();
                    $("#insert_payment").show();
                    let html = "<div class='alert alert-danger alert-dismissible' role='alert'>" +
                        "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='Close' aria-label='Close'>×</button>" +
                        "<strong>Access Denied!.. You not have rights to Update the Payments.. </strong><br/>" +
                        "</div>";
                    $("#error").html(html);
                    timeout();
                }
            },
            error: function (xhr) {
                $("#update_inv_payment").hide();
                $("#insert_payment").show();
                let html = "<div class='alert alert-danger alert-dismissible' role='alert'>" +
                    "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='Close' aria-label='Close'>×</button>" +
                    "<strong>Failed! Error Message: " + xhr.statusText + "</strong><br/>" +
                    "</div>";
                $("#error").html(html);
                timeout();
            }
        })
        };


    $('#update_inv_payment').on('click', function (e) {
            var _payment = {
                "payId": parseInt($("#hipayId").val()),
                "pay_code": $("#pay_code").val(),
                "pay_type": 'Invoice',
                "pay_date": '@Model.paymentInfo.pay_date',
                "pay_supplier": @Model.paymentInfo.pay_supplier,
                "pay_invoice": @Model.paymentInfo.pinvId,
                "pay_cash": parseFloat($('#pay_cash').val()),
                "pay_cc": parseFloat($('#pay_cc').val()),
                "pay_cc_per": parseFloat($('#pay_cc_per').val()),
                "pay_chq": parseFloat($('#pay_chq').val()),
                "pay_chq_no": $('#pay_chq_no').val().trim(),
                "pay_chq_date": $('#pay_chq_date').val().trim(),
                "pay_bt": parseFloat($('#pay_bt').val()),
                "pay_chq_bank": $('#pay_chq_bank').val(),
                "pay_bt_bank": $('#pay_bt_bank').val(),
                "pay_advance": $('#pay_advance').val(),
                "pay_allocated": parseFloat($("#pay_allocated").val()),
                "pay_notes": $('#pay_notes').val().trim(),
                "pay_branch": @Model.paymentInfo.pinv_branch,
                "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
            }

            $.ajax({
                url: '@Url.Action("UpdatePayment", "PaymentAgainstInvoices", new { area = "MaterialManagement" })',
                type: "POST",
                dataType: "json",
                data: _payment,
                async: false,
                success: function (data) {
                    if (data.isSuccess) {
                        e.preventDefault();
                        e.stopPropagation();
                        $.growl.notice({
                            title: "Success",
                            message: data.message
                        });

                        $('#pay_supplier').val(@Model.paymentInfo.pay_supplier).trigger('change');
                        $('#pay_supplier').trigger({
                            type: 'select2:select'
                        });

                        let el = "#li_" + @Model.paymentInfo.pinvId;
                        $(el).trigger("click");

                    }
                    else {
                        let html = "<div class='alert alert-danger alert-dismissible' role='alert'>" +
                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='Close' aria-label='Close'>×</button>" +
                            "<strong>Error.. " + data.message + "</strong><br/>" +
                            "</div>";
                        $("#error").html(html);
                        timeout();
                    }

                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr);
                }
            });

        });

    //#region Delete Payment
        var deletePayment = function (payId) {
            Swal.fire({
                title: "Are you sure you want to delete this Payment?",
                html: "This action will delete this Payment and its Recalculate the purchase invoice paid amount and all!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: '@Url.Action("DeletePayment", "PaymentAgainstInvoices", new { area = "MaterialManagement" })?payId=' + payId + '&pay_invoice=' + @Model.paymentInfo.pinvId + '&pay_supplier=' + @Model.paymentInfo.pay_supplier,
                        type: "POST",
                        dataType: "JSON",
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.isSuccess) {
                                    Swal.fire({
                                        title: "Success!",
                                        text: "Payment is Deleted Successfully!",
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                                    });

                                    $('#pay_supplier').val(@Model.paymentInfo.pay_supplier).trigger('change');
                                    $('#pay_supplier').trigger({
                                        type: 'select2:select'
                                    });

                                    let el = "#li_" + @Model.paymentInfo.pinvId;
                                    $(el).trigger("click");
                                }
                                else {
                                    Swal.fire({
                                        title: "Error!",
                                        text: "Failed to Delete the Payment!",
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to delete this Payment!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Delete Receipt! Please refresh the page and try again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    });
                }
            });
        }
    //#endregion

    //#region Print Payment
        var printPayment = function (payId) {
            window.open("@Url.Action("PrintPayment", "PaymentAgainstInvoices", new { area = "MaterialManagement" })?payId=" + payId, "Payment Print Against Purchase Invocie");
        }
    //#endregion

    //#region Payment Documents
        var documentsPayment = function (payId, pay_code) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("Payment_Documents", "PaymentAgainstInvoices", new { area = "MaterialManagement" })?payId=" + payId + "&pay_code=" + pay_code,
            contentType: "application/json",
            dataType: "html",
            success: function (response) {
                $("#payment_documents_body").html(response);
                $("#payment_documents").modal("show");
            },
            error: function (xhr) {
                console.log("Error :" + xhr.statusText);
            }
        });
    }
    //#endregion

    //#region Invoice log
        var paymentLog = function (pay_code) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("PaymentAuditLogs", "PaymentAgainstInvoices", new { area = "MaterialManagement" })?pay_code=" + pay_code,
            contentType: "application/json",
            dataType: "html",
            success: function (response) {
                $("#payment_log_body").html(response);
                $("#payment_log").modal("show");
            },
            error: function (xhr) {
                console.log("Error :" + xhr.statusText);
            }
        });
    }
    //#endregion invoice log

</script>

