@model IEnumerable<BusinessEntities.Accounts.MaterialManagement.Payment>
@{
    ViewBag.Title = "Accounts & Material Management - Payment Against Purchase Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    @@media (min-width: 1124px) {
        .dataTables_scrollHeadInner, .table {
            width: 100% !important
        }
    }

    .td_max_width {
        max-width: 200px !important;
        white-space: normal;
    }
</style>
<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary">
            <span data-lang-key="payment-purchase-invoice">Payment Against Purchase Invoice</span></h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list btn-animation">
            
            <button class="btn btn-outline-primary mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#searchFilter" aria-expanded="false" aria-controls="collapseExample">
                <i class="fa fa-filter"></i>
                <span data-lang-key="advance-filter">Advanced Filters</span>
            </button>

            <button class="btn btn-outline-primary ms-lg-2" type="button" id="btnVerify">
                <i class="fe fe-check-circle"></i>
                <span data-lang-key="verify">&nbsp;Verify</span>
            </button>
            <button class="btn btn-vimeo ms-lg-2" type="button" id="btnPostAccount">
                <i class="fa fa-line-chart"></i>
                <span data-lang-key="post-to-account">Post To Account</span>
            </button>

            <button class="btn btn-secondary ms-lg-2" type="button" id="btn_AddPayment">
                <i class="mdi mdi-plus"></i>
                <span data-lang-key="add-payment">&nbsp;Add Payment</span>
            </button>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card mb-0">
            <div class="collapse" id="searchFilter">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-12 col-md-6 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="branch">Branch</span></label>
                                @Html.DropDownList("select_branch", (IEnumerable<SelectListItem>)ViewData["BranchList"], "Please Select", new { @class = "form-select select2" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="suppliers">Supplier</span></label>
                                <select id="select_supplier" class="form-control mb-4">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="code">Code</span></label>
                            </div>
                            <input id="txt_code" class="form-control" placeholder="Enter Payment Code" type="text" autocomplete="off">
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="date-from">Date From</span></label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_from" class="form-control" placeholder="DD-MM-YYYY" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="date-to">Date To</span></label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_to" class="form-control" placeholder="DD-MM-YYYY" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="status">Status<small>(es)</small></span></label>
                                <select id="select_status" class="form-control mb-4" multiple="multiple"></select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="type">Type</span></label>
                                <select id="select_type" class="form-control mb-4" multiple="multiple"></select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">	
                                    <span data-lang-key="cheque-from-date":>Chq. Date From</span></label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_chq_date_from" class="form-control" placeholder="DD-MM-YYYY" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="cheque-to-date">Chq. Date To</span></label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_chq_date_to" class="form-control" placeholder="DD-MM-YYYY" type="text" autocomplete="off">
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">&nbsp;</label>
                                <button class="btn btn-primary mb-2" type="button" id="btnSearch">
                                    <i class="fa fa-search-plus"></i> 
                                    <span data-lang-key="search">Search</span>
                                </button>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                <strong>Error!&nbsp;</strong>@TempData["ErrorMessage"]
            </div>
        </div>
    }
    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="AdvancePaymentAlert"></div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-status bg-blue"></div>
            <div class="card-body">

                <div id="progress-loader" style="display:none;">
                    <div class="progress progress-sm mb-3">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-teal progress-bar-indeterminate"></div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tbl_invoicepayments" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="id">ID</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="branch">Branch</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="code">Code</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="date">Date</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="invoices">Invoice</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="suppliers">Supplier</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="cash">Cash</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="credit-card">Credit Card</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="cheques">Cheque</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="cheque-details">Chq.Detail</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="bank-tansfers">Bank Transfer</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="allocated">Allocated</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="total">Total</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="status">Status</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="made-by">Made by</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="posted">Posted</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white text-center"><i class="fe fe-more-vertical" style="font-size: 20px;"></i></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="cheque-bank-name">Chq. Bank Name</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="cheque-no">Chq.No</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="cheque-date":>Chq.Date</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="notes">Notes</span>
                                </th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th class="table_footer_align"><span class="text-right text-dark"> 
                                    <span data-lang-key="total">Total :</span> &nbsp;</span></th>
                                <th class="table_footer_align"></th>
                                <th class="table_footer_align"></th>
                                <th class="table_footer_align"></th>
                                <th></th>
                                <th class="table_footer_align"></th>
                                <th class="table_footer_align"></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@* Create Advance Payment popup Model *@
<div class="modal fade fade overflow-auto" id="add_advancepayment_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="add_advancepayment_body">
        </div>
    </div>
</div>


@* View Payment Audit Detail popup Model *@
<div class="modal fade overflow-auto" id="paymentAuditLog_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="paymentAuditLog_body">
        </div>
    </div>
</div>


@* Edit Payment Detail popup Model *@
<div class="modal fade overflow-auto" id="edit_payment_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="edit_payment_body">
        </div>
    </div>
</div>


<!-- Modal Documents -->
<div class="modal fade overflow-auto" id="payment_documents_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="advancepatment">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="sizeAL">
        <div class="modal-content" id="payment_documents_body">
        </div>
    </div>
</div>


@* Supplier History popup Model *@
<div class="modal fade" id="SupplierHistory_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl" id="size">
        <div class="modal-content" id="SupplierHistory_body">
        </div>
    </div>
</div>




@section myScripts{
    <style>
        .dataTables_scrollBody {
            min-height: 300px !important;
        }
    </style>

    <script>
        //#region Page Load
        $(function () {
            $('#select_date_from').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });

            $('#select_date_to').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });
            $('#select_chq_date_from').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });
            $('#select_chq_date_to').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });
            $('#select_branch').select2({
                minimumResultsForSearch: '',
                placeholder: 'Any Branch',
                width: '100%'
            });
            $('#select_supplier').SumoSelect({
                placeholder: 'Select Supplier',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Enter here.',
                selectAll: true
            });
            $('#select_date_from').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });

            $('#select_date_to').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            $('#select_chq_date_from').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });

            $('#select_chq_date_to').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            load_status();
            load_type();
            $("#select_date_to").bootstrapdatepicker("setDate", "tomorrow");
            $("#select_date_from").bootstrapdatepicker("setDate", "today");
            var today_date = moment(new Date()).format('MM/DD/YYYY');
            Get_AdvancePayments(today_date, today_date);

            // Focus on select2 Dropdown
            $(document).on('select2:open', () => {
                document.querySelector('.select2-search__field').focus();
            });
        });
        //#endregion

        //#region load status
        var load_status = function () {
            $('#select_status').SumoSelect({
                placeholder: 'Any Status(es)',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Enter here.',
                selectAll: true
            });

            $('#select_status').html('');
            $('#select_status')[0].sumo.reload();
            $('#select_status')[0].sumo.add("Cleared", "Cleared");
            $('#select_status')[0].sumo.add("Submitted", "Submitted");
            $('#select_status')[0].sumo.add("Deleted", "Deleted");

            $('#select_status')[0].sumo.reload();
        };
        //#endregion

        //#region load Types
        var load_type = function () {
            $('#select_type').SumoSelect({
                placeholder: 'Any Type',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Enter here.',
                selectAll: true
            });

            $('#select_type').html('');
            $('#select_type')[0].sumo.reload();
            $('#select_type')[0].sumo.add("Advance", "Advance");
            $('#select_type')[0].sumo.add("Refund", "Refund");
            $('#select_type')[0].sumo.reload();
        };
        //#endregion

        //#region load Supplier on Branch Change
        $('#select_branch').on('select2:select', function (e) {
            $('#select_supplier').html('');
            $('#select_supplier')[0].sumo.reload();
            var branchId = $('#select_branch').val();
            if (branchId.length > 0) {
                $.ajax({
                    url: '@Url.Action("GetSupplierByBranches", "GRN", new { area = "MaterialManagement" })?branchId=' + branchId,
                    type: "GET",
                    dataType: "json",
                    async: false,
                    success: function (response) {
                        $('#select_supplier')[0].sumo.add("", "Select Supplier");
                        $.each(response, function (j) {
                            $('#select_supplier')[0].sumo.add(response[j].Value, response[j].Text);
                        });
                    },
                    error: function (xhr) {
                        console.log(xhr);
                        alert(xhr);
                    }
                });
            }
        });

        //#endregion

        //#region Filter on Button Click
        $("#btnSearch").click(function (e) {
            e.preventDefault();
            let isValid = true;
            var from_date = moment($('#select_date_from').val().trim(), 'DD-MMMM-YYYY');
            var to_date = moment($('#select_date_to').val().trim(), 'DD-MMMM-YYYY');
            // Check if Date From is a valid Date
            if (from_date != null && from_date != 0 && from_date != "" && from_date != undefined) {
                if (!from_date.isValid()) {
                    isValid = false;
                    e.stopPropagation();
                    return $.growl.error({
                        title: "Error",
                        message: "Invalid From Date!"
                    });
                }
            }
            // Check if Date To is a valid Date
            if (to_date != null && to_date != 0 && to_date != "" && to_date != undefined) {
                if (!to_date.isValid()) {
                    isValid = false;
                    e.stopPropagation();
                    return $.growl.error({
                        title: "Error",
                        message: "Invalid To Date!"
                    });
                }
            }
            if ((from_date != null && from_date != 0 && from_date != "" && from_date != undefined) && (to_date != null && to_date != 0 && to_date != "" && to_date != undefined)) {
                if (from_date.isValid() && to_date.isValid()) {
                    if (to_date.diff(from_date, 'days') < 0) {
                        isValid = false;
                        var index = [];
                        index.push("select_date_from_app");
                        index.push("select_date_to_app");

                        $.each(index, function (i, v) {
                            if (index[i] != null && index[i] != "") {
                                var elem = $("#" + index[i]);
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                }
                                else {
                                    $(elem).addClass(" is-invalid");
                                }

                                setTimeout(function () {
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                    }
                                    else {
                                        $(elem).removeClass("is-invalid");
                                    }
                                }, 5000);
                            }
                        });

                        e.stopPropagation();

                        return $.growl.error({
                            title: "Error!",
                            message: "Filter From Date should be less than To Date!"
                        });
                    }
                }
            }


            var chq_from_date = $('#select_chq_date_from').val().trim();
            var chq_to_date = $('#select_chq_date_to').val().trim();

            // Check if Date From is a valid Date
            if (chq_from_date != null && chq_from_date != 0 && chq_from_date != "" && chq_from_date != undefined) {
                chq_from_date = moment($('#select_chq_date_from').val().trim(), 'DD-MMMM-YYYY');
                if (!chq_from_date.isValid()) {
                    isValid = false;
                    e.stopPropagation();
                    return $.growl.error({
                        title: "Error",
                        message: "Invalid Cheque From Date!"
                    });
                }
            }
            // Check if Date To is a valid Date
            if (chq_to_date != null && chq_to_date != 0 && chq_to_date != "" && chq_to_date != undefined) {
                chq_to_date = moment($('#select_chq_date_to').val().trim(), 'DD-MMMM-YYYY');
                if (!chq_to_date.isValid()) {
                    isValid = false;
                    e.stopPropagation();
                    return $.growl.error({
                        title: "Error",
                        message: "Invalid Cheque To Date!"
                    });
                }
            }

            if ((chq_from_date != null && chq_from_date != 0 && chq_from_date != "" && chq_from_date != undefined) && (chq_to_date != null && chq_to_date != 0 && chq_to_date != "" && chq_to_date != undefined)) {
                if (chq_from_date.isValid() && chq_to_date.isValid()) {
                    if (chq_to_date.diff(chq_from_date, 'days') <= 0) {
                        isValid = false;
                        var index = [];
                        index.push("select_date_from_app");
                        index.push("select_date_to_app");

                        $.each(index, function (i, v) {
                            if (index[i] != null && index[i] != "") {
                                var elem = $("#" + index[i]);
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                }
                                else {
                                    $(elem).addClass(" is-invalid");
                                }

                                setTimeout(function () {
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                    }
                                    else {
                                        $(elem).removeClass("is-invalid");
                                    }
                                }, 5000);
                            }
                        });

                        e.stopPropagation();

                        return $.growl.error({
                            title: "Error!",
                            message: "Cheque From Date should be less than To Date!"
                        });
                    }
                }
            }

            if (isValid) {
                search_Payments();
            }
        });
        //#endregion

        //#region Search Payments
        var search_Payments = function () {
            var from_date = $('#select_date_from').val().trim();
            var to_date = $('#select_date_to').val().trim();
            Get_AdvancePayments(from_date, to_date);
        }
        //#endregion

        //#region Load Advance Payments
        function Get_AdvancePayments(fromdate, todate) {

            var _data = {
                "pay_branch": $('#select_branch').val().toString(),
                "pay_supplier": $('#select_supplier').val(),
                "pay_code": $('#txt_code').val().trim(),
                "pay_status": $('#select_status').val().toString(),
                "pay_type": $('#select_type').val().toString(),
                "from_date": fromdate,
                "to_date": todate,
                "chq_from_date": $('#select_chq_date_from').val().trim(),
                "chq_to_date": $('#select_chq_date_to').val().trim()
            }
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetInvoicePayments", "PaymentAgainstInvoices", new { area = "MaterialManagement"})",
                dataType: 'json',
                data: _data,
                beforeSend: function () {
                    $('#progress-loader').show();
                },
                success: function (response) {
                    $('#searchFilter').collapse('hide');
                    if (response.isAuthorized != false) {
                        var table;
                        if ($.fn.dataTable.isDataTable('#tbl_invoicepayments')) {
                            table = $('#tbl_invoicepayments').DataTable();
                           table.clear();
                           table.rows.add(response).draw();
                        }
                        else {
                            BindDataTable(response);
                        }
                    }
                    $('#progress-loader').hide();
                },
                error: function (xhr) {
                    console.log(xhr);
                    $('#progress-loader').hide();
                }
            });
        }
        //#endregion

        //#region Bind Datatable
        var BindDataTable = function (response) {

            var table = $("#tbl_invoicepayments").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "mData": "payId",
                    },
                    {
                        "className": "td_max_width",
                        "mData": "branch_name"
                    },
                    {
                        "mData": "pay_code",
                    },
                    {
                        "mData": "pay_date",
                    },
                    {
                        "className": "td_max_width",
                        "mData": "supplier_invoice"
                    },
                    {
                        "className": "td_max_width",
                        "mData": "supplier_name",
                        "className": "font-weight-bold text-info",
                        "render": function (data, type, full, meta) {
                            return '<a data-bs-toggle="modal" data-bs-target="#SupplierHistory_modal" onclick="SupplierHistory(\'' + full.pay_supplier + '\',\'' + full.pay_branch + '\')">' + data + '</a>';
                        }
                    },
                    {
                        "mData": "pay_cash",
                        "orderable": false,
                        "searchable": false,
                    },
                    {
                        "mData": "pay_cc",
                        "orderable": false,
                        "searchable": false,
                    },
                    {
                        "mData": "pay_chq",
                        "orderable": false,
                        "searchable": false,
                    },
                    {
                        "className": "td_max_width",
                        "mData": "pay_chq_date",
                        "render": function (pay_chq_date, type, full, meta) {
                            if (full.pay_chq > 0) {
                                if (full.pay_chq_date != '01/01/1900')
                                    return '<span class="fw-bold">' + full.pay_chq_bank + '</span> <br> <span class="text-info fw-bold">' + full.pay_chq_no + " - " + full.pay_chq_date + '</span>'
                                else
                                    return '<span></span>'
                            }
                            else
                                return '<span></span>'
                        }
                    },
                    {
                        "mData": "pay_bt",
                        "orderable": false,
                        "searchable": false,
                    },
                    {
                        "mData": "pay_allocated",
                        "orderable": false,
                        "searchable": false,
                    },
                    {
                        "mData": "total_paid",
                        "orderable": false,
                        "searchable": false,
                    },
                    {
                        "mData": "pay_status",
                        "className": 'text-center',
                        "render": function (pay_status, type, full, meta) {
                            var pay_status = full.pay_status;
                            if (pay_status === "Cleared") {
                                return '<button type="button" class="badge rounded-pill bg-success mt-2 border-success" style="width: 60px;">Cleared</button>'
                            }
                            else if (pay_status === "Submitted") {
                                return '<button type="button" class="badge rounded-pill bg-warning mt-2 border-warning" style="width: 60px;">Submited</button>'
                            }
                            else if (pay_status === "Deleted") {
                                return '<button type="button" class="badge rounded-pill bg-danger mt-2 border-danger" style="width: 60px;">Deleted</button>'
                            }
                            else {
                                return ''
                            }
                        }
                    },
                    {
                        "mData": "madeby",
                        "orderable": false,
                        "searchable": false,
                    },
                    {
                        "mData": "payId",
                        "className": 'text-center',
                        "render": function (payId, type, full, meta) {
                            var pay_status2 = full.pay_status2;
                            if (pay_status2 === "Posted") {
                                return '<button type="button" class="badge rounded-pill bg-primary mt-2 border-primary" style="width: 60px;">Posted</button>'
                            }
                            else if (pay_status2 === "Pending") {
                                return '<button type="button" class="badge rounded-pill bg-info mt-2 border-info" style="width: 60px;">Pending</button>'
                            }
                            else if (pay_status2 === "Deleted") {
                                return '<button type="button" class="badge rounded-pill bg-danger mt-2 border-danger" style="width: 60px;">Deleted</button>'
                            }
                            else {
                                return ''
                            }
                        }
                    },
                    {
                        "className": "text-center",
                        "orderable": false,
                        "searchable": false,
                        "render": function (payId, type, full, meta) {
                            var status = full.pay_status2;
                            var status_2 = full.pay_status;
                            var html_links = '<div class="dropdown"><a type="button" class="" data-bs-toggle="dropdown"><i class="fe fe-more-vertical" style="font-size: 20px;"></i></a>' +
                                '<div class="dropdown-menu" style="min-width:auto">';
                            if (status_2 === "Deleted") {
                                html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PaymentAuditLog(\'' + full.pay_code + '\')" > <i class="fa fa-eye text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Log</a > ';
                            }
                            else {
                                if (status === "Pending" && full.pay_allocated == 0 && full.pay_refunded == 0) {
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="EditPayment(' + full.payId + ')"><i class="fe fe-edit-2 text-success" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Edit</a>';
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="UpdateStatus(\'' + full.payId + '\',\'' + full.pay_type + '\',\'' + full.pay_invoice + '\',\'' + full.pay_supplier + '\',\'Deleted\')"><i class="fe fe-trash text-danger" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Delete</a>';
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PrintPayments(\'' + full.payId + '\')" > <i class="fa fa-print text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Print</a > ';
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PaymentAuditLog(\'' + full.pay_code + '\')" > <i class="fa fa-eye text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Log</a > ';
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PaymentDocs(\'' + full.payId + '\',\'' + full.pay_code + '\')"><i class="fa fa-folder-open-o text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Documents</a>';
                                }
                                else if (status === "Pending") {
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PrintPayments(\'' + full.payId + '\')" > <i class="fa fa-print text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Print</a > ';
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PaymentAuditLog(\'' + full.pay_code + '\')" > <i class="fa fa-eye text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Log</a > ';
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PaymentDocs(\'' + full.payId + '\',\'' + full.pay_code + '\')"><i class="fa fa-folder-open-o text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Documents</a>';
                                }
                                else if (status === "Verified") {
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PrintPayments(\'' + full.payId + '\')" > <i class="fa fa-print text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Print</a > ';
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PaymentAuditLog(\'' + full.pay_code + '\')" > <i class="fa fa-eye text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Log</a > ';
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PaymentDocs(\'' + full.payId + '\',\'' + full.pay_code + '\')"><i class="fa fa-folder-open-o text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Documents</a>';
                                }
                                else if (status === "Posted") {
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PrintPayments(\'' + full.payId + '\')" > <i class="fa fa-print text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Print</a > ';
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PaymentAuditLog(\'' + full.pay_code + '\')" > <i class="fa fa-eye text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Log</a > ';
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PaymentDocs(\'' + full.payId + '\',\'' + full.pay_code + '\')"><i class="fa fa-folder-open-o text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Documents</a>';
                                }
                                else {
                                    html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PaymentAuditLog(\'' + full.pay_code + '\')" > <i class="fa fa-eye text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Log</a > ';
                                }
                            }
                            html_links += '</div></div>';
                            return html_links;
                        }
                    },
                    {
                        "mData": "pay_chq_bank",
                        "orderable": false,
                        "searchable": false,
                    },
                    {
                        "mData": "pay_chq_no",
                        "orderable": false,
                        "searchable": false,
                    },
                    {
                        "mData": "pay_chq_date",
                        "orderable": false,
                        "searchable": false,
                    },
                    {
                        "mData": "pay_notes",
                        "orderable": false,
                        "searchable": false,
                    },
                ],
                "aoColumnDefs": [
                    {
                        "aTargets": [0],
                        "orderable": false,
                        "searchable": false,
                        "className": "select-checkbox text-center inbox-small-cells",
                        'checkboxes': {
                            'selectRow': true
                        }
                    },
                    {
                        "aTargets": [6],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [7],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [8],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [10],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [11],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [12],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [14],
                        "visible": false

                    },
                    {
                        "aTargets": [17],
                        "visible": false

                    },
                    {
                        "aTargets": [18],
                        "visible": false

                    },
                    {
                        "aTargets": [19],
                        "visible": false

                    },
                    {
                        "aTargets": [20],
                        "visible": false

                    },
                ],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                order: [[2, 'desc']],
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Purchase Invoice Payments Detail',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 17, 18, 19, 10, 11, 12, 13, 14, 15, 20]
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Purchase Invoice Payments Detail',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 17, 18, 19, 10, 11, 12, 13, 14, 15, 20]
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Purchase Invoice Payments Detail',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 17, 18, 19, 10, 11, 12, 13, 14, 15, 20]
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Purchase Invoice Payments Detail',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 17, 18, 19, 10, 11, 12, 13, 14, 15, 20]
                        }
                    }
                ],
                language: {
                    searchPlaceholder: 'Search...',
                    zeroRecords: "No Record Match - Sorry",
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Code / Date / Branch / Accounts </span>',
                    sEmptyTable: '<span class="text-secondary">No Records Available Based On Request</span>',
                    scrollX: "100%",
                    lengthMenu: '_MENU_',
                },
                "drawCallback": function () {
                    $("#tbl_invoicepayments tr").each(function () {
                        if ($(this).find("td:eq(13)").text().trim() === "Deleted" || $(this).find("td:eq(14)").text().trim() === "Posted") {
                            $($(this)).find("td:eq(0)").find("input[type='checkbox']").remove();
                        }

                    });
                },
                footerCallback: function (row, data, start, end, display) {
                    var api = this.api();

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                    };
                    var numFormat = $.fn.dataTable.render.number('\,', '.', 2, '').display;

                    // Total Cash
                    _cash = api.column(6).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(6).footer()).html(numFormat(_cash));

                    // Total Card
                    _card = api.column(7).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(7).footer()).html(numFormat(_card));

                    // Total Cheque
                    _chq = api.column(8).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(8).footer()).html(numFormat(_chq));

                    // Total Bank Transfer
                    total_bt = api.column(10).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(10).footer()).html(numFormat(total_bt));

                    // Total Paid
                    total_ = api.column(11).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(11).footer()).html(numFormat(total_));

                    // Total Paid
                    total_ = api.column(12).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(12).footer()).html(numFormat(total_));

                }
            });
            table.buttons().container().appendTo('#tbl_invoicepayments_wrapper .col-md-6:eq(0)');
        }
        //#endregion Bind Datatable

        //#region Add Advance Payment
        $('#btn_AddPayment').click(function () {
            $("#spinner2").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("CreatePaymentInvoice", "PaymentAgainstInvoices", new { area = "MaterialManagement" })",
                contentType: "application/json",
                dataType: "html",
                success: function(data)
                {
                    $("#add_advancepayment_body").html(data);
                    $("#add_advancepayment_modal").modal("show");
                },
                error : function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    // Hide spinner when request is complete
                    $("#spinner2").hide();
                }
            });
        });
        //#endregion

        //#region Alert Timeout
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
        //#endregion Alert Timeout

        //#region Print Payment
        var PrintPayments = function (payId) {
            window.open("@Url.Action("PrintPayment", "PaymentAgainstInvoices", new { area = "MaterialManagement" })?payId=" + payId, "Purchase Invoice Payment Print");

        };
        //#endregion

        //#region Payment Audit Logs
        var PaymentAuditLog = function (pay_code) {
            $("#spinner2").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("PaymentAuditLogs", "PaymentAgainstInvoices", new { area = "MaterialManagement" })?pay_code=" + pay_code,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#paymentAuditLog_body").html(data);
                    $("#paymentAuditLog_modal").modal("show");
                },
                error: function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    // Hide spinner when request is complete
                    $("#spinner2").hide();
                }
            });
        };
        //#endregion

        //#region Payment Edit
        var EditPayment = function (payId) {
            $("#spinner2").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("EditPayment", "PaymentAgainstInvoices", new { area = "MaterialManagement" })?payId=" + payId,
                contentType: "application/json",
                dataType: "html",
                success: function (response) {
                    $("#edit_payment_body").html(response);
                    $("#edit_payment_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                    $("#spinner2").hide();
                },
                complete: function () {
                    // Hide spinner when request is complete
                    $("#spinner2").hide();
                }
            });
        }
        //#endregion

        //#region Payment Documents
        var PaymentDocs = function (payId, pay_code) {
            $("#spinner2").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("Payment_Documents", "PaymentAgainstInvoices", new { area = "MaterialManagement" })?payId=" + payId + "&pay_code=" + pay_code,
                contentType: "application/json",
                dataType: "html",
                success: function (response) {
                    $("#payment_documents_body").html(response);
                    $("#payment_documents_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                    $("#spinner2").hide();
                },
                complete: function () {
                    // Hide spinner when request is complete
                    $("#spinner2").hide();
                }
            });
        }
        //#endregion

        //#region Verify Materials Consumption
        $('#btnVerify').click(function () {
            var table = $("#tbl_invoicepayments").DataTable();
            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));
            if (rows.length > 0) {
                Swal.fire({
                    title: "Are you sure you want to Verified ?",
                    text: "This action will Vefiry the selected Items",
                    icon: "question",
                    showCancelButton: !0,
                    confirmButtonText: 'Yes! I Confirm',
                    cancelButtonText: 'No! Cancel Please',
                    confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
                }).then(function (t) {
                    if (t.value) {
                        var _Ids = "";
                        $.each(rows, function (index, rowId) {
                            var _data = table.row(rowId).data();
                            if (index == 0)
                                _Ids = _data.scrId;
                            else
                                _Ids += "," + _data.scrId;
                        });
                        if (_Ids === null || _Ids === undefined || _Ids.length <= 0) {
                            Swal.fire({
                                title: "Alert!",
                                text: "Row Selection Error. Please Refresh Page And Try Again!",
                                icon: "info",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                        else {
                            Updatefunction(_Ids, 'Verified');
                        }
                    }
                });
            }
            else {
                Swal.fire({
                    title: "Alert!",
                    text: "Please select at least one item to Verify!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                });
            }
        });
        //#endregion

        //#region Update Payment Status
        var UpdateStatus = function (payId, pay_type, pay_invoice, pay_supplier) {
            Swal.fire({
                title: "Are you sure you want to Delete ?",
                text: "This action will delete the selected Payment!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: "@Url.Action("DeletePayment", "PaymentAgainstInvoices", new { area = "MaterialManagement" })?payId=" + payId + "&pay_invoice=" + pay_invoice + "&pay_supplier=" + pay_supplier,
                        type: "POST",
                        dataType: "JSON",
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.isSuccess) {
                                    Swal.fire({
                                        title: "Success!",
                                        text: "Payment is Deleted Successfully!",
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        title: "Error!",
                                        text: "Failed to Delete the Payment!",
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to delete this Payment!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                            search_Payments();

                        },
                        error: function (xhr) {
                            console.log(xhr);
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Change Status! Please refresh the Page and Try Again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            })
                        }
                    }).done(function () {
                    });
                }
            });
        };

        var Updatefunction = function (scrId, scr_status) {
            $.ajax({
                url: "@Url.Action("MaterialConsumption_Status", "DirectPayments", new { area = "MaterialManagement" })?data=" + scrId + "&status=" + scr_status,
                type: "POST",
                dataType: "JSON",
                success: function (data) {
                    return_value = data.isUpdated;
                    if (return_value > 0) {
                        title = "Success!";
                        text = "Status Changed Successfully!";
                        icon = "success";
                    }
                    else if (return_value == -2) {
                        title = "Warning!";
                        text = "Some Allocated Qty Excceds The Batches Qty!";
                        icon = "warning";
                    }
                    else if (return_value == -1) {
                        title = "Error!";
                        text = "Allocated Qty Excceds Batch Qty!";
                        icon = "error";

                    }
                    else {
                        title = "Error!";
                        text = data.message;
                        icon = "error";
                    }

                    if (title != '' && text != '' && icon != '') {
                        Swal.fire({
                            title: title,
                            text: text,
                            icon: icon,
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                        });
                        search_Payments();
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    Swal.fire({
                        title: "Error!",
                        text: "Failed to Change Status! Please refresh the Page and Try Again.",
                        icon: "error",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                    })
                }
            }).done(function () {
            });
        }
        //#endregion

        //#region Post Payments To Account
        $('#btnPostAccount').click(function () {
            var table = $("#tbl_invoicepayments").DataTable();
            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));
            if (rows.length > 0) {
                Swal.fire({
                    title: "Are you sure you want to Post ?",
                    text: "This action will post the selected Payment(s) to chart of account!",
                    icon: "question",
                    showCancelButton: !0,
                    confirmButtonText: 'Yes! I Confirm',
                    cancelButtonText: 'No! Cancel Please',
                    confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
                }).then(function (t) {
                    if (t.value) {
                        var _Ids = "";
                        $.each(rows, function (index, rowId) {
                            var _data = table.row(rowId).data();
                            if (index == 0)
                                _Ids = _data.payId;
                            else
                                _Ids += "," + _data.payId;
                        });
                        if (_Ids === null || _Ids === undefined || _Ids.length <= 0) {
                            Swal.fire({
                                title: "Alert!",
                                text: "Row Selection Error. Please Refresh Page And Try Again!",
                                icon: "info",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                        else {
                            PostToAccount(_Ids);
                        }
                    }
                });
            }
            else {
                Swal.fire({
                    title: "Alert!",
                    text: "Please select at least one Payemnt to post!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                });
            }
        });

        var PostToAccount = function (pinvId) {

            $.ajax({
                url: "@Url.Action("PostPaymentToAccount", "PaymentAgainstInvoices", new { area = "MaterialManagement" })?data=" + pinvId,
                type: "POST",
                dataType: "JSON",
                success: function (data) {
                    if (data.isUpdated) {
                        Swal.fire({
                            title: "Success!",
                            text: "Posted Successfully!!",
                            icon: "success",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                        });
                        search_Payments();
                    }
                    else {
                        Swal.fire({
                            title: "Error!",
                            text: data.message,
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                        });
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    Swal.fire({
                        title: "Error!",
                        text: "Failed to Post to Account! Please refresh the Page and Try Again.",
                        icon: "error",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                    })
                }
            });
        };
        //#endregion

        //#region Supplier History
        var SupplierHistory = function (supId, sup_branch) {
            $("#spinner2").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("SupplierHistory", "Supplier", new { area = "MaterialManagement" })?supId=" + supId + "&sup_branch=" + sup_branch ,
                contentType: "application/json",
                dataType: "html",
                //data: app,
                success: function (data) {
                    $("#SupplierHistory_body").html(data);
                    $("#SupplierHistory_modal").modal("show");
                },
                error: function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    // Hide spinner when request is complete
                    $("#spinner2").hide();
                }
            });
        };
        //#endregion

        //#region Remove Valiate Error Class Timeout
        function Error_Timeout(_id) {
            setTimeout(function () {
                $(".has-error").removeClass("has-error");
                $(".error").removeClass("error");
                $("#" + _id + "-error").text("");
            }, 4200);
        }
    //#endregion

        //#region UI Controls
        function resizedt(tbl_name) {
            setTimeout(function () {
                var tables = $.fn.dataTable.tables({ visible: true, api: true });
                if (tables) {
                    $('#' + tbl_name).DataTable().columns.adjust();
                }
            }, 450);
        }
//#endregion
    </script>
}