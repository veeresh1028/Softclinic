@model IEnumerable<BusinessEntities.Accounts.Masters.ItemLocation>
@{
    ViewBag.Title = "Accounts & Material Management - Item Location";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary">
            <span data-lang-key="stock-locations">Stock Locations</span></h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list">
            <a href="" id="btn_Add_ItemLocation" data-bs-toggle="modal" data-bs-target="#ItemLocation_modal" class="btn btn-secondary" onclick="AddItemLocation()"><i class="mdi mdi-plus"><span data-lang-key="add-stock-location">&nbsp;Add Stock Location</span></i></a>
        </div>
    </div>
</div>
<div class="row">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                <strong>Error!&nbsp;</strong>@TempData["ErrorMessage"]
            </div>
        </div>
    }
    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="ItemLocationAlert"></div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div id="progress-loader" style="display:none;">
                    <div class="progress progress-sm mb-3">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-teal progress-bar-indeterminate"></div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tbl_itemlocation" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="id">ID</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="stock-locations">Stock Location</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="status">Status</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="edit">Edit</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="delete">Delete</span></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@* popup Model *@
<div class="modal fade" id="ItemLocation_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" id="size">
        <div class="modal-content" id="ItemLocation_body">
        </div>
    </div>
</div>

<script>
    //#region Page Load
    $(function () {
        GetItemLocation();
    });
    //#endregion Page Load

    //#region Load Item Location
    function GetItemLocation() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetItemLocation", "ItemLocation", new { area = "MaterialManagement"})",
                beforeSend: function () {
                    $('#progress-loader').show();
                },
                success: function (response) {
                    if (response.isAuthorized != false) {
                        var table;
                        if ($.fn.dataTable.isDataTable('#tbl_itemlocation')) {
                            table = $('#tbl_itemlocation').DataTable();
                            table.clear();
                            table.rows.add(response).draw();
                        }
                        else {
                            BindDataTable(response);
                        }
                    }
                    $('#progress-loader').hide();
                },
                error: function (xhr) {
                    console.log(xhr);
                    $('#progress-loader').hide();
                }
            });
    }
    //#endregion

    //#region Bind Datatable
    var BindDataTable = function (response) {
        var table = $("#tbl_itemlocation").DataTable({
            fixedHeader: {
                header: true,
                footer: true
            },
            processing: true,
            "deferRender": true,
            "pageLength": 100,
            "retrieve": true,
            lengthChange: true,
            scrollX: true,
            scrollY: 500,
            scrollCollapse: true,
            "aaData": response,
            "aoColumns": [
                {
                    "mData": "ilId",
                    "render": function (data, type, full, meta) {
                        var ilId = full.ilId;
                        return '<a data-bs-toggle="modal" data-bs-target="#ItemLocation_modal">' + data + '</a>';
                    }
                },
                {
                    "mData": "il_location"
                },
                {
                    "mData": "ilId",
                    "className": 'text-center',
                    "render": function (ilId, type, full, meta) {
                        var visible = full.actionvisible;
                        var il_status = full.il_status;
                        if (visible === "True") {
                            if (il_status === "Active") {
                                return '<button type="button" class="badge rounded-pill bg-success mt-2 border-success" style="width: 60px;" onclick="ChangeStatus(\'' + ilId + '\',\'Active\')">Active</button>'
                            }
                            else if (il_status === "Inactive") {
                                return '<button type="button" class="badge rounded-pill bg-warning mt-2 border-warning" style="width: 60px;" onclick="ChangeStatus(\'' + ilId + '\',\'Inactive\')">Inactive</button>'
                            }
                            else if (il_status === "Deleted") {
                                return '<button type="button" class="badge rounded-pill bg-danger mt-2 border-danger" style="width: 60px;" onclick="ChangeStatus(\'' + ilId + '\',\'Deleted\')">Deleted</button>'
                            }
                            else {
                                return ''
                            }
                        }
                        else {
                            return '<span class="badge rounded-pill text-danger mt-2 border-danger">Allocated</span>'
                        }
                    }
                },
                {
                    "mData": "ilId",
                    "className": 'text-center',
                    "orderable": false,
                    "searchable": false,
                    "render": function (data, type, full, meta) {
                        var status = full.il_status;
                        var visible = full.actionvisible;
                        if (status === "Active" && visible === "True") {
                            return '<button type="button" data-bs-toggle="modal" data-bs-target="#ItemLocation_modal" onclick="EditItemLocation(' + data + ')" class="btn btn-sm btn-outline-primary">Edit</button>';
                        }
                        else {
                            return ''
                        }
                    }
                },
                {
                    "mData": "ilId",
                    "className": 'text-center',
                    "orderable": false,
                    "searchable": false,
                    "render": function (ilId, type, full, meta) {
                        var status = full.il_status;
                        var visible = full.actionvisible;
                        if (status === "Active" && visible === "True") {
                            return '<button type="button" onclick="UpdateStatus(\'' + ilId + '\',\'Deleted\')" class="btn btn-sm btn-outline-danger">Delete</button>';
                        }
                        else {
                            return '';
                        }
                    }
                }
            ],
            order : [[0, 'asc']],
            buttons: [
                {
                    extend: 'excel',
                    title: 'Stock Locations',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Stock Locations',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2]
                    }
                },
                {
                    extend: 'csv',
                    title: 'Stock Locations',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2]
                    }
                },
                {
                    extend: 'print',
                    title: 'Stock Locations',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2]
                    }
                }
            ],
            language: {
                searchPlaceholder: 'Search...',
                scrollX: "100%",
                zeroRecords: "No Record Match - Sorry",
                infoEmpty: "No Records Available",
                sSearch: '<span class="text-primary font-weight-semi-bold">Search By ID / Name / Status</span>',
                lengthMenu: '_MENU_ ',
                sEmptyTable: '<span class="text-secondary">No Records Available Based On Request</span>',
            }
        });
        table.buttons().container().appendTo('#tbl_itemlocation_wrapper .col-md-6:eq(0)');
    }
    //#endregion

    //#region Add Item Location
    function AddItemLocation() {
        $.ajax({
            type: "GET",
            url: "@Url.Action("CreateItemLocation", "ItemLocation", new { area = "MaterialManagement" })",
            contentType: "application/json",
            dataType: "html",
            success: function (data) {
                $("#ItemLocation_body").html(data);
                $("#ItemLocation_modal").modal("show");
            },
            error: function (xhr) {
                console.log(xhr);
                $("#spinner2").hide();
            },
            complete: function () {
                // Hide spinner when request is complete
                $("#spinner2").hide();
            }
        });
    }
    //#endregion

    //#region Edit Item Location
    function EditItemLocation(ilId) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("EditItemLocation", "ItemLocation", new { area = "MaterialManagement" })?ilId=" + ilId,
            contentType: "application/json",
            dataType: "html",
            success: function (data) {
                $("#ItemLocation_body").html(data);
                $("#ItemLocation_modal").modal("show");
            },
            error: function (xhr) {
                console.log(xhr);
                $("#spinner2").hide();
            },
            complete: function () {
                // Hide spinner when request is complete
                $("#spinner2").hide();
            }
        });
    }
    //#endregion

    //#region Change Status
    function ChangeStatus(ilId, il_status) {
        if (il_status != "Deleted")
            il_status = (il_status == "Inactive") ? "Active" : "Inactive"
        else
            il_status = "Active"
        UpdateStatus(ilId, il_status)
    }
    //#endregion

    //#region Update Item Location Status
    var UpdateStatus = function (ilId, il_status) {
        var _title = "";
        var _text = "";
        if (il_status == "Deleted") {
            _title = "Are you sure you want to Delete ?";
            _text = "This action will delete the selected Stock Location!";
        }
        else {
            _title = "Are you sure you want to change status ?";
            _text = "This action will change the status of the selected Stocks Location to " + il_status;
        }
        Swal.fire({
            title: _title,
            text: _text,
            icon: "question",
            showCancelButton: !0,
            confirmButtonText: 'Yes! I Confirm',
            cancelButtonText: 'No! Cancel Please',
            confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
        }).then(function (t) {
            if (t.value) {
                $.ajax({
                    url: "@Url.Action("UpdateItemLocation_Status", "ItemLocation", new { area = "MaterialManagement" })?ilId=" + ilId + "&il_status=" + il_status,
                    type: "POST",
                    dataType: "JSON",
                    success: function (data) {
                        if (data.isAuthorized) {
                            if (data.success) {
                                Swal.fire({
                                    title: "Success!",
                                    text: "Status Changed Successfully!!",
                                    icon: "success",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                                })
                                GetItemLocation();
                            }
                            else {
                                Swal.fire({
                                    title: "Error!",
                                    text: data.message,
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        }
                        else {
                            Swal.fire({
                                title: "Access Denied!",
                                text: "You do not have enough privileges to perform this action!",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: "Error!",
                            text: "Failed to Change Status! Please refresh the Page and Try Again.",
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                        })
                    }
                });
            }
        });
    }
    //#endregion

    //#region Alert Timeout
    function Timeout() {
        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 4200);
    }
    //#endregion

</script>
