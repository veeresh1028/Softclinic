
@model BusinessEntities.Accounts.Masters.Items

<div class="modal-header">
    <h5 class="modal-title text-primary font-weight-semibold" id="exampleModalLongTitle">Add Stock Item</h5>
    <button aria-label="Close" data-bs-dismiss="modal" class="btn-close close-item" type="button"><span aria-hidden="true">×</span></button>
</div>
<div class="modal-body p-4">
    <form id="form_Additem" >
        <div class="row">
            <div class="col-sm-12 col-md-6 col-lg-3">
                <div class="form-group">
                    <label class="form-label text-black">Branch&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownList("item_branch", (IEnumerable<SelectListItem>)ViewData["BranchList"], "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-3">
                <div class="form-group">
                    <label class="form-label text-black">Code/Barcode</label>
                    <input id="itemCode" name="itemCode" class="form-control" placeholder="Ex : IT-00001" maxlength="48" />
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-3">
                <div class="form-group">
                    <label class="form-label text-black">Type&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(model => model.item_type, new List<SelectListItem>
                       {
                          new SelectListItem{ Text="Stock", Value = "Stock" },
                          new SelectListItem{ Text="Service", Value = "Service" },
                          new SelectListItem{ Text="Fixed Asset", Value = "Fixed" },
                       }, "Select Type", new { @class = "form-control select2" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-3">
                <div class="form-group">
                    <label class="form-label text-black">Group&nbsp;<span class="text-danger">*</span>  <a id="btnAddStockGroup" style="cursor: pointer"><i class="fa fa-plus text-success"></i></a></label>
                    @Html.DropDownListFor(m => m.item_category, new List<SelectListItem>
   { }, "Select Group", new { @class = "form-control select2" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-3">
                <div class="form-group">
                    <label class="form-label text-black">Location&nbsp;<span class="text-danger">*</span>  <a id="btnAddStockLocation" style="cursor: pointer"><i class="fa fa-plus text-success"></i></a></label>
                    @Html.DropDownList("item_location", (IEnumerable<SelectListItem>)ViewData["lcoationList"], "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-3">
                <div class="form-group">
                    <label class="form-label text-black">Name&nbsp;<span class="text-danger">*</span></label>
                    <input id="itemName" name="itemName" class="form-control" placeholder="Ex : Paracetamol" maxlength="1450" />
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-3">
                <div class="form-group">
                    <label class="form-label text-black">VAT %&nbsp;<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(model => model.item_vat, new { @class = "form-control mb-4 text-right", @placeholder = "0.00", @style = "width:100%;", maxlength = "5", @onkeypress = "return validateOneDecimalNumeric2(this,event);" })
                </div>
            </div>
            <div class="ccol-sm-12 col-md-6 col-lg-3">
                <div class="form-group">
                    <label class="form-label text-black">Brand</label>
                    @Html.TextBoxFor(model => model.item_brand, new { @class = "form-control mb-4", @placeholder = "Ex : ADOL", @style = "width:100%;", maxlength = "1450" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-3">
                <div class="form-group">
                    <label class="form-label text-black">Dosage</label>
                    @Html.TextBoxFor(model => model.item_dosage, new { @class = "form-control", @placeholder = "Ex : SYRUP (100ML, BOTTLE)", maxlength = "1450" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-3">
                <div class="form-group">
                    <label class="form-label text-black">Strength</label>
                    @Html.TextBoxFor(model => model.item_strength, new { @class = "form-control", @placeholder = "Ex : ORAL", maxlength = "480" })
                </div>
            </div>

            <div class="col-sm-12 col-md-6 col-lg-3">
                <div class="form-group">
                    <label class="form-label text-black">Description</label>
                    @Html.TextAreaFor(model => model.item_desc, new { @class = "form-control", maxlength = "248", rows = "1" })
                </div>
            </div>
            <div class="col-sm-6 col-md-4 col-lg-1">
                <div class="form-group">
                    <label class="form-label text-black">Min Qty&nbsp;<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(model => model.item_min_qty, new { @class = "form-control mb-4 text-right", @placeholder = "0.00", @style = "width:100%;", Text= "0", maxlength = "5", @onkeypress = "return validateOneDecimalNumeric2(this,event);" })
                </div>
            </div>
            <div class="col-sm-6 col-md-4 col-lg-1">
                <div class="form-group">
                    <label class="form-label text-black">Max Qty&nbsp;<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(model => model.item_max_qty, new { @class = "form-control mb-4 text-right", @placeholder = "0.00", @style = "width:100%;", maxlength = "5", @onkeypress = "return validateOneDecimalNumeric2(this,event);" })
                </div>
            </div>
        </div>

        <div class="card" style="border:1px solid #517983 !important; padding:10px;">
            <div class="row">
                <div class="col-sm-6 col-md-4 col-lg-3">
                    <div class="form-group">
                        <label class="form-label">Level 0 Detail&nbsp;<span class="text-danger">*</span></label>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.item_cost, new { @class = "form-control text-right", @placeholder = "0.00", maxlength = "10", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
                            <div class="input-group-append" style="max-width: 70%;">
                                @Html.DropDownList("itemUOM", (IEnumerable<SelectListItem>)ViewData["UOMList"], "Please Select", new { @class = "form-select select2" })
                                @Html.TextBoxFor(model => model.item_sprice, new { @class = "form-control text-right", @placeholder = "0.00", maxlength = "10", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
                            </div>
                        </div>
                        <div class="valid-feedback" style="color: #3904dc; display: block; ">
                            Cost Price - UOM   <a id="btnAddStockUOM" style="cursor: pointer"><i class="fa fa-plus text-success" style="font-size: larger !important;"></i></a> - Sale Price
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-md-4 col-lg-1">
                    <div class="form-group">
                        <label class="form-label">M Factor #1&nbsp;<span class="text-danger">*</span></label>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.item_m_factor, new { @class = "form-control text-right", @placeholder = "1", maxlength = "5" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-md-4 col-lg-3">
                    <div class="form-group">
                        <label class="form-label">Level 1 Detail&nbsp;<span class="text-danger">*</span></label>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.item_cost2, new { @class = "form-control text-right", @placeholder = "0.00", maxlength = "10", @onkeypress = "return validateOneDecimalNumeric(this,event);", @readonly = "true" })
                            <div class="input-group-append" style="max-width: 70%;">
                                @Html.DropDownList("itemUOM2", (IEnumerable<SelectListItem>)ViewData["UOMList"], "Please Select", new { @class = "form-select select2" })
                                @Html.TextBoxFor(model => model.item_sprice2, new { @class = "form-control text-right", @placeholder = "0.00", maxlength = "10", @onkeypress = "return validateOneDecimalNumeric(this,event);", @readonly = "true" })
                            </div>
                        </div>
                        <div class="valid-feedback" style="color: #3904dc; display: block; ">
                            Cost Price - UOM - Sale Price
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-md-4 col-lg-1">
                    <div class="form-group">
                        <label class="form-label">M Factor #2&nbsp;<span class="text-danger">*</span></label>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.item_m_factor2, new { @class = "form-control text-right", @placeholder = "1", maxlength = "5" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-md-4 col-lg-3">
                    <div class="form-group">
                        <label class="form-label">Level 2 Detail&nbsp;<span class="text-danger">*</span></label>
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.item_cost3, new { @class = "form-control text-right", @placeholder = "0.00", maxlength = "10", @onkeypress = "return validateOneDecimalNumeric(this,event);", @readonly = "true" })
                            <div class="input-group-append" style="max-width: 70%;">
                                @Html.DropDownList("itemUOM3", (IEnumerable<SelectListItem>)ViewData["UOMList"], "Please Select", new { @class = "form-select select2" })

                                @Html.TextBoxFor(model => model.item_sprice3, new { @class = "form-control text-right", @placeholder = "0.00", maxlength = "10", @onkeypress = "return validateOneDecimalNumeric(this,event);", @readonly = "true" })
                            </div>
                        </div>
                        <div class="valid-feedback" style="color: #3904dc; display: block; ">
                            Cost Price - UOM - Sale Price
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12 col-md-6 col-lg-3">
                <label class="form-label">Item Image&nbsp;<a style="cursor:pointer" id="viewFooter"></a></label>
                <div class="input-group file-browser mb-5">
                    <input type="text" class="form-control browse-file" placeholder="Choose Item Image" readonly>
                    <label class="input-group-text btn btn-primary">
                        Browse <input type="file" id="item_image" name="item_image" class="file-browserinput" placeholder="Choose item image" style="display: none;" accept=".jpg, .png, image/jpeg, image/png, .gif" size="1000000">
                    </label>
                </div>
                <span class="text-red">Allowed format jpg, png, gif</span>
            </div>
        </div>

        <div class="row mt-2">
            <div id="create_item_error"></div>
            <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center text-center mt-2">
                <div id="CreateItems_Alert"></div>
            </div>
            <div class="col-sm-12 col-md-12 col-lg-12 text-center">
                <button type="submit" class="btn btn-success" id="btn_InsertItem">Add</button>
                <button type="button" class="btn btn-outline-danger me-1 close-item" data-bs-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </form>
</div>

<script type="text/javascript">
    var _fromItem = $('#items_modal').attr("data-modal-from");

    //#region Page Load
    $(function () {
        $('#item_branch').select2({
            minimumResultsForSearch: '',
            dropdownParent: $('#form_Additem'),
            width: '100%'
        });
        $('#item_category').select2({
            minimumResultsForSearch: '',
            dropdownParent: $('#form_Additem'),
            width: '100%'
        });
        $('#item_type').select2({
            minimumResultsForSearch: '',
            dropdownParent: $('#form_Additem'),
            width: '100%'
        });
        $('#item_location').select2({
            minimumResultsForSearch: '',
            dropdownParent: $('#form_Additem'),
            width: '100%'
        });
        $("#itemUOM").select2({
            placeholder: 'Select UOM',
            width: '100%',
            dropdownParent: $('#form_Additem')
        });
        $("#itemUOM2").select2({
            placeholder: 'Select UOM',
            width: '100%',
            dropdownParent: $('#form_Additem')
        });
        $("#itemUOM3").select2({
            placeholder: 'Select UOM',
            width: '100%',
            dropdownParent: $('#form_Additem')
        });

        $('#item_m_factor').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9+]/g))
                return false;
        });
        $('#item_m_factor2').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9+]/g))
                return false;
        });
        $("#item_m_factor").val('1');
        $("#item_m_factor2").val('1');
        $("#item_vat").val('0');

        validation();
    });
    //#endregion

    //#region Load Item Group on Branch Change
    $('#item_branch').on('select2:select', function (e) {
        $('#item_category').empty();
        var branchId = $('#item_branch').val();
        if (branchId.length > 0) {
            $.ajax({
                url: '@Url.Action("GetItemGroup", "CentralStore", new { area = "MaterialManagement" })?branchId=' + branchId,
                type: "GET",
                contentType: "application/json",
                dataType: "json",
                success: function (response) {
                    if (response.length > 0) {
                        $.each(response, function (j) {
                            var newOption = new Option(response[j].Text, response[j].Value, (parseInt(response[j].Value) === 1) ? true : false, (parseInt(response[j].Value) === 1) ? true : false);
                            $('#item_category').append(newOption).trigger('change');
                        });
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr);
                }
            });
        }
    });

    //#endregion

    //#region Item Image Size Check
    document.getElementById('item_image').addEventListener('change', function (event) {
        var file = this.files[0];
        if (file) {
            if (file.size > 1000000) {
                this.value = '';
                Swal.fire({
                    title: "Alert!",
                    text: "Uploading an image larger than 1MB is not allowed.",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197",
                    cancelButtonColor: "#ff3d60",
                });
            }
            var selectedFile = event.target.files[0];
            if (selectedFile) {
                document.querySelector('.browse-file').value = selectedFile.name;
            }
        }
    });
    //#endregion

    //#region Validate Text Box with One Decimal and numeric only on Key Press
    function validateOneDecimalNumeric(el, evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        var number = el.value.split('.');
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        //just one dot
        if (number.length > 1 && charCode == 46) {
            return false;
        }
        //get the Current position
        var caratPos = getSelectionStart(el);
        var dotPos = el.value.indexOf(".");
        if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {
            return false;
        }
        return true;
    }
    function validateOneDecimalNumeric2(el, evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        var number = el.value.split('.');
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        //just one dot
        if (number.length > 1 && charCode == 46) {
            return false;
        }
        //get the Current position
        var caratPos = getSelectionStart(el);
        var dotPos = el.value.indexOf(".");
        if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {
            return false;
        }
        //if (el.value > 10)
        //    return false;

        return true;
    }
    function getSelectionStart(o) {
        if (o.createTextRange) {
            var r = document.selection.createRange().duplicate()
            r.moveEnd('character', o.value.length)
            if (r.text == '') return o.value.length
            return o.value.lastIndexOf(r.text)
        } else return o.selectionStart
    }

    //#endregion

    //#region caluclation

    $('#item_m_factor').change(function () {
        let vat = $("#item_m_factor").val();
        if (vat.length > 0) {
            if (parseFloat(vat) <= 0)
                $("#item_m_factor").val('1');
        }
        else
            $("#item_m_factor").val('1');
    });
    $('#item_m_factor2').change(function () {
        let vat = $("#item_m_factor2").val();
        if (vat.length > 0) {
            if (parseFloat(vat) <= 0)
                $("#item_m_factor2").val('1');
        }
        else
            $("#item_m_factor2").val('1');
    });

    $('#item_cost').keyup(function () {
        costCalculation();
    });

    $('#item_sprice').keyup(function () {
        priceCalculation();
    });
    $('#item_m_factor').keyup(function () {
        costCalculation();
        priceCalculation();
    });
    $('#item_m_factor2').keyup(function () {
        costCalculation();
        priceCalculation();
    });

    function costCalculation() {
        let cost = $('#item_cost').val();
        let m_factor = $('#item_m_factor').val();
        let m_factor2 = $('#item_m_factor2').val();
        let cost2 = parseFloat(cost / m_factor);
        let cost3 = parseFloat(cost2 / m_factor2);
        $('#item_cost2').val(cost2);
        $('#item_cost3').val(cost3);
    }
    function priceCalculation() {
        let sprice = $('#item_sprice').val();
        let m_factor = $('#item_m_factor').val();
        let m_factor2 = $('#item_m_factor2').val();
        let sprice2 = parseFloat(sprice / m_factor);
        let sprice3 = parseFloat(sprice2 / m_factor2);
        $('#item_sprice2').val(sprice2);
        $('#item_sprice3').val(sprice3);
    }

    //#endregion

    //#region Adding Validation on Feilds
    var validation = function () {
        $("#form_Additem").validate({
            focusInvalid: true,
            rules:
            {
                itemName: {
                    required: true,
                    minlength: 3
                },
                item_branch: {
                    required: true,
                },
                item_type: {
                    required: true,
                },
                item_category: {
                    required: true,
                },
                item_location: {
                    required: true,
                },
                item_vat: {
                    required: true,
                    number: true
                },
                item_cost: {
                    required: true,
                    number: true
                },
                item_cost2: {
                    required: true,
                    number: true
                },
                item_cost3: {
                    required: true,
                    number: true
                },
                item_sprice: {
                    required: true,
                    number: true
                },
                item_sprice2: {
                    required: true,
                    number: true
                },
                item_sprice3: {
                    required: true,
                    number: true
                },
                item_m_factor: {
                    required: true,
                    number: true
                },
                item_m_factor2: {
                    required: true,
                    number: true
                },
                item_min_qty: {
                    required: true,
                    number: true
                },
                item_max_qty: {
                    required: true,
                    number: true
                },
                itemUOM: {
                    required: true,
                },
                itemUOM2: {
                    required: true,
                },
                itemUOM3: {
                    required: true,
                },

            },
            messages: {
                itemName: {
                    required: "Enter Item Name",
                    minlength: "Min 3 characters"
                },
                item_branch: {
                    required: "Select Branch",
                },
                item_type: {
                    required: "Select Type",
                },
                item_category: {
                    required: "Select Group",
                },
                item_location: {
                    required: "Select Location",
                },
                item_vat: {
                    required: "Enter VAT Percentage",
                    number: "Numbers & One Decimal Numbers Only"
                },
                item_cost: {
                    required: "Enter Cost Price",
                    number: "Numbers & One Decimal Numbers Only"
                },
                item_cost2: {
                    required: "Enter Cost Price",
                    number: "Numbers & One Decimal Numbers Only"
                },
                item_cost3: {
                    required: "Enter Cost Price",
                    number: "Numbers & One Decimal Numbers Only"
                },
                item_sprice: {
                    required: "Enter Sales Price",
                    number: "Numbers & One Decimal Numbers Only"
                },
                item_sprice2: {
                    required: "Enter Sales Price",
                    number: "Numbers & One Decimal Numbers Only"
                },
                item_sprice3: {
                    required: "Enter Sales Price",
                    number: "Numbers & One Decimal Numbers Only"
                },
                item_m_factor: {
                    required: "Enter Multiplication Factor",
                    number: "Numbers & One Decimal Numbers Only"
                },
                item_m_factor2: {
                    required: "Enter Multiplication Factor",
                    number: "Numbers & One Decimal Numbers Only"
                },
                item_min_qty: {
                    required: "Enter Minimum Qty Alert",
                    number: "Numbers & One Decimal Numbers Only"
                },
                item_max_qty: {
                    required: "Enter Maximum Qty Alert",
                    number: "Numbers & One Decimal Numbers Only"
                },
                itemUOM: {
                    required: "Select UOM",
                },
                itemUOM2: {
                    required: "Select UOM",
                },
                itemUOM3: {
                    required: "Select UOM",
                },
            },
            highlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                } else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
                Error_Timeout(elem.attr("id"));
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });
    }
    //#endregion

    //#region Insert New Item on Button Click
    $('#btn_InsertItem').on('click', function (e) {
        e.preventDefault();
        if ($('#form_Additem').valid()) {

            var _dataInsert = new FormData();
            _dataInsert.append("itemId", 0);
            _dataInsert.append("item_branch", $('#item_branch').val().trim());
            _dataInsert.append("item_name", $('#itemName').val().trim());
            _dataInsert.append("item_code", $('#itemCode').val().trim());
            _dataInsert.append("item_type", $('#item_type').val().trim());
            _dataInsert.append("item_location", $('#item_location').val().trim());
            _dataInsert.append("item_category", $('#item_category').val().trim());
            _dataInsert.append("item_vat", $('#item_vat').val().trim());
            _dataInsert.append("item_brand", $('#item_brand').val().trim());
            _dataInsert.append("item_dosage", $('#item_dosage').val().trim());
            _dataInsert.append("item_strength", $('#item_strength').val().trim());
            _dataInsert.append("item_desc", $('#item_desc').val().trim());
            _dataInsert.append("item_uom", $('#itemUOM').val().trim());
            _dataInsert.append("item_uom2", $('#itemUOM2').val().trim());
            _dataInsert.append("item_uom3", $('#itemUOM3').val().trim());
            _dataInsert.append("item_cost", $('#item_cost').val());
            _dataInsert.append("item_cost2", $('#item_cost2').val());
            _dataInsert.append("item_cost3", $('#item_cost3').val());
            _dataInsert.append("item_sprice", $('#item_sprice').val());
            _dataInsert.append("item_sprice2", $('#item_sprice2').val());
            _dataInsert.append("item_sprice3", $('#item_sprice3').val());
            _dataInsert.append("item_m_factor", $('#item_m_factor').val());
            _dataInsert.append("item_m_factor2", $('#item_m_factor2').val());
            _dataInsert.append("item_min_qty", $('#item_min_qty').val());
            _dataInsert.append("item_max_qty", $('#item_max_qty').val());
            _dataInsert.append("item_qty", 0);
            _dataInsert.append("item_qty2", 0);
            _dataInsert.append("item_qty3", 0);
            _dataInsert.append("item_opening_qty", 0);
            _dataInsert.append("item_opening_qty2", 0);
            _dataInsert.append("item_opening_qty3", 0);
            _dataInsert.append("item_supplier", 1);
            _dataInsert.append("item_account", ' ');
            _dataInsert.append("item_pur_account", ' ');

            var file = $('#item_image')[0].files[0];
            _dataInsert.append('files', file);

            $('#btn_InsertItem').removeClass("btn btn-success");
            $('#btn_InsertItem').addClass("btn btn-success btn-loaders btn-icon");
            $('#btn_InsertItem').html("Saving....");

            $.ajax({
                type: "POST",
                url: "@Url.Action("InsertItem","CentralStore", new { area = "MaterialManagement"})",
                dataType: "json",
                data: _dataInsert,
                processData: false,
                contentType: false,
                success: function (data) {
                    $('#btn_InsertItem').removeClass("btn btn-success btn-loaders btn-icon");
                    $('#btn_InsertItem').addClass("btn btn-success");
                    $('#btn_InsertItem').html("Add");
                    if (data.isInserted > 0) {
                        clearData();
                        if (_fromItem == "create-items") {
                            GetItems();
                            var alertPlaceholder = document.getElementById("CreateItems_Alert");
                            function alert(e, t) {
                                var l = document.createElement("div");
                                l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                            }
                            alert("<i class='fe fe-check-circle text-white'></i> Stock Item Added Successfully!", "success");
                            $('#items_modal').modal('toggle');
                            Timeout();
                        }
                        else if (_fromItem == "create-purchase-order") {
                            localStorage.setItem("newItemId", data.isInserted);

                            $('#items_modal').modal('hide');
                            $('#purchaseOrder_modal').modal('show');

                            return $.growl.notice({
                                title: 'Success',
                                message: '<i class="fa fa-check-circle"></i> ' + data.message,
                            });
                        }
                        else if (_fromItem == "adjust-stock-qty") {
                            localStorage.setItem("newItemId", data.isInserted);

                            $('#items_modal').modal('hide');
                            $('#adjustqty_modal').modal('show');

                            return $.growl.notice({
                                title: 'Success',
                                message: '<i class="fa fa-check-circle"></i> ' + data.message,
                            });
                        }
                        else if (_fromItem == "create-fixed-asset") {
                            localStorage.setItem("newItemId", data.isInserted);

                            $('#items_modal').modal('hide');
                            $('#add_fixedasset_modal').modal('show');

                            return $.growl.notice({
                                title: 'Success',
                                message: '<i class="fa fa-check-circle"></i> ' + data.message,
                            });
                        }
                    }
                    else if (data.isInserted == - 2) {
                        $("#create_item_error").html('');
                        var error_message = data.message;
                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                            "<div class='alert alert-danger' role='alert'>" +
                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                            "<strong><i class='fe fe-alert-circle text-white' ></i>&nbsp;Validation Error.. Please correct before you submit!&nbsp;</strong><br/><ul>";
                        $.each(data.message, function (index, value) {
                            html += "<li><small>" + value + "</small><li>";
                            var elem = $("#" + index);
                            if (elem.hasClass("select2-hidden-accessible")) {
                                $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                            }
                            else {
                                $(elem).addClass(" is-invalid");
                            }
                            setTimeout(function () {
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                }
                                else {
                                    $(elem).removeClass("is-invalid");
                                }
                            }, 5000);
                        });

                        html += "</ul></div></div>";
                        $("#create_item_error").html(html);
                    }
                    else {
                        $("#create_item_error").html('');
                        var error_message = data.message;
                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                            "<div class='alert alert-light-warning' role='alert' style=';color:#744f04'>" +
                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                            "<strong><i class='fe fe-alert-triangle'></i>&nbsp;" + error_message + "&nbsp;</strong></div></div>";
                        $("#create_item_error").html(html);
                        Timeout();
                    }
                },
                error: function (xhr) {
                    clearData();
                    $('#btn_InsertItem').removeClass("btn btn-success btn-loaders btn-icon");
                    $('#btn_InsertItem').addClass("btn btn-success");
                    $('#btn_InsertItem').html("Add");
                    var alertPlaceholder = document.getElementById("CreateItems_Alert");
                    function alert(e, t) {
                        var l = document.createElement("div");
                        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                            '<button type="button" class="btn-close text-white" data-bs-dismiss="alert" aria-hidden="true">x</button></div>', alertPlaceholder.append(l)
                    }
                    alert("<i class='fe fe-x-circle text-white'></i> Failed to Add New Stock Item!", "danger");
                    $('#items_modal').modal('toggle');
                    Timeout();
                }
            });
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });
    //#endregion

    //#region Clear Text Boxes Data
    var clearData = function () {
        $('#itemName').val('');
        $('#itemCode').val('');
        $('#item_vat').val('0');
        $('#item_brand').val('');
        $('#item_dosage').val('');
        $('#item_strangth').val('');
        $('#item_desc').val('');
        $('#item_min_qty').val('');
        $('#item_max_qty').val('');
        $('#item_branch').val('0').trigger('change');
        $('#item_category').val('0').trigger('change');
        $('#item_location').val('0').trigger('change');
        $('#item_type').val('0').trigger('change');
        $('#item_cost').val('');
        $('#item_cost2').val('');
        $('#item_cost3').val('');
        $('#item_sprice').val('');
        $('#item_sprice2').val('');
        $('#item_sprice3').val('');
        $('#item_m_factor').val('1');
        $('#item_m_factor2').val('1');
        $('#itemUOM').val('0').trigger('change');
        $('#itemUOM2').val('0').trigger('change');
        $('#itemUOM3').val('0').trigger('change');
    }
    //#endregion

    //#region Create Stock Group
    $('#btnAddStockGroup').on('click', function (e) {
        e.preventDefault();

        $.ajax({
            type: "GET",
            url: "@Url.Action("CreateStockGroups", "StockGroups", new { area = "MaterialManagement" })",
            contentType: "application/json",
            dataType: "html",
            success: function (data) {
                $('#items_modal').modal('hide');
                $('#StockGroup_modal').attr("data-modal-from", "create-stock-item");

                $("#StockGroup_body").html(data);
                $('#StockGroup_modal').modal('show');
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    });

    $('#StockGroup_modal').on('hidden.bs.modal', function () {
        if (localStorage.getItem("newGroupId") != null) {
            var newGroupId = localStorage.getItem("newGroupId");

            set_stock_group(newGroupId);

            localStorage.removeItem("newGroupId");
        }
    });

    var set_stock_group = function (newGroupId) {
        var branchId = $('#item_branch').val();
        if (branchId.length > 0) {
            $.ajax({
                url: '@Url.Action("GetItemGroup", "CentralStore", new { area = "MaterialManagement" })?branchId=' + branchId,
                type: "GET",
                contentType: "application/json",
                dataType: "json",
                success: function (response) {
                    if (response.length > 0) {
                        $.each(response, function (j) {
                            var newOption = new Option(response[j].Text, response[j].Value, (parseInt(response[j].Value) === newGroupId) ? true : false, (parseInt(response[j].Value) === newGroupId) ? true : false);
                            $('#item_category').append(newOption).trigger('change');
                        });
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr);
                }
            }).done(function () {
                $('#item_category').val(newGroupId).trigger('change');
            });
        }
    }
    //#endregion
    
    //#region Create Stock Location
    $('#btnAddStockLocation').on('click', function (e) {
        e.preventDefault();

        $.ajax({
            type: "GET",
            url: "@Url.Action("CreateItemLocation", "ItemLocation", new { area = "MaterialManagement" })",
            contentType: "application/json",
            dataType: "html",
            success: function (data) {
                $('#items_modal').modal('hide');
                $('#ItemLocation_modal').attr("data-modal-from", "create-stock-item");

                $("#ItemLocation_body").html(data);
                $('#ItemLocation_modal').modal('show');
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    });

    $('#ItemLocation_modal').on('hidden.bs.modal', function () {
        if (localStorage.getItem("newLocationId") != null) {
            var newLocationId = localStorage.getItem("newLocationId");

            set_stock_location(newLocationId);

            localStorage.removeItem("newLocationId");
        }
    });

    var set_stock_location = function (newLocationId) {
        $.ajax({
            url: '@Url.Action("GetItemLocation", "ItemLocation", new { area = "MaterialManagement" })',
            type: "GET",
            contentType: "application/json",
            dataType: "json",
            success: function (response) {
                if (response.length > 0) {
                    $.each(response, function (j) {
                        var newOption = new Option(response[j].il_location, response[j].ilId, (parseInt(response[j].ilId) === newLocationId) ? true : false, (parseInt(response[j].ilId) === newLocationId) ? true : false);
                        $('#item_location').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
                alert(xhr);
            }
        }).done(function () {
            $('#item_location').val(newLocationId).trigger('change');
        });
    }
    //#endregion
    
    //#region Create Stock UOM
    $('#btnAddStockUOM').on('click', function (e) {
        e.preventDefault();

        $.ajax({
            type: "GET",
            url: "@Url.Action("CreateUOM", "UOM", new { area = "MaterialManagement" })",
            contentType: "application/json",
            dataType: "html",
            success: function (data) {
                $('#items_modal').modal('hide');
                $('#uom_modal').attr("data-modal-from", "create-stock-item");

                $("#uom_body").html(data);
                $('#uom_modal').modal('show');
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    });

    $('#uom_modal').on('hidden.bs.modal', function () {
        if (localStorage.getItem("newUOMId") != null) {
            var newUOMId = localStorage.getItem("newUOMId");

            set_stock_UOM(newUOMId);

            localStorage.removeItem("newUOMId");
        }
    });

    var set_stock_UOM = function (newUOMId) {
        $.ajax({
            url: '@Url.Action("GetAllUOM", "UOM", new { area = "MaterialManagement" })',
            type: "GET",
            contentType: "application/json",
            dataType: "json",
            success: function (response) {
                if (response.length > 0) {
                    $('#itemUOM').empty();
                    $('#itemUOM2').empty();
                    $('#itemUOM3').empty();
                    $.each(response, function (j) {

                        var newOption = new Option(response[j].uom, response[j].uomId, (parseInt(response[j].uomId) === newUOMId) ? true : false, (parseInt(response[j].uomId) === newUOMId) ? true : false);
                        $('#itemUOM').append(newOption).trigger('change');

                        var newOption2 = new Option(response[j].uom, response[j].uomId, (parseInt(response[j].uomId) === newUOMId) ? true : false, (parseInt(response[j].uomId) === newUOMId) ? true : false);
                        $('#itemUOM2').append(newOption2).trigger('change');

                        var newOption3 = new Option(response[j].uom, response[j].uomId, (parseInt(response[j].uomId) === newUOMId) ? true : false, (parseInt(response[j].uomId) === newUOMId) ? true : false);
                        $('#itemUOM3').append(newOption3).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
                alert(xhr);
            }
        }).done(function () {
            $('#itemUOM').val(newUOMId).trigger('change');
            $('#itemUOM2').val(newUOMId).trigger('change');
            $('#itemUOM3').val(newUOMId).trigger('change');
        });
    }
    //#endregion

    //#region Close Stock Items Modal Click
    $('.close-item').on('click', function (e) {
        e.preventDefault();
        if (_fromItem === "create-purchase-order") {
            $('#Item_modal').modal('hide');
            $('#purchaseOrder_modal').modal('toggle');
        }
        if (_fromItem === "adjust-stock-qty") {
            $('#Item_modal').modal('hide');
            $('#adjustqty_modal').modal('toggle');
        }
        if (_fromItem === "create-fixed-asset") {
            $('#Item_modal').modal('hide');
            $('#add_fixedasset_modal').modal('toggle');
        }

    });
    //#endregion

    //#region Remove Valiate Error Class Timeout
    function Error_Timeout(_id) {
        setTimeout(function () {
            $(".has-error").removeClass("has-error");
            $(".error").removeClass("error");
            $("#" + _id + "-error").text("");
        }, 4200);
    }
    //#endregion

    //#region Alert Timeout
    function Timeout() {
        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 4200);
    }
    //#endregion

</script>