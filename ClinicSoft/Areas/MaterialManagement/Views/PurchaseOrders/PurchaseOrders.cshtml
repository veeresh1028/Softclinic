@model IEnumerable<BusinessEntities.Accounts.MaterialManagement.PurchaseOrders>
@{
    ViewBag.Title = "Accounts & Material Management - Purchase Orders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary">
            <span data-lang-key="purchase-orders">Purchase Orders</span></h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list btn-animation">
            <button class="btn btn-outline-primary mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#searchFilter" aria-expanded="false" aria-controls="collapseExample">
                <i class="fa fa-filter"></i> <span data-lang-key="advance-filter">Advanced Filters</span>
            </button>
            <div class="btn-group mb-2" style="margin-right : 13px!important;">
                <button type="button" class="btn btn-info dropdown-toggle" data-bs-toggle="dropdown">
                    <span data-lang-key="action">Action</span> <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    <li class="dropdown-plus-title">
                        <span data-lang-key="choose-any-action">Choose Any Action</span>
                        <b class="fa fa-angle-up" aria-hidden="true"></b>
                    </li>
                    <li class="fs-13 text-dark"><a href="javascript:void(0);" onclick="action_change('Approved');"><i class="fe fe-check-circle text-success fs-12 fw-bold"></i><span data-lang-key="approve">&nbsp; Approve</span></a></li>
                    <li class="fs-13 text-dark"><a href="javascript:void(0);" onclick="action_change('Rejected');"><i class="fe fe-slash text-danger fs-12 fw-bold"></i><span data-lang-key="reject">&nbsp; Reject</span></a></li>
                    <li class="fs-13 text-dark"><a href="javascript:void(0);" onclick="action_change('Cancelled');"><i class="fe fe-x-circle text-warning fs-12 fw-bold"><span data-lang-key="cancel">&nbsp; Cancel</span></i></a></li>
                </ul>
            </div>

            <button class="btn btn-warning ms-lg-2" type="button" id="btn_Convert_PurchaseRequest">
                <i class="mdi mdi-recycle"></i>
                <span data-lang-key="convert-purchase-request">&nbsp;Convert Purchase Request</span>
            </button>

            
            <button class="btn btn-secondary ms-lg-2" type="button" id="btn_Add_PurchaseOrder">
                <i class="mdi mdi-plus"></i>
                <span data-lang-key="add-purchase-order">&nbsp;Add Purchase Order</span>
            </button>

        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card mb-0">
            <div class="collapse" id="searchFilter">
                <div class="card-body">
                    <input type="hidden" id="hi_branch_selected" value="0" />
                    <div class="row">
                        <div class="col-sm-12 col-md-6 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="branch">Branch</span></label>
                                @Html.DropDownList("select_branch", (IEnumerable<SelectListItem>)ViewData["BranchList"], "Any Branch", new { @class = "form-select select2" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="suppliers">Supplier</span></label>
                                <select id="select_supplier" class="form-control mb-4" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="order-code">Order Code</span></label>
                                <input class="form-control" placeholder="Enter Purchase Order Code" id="text_code" autocomplete="off" />
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="order-from">Order From</span></label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_from" class="form-control" placeholder="DD-MM-YYYY" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="order-to">Order To</span></label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_to" class="form-control" placeholder="DD-MM-YYYY" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-sm-12 col-md-6 col-lg-2">
                                <div class="form-group mb-2">
                                    <label class="form-label font-weight-semibold">
                                        <span data-lang-key="status">Status<small>(es)</small></span></label>
                                    <select id="select_status" class="form-control mb-4" multiple="multiple"></select>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-6 col-lg-2">
                                <div class="form-group mb-2">
                                    <label class="form-label font-weight-semibold">&nbsp;</label>
                                    <button class="btn btn-primary mb-2" type="button" id="btnSearch">
                                        <i class="fa fa-search-plus"></i> 
                                        <span data-lang-key="search">Search</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                <strong>Error!&nbsp;</strong>@TempData["ErrorMessage"]
            </div>
        </div>
    }
    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="PurchaseOrderAlert"></div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-status bg-blue"></div>
            <div class="card-body">

                <div id="progress-loader" style="display:none;">
                    <div class="progress progress-sm mb-3">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-teal progress-bar-indeterminate"></div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tbl_purchaseorder" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                <th class="border-bottom-0 font-weight-semibold text-white text-center"></th>
                                <th class="border-bottom-0 font-weight-semibold text-white text-center"></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="branch">Branch</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="order-number">Order No</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="date">Date</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="suppliers">Supplier</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="total">Total</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="disc">Disc</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="net">Net</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="VAT amount">VAT Amount</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="status">Status</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white text-center"><i class="fe fe-more-vertical" style="font-size: 20px;"></i></th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th class="table_footer_align"><span class="text-right text-dark" data-lang-key="total"> Total : &nbsp;</span></th>
                                <th class="table_footer_align"></th>
                                <th class="table_footer_align"></th>
                                <th class="table_footer_align"></th>
                                <th class="table_footer_align"></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@* Create Purchase Order popup Model *@
<div class="modal fade fade overflow-auto" id="purchaseOrder_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="purchaseOrder_body">
        </div>
    </div>
</div>

@* View Purchase Order Audit Detail popup Model *@
<div class="modal fade overflow-auto" id="PurchaseOrderAuditLog_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="PurchaseOrderAuditLog_body">
        </div>
    </div>
</div>

@* Modal Documents *@
<div class="modal fade overflow-auto" id="po_documents" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="purchaseOrders">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="sizeAL">
        <div class="modal-content" id="po_documents_body">
        </div>
    </div>
</div>

@* Modal Purchase Order Edit *@
<div class="modal fade" id="edit_purchase_order" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="invoice-list">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="edit_purchase_order_body">
        </div>
    </div>
</div>


@* popup Model Create Suppliers*@
<div class="modal fade fade overflow-auto" id="Supplier_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="sizeC">
        <div class="modal-content" id="Supplier_body">
        </div>
    </div>
</div>


@* popup Model Create Stock Items*@
<div class="modal fade overflow-auto" id="items_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="Items_body">
        </div>
    </div>
</div>


@* popup Model Create Stock Group *@
<div class="modal fade" id="StockGroup_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" id="size">
        <div class="modal-content" id="StockGroup_body">
        </div>
    </div>
</div>


@* popup Model Create Item Location *@
<div class="modal fade" id="ItemLocation_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" id="size">
        <div class="modal-content" id="ItemLocation_body">
        </div>
    </div>
</div>

@* popup Model Create Stock UOM*@
<div class="modal fade" id="uom_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" data-modal-from="uom" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" id="size">
        <div class="modal-content" id="uom_body">
        </div>
    </div>
</div>


@* Supplier History popup Model *@
<div class="modal fade" id="SupplierHistory_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="SupplierHistory_body">
        </div>
    </div>
</div>


@* Purchase Order History popup Model *@
<div class="modal fade" id="PurchaseHistory_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="PurchaseHistory_body">
        </div>
    </div>
</div>

@* Purchase Request Convert popup Model *@
<div class="modal fade" id="PurchaseRequest_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="PurchaseRequest_body">
        </div>
    </div>
</div>


@* Central Store Item Enquiry *@
<div class="modal fade" id="CentralStoreItems_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="CentralStoreItems_body">
        </div>
    </div>
</div>


@section myScripts{
    <style>
        .modal-lg {
            max-width: 1500px;
        }

        @@media (min-width: 1124px) {
            .dataTables_scrollHeadInner, .table {
                width: 100% !important
            }
        }
        .dataTables_scrollBody {
            min-height: 300px !important;
        }
    </style>

    <script>

        //#region Page Load
        $(function () {
            $('#select_date_from').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });

            $('#select_date_to').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });
            $('#select_branch').select2({
                minimumResultsForSearch: '',
                placeholder: 'Any Branch',
                width: '100%'
            });
            $('#choose_action').select2({
                minimumResultsForSearch: '',
                placeholder: 'Choose Any Action',
                width: '100%'
            });
            $('#select_date_from').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });

            $('#select_date_to').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });

            $("#select_date_to").bootstrapdatepicker("setDate", "tomorrow");
            $("#select_date_from").bootstrapdatepicker("setDate", "today");

            $('#select_supplier').SumoSelect({
                placeholder: 'Any Suppliers',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Enter here.',
                selectAll: true
            });
            load_status();
            var today_date = moment(new Date()).format('MM/DD/YYYY');
            GetPurchaseOrders(today_date, today_date);

            // Focus on select2 Dropdown
            $(document).on('select2:open', () => {
                document.querySelector('.select2-search__field').focus();
            });
        });
        //#endregion

        //#region On Branch Selecting Event
        $('#pur_branch').on('select2:selecting', function (e) {
            let branchId = $('#pur_branch').val();
            if (PurchaseItems()) {
                Swal.fire({
                    title: 'Do you wish to change the branch?',
                    text: 'This action will delete any item(s) which are added in Purchase Order Items!',
                    icon: 'question',
                    showDenyButton: true,
                    confirmButtonText: 'Change',
                    confirmButtonClass: 'btn btn-success mt-2',
                    denyButtonText: `Don't Change`,
                    denyButtonClass: 'btn btn-danger ms-2 mt-2',
                    buttonsStyling: !1
                }).then((result) => {
                    if (result.isDenied) {
                        e.preventDefault();
                        $('#pur_branch').select2('close');
                        $('#pur_branch').val(branchId).trigger('change')
                    }
                    else {
                        clearDataTable();
                        GetSupplierAndBilling();
                    }
                });
            }
        });
        //#endregion

        //#region load Suppliers Detail
        $('#select_branch').on('select2:select', function (e) {
            $('#select_supplier').html('');
            $('#select_supplier')[0].sumo.reload();
            var branchId = $('#select_branch').val();
            if (branchId.length > 0) {
                $.ajax({
                    url: '@Url.Action("GetSupplierByBranches", "PurchaseOrders", new { area = "MaterialManagement" })?branchId=' + branchId,
                    type: "GET",
                    dataType: "json",
                    async: false,
                    success: function (response) {
                        $.each(response, function (j) {
                            $('#select_supplier')[0].sumo.add(response[j].Value, response[j].Text);
                        });
                    },
                    error: function (xhr) {
                        console.log(xhr);
                        alert(xhr);
                    }
                });
            }

        });
        //#endregion  load Item Groups

        //#region load status
        var load_status = function () {
            $('#select_status').SumoSelect({
                placeholder: 'Select Status(es)',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Enter here.',
                selectAll: true
            });

            $('#select_status').html('');
            $('#select_status')[0].sumo.reload();

            $('#select_status')[0].sumo.add("New", "New");
            $('#select_status')[0].sumo.add("Approved", "Approved");
            $('#select_status')[0].sumo.add("Partly Delivered", "Partly Delivered");
            $('#select_status')[0].sumo.add("Delivered", "Delivered");
            $('#select_status')[0].sumo.add("Partly Invoiced", "Partly Invoiced");
            $('#select_status')[0].sumo.add("Invoiced", "Invoiced");
            $('#select_status')[0].sumo.add("Rejected", "Rejected");
            $('#select_status')[0].sumo.add("Cancelled", "Cancelled");
            $('#select_status')[0].sumo.add("Deleted", "Deleted");

            $('#select_status')[0].sumo.reload();
        };
        //#endregion load status

        //#region Filter on Button Click
        $("#btnSearch").click(function (e) {
            e.preventDefault();
            let isValid = true;
            var from_date = $('#select_date_from').val().trim();
            var to_date = $('#select_date_to').val().trim();

            // Check if Date From is a valid Date
            if (from_date != null && from_date != 0 && from_date != "" && from_date != undefined) {
                from_date = moment($('#select_date_from').val().trim(), 'DD-MMMM-YYYY');
                if (!from_date.isValid()) {
                    isValid = false;
                    e.stopPropagation();
                    return $.growl.error({
                        title: "Error",
                        message: "Invalid From Date!"
                    });
                }
            }

            // Check if Date To is a valid Date
            if (to_date != null && to_date != 0 && to_date != "" && to_date != undefined) {
                to_date = moment($('#select_date_to').val().trim(), 'DD-MMMM-YYYY');
                if (!to_date.isValid()) {
                    isValid = false;
                    e.stopPropagation();
                    return $.growl.error({
                        title: "Error",
                        message: "Invalid To Date!"
                    });
                }
            }

            if ((from_date != null && from_date != 0 && from_date != "" && from_date != undefined) && (to_date != null && to_date != 0 && to_date != "" && to_date != undefined)) {
                if (from_date.isValid() && to_date.isValid()) {
                    if (to_date.diff(from_date, 'days') < 0) {
                        isValid = false;
                        var index = [];
                        index.push("select_date_from_app");
                        index.push("select_date_to_app");

                        $.each(index, function (i, v) {
                            if (index[i] != null && index[i] != "") {
                                var elem = $("#" + index[i]);
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                }
                                else {
                                    $(elem).addClass(" is-invalid");
                                }

                                setTimeout(function () {
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                    }
                                    else {
                                        $(elem).removeClass("is-invalid");
                                    }
                                }, 5000);
                            }
                        });

                        e.stopPropagation();

                        return $.growl.error({
                            title: "Error!",
                            message: "Filter From Date should be less than To Date!"
                        });
                    }
                }
            }
            if (isValid) {
                search_PO();
            }
        });
        //#endregion

        //#region Load Items
        function GetPurchaseOrders(fromdate, todate) {
            var _data = {
                "purid" : 0,
                "pur_branch": $('#select_branch').val().toString(),
                "pur_ocode": $('#text_code').val().trim(),
                "from_date": fromdate,
                "to_date": todate,
                "pur_status": $('#select_status').val().toString(),
                "pur_omadeby": 0,
                "pur_type": '',
                "pur_supplier": $('#select_supplier').val().toString()
            }
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetPurchaseOrders", "PurchaseOrders", new { area = "MaterialManagement"})",
                dataType: 'json',
                data: _data,
                beforeSend: function () {
                    $('#progress-loader').show();
                },
                success: function (response) {
                    $('#searchFilter').collapse('hide');
                    if (response.isAuthorized != false) {
                        var table;
                        if ($.fn.dataTable.isDataTable('#tbl_purchaseorder')) {
                           table = $('#tbl_purchaseorder').DataTable();
                           table.clear();
                           table.rows.add(response).draw();
                        }
                        else {
                            BindDataTable(response);
                        }
                    }
                    $('#progress-loader').hide();
                },
                error: function (xhr) {
                    console.log(xhr);
                    $('#progress-loader').hide();
                    $('#RowsCountToast').hide();
                }
            });
        }
        //#endregion

        //#region Bind Datatable
        var BindDataTable = function (response) {
            var table = $("#tbl_purchaseorder").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "mData": "purId",
                    },
                    {
                        className: 'dt-control',
                        orderable: false,
                        data: null,
                        defaultContent: '<span class="fs-15 text-success font-weight-bold spn-control"><i class="fa fa-plus-circle"></i></span>'
                    },
                    {
                        "className": "td_max_width",
                        "mData": "branch_name"
                    },
                    {
                        "mData": "pur_ocode",
                        "className": "font-weight-bold text-info",
                        "render": function (data, type, full, meta) {
                            return '<a data-bs-toggle="modal" data-bs-target="#PurchaseHistory_modal" onclick="PurchaseHistory(\'' + full.pur_ocode + '\',\'' + full.pur_branch + '\')">' + data + '</a>';
                        }
                    },
                    {
                        "mData": "pur_odate",
                        "render": function (pur_date, type, full, meta) {
                            if (type == 'display' || type == 'filter') {
                                return moment(pur_date, 'DD/MM/YYYY').format("DD-MM-YYYY");
                            }
                            else {
                                return moment(pur_date, 'DD/MM/YYYY').format("YYYY-MM-DD");
                            }
                        }
                    },
                    {
                        "className": "td_max_width",
                        "mData": "sup_name",
                        "className": "font-weight-bold text-info",
                        "render": function (data, type, full, meta) {
                            return '<a data-bs-toggle="modal" data-bs-target="#SupplierHistory_modal" onclick="SupplierHistory(\'' + full.pur_supplier + '\',\'' + full.pur_branch + '\')">' + data + '</a>';
                        }
                    },
                    {
                        "mData": "pur_total",
                        "searchable": false,
                        "orderable": false,
                    },
                   {
                        "mData": "pur_disc",
                        "searchable": false,
                        "orderable": false,
                    },
                    {
                        "mData": "pur_net",
                        "searchable": false,
                        "orderable": false,
                    },
                    {
                        "mData": "pur_vat",
                        "searchable": false,
                        "orderable": false,
                    },
                    {
                        "mData": "purId",
                        "className": "td_status_width",
                        "render": function (purId, type, full, meta) {
                            var visible = full.actionvisible;
                            var pur_status = full.pur_status;
                                if (pur_status === "New") {
                                    return '<i class="dot-label bg-success me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-success">New</span>'
                                }
                                else if (pur_status === "Approved") {
                                    return '<i class="dot-label bg-warning me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-warning">Approved</span>'
                                }
                                else if (pur_status === "Deleted") {
                                    return '<i class="dot-label bg-danger me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-danger">Deleted</span>'
                                }
                                else if (pur_status === "Invoiced") {
                                    return '<i class="dot-label bg-teal me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-teal">Invoiced</span>'
                                }
                                else if (pur_status === "Delivered") {
                                    return '<i class="dot-label bg-secondary me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-secondary">Delivered</span>'
                                }
                                else if (pur_status === "Partly Delivered") {
                                    return '<i class="dot-label bg-info me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-info">Partly Delivered</span>'
                                }
                                else if (pur_status === "Paid") {
                                    return '<i class="dot-label bg-indigo me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-indigo">Paid</span>'
                                }
                                else if (pur_status === "Partly Paid") {
                                    return '<i class="dot-label bg-info me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-info">Partly Paid</span>'
                                }
                                else {
                                    return '<i class="dot-label bg-primary me-2 w-2 h-2"></i>&nbsp;<span class="font-weight-semibold text-primary">' + pur_status +'</span>'
                                }
                        }
                    },
                    {
                        "className": "text-center",
                        "orderable": false,
                        "searchable": false,
                        "render": function (purId, type, full, meta) {
                            var status = full.pur_status;
                            var visible = full.actionvisible;
                            var html_links = '<div class="dropdown"><a type="button" class="" data-bs-toggle="dropdown"><i class="fe fe-more-vertical" style="font-size: 20px;"></i></a>' +
                                '<div class="dropdown-menu" style="min-width:auto">';
                            if (status === "New" && visible === "True") {
                                html_links += '<a class="dropdown-item text-dark fw-bold" onclick="Edit_PurchaseOrder(' + full.purId + ')"><i class="fe fe-edit-2 text-success" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Edit</a>';
                            }
                            if (status === "Approved" || status === "New" && visible === "True") {
                                html_links += '<a class="dropdown-item text-dark fw-bold" onclick="UpdateStatus(\'' + full.purId + '\',\'Deleted\')"><i class="fe fe-trash text-danger" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Delete</a>';
                            }
                            if (status !== "Approved" || status !== "New" && status !== "Deleted" || status !== "Rejected" && status !== "Cancelled") {
                                html_links += '<a class="dropdown-item text-dark fw-bold" onclick="print_barcode(\'' + full.purId + '\',\'Deleted\')"><i class="fa fa-barcode text-cyan" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Barcode</a>';
                            }
                            html_links += '<a class="dropdown-item text-dark fw-bold" onclick= "btnPrintPurchaseOrder(\'' + full.purId + '\')" > <i class="fa fa-print text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Print</a > ';
                            html_links += '<a class="dropdown-item text-dark fw-bold" onclick= "PurchaseOrderAuditLog(\'' + full.pur_ocode + '\')" > <i class="fa fa-eye text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Log</a > ';
                            html_links += '<a class="dropdown-item text-dark fw-bold" onclick="PurchaseOrderDocs(\'' + full.purId + '\',\'' + full.pur_ocode + '\')"><i class="fa fa-folder-open-o text-dark" style="font-size: 15px; margin-right: 0.6rem;"></i>&nbsp;Documents</a>';

                            html_links += '</div></div>';
                            return html_links;
                        }
                    },
                ],
                "aoColumnDefs": [
                    {
                        "aTargets": [0],
                        "orderable": false,
                        "searchable": false,
                        "className": "select-checkbox text-center inbox-small-cells",
                        'checkboxes': {
                            'selectRow': true
                        }
                    },
                    {
                        "aTargets": [6],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [7],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [8],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [9],
                        "className": "fs-13 text-end",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                ],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                order:[[3, 'desc']],
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Purchase Orders Detail',
                        footer: 'true',
                        exportOptions: {
                            columns: [2, 4, 5, 6, 7, 8, 9, 10]
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Purchase Orders Detail',
                        footer: 'true',
                        exportOptions: {
                            columns: [2, 4, 5, 6, 7, 8, 9, 10]
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Purchase Orders Detail',
                        footer: 'true',
                        exportOptions: {
                            columns: [ 2, 4, 5, 6, 7, 8, 9, 10]
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Purchase Orders Detail',
                        footer: 'true',
                        exportOptions: {
                            columns: [ 2, 4, 5, 6, 7, 8, 9, 10]
                        }
                    }
                ],
                language: {
                    searchPlaceholder: 'Search...',
                    zeroRecords: "No Record Match - Sorry",
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Code / Date / Supplier / Branch / Status </span>',
                    sEmptyTable: '<span class="text-secondary">No Records Available Based On Request</span>',
                    scrollX: "100%",
                    lengthMenu: '_MENU_',
                },
                "drawCallback": function () {
                    $("#tbl_purchaseorder tr").each(function () {
                        if ($(this).find("td:eq(10)").text().trim() != "New" && $(this).find("td:eq(10)").text().trim() != "Approved") {
                            $($(this)).find("td:eq(0)").find("input[type='checkbox']").remove();
                        }

                    });
                },
                footerCallback: function (row, data, start, end, display) {
                    var api = this.api();

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                    };
                    var numFormat = $.fn.dataTable.render.number('\,', '.', 2, '').display;

                    // Total Amount
                    total_grn_purchase = api.column(6).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(6).footer()).html(numFormat(total_grn_purchase));

                    // Total Discount
                    total_d_purchase = api.column(7).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(7).footer()).html(numFormat(total_d_purchase));

                    // Total Net Amount
                    total_payment = api.column(8).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(8).footer()).html(numFormat(total_payment));

                    // Total VAT Amount
                    total_balance = api.column(9).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(9).footer()).html(numFormat(total_balance));

                }
            });
            table.buttons().container().appendTo('#tbl_purchaseorder_wrapper .col-md-6:eq(0)');

            // Add event listener for opening and closing details
            table.on('click', 'td.dt-control', function () {
                console.log('test');
                var tr = $(this).closest('tr');
                var row = table.row(tr);
                var _span = tr.find('.spn-control');
                if (row.child.isShown()) {
                    $(_span).removeClass('text-danger');
                    $(_span).addClass('text-success');
                    $(_span).html('<i class="fa fa-plus-circle"></i>');
                    row.child.hide();
                    tr.removeClass('shown');
                    
                } else {

                    $(_span).removeClass('text-success');
                    $(_span).addClass('text-danger');
                    $(_span).html('<i class="fa fa-minus-circle"></i>');

                    var _data = table.row(this).data();
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("GetChildTableItems", "PurchaseOrders", new { area = "MaterialManagement" })?purId=' + _data.purId,
                        contentType: "application/json",
                        dataType: "html",
                        success: function (response) {
                            row.child(response).show();
                            tr.addClass('shown');
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });

                }
            });

        }
        //#endregion Bind Datatable

        //#region Update Purchase Order Status
        var UpdateStatus = function (purId, pur_status) {
            var _title = "";
            var _text = "";
            if (pur_status == "Deleted") {
                _title = "Are you sure you want to Delete ?";
                _text = "This action will delete the selected Item!";
            }
            else {
                _title = "Are you sure you want to change status ?";
                _text = "This action will change the status of the selected Item to " + pur_status;
            }
            Swal.fire({
                title: _title,
                text: _text,
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: "@Url.Action("PurchaseOrderActionStatus", "PurchaseOrders", new { area = "MaterialManagement" })?data=" + purId + "&status=" + pur_status,
                        type: "POST",
                        dataType: "JSON",
                        success: function (data) {
                            if (data.isUpdated) {
                                Swal.fire({
                                    title: "Success!",
                                    text: "Status Changed Successfully!!",
                                    icon: "success",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                                });
                                search_PO();
                            }
                            else {
                                Swal.fire({
                                    title: "Error!",
                                    text: data.message,
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            console.log(xhr);
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Change Status! Please refresh the Page and Try Again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            })
                        }
                    });
                }
            });
        };
        //#endregion

        //#region Action Button Controls
        var action_change = function (status) {
            var _status = "";
            if (status === "Approved")
                _status = "Approve";
            else if (status === "Rejected")
                _status = "Reject";
            else if (status === "Cancelled")
                _status = "Cancel";
            else
                _status = status;

            var table = $("#tbl_purchaseorder").DataTable();
            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));
            var purIds = [];
            if (rows.length > 0) {
                Swal.fire({
                    title: _status + " Purchase Order",
                    text: "Are you sure you want to " + _status +" Selected Purchase Orders!.",
                    icon: "question",
                    showCancelButton: !0,
                    confirmButtonText: 'Yes! I Confirm',
                    cancelButtonText: 'No! Cancel Please',
                    confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
                }).then(function (t) {
                    if (t.value) {
                        $.each(rows, function (index, rowId) {
                            var _data = table.row(rowId).data();
                            let current_status = _data.pur_status;
                            if (current_status === "New" || current_status === "Approved") {
                                var _purId = _data.purId;
                                purIds.push(_purId);
                            }
                        });
                        if (purIds.length > 0) {
                            $.ajax({
                                url: '@Url.Action("PurchaseOrderActionStatus", "PurchaseOrders", new { area = "MaterialManagement" })?data=' + purIds + "&status=" + status,
                                type: "POST",
                                dataType: "json",
                                async: false,
                                success: function (response) {
                                    if (response.isUpdated == true) {
                                        search_PO();
                                        event.preventDefault();
                                        event.stopPropagation();
                                        return $.growl.notice({
                                                title: "Success",
                                                message: response.message
                                            });
                                    }
                                    else {
                                        event.preventDefault();
                                        event.stopPropagation();
                                        return $.growl.error({
                                            title: "Error",
                                            message: response.message
                                        });
                                    }
                                },
                                error: function (xhr) {
                                    console.log("Error : " + xhr.statusText);
                                }
                            });
                        }
                    }
                });
            }
            else {
                Swal.fire({
                    title: "Alert!",
                    text: "Please select at least one Purchase Order For this Action!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                });
            }
        }

        //#endregion

        //#region Print Purchase Order Barcode
        var print_barcode = function (purId) {
            //var table = $("#tbl_purchaseorder").DataTable();
            //var rows = $(table.$('input[type="checkbox"]').map(function () {
            //    return $(this).prop("checked") ? $(this).closest('tr') : null;
            //}));
            //if (rows.length > 0) {
            if (purId > 0) {
                Swal.fire({
                    title: "Barcode Print",
                    text: "Are you sure you want to Print Selected Item's Barcode",
                    icon: "question",
                    showCancelButton: !0,
                    confirmButtonText: 'Yes! I Confirm',
                    cancelButtonText: 'No! Cancel Please',
                    confirmButtonClass: "btn btn-success mt-2",
                    cancelButtonClass: "btn btn-danger ms-2 mt-2",
                    buttonsStyling: !1
                }).then(function (t) {
                    if (t.value) {
                        //$.each(rows, function (index, rowId) {
                        //    var _data = table.row(rowId).data();
                        $.ajax({
                            url: '@Url.Action("PrintBarcodeService", "PurchaseOrders", new { area = "MaterialManagement" })?purId=' + purId,
                            type: "POST",
                            dataType: "json",
                            async: false,
                            success: function (response) {
                                if (response.isSuccess == true) {
                                    if (response.data["status"] == "success") {
                                        event.preventDefault();
                                        event.stopPropagation();
                                        return $.growl.notice({
                                            title: "Success",
                                            message: response.message
                                        });
                                    }
                                    else {
                                        event.preventDefault();
                                        event.stopPropagation();
                                        return $.growl.warning({
                                            title: "Pending",
                                            message: response.message
                                        });
                                    }
                                }
                                else {
                                    event.preventDefault();
                                    event.stopPropagation();
                                    return $.growl.error({
                                        title: "Error",
                                        message: response.message
                                    });
                                }
                            },
                            error: function (xhr) {
                                console.log("Error : " + xhr.statusText);
                            }
                        });
                        //});
                    }
                });
                //}
                //else {
                //    Swal.fire({
                //        title: "Alert!",
                //        text: "Please select at least one Purchase Order For this Action!",
                //        icon: "info",
                //        showCancelButton: 0,
                //        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                //    });
                //}

            }
        }
        //#endregion

        //#region Add Purchase Order
        $('#btn_Add_PurchaseOrder').click(function () {
            $("#spinner2").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("CreatePurchaseOrder","PurchaseOrders", new { area = "MaterialManagement" })",
                contentType: "application/json",
                dataType: "html",
                success: function(data)
                {
                    $("#purchaseOrder_body").html(data);
                    $("#purchaseOrder_modal").modal("show");
                },
                error : function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    // Hide spinner when request is complete
                    $("#spinner2").hide();
                }
            });
        });
        //#endregion Add Purchase Order

        //#region Search Purchase Order Conditions
        var search_PO = function ()
        {
            var from_date = $('#select_date_from').val().trim();
            var to_date = $('#select_date_to').val().trim();
            GetPurchaseOrders(from_date, to_date)
        }
        //#endregion

        //#region Alert Timeout
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
        //#endregion Alert Timeout

        //#region print Purchase Order
        var btnPrintPurchaseOrder = function(purId) {
            //$("#hiInvId").val("18380");
            window.open("@Url.Action("PrintPurchaseOrder", "PurchaseOrders", new { area = "MaterialManagement" })?purId=" + purId , "Purchase Order Print");

        };
        //#endregion

        //#region Purchase Order Audit Logs
        var PurchaseOrderAuditLog = function (pur_ocode) {
            $("#spinner2").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("PurchaseOrderAuditLogs", "PurchaseOrders", new { area = "MaterialManagement" })?pura_ocode=" + pur_ocode,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#PurchaseOrderAuditLog_body").html(data);
                    $("#PurchaseOrderAuditLog_modal").modal("show");
                },
                error: function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    // Hide spinner when request is complete
                    $("#spinner2").hide();
                }
            });
        };
        //#endregion

        //#region Purchase Order Documents
        var PurchaseOrderDocs = function (purId, pur_ocode) {
            $("#spinner2").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("PurchaseOrderDocuments", "PurchaseOrders", new { area = "MaterialManagement" })?purId=" + purId + "&pur_ocode=" + pur_ocode,
                contentType: "application/json",
                dataType: "html",
                success: function (response) {
                    $("#po_documents_body").html(response);
                    $("#po_documents").modal("show");
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                    $("#spinner2").hide();
                },
                complete: function () {
                    // Hide spinner when request is complete
                    $("#spinner2").hide();
                }
            });
        }
        //#endregion

        //#region Edit Purchase Order
        var Edit_PurchaseOrder = function (purId) {
            $("#spinner2").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("EditPurchaseOrder", "PurchaseOrders", new { area = "MaterialManagement" })?purId=" + purId,
                contentType: "application/json",
                dataType: "html",
                success: function (response) {
                    $("#edit_purchase_order_body").html(response);
                    $("#edit_purchase_order").modal("show");
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                    $("#spinner2").hide();
                },
                complete: function () {
                    // Hide spinner when request is complete
                    $("#spinner2").hide();
                }
            });
        }
        //#endregion

        //#region Supplier History
        var SupplierHistory = function (supId, sup_branch) {
            $("#spinner2").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("SupplierHistory", "Supplier", new { area = "MaterialManagement" })?supId=" + supId + "&sup_branch=" + sup_branch ,
                contentType: "application/json",
                dataType: "html",
                //data: app,
                success: function (data) {
                    $("#SupplierHistory_body").html(data);
                    $("#SupplierHistory_modal").modal("show");
                },
                error: function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    // Hide spinner when request is complete
                    $("#spinner2").hide();
                }
            });
        };
        //#endregion

        //#region Purchase Order History
        var PurchaseHistory = function (code, branch) {
            $("#spinner2").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("PurchaseOrderHistory", "PurchaseOrders", new { area = "MaterialManagement" })?code=" + code + "&branch=" + branch ,
                contentType: "application/json",
                dataType: "html",
                //data: app,
                success: function (data) {
                    $("#PurchaseHistory_body").html(data);
                    $("#PurchaseHistory_modal").modal("show");
                },
                error: function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    // Hide spinner when request is complete
                    $("#spinner2").hide();
                }
            });
        };
        //#endregion

        //#region Convert Purchase Request
        $('#btn_Convert_PurchaseRequest').click(function () {
            $("#spinner2").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("ConvertPurchaseRequest","PurchaseOrders", new { area = "MaterialManagement" })",
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#PurchaseRequest_body").html(data);
                    $("#PurchaseRequest_modal").modal("show");
                },
                error: function (xhr) {
                    console.log(xhr);
                    $("#spinner2").hide();
                },
                complete: function () {
                    // Hide spinner when request is complete
                    $("#spinner2").hide();
                }
            });
        });
        //#endregion Add Purchase Order

        //#region UI Controls
        function resizedt(tbl_name) {
            setTimeout(function () {
                var tables = $.fn.dataTable.tables({ visible: true, api: true });
                if (tables) {
                    $('#' + tbl_name).DataTable().columns.adjust();
                }
            }, 450);
        }
//#endregion

    </script>
}