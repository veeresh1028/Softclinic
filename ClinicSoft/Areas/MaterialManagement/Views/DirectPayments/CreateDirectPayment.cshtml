@model BusinessEntities.Accounts.MaterialManagement.DirectPayment

<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold" id="exampleModalLongTitle">Add Direct Payment</h5>
    <button aria-label="Close" data-bs-dismiss="modal" class="btn-close" type="button"><span aria-hidden="true">×</span></button>
</div>
<div class="modal-body p-4">
    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12 mb-4 font-weight-semibold">
            <span class="text-danger" style="font-size:smaller">Required fields are marked with *</span><br />
            <span class="text-secondary" style="font-size:smaller">Required atleat one payment mode *</span>
        </div>
    </div>
    <form id="form_AddDirectPayment" >
        @Html.AntiForgeryToken()

        <div class="card">
            <div class="card-group">
                <div class="card shadow-none border border-end-0 overflow-hidden">
                    <div class="row m-2">
                        <div class="col-sm-12 col-md-12 col-lg-6">
                            <div class="form-group">
                                <label class="form-label text-black">Branch&nbsp;<span class="text-danger">*</span></label>
                                @Html.DropDownList("dp_branch", (IEnumerable<SelectListItem>)ViewData["BranchList"], "Please Select", new { @class = "form-select select2" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-12 col-lg-6">
                            <div class="form-group">
                                <label class="form-label text-black">Payment Date&nbsp;<span class="text-danger">*</span></label>
                                @Html.TextBoxFor(sup => sup.dp_date, new { @class = "form-control", @placeholder = "DD-MMMM-YYYY", maxlength = "18" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-12 col-lg-6">
                            <div class="form-group">
                                <label class="form-label text-black">
                                    Debit A/C&nbsp; <span id="spn_message" class="text-danger"></span>
                                    <span class="text-danger">*&nbsp;</span>
                                </label>
                                @*<select class="form-control select2" id="dp_debit"></select>*@
                                @Html.DropDownListFor(m => m.dp_debit, new List<SelectListItem>
                         { }, "Select Debit A/C", new { @class = "form-control select2" })
                            </div>
                        </div>
                        @*<div class="col-sm-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="form-label text-black">
                                        Credit A/C&nbsp;
                                        <span class="text-danger">*&nbsp;</span>
                                    </label>
                                    @Html.DropDownListFor(m => m.dp_credit, new List<SelectListItem>
                                                             { }, "Select Credit A/C", new { @class = "form-control select2" })
                                </div>
                            </div>*@

                        <div class="col-sm-12 col-md-6 col-lg-6">
                            <div class="form-group">
                                <label class="form-label text-black">
                                    To&nbsp;
                                    <span class="text-danger">*&nbsp;</span>
                                </label>
                                @Html.TextBoxFor(sup => sup.dp_to, new { @class = "form-control", maxlength = "100", @placeholder = "Enter Supplier Name." })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card shadow-none border overflow-hidden">
                    <div class="row m-2">
                        <div class="col-sm-12 col-md-6 col-lg-4">
                            <div class="form-group">
                                <label class="form-label text-black">Cash&nbsp;<span class="text-secondary">*</span></label>
                                <input type="text" id="dp_cash" class="form-control text-end" maxlength="7" onkeypress="return validateOneDecimalNumeric(this,event);" value="0.00" />
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-4">
                            <div class="form-group">
                                <label class="form-label text-black">Credit Card&nbsp;<span class="text-secondary">*</span></label>
                                <input type="text" id="dp_cc" class="form-control text-end" maxlength="7" onkeypress="return validateOneDecimalNumeric(this,event);" value="0.00" />
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-4">
                            <div class="form-group">
                                <label class="form-label text-black">Bank Transfer&nbsp;<span class="text-secondary">*</span></label>
                                <input type="text" id="dp_bt" class="form-control text-end" maxlength="7" onkeypress="return validateOneDecimalNumeric(this,event);" value="0.00" />
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-4">
                            <div class="form-group">
                                <label class="form-label text-black">Bank Transfer Bank&nbsp; <span id="spn_message3" class="text-danger"></span></label>
                                @Html.DropDownListFor(m => m.dp_bt_bank, new List<SelectListItem>
                { }, "Select Transfer Bank", new { @class = "form-control select2" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-4">
                            <div class="form-group">
                                <label class="form-label text-black">Cheque Amt&nbsp;<span class="text-secondary">*</span></label>
                                <input type="text" id="dp_chq" class="form-control text-end" maxlength="7" onkeypress="return validateOneDecimalNumeric(this,event);" value="0.00" />
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-4">
                            <div class="form-group">
                                <label class="form-label">Cheque No.</label>
                                @Html.TextBoxFor(sup => sup.dp_chq_no, new { @class = "form-control", @placeholder = "", maxlength = "15" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-4">
                            <div class="form-group">
                                <label class="form-label">Cheque Date</label>
                                @Html.TextBoxFor(sup => sup.dp_chq_date, new { @class = "form-control", @placeholder = "DD-MMMM-YYYY", maxlength = "18" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-4">
                            <div class="form-group">
                                <label class="form-label text-black">Cheque Bank&nbsp; <span id="spn_message2" class="text-danger"></span></label>
                                @Html.DropDownListFor(m => m.dp_chq_bank, new List<SelectListItem>
                                                { }, "Select Cheque Bank", new { @class = "form-control select2" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-sm-12 col-md-12 col-lg-12">
                <div class="form-group">
                    <label class="form-label text-black">Notes</label>
                    @Html.TextAreaFor(sup => sup.dp_notes, new { @class = "form-control", maxlength = "998", @placeholder = "Enter Notes", @rows = "3" })
                </div>
            </div>
            <div class="col-sm-12 col-md-12 col-lg-12 text-center">
                <button type="submit" class="btn btn-success" id="btn_Insert">Add Payment</button>
                <button type="button" class="btn btn-outline-danger me-1" data-bs-dismiss="modal">Close</button>
                <label class="text-red" id="error_message"></label>
                <input type="hidden" id="hi_prId" value="0" />
                <input type="hidden" id="hi_pr_orderCode" value="" />
                <input type="hidden" id="hi_pr_supplier" value="" />
                <input type="hidden" id="hi_pr_code" value="" />
            </div>
        </div>

        <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center text-center mt-4">
            <div id="create_dpayment_error" class="text-center" style="max-width:800px"></div>
        </div>
        <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center text-center mt-2">
            <div id="DirectPayment_Alert"></div>
        </div>
        @if (TempData["ErrorMessage_Insert"] != null)
        {
            <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center text-center">
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    <strong>Error!&nbsp;</strong>@TempData["ErrorMessage_Insert"]
                </div>
            </div>
        }
    </form>
</div>

<script>

    //#region Page Load
    $(function () {

        $('#spn_message').text('');
        $('#dp_branch').select2({
            minimumResultsForSearch: '',
            dropdownParent: $('#directpayment_body'),
            width: '100%'
        });
        
        // Get the current date
        var currentDate = new Date();
        // Get last year date
        var lastYearDate = new Date(currentDate.getFullYear() - 1, currentDate.getMonth(), currentDate.getDate());

        $('#dp_date').bootstrapdatepicker({
            format: "dd-MM-yyyy",
            viewMode: "date",
            todayHighlight: true,
            autoclose: true,
            multidate: false,
            multidateSeparator: "-",
            startDate: lastYearDate,
            endDate: currentDate
        });
        $("#dp_date").bootstrapdatepicker("setDate", "today");

        $('#dp_chq_date').bootstrapdatepicker({
            format: "dd-MM-yyyy",
            viewMode: "date",
            todayHighlight: true,
            autoclose: true,
            multidate: false,
            multidateSeparator: "-"
        });
        validation();
    });
    //#endregion

    //#region Clear Debit, Credit, Trannsfer Bank and Cheque Bank Account on Branch Change
    $('#dp_branch').on('select2:select', function (e) {
        $('#dp_debit').empty();
        $('#spn_message').text('');
        $('#spn_message2').text('');
        $('#spn_message3').text('');
        $('#dp_chq_bank').empty();
    });

    //#endregion

    //#region Validate Text Box with One Decimal and numeric only on Key Press
    function validateOneDecimalNumeric(el, evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        var number = el.value.split('.');
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        //just one dot
        if (number.length > 1 && charCode == 46) {
            return false;
        }
        //get the Current position
        var caratPos = getSelectionStart(el);
        var dotPos = el.value.indexOf(".");
        if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {
            return false;
        }
        return true;
    }
    function getSelectionStart(o) {
        if (o.createTextRange) {
            var r = document.selection.createRange().duplicate()
            r.moveEnd('character', o.value.length)
            if (r.text == '') return o.value.length
            return o.value.lastIndexOf(r.text)
        } else return o.selectionStart
    }
    //#endregion

    //#region Adding Validation
    var validation = function () {
        $("#form_AddDirectPayment").validate({
            focusInvalid: true,
            rules:
            {
                dp_branch: {
                    required: true,
                },
                dp_debit: {
                    required: true,
                },
                dp_date: {
                    required: true,
                },
                dp_to: {
                    required: true,
                },
                dp_bt_bank: {
                    required: function () {
                        var _dp_bt = $('#dp_bt').val();
                        if (_dp_bt != undefined && _dp_bt != "" && _dp_bt > 0)
                            return true;
                        else
                            return false;
                    }
                },
                dp_chq_no: {
                    required: function () {
                        var _dp_chq = $('#dp_chq').val();
                        if (_dp_chq != undefined && _dp_chq != "" && _dp_chq > 0 )
                            return true;
                        else
                            return false;
                    }
                },
                dp_chq_date: {
                    required: function () {
                        var _dp_chq = $('#dp_chq').val();
                        if (_dp_chq != undefined && _dp_chq != "" && _dp_chq > 0)
                            return true;
                        else
                            return false;
                    }
                },
                dp_chq_bank: {
                    required: function () {
                        var _dp_chq = $('#dp_chq').val();
                        if (_dp_chq != undefined && _dp_chq != "" && _dp_chq > 0)
                            return true;
                        else
                            return false;
                    }
                },
            },
            messages: {
                dp_branch: {
                    required: "Select Branch",
                },
                dp_debit: {
                    required: "Select Debit Account",
                },
                dp_date: {
                    required: "Select Payment Date",
                },
                dp_to: {
                    required: "Enter Payment To",
                },
                dp_bt_bank: {
                    required: "select Transfer Bank",
                },
                dp_chq_no: {
                    required: "Enter Cheque No#",
                },
                dp_chq_date: {
                    required: "Enter Cheque Date",
                },
                dp_chq_bank: {
                    required: "select Cheque Bank",
                },
            },
            highlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                } else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
                Error_Timeout(elem.attr("id"));
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });
    }
    $('#dp_date').keypress(function (e) {
        var charCode = (e.which) ? e.which : e.keyCode
        if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
            return false;

        }
        else {
            if (e.target.value.length >= 18)
                return false;
        }
    });
    $('#dp_chq_date').keypress(function (e) {
        var charCode = (e.which) ? e.which : e.keyCode
        if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
            return false;

        }
        else {
            if (e.target.value.length >= 18)
                return false;
        }
    });

    var AmountValid = function()
    {
        let count = 0;
        if ($("#dp_cash").val().length !== 0 && $("#dp_cash").val() !== "" && $("#dp_cash").val() !== null)
        {
            if ($("#dp_cash").val() > 0)
                count++;
        }
        if ($("#dp_cc").val().length !== 0 || $("#dp_cc").val() !== "" || $("#dp_cc").val() !== null)
        {
            if ($("#dp_cc").val() > 0)
                count++;
        }
        if ($("#dp_chq").val().length !== 0 || $("#dp_chq").val() !== "" || $("#dp_chq").val() !== null)
        {
            if ($("#dp_chq").val() > 0)
                count++;
        }
        if ($("#dp_bt").val().length !== 0 || $("#dp_bt").val() !== "" || $("#dp_bt").val() !== null)
        {
            if ($("#dp_bt").val() > 0)
                count++;
        }

        if (count > 0)
            return true;
        else
            return false;
    }

    //#endregion

    //#region TextBox on Focus Out Event
    $("#dp_cash").focusout('input', function () {
        if ($("#dp_cash").val().length ===0 || $("#dp_cash").val() === "" || $("#dp_cash").val() === null)
            $("#dp_cash").val("0.00");
    });
    $("#dp_cc").focusout('input', function () {
        if ($("#dp_cc").val().length === 0 || $("#dp_cc").val() === "" || $("#dp_cc").val() === null)
            $("#dp_cc").val("0.00");
    });
    $("#dp_chq").focusout('input', function () {
        if ($("#dp_chq").val().length === 0 || $("#dp_chq").val() === "" || $("#dp_chq").val() === null)
            $("#dp_chq").val("0.00");
    });
    $("#dp_bt").on('change', function () {
        if ($("#dp_bt").val().length === 0 || $("#dp_bt").val() === "" || $("#dp_bt").val() === null)
            $("#dp_bt").val("0.00");
    });
    //#endregion

    //#region Insert Direct Payment on Button Click
    $('#btn_Insert').on('click', function (e) {
        e.preventDefault();
        var t = 0;
        if ($('#form_AddDirectPayment').valid()) {
            if (AmountValid()) {
                Swal.fire({
                    title: "Save",
                    text: "Are you sure you want to Insert Direct Payment!.",
                    icon: "question",
                    showCancelButton: !0,
                    confirmButtonText: 'Yes! I Confirm',
                    cancelButtonText: 'No! Cancel Please',
                    confirmButtonClass: "btn btn-success mt-2",
                    cancelButtonClass: "btn btn-danger ms-2 mt-2",
                    buttonsStyling: !1
                }).then(function (t) {
                    if (t.value) {
                        var _data = {
                            "dpId": 0,
                            "dp_code": "",
                            "dp_date": $('#dp_date').val().trim(),
                            "dp_to": $('#dp_to').val().trim(),
                            "dp_debit": $('#dp_debit').val(),
                            "dp_credit": '',
                            "dp_cash": $('#dp_cash').val().trim(),
                            "dp_cc": $('#dp_cc').val().trim(),
                            "dp_chq": $('#dp_chq').val().trim(),
                            "dp_chq_date": $('#dp_chq_date').val().trim(),
                            "dp_bt": $('#dp_bt').val(),
                            "dp_bt_bank": $('#dp_bt_bank').val(),
                            "dp_notes": $('#dp_notes').val().trim(),
                            "dp_chq_no": $('#dp_chq_no').val().trim(),
                            "dp_chq_bank": $('#dp_chq_bank').val(),
                            "dp_branch": $('#dp_branch').val(),
                            "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                        }
                        $.ajax({
                            url: '@Url.Action("InsertDirectPayment", "DirectPayments", new { area = "MaterialManagement" })',
                            type: "POST",
                            dataType: "json",
                            data: _data,
                            beforeSend: function () {
                                $('#btn_Insert').removeClass("btn btn-success");
                                $('#btn_Insert').addClass("btn btn-success btn-loaders btn-icon");
                                $('#btn_Insert').parent().addClass("curdrop");
                                $('#btn_Insert').html("Saving.. Please Wait");
                                $('.btn-close').addClass("disabled");
                            },
                            async: false,
                            success: function (data) {
                                $('#btn_Insert').removeClass("btn btn-success btn-loaders btn-icon");
                                $('#btn_Insert').addClass("btn btn-success");
                                $('#btn_Insert').parent().removeClass("curdrop");
                                $('#btn_Insert').html(" Add Payment");
                                $('.btn-close').removeClass("disabled");
                                if (data.isInserted) {
                                    Get_DirectPayments($('#dp_date').val().trim(), $('#dp_date').val().trim());
                                    var alertPlaceholder = document.getElementById("DirectPayment_Alert");
                                    function alert(e, t) {
                                        var l = document.createElement("div");
                                        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                    }
                                    alert("<i class='fe fe-check-circle text-white'></i>Direct Payment Inserted Successfully!", "success");
                                    $('#directpayment_modal').modal('toggle');
                                    Timeout();
                                }
                                else {
                                    $("#create_dpayment_error").html('');
                                    var error_message = data.message;
                                    if (error_message == "Error While Inserting Direct Payment!") {
                                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                            "<div class='alert alert-light-warning' role='alert' style=';color:#744f04'>" +
                                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                            "<strong><i class='fe fe-alert-triangle'></i>&nbsp;" + error_message + "&nbsp;</strong></div></div>";
                                        $("#create_dpayment_error").html(html);
                                    }
                                    else {
                                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                            "<div class='alert alert-danger' role='alert'>" +
                                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                            "<strong><i class='fe fe-alert-circle text-white' ></i>&nbsp;Validation Error.. Please correct before you Update!&nbsp;</strong><br/><ul>";
                                        $.each(data.message, function (index, value) {
                                            html += "<li><small>" + value + "</small><li>";
                                            var elem = $("#" + index);
                                            if (elem.hasClass("select2-hidden-accessible")) {
                                                $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                            }
                                            else {
                                                $(elem).addClass(" is-invalid");
                                            }
                                            setTimeout(function () {
                                                if (elem.hasClass("select2-hidden-accessible")) {
                                                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                                }
                                                else {
                                                    $(elem).removeClass("is-invalid");
                                                }
                                            }, 5000);
                                        });
                                        html += "</ul></div></div>";
                                        $("#create_dpayment_error").html(html);
                                    }
                                    Timeout();
                                }
                            },
                            error: function (xhr) {
                                $('#btn_Insert').removeClass("btn btn-success btn-loaders btn-icon");
                                $('#btn_Insert').addClass("btn btn-success");
                                $('#btn_Insert').parent().removeClass("curdrop");
                                $('#btn_Insert').html(" Add Payment");
                                $('.btn-close').removeClass("disabled");
                                var alertPlaceholder = document.getElementById("DirectPayment_Alert");
                                function alert(e, t) {
                                    var l = document.createElement("div");
                                    l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                        '<button type="button" class="btn-close text-white" data-bs-dismiss="alert" aria-hidden="true">x</button></div>', alertPlaceholder.append(l)
                                }
                                alert("<i class='fe fe-x-circle text-white'></i> Failed to Add Direct Payment!", "danger");
                                $('#directpayment_modal').modal('toggle');
                                Timeout();
                            }
                        });
                    }
                });
            }
            else {
                var alertPlaceholder = document.getElementById("create_dpayment_error");
                function alert(e, t) {
                    var l = document.createElement("div");
                    l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>', alertPlaceholder.append(l)
                }
                alert("<i class='fa fa-exclamation-triangle text-warning'></i>Please Fill Mandatory fields & Enter One Payment Mode At Least!", "warning");
                Timeout();
            }
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
            var alertPlaceholder = document.getElementById("create_dpayment_error");
            function alert(e, t) {
                var l = document.createElement("div");
                l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>', alertPlaceholder.append(l)
            }
            alert("<i class='fa fa-exclamation-triangle text-warning'></i>Please Fill Mandatory fields!", "warning");
            Timeout();
        }
    });
    //#endregion

    //#region On Change Events For Debit Account, Bank Transfer and Cheque Bank Account
    $('#dp_date').on('change', function (e) {
        if ($('#dp_date').val() == "")
            $('#dp_date').val(moment(new Date()).format("DD-MMMM-YYYY"));
        $('#dp_debit').empty();
        $('#spn_message').text('');
        $('#spn_message2').text('');
        $('#spn_message3').text('');
    });

    $('#dp_chq_date').on('change', function (e) {
        $('#dp_chq_bank').empty();
        $('#spn_message').text('');
        $('#spn_message2').text('');
        $('#spn_message3').text('');
    });

    $('#dp_debit').select2({
        placeholder: 'Search Account',
        dropdownParent: $('#directpayment_body'),
        width: '100%',
        allowClear: true,
        minimumInputLength: 3,
        maximumInputLength: 12,
        escapeMarkup: function (markup) {
            return markup;
        },
        ajax: {
            url: '@Url.Action("GetAccountsDropdown", "ChartOfAccounts", new { area = "Accounts" })',
            dataType: 'json',
            delay: 250,
            data: function (query) {
                if ($('#dp_branch').val() != "" && $('#dp_date').val() != "") {
                    var F_year = moment($('#dp_date').val()).format("YYYY");
                    F_year = 'FY - ' + F_year;
                    return {
                        query: query.term,
                        branches: $('#dp_branch').val(),
                        period: F_year
                    };
                }
                else {
                    $('#spn_message').text('Select Branch and Payment Date');
                    return {
                        query: '',
                        branch: 0
                    }
                }
            },
            processResults: function (data) {
                return {
                    results: data
                };
            },
            cache: true
        }
    });

    $('#dp_chq_bank').select2({
        placeholder: 'Search Bank',
        dropdownParent: $('#directpayment_body'),
        width: '100%',
        allowClear: true,
        minimumInputLength: 3,
        maximumInputLength: 12,
        escapeMarkup: function (markup) {
            return markup;
        },
        ajax: {
            url: '@Url.Action("GetDebitCreditBankByBranch", "DirectPayments", new { area = "MaterialManagement" })',
            dataType: 'json',
            delay: 250,
            data: function (query) {
                $('#spn_message2').text('');
                if ($('#dp_branch').val() != "" && $('#dp_chq_date').val() != "") {
                    var F_year = moment($('#dp_chq_date').val()).format("YYYY");
                    F_year = 'FY - ' + F_year;
                    return {
                        query: query.term,
                        branches: $('#dp_branch').val(),
                        period: F_year,
                        groups:"B"
                    };
                }
                else {
                    $('#spn_message2').text('Select Branch and Cheque Date');
                    return {
                        query: '',
                        branch: 0
                    }
                }
            },
            processResults: function (data) {
                return {
                    results: data
                };
            },
            cache: true
        }
    });

    $('#dp_bt_bank').select2({
        placeholder: 'Search Bank',
        dropdownParent: $('#directpayment_body'),
        width: '100%',
        allowClear: true,
        minimumInputLength: 3,
        maximumInputLength: 12,
        escapeMarkup: function (markup) {
            return markup;
        },
        ajax: {
            url: '@Url.Action("GetDebitCreditBankByBranch", "DirectPayments", new { area = "MaterialManagement" })',
            dataType: 'json',
            delay: 250,
            data: function (query) {
                $('#spn_message3').text('');
                if ($('#dp_branch').val() != "" && $('#dp_date').val() != "") {
                    var F_year = moment($('#dp_date').val()).format("YYYY");
                    F_year = 'FY - ' + F_year;
                    return {
                        query: query.term,
                        branches: $('#dp_branch').val(),
                        period: F_year,
                        groups: "B"
                    };
                }
                else {
                    $('#spn_message3').text('Select Branch and Payment Date');
                    return {
                        query: '',
                        branch: 0
                    }
                }
            },
            processResults: function (data) {
                return {
                    results: data
                };
            },
            cache: true
        }
    });
    //#endregion

    //#region Remove Valiate Error Class Timeout
    function Error_Timeout(_id) {
        setTimeout(function () {
            $(".has-error").removeClass("has-error");
            $(".error").removeClass("error");
            $("#" + _id + "-error").text("");
        }, 4200);
    }
    //#endregion

    //#region Alert Timeout
    function Timeout() {
        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 4200);
    }
    //#endregion

</script>