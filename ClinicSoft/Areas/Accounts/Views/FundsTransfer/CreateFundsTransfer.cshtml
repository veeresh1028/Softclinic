@model BusinessEntities.Accounts.Accounting.FundsTransfer

<style type="text/css">
    #sizeCJ {
        max-width: 1000px;
    }

    #tbl_list_entries_wrapper .dataTables_scroll .dataTables_scrollBody {
        min-height: 250px;
    }
</style>

<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold">Create Fund Transfer</h5>
    <button aria-label="Close" data-bs-dismiss="modal" class="btn-close close-group" type="button"><span aria-hidden="true">×</span></button>
</div>

<div class="modal-body p-4">
    <form id="form_AddFundTransfer" autocomplete="off">
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-6">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Branch&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.ft_branch, new SelectList(Model.BranchList, "id", "text"), "Please Select", new { @class = "form-select select2" })
                </div>
            </div>

            <div class="col-sm-12 col-md-12 col-lg-6">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Period&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.ft_acc_period, new SelectList(Model.PeriodList, "id", "text"), "Please Select", new { @class = "form-select select2" })
                </div>
            </div>

            <div class="col-sm-12 col-md-12 col-lg-4">
                <div class="form-group mb-0">
                    <label class="form-label text-black" title="">Date&nbsp;<span class="text-danger">*</span> </label>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <i class="fe fe-calendar"></i>
                        </div>
                    </div>
                    @Html.TextBoxFor(model => model.ft_date, new { @class = "form-control", @placeholder = "Select Transfer Date", maxlength = "18" })
                </div>
            </div>

            <div class="col-sm-12 col-md-12 col-lg-4">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Code&nbsp;<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.ft_refno, new { @class = "form-control disabled text-danger", @placeholder = "Ex: FN45875", @maxlength = "25" })
                </div>
            </div>

            <div class="col-sm-12 col-md-12 col-lg-4">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Amount&nbsp;<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.ft_amount, new { @class = "form-control text-end", @placeholder = "0.00", @oninput = "validate(this,1000000)" })
                </div>
            </div>

            <div class="col-sm-12 col-md-12 col-lg-6">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Debit A/C&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.ft_to, new List<SelectListItem> { }, "Please Select", new { @class = "form-select select2" })
                </div>
            </div>

            <div class="col-sm-12 col-md-12 col-lg-6">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Credit A/C&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.ft_from, new List<SelectListItem> { }, "Please Select", new { @class = "form-select select2" })
                </div>
            </div>

            <div class="col-sm-12 col-md-6 col-lg-12">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Description</label>
                    @Html.TextAreaFor(m => m.ft_comments, new { @class = "form-control", @placeholder = "Enter comments for transfer", @maxlength = "1000" })
                </div>
            </div>

        </div>

        <div class="row mt-2">
            <div class="col-sm-12 col-md-12 col-lg-12 d-flex justify-content-center" id="errorCreate_ft"></div>
            <div class="col-sm-12 col-md-12 col-lg-12 text-center">
                <div class="btn-list btn-animation">
                    <button type="submit" class="btn btn-success" id="btn_Insert">Insert Transfer</button>
                    <button type="button" class="btn btn-outline-danger me-1 close-group" data-bs-dismiss="modal">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

<script type="text/javascript">
    var _from = $('#add_group_modal').attr("data-modal-from");

    //#region Page Load
    $(function () {
        $("#ft_branch").select2({
            placeholder: 'Select Branch',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 10,
            dropdownParent: $('#form_AddFundTransfer'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#ft_acc_period").select2({
            placeholder: 'Select Period',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 10,
            dropdownParent: $('#form_AddFundTransfer'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });
        var selectedValue = $('#ft_acc_period option:eq(1)').val();
        var selectedText = $('#ft_acc_period option:eq(1)').text();
        $('#ft_acc_period').val(selectedValue).trigger('change');

        var select2SelectEvent = jQuery.Event("select2:select", {
            params: {
                data: {
                    id: selectedValue,
                    text: selectedText
                }
            }
        });

        $('#ft_acc_period').trigger(select2SelectEvent);

        validation();
    });
    //#endregion

    //#region On Branch Select
    $('#ft_branch').on('select2:select', function (e) {
        load_ag_code();
    });
    //#endregion

    //#region Validate Max value for Controls
    var validate = function (e, max) {
        var t = e.value;
        var j = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), 3)) : t;
        e.value = (max == 0) ? j : ((j >= max) ? max : j);
    }
    //#endregion

    //#region Load & Select Events

    $('#ft_acc_period').on('select2:select', function (e) {
            var inputString = e.params.data.text;

            var datePattern = /\[(\d{2}\/[a-zA-Z]+\/\d{4}) - (\d{2}\/[a-zA-Z]+\/\d{4})\]/;

            var matches = inputString.match(datePattern);
            if (matches && matches.length === 3) {
                var startDate = matches[1];
                var endDate = matches[2];

                startDate = moment(startDate, 'DD/MMM/YYYY');
                endDate = moment(endDate, 'DD/MMM/YYYY');

                $('#ft_date').bootstrapdatepicker('destroy');

                $('#ft_date').bootstrapdatepicker({
                    format: "dd-MM-yyyy",
                    viewMode: "date",
                    todayHighlight: true,
                    autoclose: true,
                    multidate: false,
                    multidateSeparator: "-",
                    startDate: new Date(startDate),
                    endDate: new Date(endDate)
                });

                $("#ft_date").bootstrapdatepicker("setDate", "today");

                $('#ft_date').keypress(function (e) {
                    var charCode = (e.which) ? e.which : e.keyCode
                    if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                        return false;
                    }
                    else {
                        if (e.target.value.length >= 18)
                            return false;
                    }
                });

            }
            else {
                console.log("Invalid A/C Period Date");
            }

            load_accounts_create();
    });

        var load_accounts_create = function () {
            if ($('#ft_branch').val() != "" && $('#ft_acc_period').val() != "") {
                $('#ft_to').select2({
                    placeholder: 'Search Account',
                    dropdownParent: $('#form_AddFundTransfer'),
                    width: '100%',
                    allowClear: true,
                    minimumInputLength: 3,
                    maximumInputLength: 12,
                    escapeMarkup: function (markup) {
                        return markup;
                    },
                    ajax: {
                        url: '@Url.Action("GetAccountsDropdown", "ChartOfAccounts", new { area = "Accounts" })',
                        dataType: 'json',
                        delay: 250,
                        data: function (query) {
                            return {
                                query: query.term,
                                branches: $('#ft_branch').val(),
                                period: $('#ft_acc_period').val()
                            };
                        },
                        processResults: function (data) {
                            return {
                                results: data
                            };
                        },
                        cache: true
                    }
                });

                $('#ft_from').select2({
                    placeholder: 'Search Account',
                    dropdownParent: $('#form_AddFundTransfer'),
                    width: '100%',
                    allowClear: true,
                    minimumInputLength: 3,
                    maximumInputLength: 12,
                    escapeMarkup: function (markup) {
                        return markup;
                    },
                    ajax: {
                        url: '@Url.Action("GetAccountsDropdown", "ChartOfAccounts", new { area = "Accounts" })',
                        dataType: 'json',
                        delay: 250,
                        data: function (query) {
                            return {
                                query: query.term,
                                branches: $('#ft_branch').val(),
                                period: $('#ft_acc_period').val()
                            };
                        },
                        processResults: function (data) {
                            return {
                                results: data
                            };
                        },
                        cache: true
                    }
                });
            }
        }
    //#endregion

    //#region Adding Validation on Fields
    var validation = function () {
        $("#form_AddFundTransfer").validate({
            focusInvalid: true,
            rules:
            {
                ft_branch: {
                    required: true
                },
                ft_acc_period: {
                    required: true
                },
                ft_date: {
                    required: true
                },
                ft_refno: {
                    required: true,
                    maxlength:25
                },
                ft_from: {
                    required: true
                },
                ft_to: {
                    required: true
                },
                ft_amount: {
                    required: true
                }

            },
            messages: {
                ft_branch: {
                    required: "Select Branch"
                },
                ft_acc_period: {
                    required: "Select Period"
                },
                ft_date: {
                    required: "Select Date"
                },
                ft_refno: {
                    required: "Enter Refrence#",
                    maxlength: "Enter No More than 25 Characters"
                },
                ft_from: {
                    required: "Select Credit Account"
                },
                ft_to: {
                    required: "Select Debit Account"
                },
                ft_amount: {
                    required: "Enter Transfer Amount"
                }

            },
            highlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                } else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
                Error_Timeout(elem.attr("id"));
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });

        $('#ft_branch').on('change', function () {
            $(this).trigger('blur');
        });

        $('#ft_acc_period').on('change', function () {
            $(this).trigger('blur');
        });

        $('#ft_from').on('change', function () {
            $(this).trigger('blur');
        });

        $('#ft_to').on('change', function () {
            $(this).trigger('blur');
        });

        $('#ft_amount').on('change', function () {
            $(this).trigger('blur');
        });

        $('#ft_amount').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });
    }
    //#endregion

    //#region Insert Funds Transfer on Click
    $('#btn_Insert').on('click', function (e) {
        e.preventDefault();

        if ($('#form_AddFundTransfer').valid()) {
            if ($('#ft_from').val() !== $('#ft_to').val() && parseFloat($('#ft_amount').val().trim()) > 0)  {
                Swal.fire({
                    title: "Save",
                    text: "Are you sure you want to Insert Transfer Entries!.",
                    icon: "question",
                    showCancelButton: !0,
                    confirmButtonText: 'Yes! I Confirm',
                    cancelButtonText: 'No! Cancel Please',
                    confirmButtonClass: "btn btn-success mt-2",
                    cancelButtonClass: "btn btn-danger ms-2 mt-2",
                    buttonsStyling: !1
                }).then(function (t) {
                    if (t.value) {
                        var _dataInsert = {
                            "ftId": 0,
                            "ft_date": $('#ft_date').val().trim(),
                            "ft_from": $('#ft_from').val(),
                            "ft_to": $('#ft_to').val(),
                            "ft_amount": $('#ft_amount').val().trim(),
                            "ft_refno": $('#ft_refno').val().trim(),
                            "ft_comments": $('#ft_comments').val().trim(),
                            "ft_branch": $('#ft_branch').val(),
                            "ft_acc_period": $('#ft_acc_period').val(),
                            "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                        }
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("InsertFundsTransfer", "FundsTransfer", new { area = "Accounts" })",
                            dataType: "json",
                            data: _dataInsert,
                            beforeSend: function () {
                                $('#btn_Insert').removeClass("btn btn-success");
                                $('#btn_Insert').addClass("btn btn-success btn-loaders btn-icon");
                                $('#btn_Insert').html("Inserting....");
                            },
                            success: function (data) {
                                $('#btn_Insert').removeClass("btn btn-success btn-loaders btn-icon");
                                $('#btn_Insert').addClass("btn btn-success");
                                $('#btn_Insert').html("Insert Transfer");

                                if (data.isInserted > 0) {
                                    GetFundsTransfer();

                                    alert("<i class='fe fe-check-circle text-white'></i> Fund Transfer Inserted Successfully!", "success");

                                    $('#add_foundtransfer_modal').modal('toggle');

                                    Timeout();
                                }
                                else {
                                    $("#errorCreate_ft").html('');

                                    if (data.message == "Error While Inserting Funds Transfer!" || data.message == "Funds Transfer already exists!") {
                                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                            "<div class='alert alert-light-warning' role='alert'>" +
                                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                            "<strong><i class='fe fe-alert-triangle text-warning'></i>&nbsp;" + data.message + "&nbsp;</strong></div></div>";

                                        $("#errorCreate_ft").html(html);
                                    }
                                    else {
                                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                            "<div class='alert alert-light-danger' role='alert'>" +
                                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                            "<strong><i class='fe fe-alert-circle text-danger' ></i>&nbsp;Validation Error! Please validate before submitting!&nbsp;</strong><br/><ul>";

                                        $.each(data.message, function (index, value) {
                                            html += "<li><small>" + value + "</small><li>";
                                            var elem = $("#" + index);
                                            if (elem.hasClass("select2-hidden-accessible")) {
                                                $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                            }
                                            else {
                                                $(elem).addClass(" is-invalid");
                                            }
                                            setTimeout(function () {
                                                if (elem.hasClass("select2-hidden-accessible")) {
                                                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                                }
                                                else {
                                                    $(elem).removeClass("is-invalid");
                                                }
                                            }, 5000);
                                        });

                                        html += "</ul></div></div>";

                                        $("#errorCreate_ft").html(html);
                                    }
                                    Timeout();
                                }
                            },
                            error: function (xhr) {
                                $('#btn_Insert').removeClass("btn btn-success btn-loaders btn-icon");
                                $('#btn_Insert').addClass("btn btn-success");
                                $('#btn_Insert').html("Insert Transfer");

                                alert("<i class='fe fe-x-circle text-white'></i> Failed to Insert Fund Transfer!", "danger");
                                $('#add_foundtransfer_modal').modal('toggle');
                                Timeout();
                            }
                        });
                    }
                });
            }
            else {
                var error_message = "Amount should be greater than 0";
                if (parseFloat($('#ft_amount').val().trim()) > 0)
                    error_message = "Debit and Credit account can not be same";

                let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                    "<div class='alert alert-light-warning' role='alert'>" +
                    "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                    "<strong><i class='fe fe-alert-triangle text-warning'></i>&nbsp;" + error_message +"!&nbsp;</strong></div></div>";

                $("#errorCreate_ft").html(html);
            }

        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });
    //#endregion

    //#region Close Group Click
    $('.close-group').on('click', function (e) {
        e.preventDefault();

        if (_from === "create-category") {
            $('#add_group_modal').modal('hide');
            $('#add_category_modal').modal('toggle');
        }
        else if (_from === "update-category") {
            $('#edit_group_modal').modal('hide');
            $('#edit_category_modal').modal('toggle');
        }
        else if (_from === "create-account") {
            $('#add_group_modal').modal('hide');
            $('#add_account_modal').modal('toggle');
        }
        else if (_from === "update-account") {
            $('#add_group_modal').modal('hide');
            $('#edit_account_modal').modal('toggle');
        }
    });
    //#endregion

    //#region Remove Valiate Error Class Timeout
    function Error_Timeout(_id) {
        setTimeout(function () {
            $(".has-error").removeClass("has-error");
            $(".error").removeClass("error");
            $("#" + _id +"-error").text("");
        }, 4200);
    }
    //#endregion

    //#region Alter Holder
    var alertPlaceholder = document.getElementById("FundsTransferAlert");
    function alert(e, t) {
        var l = document.createElement("div");
        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
    }
    //#endregion
</script>
