@model IEnumerable<BusinessEntities.Accounts.Accounting.AccountReports>
@using System.Security.Claims;
@{
    ViewBag.Title = "Accounts & Material Management - Account VAT Report";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var empId = claims.Where(c => c.Type == ClaimTypes.Sid).Select(c => c.Value).SingleOrDefault();
    var emp_name = claims.Where(c => c.Type == ClaimTypes.GivenName).Select(c => c.Value).SingleOrDefault();
    var emp_dept = claims.Where(c => c.Type == ClaimTypes.Locality).Select(c => c.Value).SingleOrDefault();
    var emp_department = claims.Where(c => c.Type == ClaimTypes.Surname).Select(c => c.Value).SingleOrDefault();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    var company = claims.Where(c => c.Type == ClaimTypes.PrimarySid).Select(c => c.Value).SingleOrDefault();
    var emp_branch = claims.Where(c => c.Type == ClaimTypes.GroupSid).Select(c => c.Value).SingleOrDefault();
}

<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary">Account VAT Report</h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list">

            <button class="btn btn-outline-primary mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#searchFilter" aria-expanded="false" aria-controls="collapseExample">
                <i class="fa fa-filter"></i> Advance Filters
            </button>
            <button class="btn btn-outline-success mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#generateReport" aria-expanded="false" aria-controls="collapseExample">
                <i class="fa fa-file-text"></i> Generate Report
            </button>
            <button class="btn btn-outline-warning mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#updateStatus" aria-expanded="false" aria-controls="collapseExample">
                <i class="fa fa-recycle"></i> Change Status
            </button>

        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card mb-0">
            <div class="card-status bg-primary-1"></div>

            <div class="collapse" id="searchFilter">
                <div class="card-body">
                    <div class="row">

                        <div class="col-sm-6 col-md-4 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Branch</label>
                                <select class="form-control" id="select_branch">
                                </select>
                            </div>
                        </div>

                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">From Date</label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_from" class="form-control" placeholder="Select Date From" type="text" autocomplete="off">
                            </div>
                        </div>

                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">To Date</label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_to" class="form-control" placeholder="Select Date To" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-2 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Status<small>(es)</small></label>
                                <select id="select_status" class="form-control mb-4" multiple="multiple"></select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">&nbsp;</label>
                                <button class="btn btn-primary mb-2" type="button" id="btnSearch">
                                    <i class="fa fa-search-plus"></i>&nbsp;Search
                                </button>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="collapse" id="generateReport">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-6 col-md-4 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Branch</label>
                                <select class="form-control" id="rept_branch">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">From Date</label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="rept_date_from" class="form-control" placeholder="Select Date From" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">To Date</label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="rept_date_to" class="form-control" placeholder="Select Date To" type="text" autocomplete="off">
                            </div>
                        </div>

                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">&nbsp;</label>
                                <button class="btn btn-success mb-2" type="button" id="btnGenerate">
                                    <i class="fa fa-search-plus"></i>&nbsp;Generate
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="collapse" id="updateStatus">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-6 col-md-4 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Status Change Date</label>
                                <input id="action_date" class="form-control" placeholder="Select Date" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Status Type</label>
                            </div>
                            <div class="input-group">
                                <select id="action_type" class="form-control">
                                    <option value=" ">Select Status</option>
                                    <option value="Verified">Verified</option>
                                    <option value="Submitted">Submitted</option>
                                    <option value="Deleted">Deleted</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">To Date</label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_to" class="form-control" placeholder="Select Date To" type="text" autocomplete="off">
                            </div>
                        </div>

                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">&nbsp;</label>
                                <button type="button" class="btn btn-warning" id="btnChangeStatus">Change Status</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div id="progress-loader" style="display:none;">
                    <div class="progress progress-sm mb-3">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-teal progress-bar-indeterminate"></div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tbl_account_vat" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                <th class="border-bottom-0 font-weight-semibold text-white">Sno.</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Branch</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Date From</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Date To</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Sales Amount</th>
                                <th class="border-bottom-0 font-weight-semibold text-white" style="color:#FFF !important">Sales VAT</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Sales Return Amount</th>
                                <th class="border-bottom-0 font-weight-semibold text-white" style="color:#FFF !important">Sales Return VAT</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Purchase Amount</th>
                                <th class="border-bottom-0 font-weight-semibold text-white" style="color:#FFF !important">Purchase VAT</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Purchase Return Amount</th>
                                <th class="border-bottom-0 font-weight-semibold text-white" style="color:#FFF !important">Purchase Return VAT</th>
                                <th class="border-bottom-0 font-weight-semibold text-white" style="color:#FFF !important">Total VAT</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Generated Date</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Verified Date</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Submitted Date</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Status</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Madeby</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Print</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th class="text-right fs-17 text-primary font-weight-bold">Total :</th>
                                <th class="text-end fs-16 font-weight-bold"></th>
                                <th class="text-end fs-16 font-weight-bold" style="color:#3c457d !important"></th>
                                <th class="text-end fs-16 font-weight-bold"></th>
                                <th class="text-end fs-16 font-weight-bold" style="color:#3c457d !important"></th>
                                <th class="text-end fs-16 font-weight-bold"></th>
                                <th class="text-end fs-16 font-weight-bold" style="color:#3c457d !important"></th>
                                <th class="text-end fs-16 font-weight-bold"></th>
                                <th class="text-end fs-16 font-weight-bold" style="color:#3c457d !important"></th>
                                <th class="text-end fs-16 font-weight-bold" style="color:#3c457d !important"></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@* View Sales Invoice popup Model *@
<div class="modal fade overflow-auto" id="saleinvoice_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="saleinvoice_body">
        </div>
    </div>
</div>

@* View Purchase Invoice popup Model *@
<div class="modal fade overflow-auto" id="purchaseinvoice_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="purchaseinvoice_body">
        </div>
    </div>
</div>


@* View Sales Retuern popup Model *@
<div class="modal fade overflow-auto" id="saleinvoice_return_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="saleinvoice_return_body">
        </div>
    </div>
</div>

@* View Purchase Return popup Model *@
<div class="modal fade overflow-auto" id="purchaseinvoice_return_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="purchaseinvoice_return_body">
        </div>
    </div>
</div>


<style type="text/css">
    .group-type {
        cursor: pointer;
    }
</style>


@section myScripts{
    <script>
        //#region Page Load
        $(function () {

            $('#action_type').select2({
                minimumResultsForSearch: '',
                placeholder: 'Select Status',
                width: '100%'
            });

            $('#action_date').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            $("#action_date").bootstrapdatepicker("setDate", "today");

            $('#rept_date_from').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            $("#rept_date_from").bootstrapdatepicker("setDate", "today");

            $('#rept_date_to').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            $("#rept_date_to").bootstrapdatepicker("setDate", "today");


            $('#rept_date_from').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;
                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });


            $('#rept_date_to').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;
                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });

            $('#action_date').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;
                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });

            $('#select_date_from').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });

            $("#select_date_from").bootstrapdatepicker("setDate", "today");

            $('#select_date_to').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            $("#select_date_to").bootstrapdatepicker("setDate", "today");


            $('#select_date_from').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;
                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });


            $('#select_date_to').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;
                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });

            $('#action_date').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;
                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });
            load_status();
            load_branches();
        });
        //#endregion

        //#region Load Branches
        var load_branches = function () {
            $('#rept_branch').SumoSelect({
                placeholder: 'Select Branch',
                captionFormat: '{0} Branch Selected',
                captionFormatAllSelected: 'All {0} Branches selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $('#select_branch').SumoSelect({
                placeholder: 'Any Branch',
                captionFormat: '{0} Branch Selected',
                captionFormatAllSelected: 'All {0} Branches selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $.ajax({
                url: '@Url.Action("GetBranches", "AccountGroups", new { area = "Accounts" })',
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    $('#rept_branch').html('');
                    $('#rept_branch')[0].sumo.reload();

                    $('#select_branch').html('');
                    $('#select_branch')[0].sumo.reload();

                    $.each(response, function (j) {
                        $('#rept_branch')[0].sumo.add(response[j].id, response[j].text);
                    });

                    $.each(response, function (j) {
                        $('#select_branch')[0].sumo.add(response[j].id, response[j].text);
                    });

                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                }
            }).done(function () {
                $('#rept_branch')[0].sumo.selectItem(["@emp_branch.ToString()"]);
                $('#select_branch')[0].sumo.selectItem(["@emp_branch.ToString()"]);

                $('#rept_branch')[0].sumo.reload();
                $('#select_branch')[0].sumo.reload();

                getAccountVAT();
            });
        }
        //#endregion

        //#region load status
        var load_status = function () {
            $('#select_status').SumoSelect({
                placeholder: 'Any Status',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Enter here.',
                selectAll: true
            });

            $('#select_status').html('');
            $('#select_status')[0].sumo.reload();
            $('#select_status')[0].sumo.add("Generated", "Generated");
            $('#select_status')[0].sumo.add("Verified", "Verified");
            $('#select_status')[0].sumo.add("Submitted", "Submitted");

            $('#select_status')[0].sumo.reload();
        };
        //#endregion

        //#region Generate VAT Report
        $("#btnGenerate").click(function (e) {
            e.preventDefault();

            if ($("#rept_branch").val() != null && $("#rept_branch").val() != 0 && $("#rept_branch").val() != "") {
                var _data = {
                    "branch": $('#rept_branch').val().toString(),
                    "date_from": $("#rept_date_from").val().toString(),
                    "date_to": $("#rept_date_to").val().toString(),
                }
                $.ajax({
                    url: "@Url.Action("GenerateAccountVATReport", "Reports", new { area = "Accounts" })",
                    type: "POST",
                    dataType: "JSON",
                    data: _data,
                    success: function (data) {
                        return_value = data.isGenerated;
                        if (return_value > 0) {
                            title = "Success!";
                            text = "Generated Successfully!";
                            icon = "success";
                        }
                        else {
                            title = "Error!";
                            text = data.message;
                            icon = "error";
                        }

                        if (title != '' && text != '' && icon != '') {
                            Swal.fire({
                                title: title,
                                text: text,
                                icon: icon,
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                            });
                            getAccountVAT();
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr);
                        Swal.fire({
                            title: "Error!",
                            text: "Failed to Reconciled! Please refresh the Page and Try Again.",
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                        })
                    }
                });
            }
            else {
                Swal.fire({
                    title: "Attention!",
                    text: "You need to select atleast 1 Branch to Filter Profit And Loss!",
                    icon: "warning",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                });
            }
        });
        //#endregion

        //#region Load Generate VAT Report
        $("#btnSearch").click(function (e) {
            getAccountVAT();
        });

        function getAccountVAT() {
            var _data = {
                "branch": $('#select_branch').val().toString(),
                "date_from": $("#select_date_from").val().toString(),
                "date_to": $("#select_date_to").val().toString(),
                "status": $("#select_status").val().toString()
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("getAccountVATDetail", "Reports", new { area = "Accounts" })",
                beforeSend: function () {
                    $('#progress-loader').show();
                },
                data: _data,
                success: function (response) {
                    if (response.isAuthorized) {
                        var table;
                        if ($.fn.dataTable.isDataTable('#tbl_account_vat')) {
                            table = $('#tbl_account_vat').DataTable();
                            table.clear();
                            table.rows.add(response.pl_list).draw();
                        }
                        else {
                            BindDataTable(response.pl_list);
                        }
                    }
                    $('#progress-loader').hide();
                },
                error: function (xhr) {
                    console.log(xhr);
                    $('#progress-loader').hide();
                }
            });
        }
        //#endregion

        //#region Bind Datatable
        var BindDataTable = function (response) {
            var numberRenderer = $.fn.dataTable.render.number(',', '.', 2,).display;

            var table = $("#tbl_account_vat").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "mData": "avrId",
                        "orderable": false,
                        "searchable": false
                    },
                    {
                        "mData": "branch_name",
                        "className":"td_max_width"
                    },
                   {
                       "mData": "avr_date_from",
                       "render": function (data, type, full, meta) {
                           if (type === 'display' || type === 'filter') {
                               return moment(full.avr_date_from).format("DD-MM-YYYY")
                           }
                           return moment(full.avr_date_from).format("YYYY-MM-DD");
                       }
                    },
                    {
                        "mData": "avr_date_to",
                        "render": function (data, type, full, meta) {
                            if (type === 'display' || type === 'filter') {
                                return moment(full.avr_date_to).format("DD-MM-YYYY")
                            }
                            return moment(full.avr_date_to).format("YYYY-MM-DD");
                        }
                    },
                    {
                        "mData": "avr_sales_amount",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-end fs-12 font-weight-semibold text-wrap",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "avr_sales_vat",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-end fs-12 font-weight-semibold text-azure curpointer  text-wrap",
                        "render": function (data, type, full, meta) {
                            return '<a class="text-azure fw-bold p-0" onclick="viewInvoiceDetail(\'' + moment(full.avr_date_from).format("YYYY-MM-DD") + '\',\'' + moment(full.avr_date_to).format("YYYY-MM-DD") + '\',\'' + full.avr_branch + '\',\'' + full.avr_sales_vat + '\')">' + $.fn.dataTable.render.number(',', '.', 2, '').display(data) + '</a>';
                        }
                    },
                    {
                        "mData": "avr_sales_return",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-end fs-12 font-weight-semibold  text-wrap",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "avr_sales_vat_return",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-end fs-12 font-weight-semibold text-azure curpointer  text-wrap",
                        "render": function (data, type, full, meta) {
                            return '<a class="text-azure fw-bold p-0" onclick="viewInvoiceReturnDetail(\'' + moment(full.avr_date_from).format("YYYY-MM-DD") + '\',\'' + moment(full.avr_date_to).format("YYYY-MM-DD") + '\',\'' + full.avr_branch + '\',\'' + full.avr_sales_vat_return + '\')">' + $.fn.dataTable.render.number(',', '.', 2, '').display(data) + '</a>';
                        }
                    },
                    {
                        "mData": "avr_purchase_amount",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-end fs-12 font-weight-semibold  text-wrap",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "avr_purchase_vat",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-end fs-12 font-weight-semibold text-azure curpointer  text-wrap",
                        "render": function (data, type, full, meta) {
                            return '<a class="text-azure fw-bold p-0" onclick="viewPurchaseDetail(\'' + moment(full.avr_date_from).format("YYYY-MM-DD") + '\',\'' + moment(full.avr_date_to).format("YYYY-MM-DD") + '\',\'' + full.avr_branch + '\',\'' + full.avr_purchase_vat + '\')">' + $.fn.dataTable.render.number(',', '.', 2, '').display(data) + '</a>';
                        }

                    },
                    {
                        "mData": "avr_purchase_return",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-end fs-12 font-weight-semibold  text-wrap",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "avr_purchase_vat_return",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-end fs-12 font-weight-semibold text-azure curpointer  text-wrap",
                        "render": function (data, type, full, meta) {
                            return '<a class="text-azure fw-bold p-0" onclick="viewPurchaseReturnDetail(\'' + moment(full.avr_date_from).format("YYYY-MM-DD") + '\',\'' + moment(full.avr_date_to).format("YYYY-MM-DD") + '\',\'' + full.avr_branch + '\',\'' + full.avr_purchase_vat_return + '\')">' + $.fn.dataTable.render.number(',', '.', 2, '').display(data) + '</a>';
                        }

                    },
                    {
                        "mData": "avr_total_vat",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-end fs-12 font-weight-semibold text-azure curpointer  text-wrap",
                        "render": function (data, type, full, meta) {
                            var formattedNumber = $.fn.dataTable.render.number(',', '.', 2, '').display(data);
                            if (formattedNumber >= 0)
                                return '<span class="text-success fw-bold">' + formattedNumber + '</span>';
                            else
                                return '<span class="text-danger fw-bold">' + formattedNumber + '</span>';
                        }
                    },
                    {
                        "mData": "avr_date_generated",
                        "className":"text-wrap"
                    },
                    {
                        "mData": "avr_date_verified",
                        "className":"text-wrap"
                    },
                    {
                        "mData": "avr_date_submitted",
                        "className":"text-wrap"
                    },
                    {
                        "mData": "avr_status"
                    },
                    {
                        "mData": "madeby",
                        "className": "td_max_width"
                    },
                    {
                        "mData": "avrId",
                        "render": function (data, type, full, meta) {
                            return '<a href="javascript:void(0)" class="text-warning fs-16" onclick="print_report(\'' + data + '\')"> <i class="fa fa-print" /> </a>';
                        }
                    }

                ],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                "aoColumnDefs": [
                    {
                        "aTargets": [0],
                        "orderable": false,
                        "searchable": false,
                        "className": "select-checkbox text-center inbox-small-cells",
                        'checkboxes': {
                            'selectRow': true
                        }
                    }
                ],
                order: [[1, 'desc']],
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Account VAT Report Detail',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Account VAT Report to Excel!");
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Account VAT Report Detail',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Account VAT Report to PDF!");
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Account VAT Report Detail',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Account VAT Report to CSV!");
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Account VAT Report Detail',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, node, config);
                            exportLogs("Employee Printed Account VAT Report!");
                        }
                    }
                ],
                language: {
                    searchPlaceholder: 'Search...',
                    zeroRecords: "No Record(s) Found",
                    infoEmpty: "No Record(s) Available",
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Name / Code </span>',
                    scrollX: "100%",
                    lengthMenu: '_MENU_ ',
                    sEmptyTable: '<span class="text-secondary">No Record(s) Available Based On Request</span>',
                },
                drawCallback: function (settings) {
                    $("#tbl_account_vat tr").each(function () {
                        if ($(this).find("td:eq(12)").text() === "Deleted" || $(this).find("td:eq(12)").text() === "Submitted" || $(this).find("td:eq(12)").text() === "Inactive" || $(this).find("td:eq(9)").text() === "Reconciled & Confirmed") {
                            $($(this)).find("td:eq(0)").find("input[type='checkbox']").remove();
                        }

                    });
                },
                footerCallback: function (row, data, start, end, display) {
                    var api = this.api();

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                    };

                    var sales_total = api.column(4).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(4).footer()).html(numberRenderer(sales_total.toFixed(2)));

                    var sales_vat = api.column(5).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(5).footer()).html(numberRenderer(sales_vat.toFixed(2)));

                    var purchase_total = api.column(6).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(6).footer()).html(numberRenderer(purchase_total.toFixed(2)));

                    var purchase_vat = api.column(7).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(7).footer()).html(numberRenderer(purchase_vat.toFixed(2)));

                    var total_vat = api.column(8).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(8).footer()).html(numberRenderer(total_vat.toFixed(2)));

                    var sales_vat = api.column(9).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(9).footer()).html(numberRenderer(sales_vat.toFixed(2)));

                    var purchase_total = api.column(10).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(10).footer()).html(numberRenderer(purchase_total.toFixed(2)));

                    var purchase_vat = api.column(11).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(11).footer()).html(numberRenderer(purchase_vat.toFixed(2)));

                    var total_vat = api.column(12).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(12).footer()).html(numberRenderer(total_vat.toFixed(2)));

                },
            });

            table.buttons().container().appendTo('#tbl_account_vat_wrapper .col-md-6:eq(0)');
        }
        //#endregion

        //#region Sales Invoice VAT Detail View
        var viewInvoiceDetail = function (date_from, date_to, branch, vat_amount) {
            
            if (vat_amount > 0) {
                //date_from = moment(date_from, 'DD-MM-YYYY').format('MM/DD/YYYY');
                //date_to = moment(date_to, 'DD-MM-YYYY').format('MM/DD/YYYY');

                $("#spinner2").show();
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("SalesInvoiceVATDetail", "Reports", new { area = "Accounts" })?branch=" + branch + "&date_from=" + date_from + "&date_to=" + date_to,
                    contentType: "application/json",
                    dataType: "html",
                    success: function (data) {
                        $("#saleinvoice_body").html(data);
                        $("#saleinvoice_modal").modal("show");
                    },
                    error: function (xhr) {
                        console.log(xhr);
                        $("#spinner2").hide();
                    },
                    complete: function () {
                        $("#spinner2").hide();
                    }
                });
            }
            else {
                Swal.fire({
                    title: "Alert!",
                    text: "There is no sales invoices available!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                });
            }
        };
        //#endregion

        //#region Purchase Invoices VAT Detail View
        var viewPurchaseDetail = function (date_from, date_to, branch, vat_amount) {

            if (vat_amount > 0) {
                //date_from = moment(date_from, 'DD/MM/YYYY').format('MM/DD/YYYY');
                //date_to = moment(date_to, 'DD/MM/YYYY').format('MM/DD/YYYY');

                $("#spinner2").show();
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("PurchaseInvoiceVATDetail", "Reports", new { area = "Accounts" })?branch=" + branch + "&date_from=" + date_from + "&date_to=" + date_to,
                    contentType: "application/json",
                    dataType: "html",
                    success: function (data) {
                        $("#purchaseinvoice_body").html(data);
                        $("#purchaseinvoice_modal").modal("show");
                    },
                    error: function (xhr) {
                        console.log(xhr);
                        $("#spinner2").hide();
                    },
                    complete: function () {
                        $("#spinner2").hide();
                    }
                });
            }
            else {
                Swal.fire({
                    title: "Alert!",
                    text: "There is no purchase invoices available!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                });
            }
        };
        //#endregion

        //#region Sales Return VAT Detail View
        var viewInvoiceReturnDetail = function (date_from, date_to, branch, vat_amount) {

            if (vat_amount > 0) {
                //date_from = moment(date_from, 'DD/MM/YYYY').format('MM/DD/YYYY');
                //date_to = moment(date_to, 'DD/MM/YYYY').format('MM/DD/YYYY');

                $("#spinner2").show();
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("SalesReturnVATDetail", "Reports", new { area = "Accounts" })?branch=" + branch + "&date_from=" + date_from + "&date_to=" + date_to,
                    contentType: "application/json",
                    dataType: "html",
                    success: function (data) {
                        $("#saleinvoice_return_body").html(data);
                        $("#saleinvoice_return_modal").modal("show");
                    },
                    error: function (xhr) {
                        console.log(xhr);
                        $("#spinner2").hide();
                    },
                    complete: function () {
                        $("#spinner2").hide();
                    }
                });
            }
            else {
                Swal.fire({
                    title: "Alert!",
                    text: "There is no sales return available!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                });
            }
        };
        //#endregion

        //#region Purchase Return VAT Detail View
        var viewPurchaseReturnDetail = function (date_from, date_to, branch, vat_amount) {

            if (vat_amount > 0) {
                //date_from = moment(date_from, 'DD/MM/YYYY').format('MM/DD/YYYY');
                //date_to = moment(date_to, 'DD/MM/YYYY').format('MM/DD/YYYY');

                $("#spinner2").show();
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("PurchaseReturnVATDetail", "Reports", new { area = "Accounts" })?branch=" + branch + "&date_from=" + date_from + "&date_to=" + date_to,
                    contentType: "application/json",
                    dataType: "html",
                    success: function (data) {
                        $("#purchaseinvoice_return_body").html(data);
                        $("#purchaseinvoice_return_modal").modal("show");
                    },
                    error: function (xhr) {
                        console.log(xhr);
                        $("#spinner2").hide();
                    },
                    complete: function () {
                        $("#spinner2").hide();
                    }
                });
            }
            else {
                Swal.fire({
                    title: "Alert!",
                    text: "There is no purchase return available!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                });
            }
        };
        //#endregion

        //#region Change Report Statud on Button Click
        $('#btnChangeStatus').click(function () {
            var _date = $('#action_date').val().trim();
            var _status = $('#action_type').val().trim();
            var table = $("#tbl_account_vat").DataTable();
            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));
            if (rows.length > 0) {
                if (_date !== null && _date.length > 0) {
                    if (_status !== null && _status.length > 0) {
                        Swal.fire({
                            title: "Are you sure you want to " + _status + "?",
                            text: "This action will the selected report(s) status to " +  _status,
                            icon: "question",
                            showCancelButton: !0,
                            confirmButtonText: 'Yes! I Confirm',
                            cancelButtonText: 'No! Cancel Please',
                            confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
                        }).then(function (t) {
                            if (t.value) {
                                var _Ids = "";
                                var _count = 0;
                                $.each(rows, function (index, rowId) {
                                    var _data = table.row(rowId).data();
                                    if (_count == 0) {
                                        _Ids = _data.avrId;
                                        _count++;
                                    }
                                    else {
                                        _Ids += "," + _data.avrId;
                                        _count++;
                                    }
                                });

                                if (_Ids === null || _Ids === undefined || _Ids.length <= 0) {
                                    Swal.fire({
                                        title: "Alert!",
                                        text: "Row selection error or selected transaction already reconciled. Please refresh page and rry again!",
                                        icon: "info",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                    });
                                }
                                else {
                                    Updatefunction(_Ids, _status, _date);
                                }
                            }
                        });
                    }
                    else {
                        Swal.fire({
                            title: "Alert!",
                            text: "Please select status!",
                            icon: "info",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                        });
                    }
                }
                else {
                    Swal.fire({
                        title: "Alert!",
                        text: "Please select date of the status!",
                        icon: "info",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                    });
                }
            }
            else {
                Swal.fire({
                    title: "Alert!",
                    text: "Please select at least one report to chnage the status!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                });
            }
        });

        var Updatefunction = function (avrIds, _status, _date) {
            $.ajax({
                url: "@Url.Action("ChangeAccountVATReportStatus", "Reports", new { area = "Accounts" })?data=" + avrIds + "&status=" + _status + "&date=" + _date,
                type: "POST",
                dataType: "JSON",
                success: function (data) {
                    return_value = data.isUpdated;
                    if (return_value > 0) {
                        title = "Success!";
                        text = "Status Changed Successfully!";
                        icon = "success";
                    }
                    else if (return_value == -2) {
                        title = "Warning!";
                        text = "Some Reports Already Subbmitted or Deleted Status!";
                        icon = "warning";
                    }
                    else if (return_value == -1) {
                        title = "Error!";
                        text = "Reports Already Subbmitted or Deleted Status!";
                        icon = "error";

                    }
                    else {
                        title = "Error!";
                        text = data.message;
                        icon = "error";
                    }

                    if (title != '' && text != '' && icon != '') {
                        Swal.fire({
                            title: title,
                            text: text,
                            icon: icon,
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                        });
                        getAccountVAT();
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    Swal.fire({
                        title: "Error!",
                        text: "Failed to Change Status! Please refresh the Page and Try Again.",
                        icon: "error",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                    })
                }
            });
        }
        //#endregion

        //#region Export General Logs
        var exportLogs = function (desc) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportLogs", "AuditLogs", new { area = "Common" })?desc="+ desc,
                contentType: "application/json",
                dataType: "json"
            });
        }
        //#endregion

        //#region Print Direct Payment
        var print_report = function (avrId) {
            window.open("@Url.Action("PrintAccountVAT_Report", "Reports", new { area = "Accounts" })?avrId=" + avrId, "Account VAT Report Print");
        };
        //#endregion

        //#region Alert Timeout
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
        //#endregion
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.5/xlsx.full.min.js"></script>
    <script>
        function exportToExcel() {
            var table = document.getElementById('tbl_account_vat');
            var wb = XLSX.utils.table_to_book(table, { sheet: "Sheet1" });
            XLSX.writeFile(wb, 'TrialBalance.xlsx');
        }
    </script>
}
