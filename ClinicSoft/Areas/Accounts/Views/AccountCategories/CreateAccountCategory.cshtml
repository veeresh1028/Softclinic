@model BusinessEntities.Accounts.Accounting.AccountCategories

<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold">Create Account Category</h5>
    <button aria-label="Close" data-bs-dismiss="modal" class="btn-close close-category" type="button"><span aria-hidden="true">×</span></button>
</div>

<div class="modal-body p-4">
    <form id="form_AddCategory" autocomplete="off">
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Branch&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.ac_branch, new SelectList(Model.BranchList, "id", "text"), "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-12 col-md-12 col-lg-12">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Period&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.ac_period, new SelectList(Model.PeriodList, "id", "text"), "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-12 col-md-12 col-lg-12">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Group&nbsp;<span class="text-danger">*</span>&nbsp;<a id="btnAddGroupC" style="cursor: pointer"><i class="fa fa-plus text-success"></i></a></label>
                    <select id="ac_group" name="ac_group" class="form-select select2" data-placeholder="Select Account Group"></select>
                </div>
            </div>
            <div class="col-sm-12 col-md-12 col-lg-12">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Code&nbsp;<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.ac_code, new { @class = "form-control disabled text-danger", @placeholder = "AS1-10", @maxlength = "25", @readonly = "readonly" })
                </div>
            </div>
            <div class="col-sm-12 col-md-12 col-lg-12">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Category&nbsp;<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.ac_category, new { @class = "form-control", @placeholder = "Ex : Inventory", @maxlength = "80" })
                </div>
            </div>
        </div>

        <div class="row mt-2">
            <div class="col-sm-12 col-md-12 col-lg-12 d-flex justify-content-center" id="errorCreate"></div>
            <div class="col-sm-12 col-md-12 col-lg-12 text-center">
                <div class="btn-list btn-animation">
                    <button type="submit" class="btn btn-success" id="btn_Insert_Category">Create Category</button>
                    <button type="button" class="btn btn-outline-danger me-1 close-category" data-bs-dismiss="modal">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

<script type="text/javascript">
    var _fromC = $('#add_category_modal').attr("data-modal-from");

    //#region Page Load
    $(function () {
        $("#ac_branch").select2({
            placeholder: 'Select Branch',
            width: '100%',
            maximumInputLength: 10,
            dropdownParent: $('#form_AddCategory'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#ac_period").select2({
            placeholder: 'Select Period',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 10,
            dropdownParent: $('#form_AddCategory'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#ac_group").select2({
            placeholder: 'Select Group',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 10,
            dropdownParent: $('#form_AddCategory'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        var selectedValue = $('#ac_period option:eq(1)').val();
        var selectedText = $('#ac_period option:eq(1)').text();
        $('#ac_period').val(selectedValue).trigger('change');

        var select2SelectEvent = jQuery.Event("select2:select", {
            params: {
                data: {
                    id: selectedValue,
                    text: selectedText
                }
            }
        });

        $('#ac_period').trigger(select2SelectEvent);

        validation();
    });
    //#endregion

    //#region Load Account Groups Based on Branch & Period
    $('#ac_branch').on('select2:select', function () {
        load_acc_groups();
        $('#ac_group').val(null).trigger('select2:select');
        load_ac_code();
    });

    $('#ac_period').on('select2:select', function () {
        load_acc_groups();
    });

    $('#ac_group').on('select2:select', function () {
        load_ac_code();
    });

    var load_acc_groups = function () {
        if ($('#ac_period').val() != null && $('#ac_branch').val() != "") {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetAccountGroupsByBranchPeriod", "AccountGroups", new { area = "Accounts" })?ag_period=' + $('#ac_period').val() + "&ag_branch=" + $('#ac_branch').val().toString(),
                dataType: 'json',
                success: function (response) {
                    $("#ac_group").empty();

                    if (response.length > 0) {
                        $.each(response, function (j) {
                            var newOption = new Option(response[j].text, response[j].id, false, false);
                            $('#ac_group').append(newOption).trigger('change');
                        });
                    }

                    $('#ac_group').val(null).trigger('change');
                },
                error: function (xhr) {
                    console.log(xhr);
                    console.log("Failed to Load Groups! Error Message : " + xhr.statusText);
                }
            });
        }
        else {
            $('#ac_group').val("").text("").trigger("change");
        }
    }
    //#endregion

    //#region Load Category Code Based on Branch, Period & Group
    var load_ac_code = function () {
        if ($("#ac_branch").val() != "" && $("#ac_period").val() != "" && $('#ac_group').val() != null) {

            var _data = {
                "ac_branch": $('#ac_branch').val(),
                "ac_group": $('#ac_group').val(),
                "ac_period": $('#ac_period').val()
            }

            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetAccountCategoryCode", "AccountCategories", new { area = "Accounts" })',
                dataType: 'json',
                data: _data,
                success: function (response) {
                    $("#ac_code").val("");

                    $("#ac_code").val(response.ac_code);
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                }
            });
        }
        else {
            $('#ac_code').val("").trigger("change");
        }
    }
    //#endregion

    //#region Adding Validation on Fields
    var validation = function () {
        $("#form_AddCategory").validate({
            focusInvalid: true,
            rules:
            {
                ac_branch: {
                    required: true
                },
                ac_period: {
                    required: true
                },
                ac_group: {
                    required: true
                },
                ac_category: {
                    required: true,
                    maxlength:80
                }
            },
            messages: {
                ac_branch: {
                    required: "Select Branch"
                },
                ac_period: {
                    required: "Select Account Period"
                },
                ac_group: {
                    required: "Select Account Group"
                },
                ac_category: {
                    required: "Enter Account Category",
                    maxlength: "Enter No More than 80 characters"
                }
            },
            highlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                } else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
                Error_Timeout(elem.attr("id"));
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });

        $('#ac_branch').on('change', function () {
            $(this).trigger('blur');
        });

        $('#ac_period').on('change', function () {
            $(this).trigger('blur');
        });

        $('#ac_group').on('change', function () {
            $(this).trigger('blur');
        });
    }
    //#endregion

    //#region Insert Account Category on Click
    $('#btn_Insert_Category').on('click', function (e) {
        e.preventDefault();

        if ($('#form_AddCategory').valid()) {

            var _dataInsert = {
                "acId": 0,
                "ac_group"      : $('#ac_group').val(),
                "ac_branch"     : $('#ac_branch').val(),
                "ac_period"     : $('#ac_period').val(),
                "ac_category"   : $('#ac_category').val().trim()
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("InsertAccountCategory", "AccountCategories", new { area = "Accounts" })",
                dataType: "json",
                data: _dataInsert,
                beforeSend: function () {
                    $('#btn_Insert_Category').removeClass("btn btn-success");
                    $('#btn_Insert_Category').addClass("btn btn-success btn-loaders btn-icon");
                    $('#btn_Insert_Category').html("Creating....");
                },
                success: function (data) {
                    $('#btn_Insert_Category').removeClass("btn btn-success btn-loaders btn-icon");
                    $('#btn_Insert_Category').addClass("btn btn-success");
                    $('#btn_Insert_Category').html("Create Category");

                    if (data.isInserted > 0) {
                        $("#ac_category").val("");

                        if (_fromC == "create-category") {
                            getAccountCategories();

                            alert("<i class='fe fe-check-circle text-white'></i> Account Category Created Successfully!", "success");

                            $('#add_category_modal').modal('toggle');
                        }
                        else if (_fromC === "create-account") {
                            localStorage.setItem("newCategory", data.isInserted);

                            $('#add_category_modal').modal('hide');
                            $('#add_account_modal').modal('show');

                            return $.growl.notice({
                                title: 'Success',
                                message: '<i class="fa fa-check-circle"></i> ' + data.message,
                            });
                        }
                        else if (_fromC === "update-account") {
                            localStorage.setItem("newCategory", data.isInserted);

                            $('#add_category_modal').modal('hide');
                            $('#edit_account_modal').modal('show');

                            return $.growl.notice({
                                title: 'Success',
                                message: '<i class="fa fa-check-circle"></i> ' + data.message,
                            });
                        }
                    }
                    else {
                        $("#errorCreate").html('');

                        if (data.message == "Account Category already exists!" || data.message == "Error While Creating Account Category!") {
                            let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                "<div class='alert alert-light-warning' role='alert'>" +
                                "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                "<strong><i class='fe fe-alert-triangle text-warning'></i>&nbsp;" + data.message + "&nbsp;</strong></div></div>";
                            $("#errorCreate").html(html);
                        }
                        else {
                            let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                "<div class='alert alert-light-danger' role='alert'>" +
                                "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                "<strong><i class='fe fe-alert-circle text-danger' ></i>&nbsp;Validation Error! Please validate before submitting!&nbsp;</strong><br/><ul>";

                            $.each(data.message, function (index, value) {
                                html += "<li><small>" + value + "</small><li>";
                                var elem = $("#" + index);
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                }
                                else {
                                    $(elem).addClass(" is-invalid");
                                }
                                setTimeout(function () {
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                    }
                                    else {
                                        $(elem).removeClass("is-invalid");
                                    }
                                }, 5000);
                            });

                            html += "</ul></div></div>";
                            $("#errorCreate").html(html);
                        }

                        Timeout();
                    }
                },
                error: function (xhr) {
                    $('#btn_Insert_Category').removeClass("btn btn-success btn-loaders btn-icon");
                    $('#btn_Insert_Category').addClass("btn btn-success");
                    $('#btn_Insert_Category').html("Create Category");

                    alert("<i class='fe fe-x-circle text-white'></i> Failed to Create Account Category!", "danger");
                    $('#add_category_modal').modal('toggle');
                    Timeout();
                }
            });
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });
    //#endregion

    //#region Create Account Group
    $('#btnAddGroupC').on('click', function (e) {
        e.preventDefault();

        $.ajax({
            type: "GET",
            url: "@Url.Action("CreateAccountGroup", "AccountGroups", new { area = "Accounts" })",
            contentType: "application/json",
            dataType: "html",
            success: function (data) {
                $('#add_category_modal').modal('hide');
                $('#add_group_modal').attr("data-modal-from", "create-category");

                $("#add_group_modal_body").html(data);
                $('#add_group_modal').modal('show');
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    });

    $('#add_group_modal').on('hidden.bs.modal', function () {
        if (localStorage.getItem("newGroup") != null) {
            var group = localStorage.getItem("newGroup");

            set_group(group);
            localStorage.removeItem("newGroup");
        }
    });

    var set_group = function (group) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetAccountGroupsById", "AccountGroups", new { area = "Accounts" })?agId=" + group,
            dataType: 'json',
            success: function (response) {
                var newOption = new Option(response[0].text, response[0].id, true, true);
                $('#ac_group').append(newOption).trigger('change');

                var data = {
                    "id": response[0].id,
                    "text": response[0].text,
                };

                $('#ac_group').trigger({
                    type: 'select2:select',
                    params: {
                        data: data
                    }
                });
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    }
    //#endregion

    //#region Close Category Click
    $('.close-category').on('click', function (e) {
        e.preventDefault();

        if (_fromC === "create-account") {
            $('#add_group_modal').modal('hide');
            $('#add_account_modal').modal('toggle');
        }
        else if (_fromC === "update-account") {
            $('#add_group_modal').modal('hide');
            $('#edit_account_modal').modal('toggle');
        }
    });
    //#endregion

    //#region Remove Valiate Error Class Timeout
    function Error_Timeout(_id) {
        setTimeout(function () {
            $(".has-error").removeClass("has-error");
            $(".error").removeClass("error");
            $("#" + _id +"-error").text("");
        }, 4200);
    }
    //#endregion

    //#region Alter Holder
    var alertPlaceholder = document.getElementById("AccountCategoryAlert");
    function alert(e, t) {
        var l = document.createElement("div");
        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
    }
    //#endregion
</script>