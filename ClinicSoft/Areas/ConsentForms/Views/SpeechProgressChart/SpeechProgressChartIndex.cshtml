@using BusinessEntities;

@{
    EMRInfo emr = (EMRInfo)TempData["emr_data"];
    TempData.Keep("emr_data");

    if (ViewBag.Tab == "0")
    {
        ViewBag.Title = "Speech Progress Chart";
        Layout = "~/Areas/EMR/Views/Shared/_EMR_Layout.cshtml";
    }
}
<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Speech Progress Chart</h3>
            </div>
            <div class="card-body">
                <div id="SpeechProgressChart_add" style="display:none">
                </div>
                <div id="SpeechProgressChart_edit">
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table id="tbl_SpeechProgressChart" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                <th class="border-bottom-0 font-weight-semibold text-white">Date</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Goal</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Color</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Value</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Edit</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Delete</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 col-md-6 col-lg-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">PREVIOUS HISTORY</h3>
            </div>
            <div class="card-body">
                <div id="SpeechProgressChart_history">
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    //#region Page Load
    $(function () {
        GetSpeechProgressChartInfo();
        SpeechProgressChartPreviousHistory();
        AddSpeechProgressChart();
        $("#SpeechProgressChart_add").show();

    });

    //#endregion Page Load

    //#region Load GetSpeechProgressChartInfo
    var GetSpeechProgressChartInfo = function () {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetSpeechProgressChartData", "SpeechProgressChart", new { area = "ConsentForms" })?appId=" + "@emr.appId",
            success: function (response) {

                if (response.isAuthorized != false) {
                    var table;
                    if ($.fn.dataTable.isDataTable('#tbl_SpeechProgressChart')) {
                        table = $('#tbl_SpeechProgressChart').DataTable();
                        table.clear();
                        table.rows.add(response).draw();
                    }
                    else {
                        console.log(response);
                        BindDataTable(response);
                    }
                }
                else {
                    console.log("You are not Authorized!");
                }
            },
            error: function (xhr) {
                console.log(xhr);
            }
        })
            .done(function () {
                resizedt();
            });
    }
    //#endregion Load tbl_SpeechProgressChart

    //#region Bind Datatable
    var BindDataTable = function (response) {
        var table = $("#tbl_SpeechProgressChart").DataTable({
            fixedHeader: {
                header: true,
                footer: true
            },
            processing: true,
            "deferRender": true,
            "pageLength": 100,
            "retrieve": true,
            lengthChange: true,
            "aaData": response,
            "aoColumns": [

                {
                    "mData": "spc_date1",
                    "className": "text-left",
                    "render": function (data) {
                        return moment(data).format('DD-MM-YYYY')
                    }
                },
                {
                    "mData": "spc_1",
                    "className": 'text-left',

                },
                {
                    "mData": "spc_color",
                    "className": "text-left"
                },
                {
                    "mData": "spc_2",
                    "className": "text-left"
                },

                {
                    "mData": "spcId",
                    "className": 'btn-edit text-center',
                    "orderable": false,
                    "searchable": false,
                    "render": function (spcId, type, full, meta) {
                        var status = full.spc_status;
                        if (status === "Active") {
                            if ("@emp_designation.ToString()" === "Super Administrator") {
                                return '<button type="button"  onclick="EditSpeechProgressChart(' + spcId + ')" class="btn btn-sm btn-outline-primary">Edit</button>';
                            }
                            else {
                                if ("@emr.set_emr_lock" == "NoLock") {
                                    return '<button type="button"  onclick="EditSpeechProgressChart(' + spcId + ')" class="btn btn-sm btn-outline-primary">Edit</button>';

                                }
                                else {
                                    if ("@emr.app_ae_date" >= "@emr.today") {
                                        return '<button type="button"  onclick="EditSpeechProgressChart(' + spcId + ')" class="btn btn-sm btn-outline-primary">Edit</button>';
                                    }
                                    else {
                                        return ''
                                    }
                                }

                            }
                        }
                        else {
                            return ''
                        }
                    }
                },
                {
                    "mData": "spcId",
                    "className": 'btn-delete text-center',
                    "orderable": false,
                    "searchable": false,
                    "render": function (spcId, type, full, meta) {
                        var status = full.spc_status;
                        if (status === "Active") {
                            if ("@emp_designation.ToString()" === "Super Administrator") {
                                return '<button type="button" onclick="DeleteSpeechProgressChart(' + spcId + ')" class="btn btn-sm btn-outline-danger">Delete</button>';
                            }
                            else {
                                if ("@emr.set_emr_lock" == "NoLock") {

                                    return '<button type="button" onclick="DeleteSpeechProgressChart(' + spcId + ')" class="btn btn-sm btn-outline-danger">Delete</button>';

                                    }
                                else {
                                    if ("@emr.app_ae_date" >= "@emr.today") {
                                        return '<button type="button" onclick="DeleteSpeechProgressChart(' + spcId + ')" class="btn btn-sm btn-outline-danger">Delete</button>';
                                    }
                                    else {
                                        return ''
                                        }
                                }
                            }

                        }
                        else {
                            return ''
                        }
                    }
                }
            ],
            order: [[0, 'asc']],
            language: {
                searchPlaceholder: 'Search...',
                sSearch: '<span class="text-primary font-weight-semi-bold">Search By Code/Tittle</span>',
                lengthMenu: '_MENU_',
                scrollX: "100%",
            },
            scrollX: true,
            scrollY: 500,
            scrollCollapse: true,
            buttons: [
                {
                    extend: 'excel',
                    title: 'Speech Progress Chart',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Speech Progress Chart',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                },
                {
                    extend: 'csv',
                    title: 'Speech Progress Chart',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                },
                {
                    extend: 'print',
                    title: 'Speech Progress Chart',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    }
                }
            ]
        });
        table.buttons().container().appendTo('#tbl_SpeechProgressChart_wrapper .col-md-6:eq(0)');
    };
//#endregion Bind Datatable

    //#region Add SpeechProgressChart
    function AddSpeechProgressChart() {
        $('#SpeechProgressChart_edit').hide();
        var x = $("#SpeechProgressChart_add");
        x.load("@Url.Action("CreateSpeechProgressChart", "SpeechProgressChart", new { area = "ConsentForms" })", function () {
            $("#SpeechProgressChart_add").show();
        });
    }
    //#endregion Add SpeechProgressChart

    //#region Edit SpeechProgressChart
    function EditSpeechProgressChart(spcId) {
        $('#SpeechProgressChart_add').hide();
        var x = $("#SpeechProgressChart_edit");
    x.load("@Url.Action("UpdateSpeechProgressChart", "SpeechProgressChart", new { area = "ConsentForms" })?spcId=" + spcId+ "&appId=" + @emr.appId, function () {
        $("#SpeechProgressChart_edit").show();
    });


    }
    //#endregion Edit SpeechProgressChart

    //#region Delete SpeechProgressChart
    var DeleteSpeechProgressChart = function (spcId) {
        Swal.fire({
            title: "Are you sure you want to delete this SpeechProgressChart ?",
            text: "The selected SpeechProgressChart will be deleted!",
            icon: "question",
            showCancelButton: !0,
            confirmButtonText: 'Yes! I Confirm',
            cancelButtonText: 'No! Cancel Please',
            confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
        }).then(function (t) {
            if (t.value) {
                $.ajax({
                    url: '@Url.Action("DeleteSpeechProgressChart", "SpeechProgressChart", new { area = "ConsentForms" })?spcId=' + spcId,
                    type: "POST",
                    dataType: 'JSON',
                    success: function (data) {
                        if (data.isAuthorized) {
                            if (data.success) {
                                Swal.fire({
                                    title: "Success!",
                                    text: "SpeechProgressChart Deleted Successfully!",
                                    icon: "success",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                                });
                                GetSpeechProgressChartInfo();
                            }
                            else {
                                Swal.fire({
                                    title: "Error!",
                                    text: "You Can't Change the status! Already exist an active SpeechProgressChart",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        }
                        else {
                            Swal.fire({
                                title: "Access Denied!",
                                text: "You do not have Enough Privileges to Delete this SpeechProgressChart!",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }

                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: "Error!",
                            text: "Failed to Delete SpeechProgressChart! Please Refresh The Page & Try Again.",
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                        });
                        GetSpeechProgressChartInfo();
                    }
                });
            }
        });
    }
    //#endregion Delete SpeechProgressChart

    // #region Histroy of SpeechProgressChart
    function SpeechProgressChartPreviousHistory() {
        var x = $("#SpeechProgressChart_history");
        x.load("@Url.Action("SpeechProgressChartPreviousHistory", "SpeechProgressChart", new { area = "ConsentForms" })?appId=" + @emr.appId, function () {
        });
    }
    //#endregion History of SpeechProgressChart

    //#region Resize Datatable
    function resizedt() {
        setTimeout(function () {
            $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
        }, 350);
    }
    //#endregion

    //#region Alert Timeout
    function Timeout() {
        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 4200);
    }
    //#endregion
</script>