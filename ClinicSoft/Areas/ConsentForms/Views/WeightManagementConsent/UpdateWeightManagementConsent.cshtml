@using System.Configuration;
@using System.Linq;
@using System.Security.Claims;
@using BusinessEntities;
@model BusinessEntities.ConsentForms.WeightManagementConsent

@{
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    EMRInfo emr = (EMRInfo)TempData["emr_data"];
    TempData.Keep("emr_data");
}
<form id="form_WeightManagementConsentEdit" autocomplete="off" name="WeightManagementConsent" ondrop="return false;" onpaste="return false;" oncut="return false;">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12">
            <div class="border">
                <div class="col-sm-12 col-md-12 col-lg-12">
                    <div class="row mt-2">
                        <div class="col-sm-12 col-md-6 col-lg-2 mb-2">
                            <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Patient Name</label></div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-4">
                            <label class="form-label text-red text-left text-capitalize">@emr.pat_name</label>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2 mb-2">
                            <div class="form-group mb-3"><label class="form-label text-black"> Emirates ID</label></div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-4">
                            <label class="form-label text-red text-left">@emr.pat_emirateid</label>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-2 mb-2">
                            <div class="form-group mb-3 text-align-left"><label class="form-label text-black ">File No</label></div>
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-2">
                            <label class="form-label text-red text-left">@emr.pat_code</label>
                        </div>
                        <div class="col-sm-12 col-md-2 col-lg-2">
                            <div class="form-group mb-3"><label class="form-label text-black"> DOB</label></div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-2">
                            <label class="form-label text-red text-left">@emr.pat_dob</label>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-2 mb-2">
                            <div class="form-group mb-3"><label class="form-label text-black"> Nationality</label></div>
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-2">
                            <label class="form-label text-red text-left">@emr.pat_nationality</label>
                        </div>
                        <div class="col-sm-12 col-md-2 col-lg-2">
                            <div class="form-group mb-3"><label class="form-label text-black">Gender</label></div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-2">
                            <label class="form-label text-red text-left">@emr.pat_gender</label>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-2">
                            <div class="form-group mb-3"><label class="form-label text-black">Doctor's Name</label></div>
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-2">
                            <label class="form-label text-red text-left">@emr.doc_name</label>
                        </div>
                        <div class="col-sm-12 col-md-2 col-lg-2">
                            <div class="form-group mb-3"><label class="form-label text-black">Date</label></div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-2">
                            <label class="form-label text-red text-left">@emr.app_fdate</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-5 mt-5 text-justify font-weight-semibold">
        <div class="col-lg-12">
            HEIGHT:
        </div>
        <div class="col-lg-12">
            @Html.TextBoxFor(m => m.wmc_1, new { @class = "form-control mb-2 mt-2", @id = "uwmc_1", @maxlength = "250" })
        </div>
        <div class="col-lg-12">
            WEIGHT:
        </div>
        <div class="col-lg-12">
            @Html.TextBoxFor(m => m.wmc_2, new { @class = "form-control mb-2 mt-2", @id = "uwmc_2", @maxlength = "250" })
        </div>
        <div class="col-lg-12">
            BMI:
        </div>
        <div class="col-lg-12">
            @Html.TextBoxFor(m => m.wmc_3, new { @class = "form-control mb-2 mt-2", @id = "uwmc_3", @maxlength = "250" })
        </div>
        <div class="col-lg-12">
            Medical Conditions / Diseases:
        </div>
        <div class="col-lg-12">
            @Html.TextAreaFor(m => m.wmc_14, new { @class = "form-control mb-2 mt-2", @id = "uwmc_14", @maxlength = "250", @rows = "2" })
        </div>
        <div class="col-sm-12 col-md-12 col-lg-12">
            Are you currently on any medications ? Please List :
        </div>
        <div class="col-sm-12 col-md-12 col-lg-12">
            @Html.TextBoxFor(m => m.wmc_5, new { @class = "form-control mb-2 mt-2", @id = "uwmc_5", @maxlength = "250" })
        </div>
        <div class="col-sm-12 col-md-12 col-lg-12">
            Have you undergone any surgeries  ?  Please List :
        </div>
        <div class="col-sm-12 col-md-12 col-lg-12">
            @Html.TextBoxFor(m => m.wmc_6, new { @class = "form-control mb-2 mt-2", @id = "uwmc_6", @maxlength = "250" })
        </div>
        <div class="col-sm-12 col-md-12 col-lg-12">
            Lab Tests / MRI :
        </div>
        <div class="col-sm-12 col-md-12 col-lg-12">
            @Html.TextBoxFor(m => m.wmc_7, new { @class = "form-control mb-2 mt-2", @id = "uwmc_7", @maxlength = "250" })
        </div>
        <div class="col-sm-12 col-md-12 col-lg-12 mb-2 mt-2 text-decoration-underline">
            For Females Only:
        </div>
        <div class="col-lg-12">
            How Many Pregnancies have you had?
        </div>
        <div class="col-lg-12">
            @Html.TextBoxFor(m => m.wmc_8, new { @class = "form-control mb-2 mt-2", @id = "uwmc_8", @maxlength = "250" })
        </div>
        <div class="col-lg-12">
            How Many Children ?
        </div>
        <div class="col-lg-12">
            @Html.TextBoxFor(m => m.wmc_9, new { @class = "form-control mb-2 mt-2", @id = "uwmc_9", @maxlength = "250" })
        </div>
        <div class="row mb-2 mt-2 text-justify">
            <div class="col-lg-4 font-weight-semibold">
                Have you Undergone hysterectomy or removal of ovaries?
            </div>
            <div class="col-lg-1">
                <div class="form-radio">
                    <label class="custom-control custom-radio">
                        <input type="radio" class="custom-control-input" name="uwmc_10" id="uwmc_101" value="1">
                        <span class="custom-control-label">Yes</span>
                    </label>
                </div>
            </div>
            <div class="col-lg-1">
                <div class="form-radio">
                    <label class="custom-control custom-radio">
                        <input type="radio" class="custom-control-input" name="uwmc_10" id="uwmc_102" value="2">
                        <span class="custom-control-label">No</span>
                    </label>
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            If yes , what was the reason for surgery ?
        </div>
        <div class="col-lg-12">
            @Html.TextBoxFor(m => m.wmc_11, new { @class = "form-control mb-2 mt-2", @id = "uwmc_11", @maxlength = "250" })
        </div>
        <div class="col-lg-12 mb-2 mt-2">
            And Date ?
        </div>
        <div class="col-lg-12">
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <i class="fe fe-calendar"></i>
                    </div>
                </div>
                <input id="uwmc_12" class="form-control" placeholder="DD-MMM-YYYY" type="text" autocomplete="off">
            </div>
        </div>
        <div class="col-lg-12 mb-2 mt-2">
            When was you las menstrual Period ?
        </div>
        <div class="col-lg-12">
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <i class="fe fe-calendar"></i>
                    </div>
                </div>
                <input id="uwmc_13" class="form-control" placeholder="DD-MMM-YYYY" type="text" autocomplete="off">
            </div>
        </div>
        <div class="col-lg-12">
            How many days did it last ?
        </div>
        <div class="col-lg-12">
            @Html.TextBoxFor(m => m.wmc_14, new { @class = "form-control mb-2 mt-2", @id = "uwmc_14", @maxlength = "250" })
        </div>
        <div class="col-lg-12 font-weight-semibold">
            Do you ever have irregular cycles or abnormal cycles ?
        </div>
        <div class="col-lg-12">
            @Html.TextBoxFor(m => m.wmc_15, new { @class = "form-control mb-2 mt-2", @id = "uwmc_15", @maxlength = "250" })
        </div>
        <div class="row mb-2 mt-2 table-responsive">
            <div class="content" name="example">
                <div class="content-inner">
                    <div class="row">
                        <div class="col-sm-12 col-md-6 col-lg-12">
                            <div class="form-group mb-3">
                                <button id="udrawingdot" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="udot" type="button">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-circle-fill" viewBox="0 0 16 16">
                                        <circle cx="8" cy="8" r="8" />
                                    </svg>
                                </button>
                                <button id="udrawingcheck" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="ucheck" type="button">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-check" viewBox="0 0 16 16">
                                        <path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z" />
                                    </svg>
                                </button>
                                <button id="udrawingcircle" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="ucircle" type="button">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-circle" viewBox="0 0 16 16">
                                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                    </svg>
                                </button>
                                <button id="udrawingcupping" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="ucupping" type="button">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash2" viewBox="0 0 16 16">
                                        <path d="M14 3a.7.7 0 0 1-.037.225l-1.684 10.104A2 2 0 0 1 10.305 15H5.694a2 2 0 0 1-1.973-1.671L2.037 3.225A.7.7 0 0 1 2 3c0-1.105 2.686-2 6-2s6 .895 6 2M3.215 4.207l1.493 8.957a1 1 0 0 0 .986.836h4.612a1 1 0 0 0 .986-.836l1.493-8.957C11.69 4.689 9.954 5 8 5s-3.69-.311-4.785-.793" />
                                    </svg>
                                </button>
                                <button id="uundo_button" class="btn bg-dark-transparent btn-icon btn-svg" type="button">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-counterclockwise" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2v1z" />
                                        <path d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466z" />
                                    </svg>
                                </button>
                                <button id="udrawingeraser" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="ueraser" type="button">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eraser-fill text-danger" viewBox="0 0 16 16">
                                        <path d="M8.086 2.207a2 2 0 0 1 2.828 0l3.879 3.879a2 2 0 0 1 0 2.828l-5.5 5.5A2 2 0 0 1 7.879 15H5.12a2 2 0 0 1-1.414-.586l-2.5-2.5a2 2 0 0 1 0-2.828zm.66 11.34L3.453 8.254 1.914 9.793a1 1 0 0 0 0 1.414l2.5 2.5a1 1 0 0 0 .707.293H7.88a1 1 0 0 0 .707-.293z" />
                                    </svg>
                                </button>
                                <input id="ucolor_picker" type="text">
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-7 mb-2 mt-2">
                            <div>
                                <canvas id="uimageCanvas" width="608" height="500"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            CONCERN AREAS / AFFECTED AREAS:
        </div>
        <div class="col-lg-12">
            @Html.TextAreaFor(m => m.wmc_16, new { @class = "form-control mb-2 mt-2", @id = "uwmc_16", @maxlength = "250", })
        </div>
        <div class="col-lg-12">
            Target BMI :
        </div>
        <div class="col-lg-12">
            @Html.TextAreaFor(m => m.wmc_17, new { @class = "form-control mb-2 mt-2", @id = "uwmc_17", @maxlength = "250", })
        </div>
        <div class="col-lg-12">
            Target Weight :
        </div>
        <div class="col-lg-12">
            @Html.TextAreaFor(m => m.wmc_18, new { @class = "form-control mb-2 mt-2", @id = "uwmc_18", @maxlength = "250", })
        </div>
        <div class="col-lg-12">
            TREATMENT PROGRAM
        </div>
        <div class="col-lg-12">
            @Html.TextAreaFor(m => m.wmc_19, new { @class = "form-control mb-2 mt-2", @id = "uwmc_19", @maxlength = "250", @rows = "2" })
        </div>
    </div>
    <div class="row mt-2">
        <div class="col-sm-12 col-md-12 col-lg-12 text-center table-responsive">
            <table class="table table-bordered table-condensed">
                <tr>
                    <td colspan="3" class="font-weight-bold text-danger fs-18" width="100%">
                        Sign here, only if all of your questions have been answered to your satisfaction
                    </td>
                </tr>
                <tr>
                    <td width="50%">
                        <div id="upat_sign_box" class="d-none">
                            <img alt="stamp" id="upat_sign" class="avatar avatar-xl bsquare" />
                        </div>
                    </td>
                    <td width="50%">
                        <img alt="stamp" src="@emr.doc_sign" id="doc_sign" class="avatar avatar-xl bsquare" />
                    </td>
                </tr>
                <tr>
                    <td width="50%">
                        <label class="form-label text-red text-left text-capitalize">@emr.pat_name&nbsp;</label>
                        <span class="font-weight-semibold"> Patient Name</span>
                        <br /><br />
                        <label class="form-label text-red text-left" id="upsb_date_patient"></label>
                        <span class="font-weight-semibold">Date</span>
                    </td>
                    <td width="50%">
                        <label class="form-label text-red text-left text-capitalize">@emr.doc_name&nbsp;</label>
                        <span class="font-weight-semibold">Doctor’s Name</span>
                        <br /><br />
                        <label class="form-label text-red text-left" id="uwmc_date_doctor">@Model.wmc_date_modified&nbsp;</label>
                        <span class="font-weight-semibold">Date</span>
                    </td>
                </tr>
                <tr>
                    <td class="font-weight-semibold text-blue" width="50%">
                        Patient Signature
                        <br />
                        <div class="btn-group mr-2">
                            <div class="dropdown">
                                <button type="button" class="btn-sm btn-secondary me-2 mb-2 dropdown-toggle" data-bs-toggle="dropdown">
                                    <i class="fa fa-paint-brush">&nbsp;&nbsp;</i> Patient
                                </button>
                                <div class="dropdown-menu">
                                    <a class="dropdown-item" onclick="openSignaturePad('patient')">Tab</a>
                                    <a class="dropdown-item" onclick="openWacomTabSignaturePad('patient')">Wacom Tab</a>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td class="font-weight-semibold text-blue text-center" width="50%">Doctor’s Signature</td>
                </tr>
            </table>
        </div>
    </div>

    <div class="row mt-2">
        <div class="col-sm-12 col-md-12 col-lg-12 text-center">
            <div class="btn-list btn-animation">
                <button type="submit" class="btn btn-warning btn-sm" id="btn_Update">Save Changes</button>
                <button type="button" class="btn btn-outline-dark btn-sm" id="btn_Reset">Reset</button>
                <button type="button" class="btn btn-danger btn-sm" id="btn_DeleteForm">Delete</button>
                <button type="button" class="btn btn-sm btn-outline-success" id="btn_Print"> Download/Print </button>
            </div>
        </div>
    </div>
</form>

<script type="text/javascript">
    // region page load
    var formName1 = $(form_WeightManagementConsentEdit).closest('form').attr('name');
    $(function () {
        if ("@emp_designation.ToString()" === "Super Administrator") {
            $("#btn_Update").show();
        }
        else {
            if ("@emr.set_emr_lock" == "NoLock") {
                $("#btn_Update").show();
            }
            else {
                if ("@emr.app_ae_date" >= "@emr.today") {
                    $("#btn_Update").show();
                }
                else {
                    $("#btn_Update").hide();
                }
            }
        }


    $('#uwmc_12').bootstrapdatepicker({
         format: "dd-MM-yyyy",
        viewMode: "date",
        todayHighlight: true,
        autoclose: true,
        multidate: false,
        multidateSeparator: "-"
     });
     $("#uwmc_12").bootstrapdatepicker("setDate", moment(new Date("@Model.wmc_12")).format("DD-MMMM-YYYY"));

      $('#uwmc_13').bootstrapdatepicker({
      format: "dd-MM-yyyy",
     viewMode: "date",
     todayHighlight: true,
     autoclose: true,
     multidate: false,
     multidateSeparator: "-"
      });

      $("#uwmc_13").bootstrapdatepicker("setDate", moment(new Date("@Model.wmc_13")).format("DD-MMMM-YYYY"));

        validate();
        GetRadioValues();
        GetSignaturename('patient');
        Loadimage();

        const udrawingButtons = document.querySelectorAll('.udrawing-mode');
        udrawingButtons.forEach((button) => {
            button.addEventListener('click', function () {
                uDrawingMode = button.getAttribute('data-mode');
            });
        });

        $('#ucolor_picker').spectrum({
            type: "flat",
            showInput: true,
            preferredFormat: "hex",
            color: '#0061da'
        });
    });
    // end region page load
      var uisErasing = false;

     //#region drawing
     var ucanvas = document.getElementById('uimageCanvas');
     var uctx = ucanvas.getContext('2d');
     var udrawingHistory = [];
     var uDrawingMode = 'udot';


     //#region Load an image
     var Loadimage = function () {
      /*console.log("323");*/
      var uimage = new Image();
      if ("@Model.wmc_doc" != "") {
          uimage.src = "@ConfigurationManager.AppSettings["ClinicSoftEndPoint"].ToString()" + "@Model.wmc_doc";
      }
      else {
          uimage.src = "@ConfigurationManager.AppSettings["ClinicSoftEndPoint"].ToString()" + "images/ConsentForms/MasterImages/WeightConsent.jpg";
      }
      uimage.onload = function () {
          // Draw the image onto the canvas
          uctx.drawImage(uimage, 0, 0, ucanvas.width, ucanvas.height);
      };
     }
     // Add drawing functionality
     var uisDrawing = false;
     var ulastX, ulastY;

     ucanvas.addEventListener('mousedown', function (e) {
         var rect = ucanvas.getBoundingClientRect();
         var x = e.clientX - rect.left;
         var y = e.clientY - rect.top;

         if (uisErasing) {
             uerase(x, y);
         } else {
             if (uDrawingMode === 'udot') {
                 udrawDot(x, y);
             } else if (uDrawingMode === 'ucheck') {
                 udrawcheckMark(x, y);
             }
             else if (uDrawingMode === 'ucircle') {
                 udrawingCircle(x, y);
             }
             else if (uDrawingMode === 'ucupping') {
                 udrawingCupping(x, y);
             }
             else if (uDrawingMode === 'ueraser') {
                 udrawingEraser(x, y);
             }
         }
         uisDrawing = true;
         udrawingHistory.push(canvas.toDataURL());
     });



     ucanvas.addEventListener('mousemove', function (e) {

         if (uisErasing) {
             var x = e.clientX - ucanvas.getBoundingClientRect().left;
             var y = e.clientY - ucanvas.getBoundingClientRect().top;
             uerase(x, y);
         } else if (!uisDrawing) {
             return;
         }

         if (!uisDrawing) return;

         var x = e.offsetX - ucanvas.getBoundingClientRect().left;
         var y = e.offsetY - ucanvas.getBoundingClientRect().top;


         uisDrawing = true;
         udrawingHistory.push(ucanvas.toDataURL());
     });

     function udrawDot(x, y) {
         uctx.fillStyle = $("#ucolor_picker").val();
         uctx.beginPath();
         uctx.arc(x, y, 5, 0, Math.PI * 2);
         uctx.fill();
         udrawingHistory.push(ucanvas.toDataURL());
     }

     var udrawcheckMark = function (x, y) {
         uctx.strokeStyle = $("#ucolor_picker").val();
         uctx.lineWidth = 2;
         uctx.beginPath();
         uctx.moveTo(x - 20, y);
         uctx.lineTo(x - 10, y + 10);
         uctx.lineTo(x + 20, y - 20);
         uctx.stroke();
         udrawingHistory.push(ucanvas.toDataURL());
     }

     var udrawingCircle = function (x, y) {
         uctx.strokeStyle = $("#ucolor_picker").val();
         uctx.lineWidth = 2;
         uctx.beginPath();
         uctx.arc(x, y, 5, 0, Math.PI * 2); // Use the arc method to draw a circle
         uctx.stroke();
         udrawingHistory.push(ucanvas.toDataURL());
     }

     var udrawingCupping = function (x, y) {
         uctx.strokeStyle = $("#ucolor_picker").val(); // Set color for the trash icon
         uctx.lineWidth = 2;
         uctx.beginPath();
         uctx.moveTo(x - 8, y - 16);
         uctx.lineTo(x + 8, y - 16);
         uctx.lineTo(x + 4, y - 2);
         uctx.lineTo(x - 4, y - 2);
         uctx.closePath();
         uctx.stroke();
         udrawingHistory.push(ucanvas.toDataURL());
     }

     var udrawingEraser = function (x, y) {
         var squareSize = 20;
         uctx.fillStyle = "#ffffff";
         uctx.beginPath();
         uctx.rect(x - squareSize / 2, y - squareSize / 2, squareSize, squareSize);
         uctx.fill();
         udrawingHistory.push(ucanvas.toDataURL());
         $("#ucolor_picker").val("#000000");
     }

     function uerase(x, y) {
         uctx.fillStyle = '#ffffff';
         uctx.beginPath();
         uctx.arc(x, y, 10, 0, Math.PI * 2);
         uctx.fill();
         udrawingHistory.push(ucanvas.toDataURL());
     }

     ucanvas.addEventListener('mouseup', function () {
         uisDrawing = false;
     });

     //#region Undo
     $('#uundo_button').on('click', function (e) {
         if (udrawingHistory.length > 1) {
             udrawingHistory.pop(); // Remove the current state
             var uimg = new Image();
             uimg.src = udrawingHistory[udrawingHistory.length - 1];
             uimg.onload = function () {
                 uctx.clearRect(0, 0, ucanvas.width, ucanvas.height);
                 uctx.drawImage(uimg, 0, 0, ucanvas.width, ucanvas.height);
             };
         }
     });
     //#endregion Undo

      @*var isErasing = false;
       //#region drawing
       var canvas = document.getElementById('uimageCanvas');
       var ctx = canvas.getContext('2d');
       var drawingHistory = [];
       var DrawingMode = 'dot';

       //#region Load an image
       var Loadimage= function () {
        var image = new Image();
        if ("@Model.wmc_doc" != "") {
            image.src = "@ConfigurationManager.AppSettings["ClinicSoftEndPoint"].ToString()" + "@Model.wmc_doc";
        }
        else {
            image.src = "@ConfigurationManager.AppSettings["ClinicSoftEndPoint"].ToString()" + "images/ConsentForms/MasterImages/WeightConsent.jpg";
        }
        image.onload = function () {
            // Draw the image onto the canvas
            ctx.drawImage(image, 0, 0, canvas.width, canvas.height);
        };
    }
       // Add drawing functionality
       var isDrawing = false;
       var lastX, lastY;

       canvas.addEventListener('mousedown', function (e) {
           var rect = canvas.getBoundingClientRect();
           var x = e.clientX - rect.left;
           var y = e.clientY - rect.top;

           if (isErasing) {
               erase(x, y);
           } else {
               if (DrawingMode === 'dot') {
                   drawDot(x, y);
               } else if (DrawingMode === 'check') {
                   drawcheckMark(x, y);
               }
           }
           isDrawing = true;
           drawingHistory.push(canvas.toDataURL());
       });


       canvas.addEventListener('mousemove', function (e) {

           if (isErasing) {
               var x = e.clientX - canvas.getBoundingClientRect().left;
               var y = e.clientY - canvas.getBoundingClientRect().top;
               erase(x, y);
           } else if (!isDrawing) {
               return;
           }

           if (!isDrawing) return;

           var x = e.offsetX - canvas.getBoundingClientRect().left;
           var y = e.offsetY - canvas.getBoundingClientRect().top;


           isDrawing = true;
           drawingHistory.push(canvas.toDataURL());
       });
       function drawDot(x, y) {
           ctx.fillStyle = $("#ucolor_picker").val();
           ctx.beginPath();
           ctx.arc(x, y, 5, 0, Math.PI * 2);
           ctx.fill();
           drawingHistory.push(canvas.toDataURL());
       }
       var drawcheckMark = function (x, y) {
           ctx.strokeStyle = $("#ucolor_picker").val();
           ctx.lineWidth = 2;
           ctx.beginPath();
           ctx.moveTo(x - 20, y);
           ctx.lineTo(x - 10, y + 10);
           ctx.lineTo(x + 20, y - 20);
           ctx.stroke();
           drawingHistory.push(canvas.toDataURL());
       }
       function erase(x, y) {
           ctx.fillStyle = '#ffffff';
           ctx.beginPath();
           ctx.arc(x, y, 10, 0, Math.PI * 2);
           ctx.fill();
           drawingHistory.push(canvas.toDataURL());
       }
       canvas.addEventListener('mouseup', function () {
           isDrawing = false;
       });
       //#region Undo
       $('#uundo_button').on('click', function (e) {
           if (drawingHistory.length > 1) {
               drawingHistory.pop(); // Remove the current state
               var img = new Image();
               img.src = drawingHistory[drawingHistory.length - 1];
               img.onload = function () {
                   ctx.clearRect(0, 0, canvas.width, canvas.height);
                   ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
               };
           }
       });
       //#endregion Undo*@
    //#region Validation Initialization
    var validate = function () {
        $("#form_WeightManagementConsentEdit").validate({
            rules: {
                wmc_19: {
                    required: true
                },

            },
            messages: {
                wmc_19: {
                    required: "Please Enter Treatment Program"
                },

            },
            highlight: function (element) {
                var elem = $(element);
                $(element).parent().addClass('has-error');
                //error_timeout(elem.attr("id"));
            },
            unhighlight: function (element) {
                var elem = $(element);
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });


    }
   //#endregion


   //#region Get GetRadioValues
    var GetRadioValues = function (checknames) {
    var checknames = "@Model.wmc_10";

    if (checknames !== null) {

        if (checknames != "") {
            if (checknames == "Yes") {
                $('#uwmc_101').attr('checked', 'checked');
                $("#uwmc_101").prop("checked", true);

            }
            if (checknames == "No") {
                $('#uwmc_102').attr('checked', 'checked');
                $("#uwmc_102").prop("checked", true);

            }
        }
    }
}

  //#endregion Get GetRadioValues

    //#region Update  Click
    $('#btn_Update').on('click', function (e) {
        e.preventDefault();
        if ($("#form_WeightManagementConsentEdit").valid()) {
            console.log($("#wmcId").val());
            $('#btn_Update').removeClass("btn btn-sm btn-success");
            $('#btn_Update').addClass("btn btn-sm btn-success btn-loaders btn-icon");
            $('#btn_Update').html("Updating the Record....");

            var uwmc_10 = "";

            if ($('#uwmc_101').prop('checked')) {
                uwmc_10 = "Yes";
            }
            else if ($('#uwmc_102').prop('checked')) {
                uwmc_10 = "No";
            }

            var canvas = $("#uimageCanvas").get(0);
            var uimgData = canvas.toDataURL();
            console.log(uimgData);

           /* console.log(checkbox_new1);*/
            var _dateInsert = {
             "wmcId": 0,
            "wmc_appId": @emr.appId,
            "wmc_1": $("#uwmc_1").val(),
            "wmc_2": $("#uwmc_2").val(),
            "wmc_3": $("#uwmc_3").val(),
            "wmc_4": $("#uwmc_4").val(),
            "wmc_5": $("#uwmc_5").val(),
            "wmc_6": $("#uwmc_6").val(),
            "wmc_7": $("#uwmc_7").val(),
            "wmc_8": $("#uwmc_8").val(),
            "wmc_9": $("#uwmc_9").val(),
            "wmc_10": uwmc_10,
            "wmc_11": $("#uwmc_11").val(),
            "wmc_12": $("#uwmc_12").val(),
            "wmc_13": $("#uwmc_13").val(),
            "wmc_14": $("#uwmc_14").val(),
            "wmc_15": $("#uwmc_15").val(),
            "wmc_16": $("#uwmc_16").val(),
            "wmc_17": $("#uwmc_17").val(),
            "wmc_18": $("#uwmc_18").val(),
            "wmc_19": $("#uwmc_19").val(),
             "image": uimgData,
              "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
         }
            console.log(_dateInsert);

            $.ajax({
                type: "Post",
                url: "@Url.Action("EditWeightManagementConsent", "WeightManagementConsent", new {area = "ConsentForms" })",
                dataType: 'JSON',
                data: _dateInsert,
                success: function (data) {
                    $('#btn_Update').removeClass("btn btn-sm btn-success btn-loaders btn-icon");
                    $('#btn_Update').addClass("btn btn-sm btn-success");
                    $('#btn_Update').html("Save Changes");



                    if (data.isSuccess) {
                        if (data.isEdited) {
                            GetWeightManagementConsentInfo();
                            var alertPlaceholder = document.getElementById("Alert");

                            function alert(e, t) {
                                var l = document.createElement("div");
                                l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                            }
                            alert("<i class='fe fe-check-circle text-white'></i>Weight Management Consent Form Updated Successfully!", "success");

                            Timeout();
                            $("#WeightManagementConsent_edit").show();
                            $("#WeightManagementConsent_add").hide();
                        }
                        else {
                            let html = "<div class='col-12 col-sm-12 col-md-6 d-flex justify-content-center'>" +
                                "<div class='alert alert-warning' role='alert'>" +
                                "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                "<strong>Warning..  Weight Management Consent Form already Exists..</strong><br/>" +
                                "</div></div>";
                            $("#Alert1").html(html);
                        }
                    }
                    else {
                        let html = "<div class='col-12 col-sm-12 col-md-6 d-flex justify-content-center'>" +
                        "<div class='alert alert-danger' role='alert'>" +
                        "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                        "<strong>Validation Error.. Please correct before you submit the form!&nbsp;</strong><br/><ul>";

                        $.each(data.message, function (index, value) {
                            html += "<li><small>" + value + "</small><li>";
                            var elem = $("#" + index);
                            if (elem.hasClass("select2-hidden-accessible")) {
                                $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                            }
                            else {
                                $(elem).addClass(" is-invalid");
                            }

                            setTimeout(function () {
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                }
                                else {
                                    $(elem).removeClass("is-invalid");
                                }
                                }, 5000);
                        });

                        html += "</ul></div></div>";

                        $("#error").html(html);
                    }
                },
                error: function (xhr) {
                    $('#btn_Update').removeClass("btn btn-sm btn-success btn-loaders btn-icon");
                    $('#btn_Update').addClass("btn btn-sm btn-warning");
                    $('#btn_Update').html("Save Changes");
                    Timeout();
                }
            });
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }

    });
    //#endregion Update Click

            //#region Delete Click
    $('#btn_DeleteForm').on('click', function (e) {
        e.preventDefault();
        $('#btn_DeleteForm').removeClass("btn btn-success");
        $('#btn_DeleteForm').addClass("btn btn-success btn-loaders btn-icon");
        $('#btn_DeleteForm').html("Deleting the Record....");

        $.ajax({
            url: '@Url.Action("DeleteWeightManagementConsent", "WeightManagementConsent", new { area = "ConsentForms" })?appId=' + @emr.appId,
            type: "POST",
            dataType: 'JSON',
            success: function (data) {
                $('#btn_DeleteForm').removeClass("btn btn-success btn-loaders btn-icon");
                $('#btn_DeleteForm').addClass("btn btn-warning");
                $('#btn_DeleteForm').html("Delete");
                if (data.isAuthorized) {
                    if (data.success) {
                        var alertPlaceholder = document.getElementById("Alert");
                        function alert(e, t) {
                            var l = document.createElement("div");
                            l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" >' + e +
                                '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                        }
                        alert("<i class='fe fe-check-circle text-white'></i>Weight Management Consent Form Deleted Successfully!", "success");
                        clearControls();
                        $("#WeightManagementConsent_edit").hide();
                        $("#WeightManagementConsent_add").show();
                        AddWeightManagementConsent();
                    }
                    else {
                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                            "<div class='alert alert-warning' role='alert'>" +
                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                            "<strong>Error!.. Failed to Delete..</strong><br/>" +
                            "</div></div>";
                        $("#error").html(html);
                    }
                }
                else {
                    var alertPlaceholder = document.getElementById("Alert");
                    function alert(e, t) {
                        var l = document.createElement("div");
                        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" >' + e +
                            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                    }
                    alert("<i class='fe fe-check-circle text-white'></i> You do not have Enough Privileges to Delete this Designation!", "Access Denied!");
                }
            },
            error: function (xhr) {
                $('#btn_DeleteForm').removeClass("btn btn-success btn-loaders btn-icon");
                $('#btn_DeleteForm').addClass("btn btn-Delete");
                $('#btn_DeleteForm').html("Delete");
                Timeout();
            }
        })
    });
//#endregion

    //#region Reset
    $('#btn_Reset').on('click', function (e) {
        e.preventDefault();
        clearControls();
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        Loadimage();

    });
    //#endregion Reset

    //#region Clear Controls
    var clearControls = function () {
        $(".form-control").val("");
        $(".form-control-sm").val("");
        $("input[name='uwmc_10']:radio").prop('checked', false);
        $("#upat_sign").attr("src", "");

    }
    //#endregion Clear Controls

        //#region Print
$('#btn_Print').on('click', function (e) {
    e.preventDefault();
    $('#btn_Print').removeClass("btn btn-sm btn-success");
    $('#btn_Print').addClass("btn btn-sm btn-success btn-loaders btn-icon");
    $('#btn_Print').html("Printing the Record....");
    $.ajax({
        type: "Get",
        url: "@Url.Action("PrintPDFConsent", "WeightManagementConsent", new {area = "ConsentForms" })?appId=" + @emr.appId + "&form=WeightManagementConsent",
        dataType: 'JSON',
        success: function (data) {
            if (data.isAuthorized) {
                if (data.success) {
                    window.location.href = data.message.pdfPath
                }
            }
        },
        error: function (xhr) {
            console.log(xhr);
        }
    });
});
//#endregion Print
//#region Wacom Tab Signature
    var openWacomTabSignaturePad = function (id) {
        var _data = {
            "patId": @emr.patId,
            "person": id,
            "form": "WeightManagementConsent",
            "appId": @emr.appId,
            "formname":"WeightManagement Consent",
            "formlink":"PrintWeightManagementConsent",
            "eSign":""
        }
        $.ajax({
            type: "GET",
            url: "@Url.Action("WacomTabSignaturePad", "WacomTabSignaturePad", new { area = "Common" })",
            contentType: "application/json",
            dataType: "html",
            data: _data,
            success: function (response) {
                $("#signature_pad_body").html(response);
                $("#signature_pad").modal("show");
            },
            error: function (xhr) {
                console.log("Error :" + xhr.statusText);
            }
        });
    }
//#endregion
    //#region Signature
    var openSignaturePad = function (id) {
        var _data = {
            "patId": @emr.patId,
            "person": id,
            "form": "WeightManagementConsent",
            "appId": @emr.appId,
            "formname":"WeightManagement Consent",
            "formlink":"PrintWeightManagementConsent",
            "eSign":""
        }
        $.ajax({
            type: "GET",
            url: "@Url.Action("SignaturePad", "SignaturePad", new { area = "Common" })",
            contentType: "application/json",
            dataType: "html",
            data: _data,
            success: function (response) {
                $("#signature_pad_body").html(response);
                $("#signature_pad").modal("show");
            },
            error: function (xhr) {
                console.log("Error :" + xhr.statusText);
            }
        });
    }
    //#endregion Signature

    $('#signature_pad').on('hidden.bs.modal', function () {
        if (localStorage.getItem("sign") != null) {
            GetSignaturename('patient');
           localStorage.removeItem("sign");
        }
    });

            //#region Get Signature
var GetSignaturename = function  (person) {
    $.ajax({
        url: '@Url.Action("GetSignature", "SignaturePad", new { area = "Common" })?appId=' + @emr.appId + '&person=' + person + '&form=WeightManagementConsent',
        type: "GET",
        dataType: "json",
        async: false,
        success: function (response) {
            //console.log(response);
            let sign = response[0].psb_sign;
            var date = moment(response[0].psb_date_modified).format("DD-MM-YYYY HH:mm");

            if (response[0].person == "patient") {
                $("#upat_sign_box").removeClass("d-none");
                $("#upsb_date_patient").text(date);
                $("#upat_sign").attr("src", sign);
            }

        },
        error: function (xhr) {
            console.log(xhr);
            alert(xhr);
        }

    });
};
//#endregion Get Signature

    //#region Alert Timeout
    function Timeout() {
        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 4200);
    }
    //#endregion Alert Timeout
</script>