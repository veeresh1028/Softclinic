@using System.Configuration;
@using System.Linq;
@using System.Security.Claims;
@using BusinessEntities;
@model BusinessEntities.ConsentForms.SlimmingConsent

@{
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    EMRInfo emr = (EMRInfo)TempData["emr_data"];
    TempData.Keep("emr_data");
}
<form id="form_SlimmingConsent" autocomplete="off" name="SlimmingConsent" ondrop="return false;" onpaste="return false;" oncut="return false;">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12">
            <div class="border">
                <div class="col-sm-12 col-md-12 col-lg-12">
                    <div class="row mt-2">
                        <div class="col-sm-12 col-md-6 col-lg-2 mb-2">
                            <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Patient Name</label></div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-4">
                            <label class="form-label text-red text-left text-capitalize">@emr.pat_name</label>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2 mb-2">
                            <div class="form-group mb-3"><label class="form-label text-black"> Emirates ID</label></div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-4">
                            <label class="form-label text-red text-left">@emr.pat_emirateid</label>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-2 mb-2">
                            <div class="form-group mb-3 text-align-left"><label class="form-label text-black ">File No</label></div>
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-2">
                            <label class="form-label text-red text-left">@emr.pat_code</label>
                        </div>
                        <div class="col-sm-12 col-md-2 col-lg-2">
                            <div class="form-group mb-3"><label class="form-label text-black"> DOB</label></div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-2">
                            <label class="form-label text-red text-left">@emr.pat_dob</label>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-2 mb-2">
                            <div class="form-group mb-3"><label class="form-label text-black"> Nationality</label></div>
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-2">
                            <label class="form-label text-red text-left">@emr.pat_nationality</label>
                        </div>
                        <div class="col-sm-12 col-md-2 col-lg-2">
                            <div class="form-group mb-3"><label class="form-label text-black">Gender</label></div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-2">
                            <label class="form-label text-red text-left">@emr.pat_gender</label>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-2">
                            <div class="form-group mb-3"><label class="form-label text-black">Doctor's Name</label></div>
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-2">
                            <label class="form-label text-red text-left">@emr.doc_name</label>
                        </div>
                        <div class="col-sm-12 col-md-2 col-lg-2">
                            <div class="form-group mb-3"><label class="form-label text-black">Date</label></div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-2">
                            <label class="form-label text-red text-left">@emr.app_fdate</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="text-align-justify row mb-5 mt-5 mb-4 col-sm-12 col-md-12 col-lg-12">
        <div class="form-group col-lg-2 table-condensed">
            <label class="form-label">Session No</label> @Html.TextBoxFor(m => m.ssc_1, new { @class = "form-control", @id = "ssc_1", @maxlength = "250" })&nbsp;

        </div>
        <div class="form-group col-lg-2 table-condensed">
            <label class="form-label"> Date</label> @Html.TextBoxFor(m => m.ssc_2, new { @class = "form-control", @placeholder = "DD-MMMM-YYYY", @id = "ssc_2" })
        </div>
        <div class="form-group col-lg-2 table-condensed">
            <label class="form-label">Session Type&nbsp;</label>
            @Html.DropDownListFor(m => m.ssc_3, new List<SelectListItem> { }, " ", new { @class = "form-select mb-2 select2", @id = "ssc_3" })
        </div>
        <div class="form-group col-lg-2 table-condensed">
            <label class="form-label">Covered Area&nbsp;</label>
            @Html.DropDownListFor(m => m.ssc_4, new List<SelectListItem> { }, " ", new { @class = "form-select mb-2 select2", @id = "ssc_4" })
        </div>
        <div class="form-group col-lg-2 table-condensed">
            <label class="form-label"> Patient Measurment Before @Html.TextBoxFor(m => m.ssc_5, new { @class = "form-control", @id = "ssc_5", @maxlength = "250" })&nbsp;</label>
            <label class="form-label"> Patient Measurment After @Html.TextBoxFor(m => m.ssc_7, new { @class = "form-control", @id = "ssc_7", @maxlength = "250" })&nbsp;</label>
        </div>
        <div class="form-group col-lg-2 table-condensed d-none">
            <label class="form-label">Power Degree&nbsp;</label>
            @Html.DropDownListFor(m => m.ssc_6, new List<SelectListItem> { }, " ", new { @class = "form-select mb-2 select2", @id = "ssc_6" })
        </div>
        <div class=" col-lg-2 table-condensed">
            <div class="form-group justify-content-center">
                <button type="submit" class="btn btn-info" id="btnAddSlimmingSheet"><i class="fe fe-plus"></i>SlimmingSheet</button>
            </div>
        </div>
    </div>
    <div class="row d-none" id="listItems">
        <div class="table-responsive" style="min-height:unset;">
            <table id="dtTable_AddSlimmingSheet" class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                        <th class="border-bottom-0 font-weight-semibold text-white text-center">Session No</th>
                        <th class="border-bottom-0 font-weight-semibold text-white text-center">Date</th>
                        <th class="border-bottom-0 font-weight-semibold text-white text-center">Session Type</th>
                        <th class="border-bottom-0 font-weight-semibold text-white text-center">Covered Area</th>
                        <th class="border-bottom-0 font-weight-semibold text-white text-center">
                            Patient Measurment Before
                        </th>
                        <th class="border-bottom-0 font-weight-semibold text-white text-center">
                            Patient Measurment After
                        </th>
                        <th class="border-bottom-0 font-weight-semibold text-white text-center">Delete</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="content" name="example">
            <div class="content-inner">
                <div class="row">
                    <div class="col-sm-12 col-md-6 col-lg-12">
                        <div class="form-group mb-3">
                            <button id="drawingdot" class="btn bg-dark-transparent btn-icon btn-svg drawing-mode" data-mode="dot" type="button">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-circle-fill" viewBox="0 0 16 16">
                                    <circle cx="8" cy="8" r="8" />
                                </svg>
                            </button>
                            <button id="drawingcheck" class="btn bg-dark-transparent btn-icon btn-svg drawing-mode" data-mode="check" type="button">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-check" viewBox="0 0 16 16">
                                    <path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z" />
                                </svg>
                            </button>
                            <button id="drawingcircle" class="btn bg-dark-transparent btn-icon btn-svg drawing-mode" data-mode="circle" type="button">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-circle" viewBox="0 0 16 16">
                                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                                </svg>
                            </button>
                            <button id="drawingcupping" class="btn bg-dark-transparent btn-icon btn-svg drawing-mode" data-mode="cupping" type="button">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash2" viewBox="0 0 16 16">
                                    <path d="M14 3a.7.7 0 0 1-.037.225l-1.684 10.104A2 2 0 0 1 10.305 15H5.694a2 2 0 0 1-1.973-1.671L2.037 3.225A.7.7 0 0 1 2 3c0-1.105 2.686-2 6-2s6 .895 6 2M3.215 4.207l1.493 8.957a1 1 0 0 0 .986.836h4.612a1 1 0 0 0 .986-.836l1.493-8.957C11.69 4.689 9.954 5 8 5s-3.69-.311-4.785-.793" />
                                </svg>
                            </button>
                            <button id="undo_button" class="btn bg-dark-transparent btn-icon btn-svg" type="button">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-arrow-counterclockwise" viewBox="0 0 16 16">
                                    <path fill-rule="evenodd" d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2v1z" />
                                    <path d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466z" />
                                </svg>
                            </button>
                            <button id="drawingeraser" class="btn bg-dark-transparent btn-icon btn-svg drawing-mode" data-mode="eraser" type="button">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eraser-fill text-danger" viewBox="0 0 16 16">
                                    <path d="M8.086 2.207a2 2 0 0 1 2.828 0l3.879 3.879a2 2 0 0 1 0 2.828l-5.5 5.5A2 2 0 0 1 7.879 15H5.12a2 2 0 0 1-1.414-.586l-2.5-2.5a2 2 0 0 1 0-2.828zm.66 11.34L3.453 8.254 1.914 9.793a1 1 0 0 0 0 1.414l2.5 2.5a1 1 0 0 0 .707.293H7.88a1 1 0 0 0 .707-.293z" />
                                </svg>
                            </button>
                            <input id="color_picker" type="text">
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-7">
                        <div>
                            <canvas id="imageCanvas" width="578" height="650"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col-sm-12 col-md-6 col-lg-12 text-center">
            <table class="table table-bordered table-condensed">
                <tr>
                    <td colspan="3" class="font-weight-bold text-danger fs-18" width="100%">
                        Sign here, only if all of your questions have been answered to your satisfaction
                    </td>
                </tr>
                <tr>
                    <td width="50%">
                        <div id="pat_sign_box" class="d-none">
                            <img alt="stamp" id="pat_sign" class="avatar avatar-xl bsquare" />
                        </div>
                    </td>
                    <td width="50%">
                        <img alt="stamp" src="@emr.doc_sign" id="doc_sign" class="avatar avatar-xl bsquare" />
                    </td>
                </tr>
                <tr>
                    <td width="50%">
                        <label class="form-label text-red text-left text-capitalize">@emr.pat_name&nbsp;</label>
                        <span class="font-weight-semibold"> Patient Name</span>
                        <br /><br />
                        <label class="form-label text-red text-left" id="psb_date_patient" name="">&nbsp;</label>
                        <span class="font-weight-semibold">Date</span>
                    </td>
                    <td width="50%">
                        <label class="form-label text-red text-left text-capitalize">@emr.doc_name&nbsp;</label>
                        <span class="font-weight-semibold">Doctor’s/Therapist Name</span>
                        <br /><br />
                        <label class="form-label text-red text-left" id="ssc_date_doctor"></label>
                        <span class="font-weight-semibold">Date</span>
                    </td>
                </tr>
                <tr>
                    <td class="font-weight-semibold text-blue" width="50%">
                        Patient Signature
                        <br />
                        <button class="btn btn-sm btn-outline-success mb-2" id="patient" type="button" onclick="openSignaturePad(this.id)">
                            <i class="fa fa-paint-brush">&nbsp;&nbsp;</i>Patient
                        </button>
                    </td>
                    <td class="font-weight-semibold text-blue text-center" width="50%">Doctor’s Signature</td>
                </tr>
            </table>
        </div>
    </div>

    <div class="row mt-2">
        <div class="col-sm-12 col-md-12 col-lg-12 text-center">
            <div class="btn-list btn-animation">
                <button type="submit" class="btn btn-success btn-sm" id="btn_Insert">Save</button>
                <button type="button" class="btn btn-outline-dark btn-sm" id="btn_Reset_C">Reset</button>
                <button type="button" class="btn btn-danger btn-sm d-none" id="btn_Delete">Delete</button>
                <button type="button" class="btn btn-sm btn-outline-success" id="btn_Print"> Download/Print </button>
            </div>
        </div>
    </div>
</form>

<script type="text/javascript">
    var item_arr = [];

    $(function () {
        if ("@emp_designation.ToString()" === "Super Administrator") {
            $("#btn_Insert").show();
        }
        else {
            if ("@emr.set_emr_lock" == "NoLock") {
                $("#btn_Insert").show();
            }
            else {
                if ("@emr.app_ae_date" >= "@emr.today") {
                    $("#btn_Insert").show();
                }
                else {
                    $("#btn_Insert").hide();
                }
            }
        }

        Get_Session_Type("");
        Get_Covered_Area("");
        Get_Power_Degree("");

        $('#ssc_2').bootstrapdatepicker({
              format: "dd-MM-yyyy",
              viewMode: "date",
              todayHighlight: true,
              autoclose: true,
              multidate: false,
             multidateSeparator: "-"
           });
        $("#ssc_2").bootstrapdatepicker("setDate", moment(new Date("@emr.today")).format("DD-MMMM-YYYY"));


        validate();
        BindDataTable(null);

        Loadimage();

        const drawingButtons = document.querySelectorAll('.drawing-mode');
        drawingButtons.forEach((button) => {
            button.addEventListener('click', function () {
                DrawingMode = button.getAttribute('data-mode');
            });
        });

        $('#color_picker').spectrum({
            type: "flat",
            showInput: true,
            preferredFormat: "hex",
            color: '#0061da'
        });
    });

     var isErasing = false;

    //#region drawing
    var canvas = document.getElementById('imageCanvas');
    var ctx = canvas.getContext('2d');
    var drawingHistory = [];
    var DrawingMode = 'dot';

    //#region Load an image
    var Loadimage = function () {
        var image = new Image();
        image.src = "@ConfigurationManager.AppSettings["ClinicSoftEndPoint"].ToString()" + "images/ConsentForms/TopLife/Hijama.jpg";
        console.log(image.src);
        image.onload = function () {
            ctx.drawImage(image, 0, 0, canvas.width, canvas.height);
        };
    }


    // Add drawing functionality
    var isDrawing = false;
    var lastX, lastY;

    canvas.addEventListener('mousedown', function (e) {
        var rect = canvas.getBoundingClientRect();
        var x = e.clientX - rect.left;
        var y = e.clientY - rect.top;

        if (isErasing) {
            erase(x, y);
        } else {
            if (DrawingMode === 'dot') {
                drawDot(x, y);
            } else if (DrawingMode === 'check') {
                drawcheckMark(x, y);
            }
            else if (DrawingMode === 'circle') {
                drawingCircle(x, y);
            }
            else if (DrawingMode === 'cupping') {
                drawingCupping(x, y);
            }
            else if (DrawingMode === 'eraser') {
                erasingDraw(x, y);
            }
        }
        isDrawing = true;
        drawingHistory.push(canvas.toDataURL());
    });

    canvas.addEventListener('mousemove', function (e) {

        if (isErasing) {
            var x = e.clientX - canvas.getBoundingClientRect().left;
            var y = e.clientY - canvas.getBoundingClientRect().top;
            erase(x, y);
        } else if (!isDrawing) {
            return;
        }

        if (!isDrawing) return;

        var x = e.offsetX - canvas.getBoundingClientRect().left;
        var y = e.offsetY - canvas.getBoundingClientRect().top;


        isDrawing = true;
        drawingHistory.push(canvas.toDataURL());
    });
    function drawDot(x, y) {
        ctx.fillStyle = $("#color_picker").val();
        ctx.beginPath();
        ctx.arc(x, y, 5, 0, Math.PI * 2);
        ctx.fill();
        drawingHistory.push(canvas.toDataURL());
    }
    var drawcheckMark = function (x, y) {
        ctx.strokeStyle = $("#color_picker").val();
        ctx.lineWidth = 2;
        ctx.beginPath();
        ctx.moveTo(x - 20, y);
        ctx.lineTo(x - 10, y + 10);
        ctx.lineTo(x + 20, y - 20);
        ctx.stroke();
        drawingHistory.push(canvas.toDataURL());
    }
    var drawingCircle = function (x, y) {
        ctx.strokeStyle = $("#color_picker").val();
        ctx.lineWidth = 2;
        ctx.beginPath();
        ctx.arc(x, y, 5, 0, Math.PI * 2); // Use the arc method to draw a circle
        ctx.stroke();
        drawingHistory.push(canvas.toDataURL());
    }

    var drawingCupping = function (x, y) {
        ctx.strokeStyle = $("#color_picker").val(); // Set color for the trash icon
        ctx.lineWidth = 2;
        ctx.beginPath();
        ctx.moveTo(x - 8, y - 16);
        ctx.lineTo(x + 8, y - 16);
        ctx.lineTo(x + 4, y - 2);
        ctx.lineTo(x - 4, y - 2);
        ctx.closePath();
        ctx.stroke();
        drawingHistory.push(canvas.toDataURL());
    }

    var erasingDraw = function (x, y) {
        var squareSize = 20;
        ctx.fillStyle = "#ffffff";
        ctx.beginPath();
        ctx.rect(x - squareSize / 2, y - squareSize / 2, squareSize, squareSize);
        ctx.fill();
        drawingHistory.push(canvas.toDataURL());
        $("#color_picker").val("#000000");
    }

    function erase(x, y) {
        ctx.fillStyle = '#ffffff';
        ctx.beginPath();
        ctx.arc(x, y, 10, 0, Math.PI * 2);
        ctx.fill();
        drawingHistory.push(canvas.toDataURL());
    }
    canvas.addEventListener('mouseup', function () {
        isDrawing = false;
    });

    //#region Undo
    $('#undo_button').on('click', function (e) {
        if (drawingHistory.length > 1) {
            drawingHistory.pop(); // Remove the current state
            var img = new Image();
            img.src = drawingHistory[drawingHistory.length - 1];
            img.onload = function () {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
            };
        }

    });
    //#endregion Undo

    //#region Insert SlimmningSheet Click
    $('#btnAddSlimmingSheet').on('click', function (e) {
        e.preventDefault();
        $("#listItems").removeClass("d-none");
        if ($("#form_SlimmingConsent").valid()) {

            var exists = false;

            if (item_arr.length > 0) {
                exists = item_arr.some(function (check) {
                    return check.sscId === $("#ssc_1").val();
                });
            }
            if (item_arr.length > 0) {
                exists = item_arr.some(function (check) {
                    return check.sscId === $("#ssc_2").val();
                });
            }

            if (exists) {
                var data = $("#ssc_5").val();
                data = (data.length >= 75) ? (data.substring(0, 75) + "...") : data;

                swal('Duplicate!', "Item " + data.trim() + " Already Exists in the list. Please Remove Existing & Add Again!", 'warning');
            }
            else {
                bindSession();
                clearData();
            }
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });
    //#endregion

    //#region Bind Item to Table
        var bindSession = function () {
            var data = {
                 "sscId": 0,
                 "ssc_appId": @emr.appId,
                 "ssc_1": $("#ssc_1").val(),
                 "ssc_2": $("#ssc_2").val(),
                 "ssc_3": $("#ssc_3 option:selected").text(),
                 "ssc_4": $("#ssc_4 option:selected").text(),
                 "ssc_5": $("#ssc_5").val(),
                 "ssc_6": $("#ssc_6 option:selected").text(),
                 "ssc_7": $("#ssc_7").val(),
            }

            item_arr.push(data);

            GetSlimmingSheetItems(item_arr);

            $("#btn_Insert").removeClass("d-none");
        }

        var GetSlimmingSheetItems = function (response) {
            if (response != null && response != undefined) {
                var table;
                if ($.fn.dataTable.isDataTable('#dtTable_AddSlimmingSheet')) {
                    table = $('#dtTable_AddSlimmingSheet').DataTable();
                    table.clear();
                    table.rows.add(response).draw();
                }
                else {
                    BindDataTable(response);
                }
            }
        }

        var BindDataTable = function (response) {

        var table = $("#dtTable_AddSlimmingSheet").DataTable({
            processing: true,
            paging: false,
            ordering: false,
            info: false,
            "searching": false,
            "retrieve": true,
            lengthChange: false,
            "aaData": response,
            "aoColumns": [

                //{
                //    "mData": "sscId",

                //},

                { "mData": "ssc_1" },
                { "mData": "ssc_2" },
                { "mData": "ssc_3" },
                { "mData": "ssc_4" },
                { "mData": "ssc_5" },
                { "mData": "ssc_7" },

                {
                    "mData": "sscId",
                    "className": "fs-13 text-center dt-delete",
                    "render": function (data) {
                        var html = "<i class='fe fe-trash text-danger curpointer' id='remove-item' style='font-size: 15px;cursor:pointer;'></i>";
                        return html;
                    }

                }

            ],
            scrollX: true,
            scrollY: 500,
            scrollCollapse: true,
            fixedColumns: true,
            fixedHeader: {
                header: true
            },

        });

        // Remove Items From DataTable
        table.on('click', '#remove-item', function (e) {
            var row = $(this).parents('tr');
            var data_row = table.row($(this).closest('tr')).data();

            swal({
                title: "Are you sure you want to delete this Service From List?",
                text: "This action will permanently delete service from list!",
                type: "info",
                showCancelButton: true,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel'
            }, function (t) {
                if (t) {
                    item_arr = $.grep(item_arr, function (n, i) {
                        return (n.psId !== data_row.psId);
                    });

                    if ($(row).hasClass('child')) {
                        table.row($(row).prev('tr')).remove().draw();
                    }
                    else {
                        table.row(row).remove().draw();
                    }

                    if (item_arr.length == 0) {
                        $("#btn_Insert").addClass("d-none");
                    }

                    setTimeout(function () {
                        swal('Success!', "Service Deleted Successfully!", 'success');
                    }, 150);
                }
            });
        });

        resizedt();
    }
    //#endregion

    //#region load dropdown
    var Get_Session_Type = function (query) {
        $.ajax({
            url: '@Url.Action("GetSlimmingSheetDropdownData", "SlimmingConsent", new { area = "ConsentForms" })?query=ST',
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                $("#ssc_3").select2({
                    placeholder: 'Select Session Type',
                    width: '100%',
                    minimumResultsForSearch: '',
                    maximumInputLength: 3,
                    dropdownParent: $('#form_SlimmingConsent'),

                });

                if (response.length > 0) {
                    $.each(response, function (j) {
                        var newOption = new Option(response[j].text, response[j].id);
                        $('#ssc_3').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    };

    var Get_Covered_Area = function (query) {
    $.ajax({
        url: '@Url.Action("GetSlimmingSheetDropdownData", "SlimmingConsent", new { area = "ConsentForms" })?query=CA',
        type: "GET",
        dataType: "json",
        async: false,
        success: function (response) {
            $("#ssc_4").select2({
                placeholder: 'Select Covered Area',
                width: '100%',
                minimumResultsForSearch: '',
                maximumInputLength: 3,
                dropdownParent: $('#form_SlimmingConsent'),

            });

            if (response.length > 0) {

                $.each(response, function (j) {
                    var newOption2 = new Option(response[j].text, response[j].id);

                    $('#ssc_4').append(newOption2).trigger('change');
                });
            }
        },
        error: function (xhr) {
            console.log(xhr);
        }
    });
    };

    var Get_Power_Degree = function (query) {
    $.ajax({
        url: '@Url.Action("GetSlimmingSheetDropdownData", "SlimmingConsent", new { area = "ConsentForms" })?query=PD',
        type: "GET",
        dataType: "json",
        async: false,
        success: function (response) {
            $("#ssc_6").select2({
                placeholder: 'Select Power Degree',
                width: '100%',
                minimumResultsForSearch: '',
                maximumInputLength: 3,
                dropdownParent: $('#form_SlimmingConsent'),

            });

            if (response.length > 0) {

                $.each(response, function (j) {
                    var newOption = new Option(response[j].text, response[j].id);

                    $('#ssc_6').append(newOption).trigger('change');
                });
            }
        },
        error: function (xhr) {
            console.log(xhr);
        }
    });
};
    //#endregion load dropdown

    //#region Validation Initialization
    var validate = function () {
        $("#form_SlimmingConsent").validate({
            rules: {

            },
            messages: {

            },
            highlight: function (element) {
                var elem = $(element);
                $(element).parent().addClass('has-error');
                //error_timeout(elem.attr("id"));
            },
            unhighlight: function (element) {
                var elem = $(element);
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });

    }
 //#endregion

    //#region Add  Click
    $('#btn_Insert').on('click', function (e) {
        e.preventDefault();
        var canvas = $("#imageCanvas").get(0);
        var imgData = canvas.toDataURL();
        if (item_arr.length > 0) {
            var _slimming = {
                Slimming_items: item_arr,
                "image": imgData,
            }

            $('#btn_Insert').removeClass("btn btn-sm btn-success");
            $('#btn_Insert').addClass("btn btn-sm btn-success btn-loaders btn-icon");
            $('#btn_Insert').html("Saving the Record....");

            $.ajax({
                type: "Post",
                url: "@Url.Action("InsertSlimmingConsent", "SlimmingConsent", new {area = "ConsentForms" })",
                dataType: 'JSON',
                data: _slimming,
                success: function (data) {
                    $('#btn_Insert').removeClass("btn btn-sm btn-success btn-loaders btn-icon");
                    $('#btn_Insert').addClass("btn btn-sm btn-success");
                    $('#btn_Insert').html("Save Changes");

                    if (data.isSuccess) {
                        if (data.isInserted) {
                            GetSlimming();
                            GetSlimmingConsentInfo();
                            var alertPlaceholder = document.getElementById("Alert");

                            function alert(e, t) {
                                var l = document.createElement("div");
                                l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                            }
                            alert("<i class='fe fe-check-circle text-white'></i>Slimming Consent Form Saved Successfully!", "success");

                            Timeout();
                        }
                        else {
                            let html = "<div class='col-12 col-sm-12 col-md-6 d-flex justify-content-center'>" +
                                "<div class='alert alert-warning' role='alert'>" +
                                "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                "<strong>Warning.. Slimming Consent Form already Exists..</strong><br/>" +
                                "</div></div>";
                            $("#Alert").html(html);
                        }
                    }
                    else {
                        let html = "<div class='col-12 col-sm-12 col-md-6 d-flex justify-content-center'>" +
                            "<div class='alert alert-danger' role='alert'>" +
                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                            "<strong>Validation Error.. Please correct before you submit the form!&nbsp;</strong><br/><ul>";

                        $.each(data.message, function (index, value) {
                            html += "<li><small>" + value + "</small><li>";
                            var elem = $("#" + index);
                            if (elem.hasClass("select2-hidden-accessible")) {
                                $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                            }
                            else {
                                $(elem).addClass(" is-invalid");
                            }

                            setTimeout(function () {
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                }
                                else {
                                    $(elem).removeClass("is-invalid");
                                }
                            }, 5000);
                        });

                        html += "</ul></div></div>";

                        $("#error").html(html);
                    }
                },
                error: function (xhr) {
                    $('#btn_Insert').removeClass("btn btn-sm btn-success btn-loaders btn-icon");
                    $('#btn_Insert').addClass("btn btn-sm btn-warning");
                    $('#btn_Insert').html("Add");
                    Timeout();
                }
            });
        }

        });
    //#endregion Add Click

    //#region Delete Click
    $('#btn_Delete').on('click', function (e) {
        e.preventDefault();
        $('#btn_Delete').removeClass("btn btn-success");
        $('#btn_Delete').addClass("btn btn-success btn-loaders btn-icon");
        $('#btn_Delete').html("Deleting the Record....");

        $.ajax({
            url: '@Url.Action("DeleteSlimmingConsent", "SlimmingConsent", new { area = "ConsentForms" })?appId=' + @emr.appId,
            type: "POST",
            dataType: 'JSON',
            success: function (data) {
                $('#btn_Delete').removeClass("btn btn-success btn-loaders btn-icon");
                $('#btn_Delete').addClass("btn btn-warning");
                $('#btn_Delete').html("Delete");
                if (data.isAuthorized) {
                    if (data.success) {
                        var alertPlaceholder = document.getElementById("Alert");
                        function alert(e, t) {
                            var l = document.createElement("div");
                            l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" >' + e +
                                '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                        }
                        alert("<i class='fe fe-check-circle text-white'></i> Slimming Consent Form Deleted Successfully!", "success");
                        clearControls();
                        Timeout();

                        $('#btn_Delete').addClass("d-none");
                        $("#pat_sign_box").addClass("d-none");
                       /* $("#wit_sign_box").addClass("d-none");*/
                    }
                    else {
                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                            "<div class='alert alert-warning' role='alert'>" +
                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                            "<strong>Error!.. Failed to Delete..</strong><br/>" +
                            "</div></div>";
                        $("#error").html(html);
                    }
                }
                else {
                    var alertPlaceholder = document.getElementById("Alert");
                    function alert(e, t) {
                        var l = document.createElement("div");
                        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" >' + e +
                            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                    }
                    alert("<i class='fe fe-check-circle text-white'></i> You do not have Enough Privileges to Delete this Designation!", "Access Denied!");
                }
            },
            error: function (xhr) {
                $('#btn_Delete').removeClass("btn btn-success btn-loaders btn-icon");
                $('#btn_Delete').addClass("btn btn-Delete");
                $('#btn_Delete').html("Delete");
                Timeout();
            }
        })
    });
//#endregion

    //#region Reset
    var clearData = function () {
        $("#ssc_6").val("").trigger("change");
        $("#pat_sign").attr("src", "");
    }
    $('#btn_Reset_C').on('click', function (e) {
        e.preventDefault();
        clearData();
        clearControls();

    });
 //#endregion Reset

    //#region Print
    $('#btn_Print_C').on('click', function (e) {
        e.preventDefault();
        $('#btn_Print_C').removeClass("btn btn-sm btn-success");
        $('#btn_Print_C').addClass("btn btn-sm btn-success btn-loaders btn-icon");
        $('#btn_Print_C').html("Printing the Record....");
    $.ajax({
        type: "Get",
        url: "@Url.Action("PrintPDFConsent", "SlimmingConsent", new {area = "ConsentForms" })?appId=" + @emr.appId + "&form=SlimmingConsent",
        dataType: 'JSON',
        success: function (data) {
            if (data.isAuthorized) {
                if (data.success) {
                    window.location.href = data.message.pdfPath
                }
            }
        },
        error: function (xhr) {
            console.log(xhr);
        }
    });
});
//#endregion Print

    //#region Clear Controls
    var clearControls = function () {
        $(".form-control").val("");
        $(".form-control-sm").val("");
        $("#ssc_3").val("").trigger("change");
        $("#ssc_4").val("").trigger("change");
        $("#ssc_6").val("").trigger("change");
        $("#pat_sign").attr("src", "");

    }
    //#endregion Clear Controls

    //#region Signature
    var openSignaturePad = function (id) {
    var _data = {
        "patId": @emr.patId,
        "person": id,
        "form": "SlimmingConsent",
        "appId": @emr.appId,
        "formname":"Slimming Consent",
        "formlink":"",
        "eSign":""
    }
    $.ajax({
        type: "GET",
        url: "@Url.Action("SignaturePad", "SignaturePad", new { area = "Common" })",
        contentType: "application/json",
        dataType: "html",
        data: _data,
        success: function (response) {
            $("#signature_pad_body").html(response);
            $("#signature_pad").modal("show");
        },
        error: function (xhr) {
            console.log("Error :" + xhr.statusText);
        }
    });
}
//#endregion Signature

    $('#signature_pad').on('hidden.bs.modal', function () {
    if (localStorage.getItem("sign") != null) {
        GetSignaturename('patient');
        localStorage.removeItem("sign");
    }
   });

    // #region Get Signature
        var GetSignaturename = function  (person) {
            $.ajax({
                url: '@Url.Action("GetSignature", "SignaturePad", new { area = "Common" })?appId=' + @emr.appId + '&person=' + person + '&form=SlimmingConsent',
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    console.log(response);
                    let sign = response[0].psb_sign;
                    var date = moment(response[0].psb_date_modified).format("DD-MM-YYYY");

                    if (response[0].person == "patient") {
                        $("#pat_sign_box").removeClass("d-none");
                        $("#psb_date_patient").html(date);
                        $("#pat_sign").attr("src", sign);
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr);
                }

            });
        };
        //#endregion Get Signature

    //#region Alert Timeout
      function Timeout() {
        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 4200);
       }
       //#endregion Alert Timeout

    //#region Print
$('#btn_Print').on('click', function (e) {
    e.preventDefault();
    $('#btn_Print').removeClass("btn btn-sm btn-success");
    $('#btn_Print').addClass("btn btn-sm btn-success btn-loaders btn-icon");
    $('#btn_Print').html("Printing the Record....");
    $.ajax({
        type: "Get",
        url: "@Url.Action("PrintPDFConsent", "SlimmingConsent", new {area = "ConsentForms" })?appId=" + @emr.appId + "&form=SlimmingConsent",
        dataType: 'JSON',
        success: function (data) {
            if (data.isAuthorized) {
                if (data.success) {
                    window.location.href = data.message.pdfPath
                }
            }
        },
        error: function (xhr) {
            console.log(xhr);
        }
    });
});
    //#endregion Print

    //#region UI Controls
    function resizedt() {
        setTimeout(function () {
            var tables = $.fn.dataTable.tables({ visible: true, api: true });
            if (tables) {
                $('#dtTable_AddSlimmingSheet').DataTable().columns.adjust();
            }
        }, 500);
    }
 //#endregion
</script>

