@model IEnumerable<BusinessEntities.Masters.SourcewiseCampaigns>
<style>
    .modal-lg {
        max-width: 1200px;
    }

    a:not([href]):not([tabindex]) {
        color: #5a72e8;
    }
</style>
<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold">Sourcewise Campaigns<span id="main_swc" class="badge bg-primary-2"></span></h5>
    <button type="button" class="btn-close btnCloseCreate" data-bs-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body p-4">
    <div class="row">
        <p class="card-title-desc btn-group-justified d-flex justify-content-between">
            Add / Edit / Delete Campaigns!
            <a id="showAddCampaign" class="btn btn-outline-secondary"><i class="mdi mdi-plus-circle"></i>&nbsp;Add Campaign</a>
        </p>
        <div style="display:none;" id="campaign_add">
            @Html.Action("CreateCampaign", "SourceCampaigns", new { area = "Masters" })
        </div>
        <div id="campaign_edit">
        </div>
        <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
            <div id="CampaignAlert">
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-sm-12 col-md-12 col-lg-12">
            <div class="table-responsive">
                <table id="tbl_campaigns" class="table table-striped table-bordered text-nowrap resize-table" style="width:100%">
                    <thead>
                        <tr style="color: #fff !important; background-color: #5b73e8; border-color: #5b73e8;">
                            <th class="border-bottom-0 font-weight-semibold text-white">#</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Title</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Start Date</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">End Date</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Description</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Made by</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Status</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Edit</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Delete</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    //#region Page Load
    $(function () {
        GetCampaigns();
        $('#showAddCampaign').click(function () {
            $('#campaign_add').show();
            $('#campaign_edit').hide();
        });
    });
    //#endregion

    //#region Get Campaigns
    var GetCampaigns = function () {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetAllCampaigns", "SourceCampaigns", new { area="Masters" })",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                var table;
                if ($.fn.dataTable.isDataTable('#tbl_campaigns')) {
                    table = $('#tbl_campaigns').DataTable();
                    table.clear();
                    table.rows.add(response).draw();
                }
                else {
                    BindDataTable(response);
                }
            },
            error: function (xhr) {
                console.log(xhr)
            }
        });
    }
    //#endregion

    //#region Bind DataTable
    var BindDataTable = function (response) {
        var table = $("#tbl_campaigns").DataTable({
            fixedHeader: {
                header: true,
                footer: true
            },
            processing: true,
            "deferRender": true,
            "retrieve": true,
            lengthChange: true,
            scrollX: true,
            scrollY: 500,
            scrollCollapse: true,
            "aaData": response,
            "aoColumns": [
                {
                    "mData": "escId",
                    "searchable": false,
                    "className": "text-center",
                    "render": function (data, type, row, meta) {
                        let _index = (meta.row) + 1;
                        if (_index >= 10) {
                            return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>" + _index + "</a>";
                        }
                        else {
                            return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>0" + _index + "</a>";
                        }
                    }
                },
                { "mData": "esc_title" },
                {
                    "mData": "esc_start_date",
                    "render": function (esc_start_date, type, full, meta) {
                        if (type === 'display' || type === 'filter') {
                            return moment(esc_start_date).format('DD-MM-YYYY');
                        }
                        return moment(esc_start_date).format('YYYY-MM-DD');;
                    }
                },
                {
                    "mData": "esc_end_date",
                    "render": function (esc_end_date, type, full, meta) {
                        if (type === 'display' || type === 'filter') {
                            return moment(esc_end_date).format('DD-MM-YYYY');
                        }
                        return moment(esc_end_date).format('YYYY-MM-DD');;
                    }
                },
                {
                    "className": 'text-wrap text-justify',
                    "mData": "esc_desc"
                },
                { "mData": "esc_madeby_name" },
                {
                    "className": 'text-center',
                    "mData": "escId",
                    "render": function (escId, type, full, meta) {
                        var visible = full.actionvisible;
                        var esc_status = full.esc_status;

                        if (visible === "True") {
                            if (full.esc_status === "Active") {
                                return '<button type="button" class="badge rounded-pill bg-success mt-2 border-success" style="width: 60px;" onclick="updateStatus(\'' + escId + '\',\' Active \')">' + esc_status + '</button>'
                            }
                            else if (full.esc_status === "Inactive") {
                                return '<button type="button" class="badge rounded-pill bg-warning mt-2 border-warning" style="width: 60px;" onclick="updateStatus(\'' + escId + '\',\'Inactive\')">' + esc_status + '</button>'

                            }
                            else if (full.esc_status === "Deleted") {
                                return '<button type="button" class="badge rounded-pill bg-danger mt-2 border-danger" style="width: 60px;" onclick="updateStatus(\'' + escId + '\',\'Deleted\')">' + esc_status + '</button>'
                            }
                            else {
                                return ''
                            }
                        }
                        else {
                            return '<span class="badge rounded-pill text-danger mt-2 border-danger">Allocated</span>'
                        }
                    }
                },
                {
                    "mData": "escId",
                    "className": 'text-center',
                    "orderable": false,
                    "searchable": false,
                    "render": function (data, type, full, meta) {
                        var status = full.esc_status;
                        var visible = full.actionvisible;

                        if (status === "Active" && visible === "True") {
                            return '<button type="button" id="btn_IP_Edit" onclick="editCampaign(' + full.escId + ')" class="btn btn-sm btn-outline-primary">Edit</button>';
                        }
                        else {
                            return ''
                        }
                    }
                },
                {
                    "mData": "escId",
                    "className": 'text-center',
                    "orderable": false,
                    "searchable": false,
                    "render": function (data, type, full, meta) {
                        var status = full.esc_status;
                        var visible = full.actionvisible;

                        if (status === "Active" && visible === "True") {
                            return '<button type="button" id="btn_IP_Delete" onclick="deleteCampaign(' + full.escId + ')" class="btn btn-sm btn-outline-danger">Delete</button>';
                        }
                        else {
                            return ''
                        }
                    }
                }
            ],
            language: {
                searchPlaceholder: 'Search...',
                sSearch: '<span class="text-primary font-weight-semi-bold">Search By Title / Status</span>',
                scrollX: "100%",
                lengthMenu: '_MENU_ ',
            },
            buttons: [
                {
                    extend: 'excel',
                    className:'btn-secondary',
                    title: 'Sourcewise Campaigns',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 2, 4]
                    },
                    action: function (e, dt, node, config) {
                        $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, node, config);
                        exportLogs("Employee Exported Sourcewise Campaigns to Excel!");
                    }
                },
                {
                    extend: 'pdf',
                    className: 'btn-secondary',
                    title: 'Sourcewise Campaigns',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 2, 4]
                    },
                    action: function (e, dt, node, config) {
                        $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, node, config);
                        exportLogs("Employee Exported Sourcewise Campaigns to PDF!");
                    }
                },
                {
                    extend: 'csv',
                    className: 'btn-secondary',
                    title: 'Sourcewise Campaigns',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 2, 4]
                    },
                    action: function (e, dt, node, config) {
                        $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, node, config);
                        exportLogs("Employee Exported Sourcewise Campaigns to CSV!");
                    }
                },
                {
                    extend: 'print',
                    className: 'btn-secondary',
                    title: 'Sourcewise Campaigns',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 2, 4]
                    },
                    action: function (e, dt, node, config) {
                        $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, node, config);
                        exportLogs("Employee Printed Sourcewise Campaigns!");
                    }
                }
            ]
        });
        table.buttons().container().appendTo('#tbl_campaigns_wrapper .col-md-6:eq(0)');
    }
    //#endregion

    //#region Update Status
    var updateStatus = function (escId, esc_status) {
        esc_status = (esc_status == "Deleted" || esc_status == "Inactive") ? "Active" : "Inactive"

        Swal.fire({
            title: "Are you sure you want to change status ?",
            text: "This action will change the status of the selected Campaign!",
            icon: "question",
            showCancelButton: !0,
            confirmButtonText: 'Yes! I Confirm',
            cancelButtonText: 'No! Cancel Please',
            confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
        }).then(function (t) {
            if (t.value) {
                $.ajax({
                    url: "@Url.Action("UpdateCampaignStatus", "SourceCampaigns", new { area="Masters"})?escId=" + escId + "&esc_status=" + esc_status,
                    type: "POST",
                    dataType: "json",
                    success: function (data) {
                        if (data.isAuthorized) {
                            if (data.success) {
                                GetCampaigns();
                                Swal.fire({
                                    title: "Success!",
                                    text: data.message,
                                    icon: "success",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197"
                                });
                            }
                            else {
                                Swal.fire({
                                    title: "Action Forbidden!",
                                    text: data.message,
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197"
                                });
                            }
                        }
                        else {
                            Swal.fire({
                                title: "Access Denied!",
                                text: "You do not have enough privileges to change Campaign Status!",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: "Error!",
                            text: "Failed to Update Campaign Status! Please Try Again.",
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                        });
                    }
                });
            }
        });
    }
    //#endregion

    //#region Edit Campaign
    $(document).on('click', '[id*=btn_IP_Edit]', function () {
        $('#escId').val($(this).closest('tr').find('td').eq(0).html());
        campaign = $(this).closest('tr');
    });
    function editCampaign(escId) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("EditCampaign", "SourceCampaigns", new { area = "Masters" })?escId=" + escId,
            contentType: "application/json",
            dataType: "html",
            success: function (data) {
                $("#campaign_edit").html(data);
                $("#campaign_edit").show();
            },
            error: function (xhr) {
                console.log("Error while Editing Campaign : " + xhr.statusText);
            }
        });

        $('#campaign_add').hide();
    }
    //#endregion

    //#region Delete Campaign
    $(document).on('click', '[id*=btn_IP_Delete]', function () {
        $('#escId').val($(this).closest('tr').find('td').eq(0).html());
        campaignToDelete = $(this).closest('tr');
    });
    var campaignToDelete;
    var deleteCampaign = function (escId) {
        Swal.fire({
            title: "Are you sure you want to delete this Campaign?",
            text: "This action will delete the selected Campaign!",
            icon: "question",
            showCancelButton: !0,
            confirmButtonText: 'Yes! Confirm',
            cancelButtonText: 'No! Cancel',
            confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
        }).then(function (t) {
            if (t.value) {
                $.ajax({
                    url: '@Url.Action("DeleteCampaign", "SourceCampaigns", new { area = "Masters"})?escId=' + escId +'&esc_status=Deleted' ,
                    type: "POST",
                    dataType: "json",
                    success: function (data) {
                        if (data.isAuthorized) {
                            if (data.success) {
                                GetCampaigns();
                                var alertPlaceholder = document.getElementById("CampaignAlert");
                                function alert(e, t) {
                                    var l = document.createElement("div"); l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                }
                                alert("<i class='fe fe-check-circle text-white'></i>  Campaign Deleted Successfully!", "success");
                                Timeout();
                            }
                            else {
                                Swal.fire({
                                    title: "Action Forbidden!",
                                    text: data.message,
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197"
                                });
                            }
                        }
                        else {
                            Swal.fire({
                                title: "Access Denied!",
                                text: "You do not have enough privileges to delete Campaigns!",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: "Error!",
                            text: "Failed to Delete Campaign! Error : "+ xhr.statusText,
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                        });
                    }
                });
            }
        });
    }
    //#endregion

</script>