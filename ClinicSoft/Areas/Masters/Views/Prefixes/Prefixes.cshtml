
@model IEnumerable<BusinessEntities.Masters.Prefixes>
@{
    ViewBag.Title = "Prefixes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary" data-lang-key="prefixes">Prefixes</h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list">
            <a data-bs-toggle="modal" data-bs-target="#prefixes_modal" class="btn btn-secondary" onclick="addPrefix()" data-lang-key="add-prefixes"><i class="mdi mdi-plus"></i>&nbsp;Add Prefixes</a>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="PrefixAlert"></div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table id="tbl_prefixes" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D;">
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="branch">Branch</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="type">Type</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="prefix">Prefix</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="series-no">Series No</span
                                ></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="changeable">Changeable</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="made-by">Made By</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="edit">Edit</span>
                                </th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>                               
                                <th></th>                               
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Prefixes Modal -->
<div class="modal fade" id="prefixes_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="prefixes_modal_body">
        </div>
    </div>
</div>
<!-- End Prefixes Modal -->
@section myScripts{
    <script type="text/javascript">
        //#region Page Load
        $(document).ready(function () {
            GetPrefixes();
        });
        //#endregion

        //#region Get Prefixes
        var GetPrefixes = function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAllPrefixes", "Prefixes", new { area = "Masters" })",
                success: function (response) {
                    if (response.isAuthorized != false) {
                        var table;
                        if ($.fn.dataTable.isDataTable('#tbl_prefixes')) {
                            table = $('#tbl_prefixes').DataTable();
                            table.clear();
                            table.rows.add(response).draw();
                        }
                        else
                        {
                            BindDataTable(response);
                        }
                    }
                    else
                    {
                        console.log("Access Denied!");
                    }
                },
                error: function (xhr) {
                    console.log("Failed to Load Prefixes! Error : " + xhr.statusText);
                }
            })
        }
        //#endregion

        //#region Bind DataTable
        var BindDataTable = function (response) {
            var table = $("#tbl_prefixes").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                "aaData": response,
                "aoColumns": [
                    { "mData": "pfx_branch_name" },
                    { "mData": "pfx_type" },
                    { "mData": "pfx_prefix" },                    
                    { "mData": "pfx_slno" }, 
                    { "mData": "pfx_change" }, 
                    { "mData": "pfx_madeby_name" },                    
                    {
                        "mData": "pfxId",
                        "className": 'text-center',
                        "orderable": false,
                        "searchable": false,
                        "render": function (pfxId, type, full, meta) {
                            var status = full.pfx_status;
                            return '<button type="button" data-bs-toggle="modal" data-bs-target="#prefixes_modal" onclick="editPrefix(' + full.pfxId + ')" class="btn btn-sm btn-outline-primary">Edit</button>';
                        }
                    },
                   
                ],
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Prefixes',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 7]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Prefixes to Excel!");
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Prefixes',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 7]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Prefixes to PDF!");
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Prefixes',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 7]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Prefixes to CSV!");
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Prefixes',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 7]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, node, config);
                            exportLogs("Employee Printed Prefixes!");
                        }
                    }
                ],
                order: [[3, 'desc']],
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api();

                    var intVal = function (i) {
                        return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                    };
                    var numFormat = $.fn.dataTable.render.number('\,', '.', 2, '').display;

                    total_gc = api.column(5).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(5).footer()).html(numFormat(total_gc));
                },
                language: {
                    searchPlaceholder: 'Search...',
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Prefix / Branch / Status</span>',
                    scrollX: "100%",
                    lengthMenu: '_MENU_ '
                }
            });
            table.buttons().container().appendTo('#tbl_prefixes_wrapper .col-md-6:eq(0)');
        }
        //#endregion

        //#region Add Prefix
        function addPrefix() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("CreatePrefixes", "Prefixes", new { area = "Masters" })",
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#prefixes_modal_body").html(data);
                    $("#prefixes_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Adding Prefix : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Edit Prefix
        function editPrefix(pfxId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("EditPrefixes", "Prefixes", new { area = "Masters" })?pfxId=" + pfxId,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#prefixes_modal_body").html(data);
                    $("#prefixes_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Adding Prefix : " + xhr.statusText);
                }
            });
        }
        //#endregion        

        //#region Export General Logs
        var exportLogs = function (desc) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportLogs", "AuditLogs", new { area = "Common" })?desc="+ desc,
                contentType: "application/json",
                dataType: "json"
            });
        }
        //#endregion

        //#region Alert Functions
        var alertPlaceholder = document.getElementById("PrefixAlert");
        function alert(e, t) {
            var l = document.createElement("div");
            l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
        }
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
        //#endregion
    </script>
}