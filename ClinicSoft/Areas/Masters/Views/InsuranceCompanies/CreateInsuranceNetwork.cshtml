@model BusinessEntities.Masters.InsuranceNetworks
<form id="form_Add_INW" class=" needs-validation" >
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12 mb-4 font-weight-semibold">
            <span class="text-danger" style="font-size:smaller">Required fields are marked with *</span>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12">
            <div class="form-group mb-3">
                <label class="form-label text-black">Title&nbsp;<span class="text-danger">*</span></label>
                @Html.TextAreaFor(m => m.is_title, new { @class = "form-control", @placeholder = "Enter your Network Title here...", @maxlength = "150" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Routine Dental Co.Pay</label>
                @Html.TextBoxFor(m => m.is_dcopay, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 2.50", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group mb-3">
                <label class="form-label text-black">&nbsp;</label>
                @Html.DropDownListFor(m => m.is_dcopay_type, new List<SelectListItem>
                {
                    new SelectListItem{ Text="Fixed", Value = "Fixed" },
                    new SelectListItem{ Text="%", Value = "%" },
                }, new { @class = "form-select select2", })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Routine Dental Co.Pay Limit</label>
                @Html.TextBoxFor(m => m.is_dcopay_limit, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 1.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">High Profile Dental Co.Pay</label>
                @Html.TextBoxFor(m => m.is_hp_dcopay, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 2.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group mb-3">
                <label class="form-label text-black">&nbsp;</label>
                @Html.DropDownListFor(m => m.is_hp_dcopay_type, new List<SelectListItem>
                {
                    new SelectListItem{ Text="Fixed", Value = "Fixed" },
                    new SelectListItem{ Text="%", Value = "%" },
                }, new { @class = "form-select select2", })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">High Profile Dental Co.Pay Limit</label>
                @Html.TextBoxFor(m => m.is_hp_dcopay_limit, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 2.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">In Patient Dental Co.Pay</label>
                @Html.TextBoxFor(m => m.is_ip_dcopay, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 2.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group mb-3">
                <label class="form-label text-black">&nbsp;</label>
                @Html.DropDownListFor(m => m.is_ip_dcopay_type, new List<SelectListItem>
                {
                    new SelectListItem{ Text="Fixed", Value = "Fixed" },
                    new SelectListItem{ Text="%", Value = "%" },
                }, new { @class = "form-select select2", })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">In Patient Dental Co.Pay Limit</label>
                @Html.TextBoxFor(m => m.is_ip_dcopay_limit, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 1.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Medical Co.Pay</label>
                @Html.TextBoxFor(m => m.is_copay, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 1.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group mb-3">
                <label class="form-label text-black">&nbsp;</label>
                @Html.DropDownListFor(m => m.is_copay_type, new List<SelectListItem>
                {
                    new SelectListItem{ Text="Fixed", Value = "Fixed" },
                    new SelectListItem{ Text="%", Value = "%" },
                }, new { @class = "form-select select2", })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Medical Co.Pay Limit</label>
                @Html.TextBoxFor(m => m.is_copay_limit, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 1.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">General Consultation Ded</label>
                @Html.TextBoxFor(m => m.is_cded, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 1.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group mb-3">
                <label class="form-label text-black">&nbsp;</label>
                @Html.DropDownListFor(m => m.is_cded_type, new List<SelectListItem>
                {
                    new SelectListItem{ Text="Fixed", Value = "Fixed" },
                    new SelectListItem{ Text="%", Value = "%" },
                }, new { @class = "form-select select2", })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">General Consultation Ded Limit</label>
                @Html.TextBoxFor(m => m.is_cded_limit, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 1.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Dental Consultaion Ded</label>
                @Html.TextBoxFor(m => m.is_dded, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 2.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group mb-3">
                <label class="form-label text-black">&nbsp;</label>
                @Html.DropDownListFor(m => m.is_dded_type, new List<SelectListItem>
                {
                    new SelectListItem{ Text="Fixed", Value = "Fixed" },
                    new SelectListItem{ Text="%", Value = "%" },
                }, new { @class = "form-select select2", })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Dental Consultaion Ded Limit</label>
                @Html.TextBoxFor(m => m.is_dded_limit, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 2.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Pharmacy Ded</label>
                @Html.TextBoxFor(m => m.is_pded, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 2.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group mb-3">
                <label class="form-label text-black">&nbsp;</label>
                @Html.DropDownListFor(m => m.is_pded_type, new List<SelectListItem>
                {
                    new SelectListItem{ Text="Fixed", Value = "Fixed" },
                    new SelectListItem{ Text="%", Value = "%" },
                }, new { @class = "form-select select2", })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Pharmacy Ded Limit</label>
                @Html.TextBoxFor(m => m.is_pded_limit, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 1.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Lab Ded</label>
                @Html.TextBoxFor(m => m.is_lded, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 2.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group mb-3">
                <label class="form-label text-black">&nbsp;</label>
                @Html.DropDownListFor(m => m.is_lded_type, new List<SelectListItem>
                {
                    new SelectListItem{ Text="Fixed", Value = "Fixed" },
                    new SelectListItem{ Text="%", Value = "%" },
                }, new { @class = "form-select select2", })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Lab Ded Limit</label>
                @Html.TextBoxFor(m => m.is_lded_limit, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 2.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Radiology Ded</label>
                @Html.TextBoxFor(m => m.is_rded, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 1.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group mb-3">
                <label class="form-label text-black">&nbsp;</label>
                @Html.DropDownListFor(m => m.is_rded_type, new List<SelectListItem>
                {
                    new SelectListItem{ Text="Fixed", Value = "Fixed" },
                    new SelectListItem{ Text="%", Value = "%" },
                }, new { @class = "form-select select2", })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Radiology Ded Limit</label>
                @Html.TextBoxFor(m => m.is_rded_limit, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 1.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Maternity Ded</label>
                @Html.TextBoxFor(m => m.is_mded, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 1.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group mb-3">
                <label class="form-label text-black">&nbsp;</label>
                @Html.DropDownListFor(m => m.is_mded_type, new List<SelectListItem>
                {
                    new SelectListItem{ Text="Fixed", Value = "Fixed" },
                    new SelectListItem{ Text="%", Value = "%" },
                }, new { @class = "form-select select2", })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Maternity Ded Limit</label>
                @Html.TextBoxFor(m => m.is_mded_limit, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 1.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
        <div class="col-sm-3 col-md-6 col-lg-2">
            <div class="form-group">
                <label class="form-label">Allowed Limit</label>
                @Html.TextBoxFor(m => m.is_allowed_limit1, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 1.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
            </div>
        </div>
    </div>
    <div class="row mt-2">
        <div id="errorCreate"></div>
        <div class="col-sm-12 col-md-12 col-lg-12 text-center">
            <div class="btn-list btn-animation">
                <button type="submit" class="btn btn-success" id="btn_Insert_Network">Create Insurance Network</button>
                <button type="button" class="btn btn-outline-danger me-1" id="btn_Close_Add">
                    Close
                </button>
            </div>
        </div>
    </div>
</form>
<script type="text/javascript">
    //#region Partial View Onload
    $(function () {
        $('#btn_Close_Add').click(function () {
            $('#inw_add').hide();
        });

        clearControls();
        validate();

        $("#is_dcopay_type").select2({
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Add_INW'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#is_hp_dcopay_type").select2({
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Add_INW'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#is_ip_dcopay_type").select2({
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Add_INW'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#is_copay_type").select2({
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Add_INW'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#is_cded_type").select2({
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Add_INW'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#is_dded_type").select2({
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Add_INW'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#is_pded_type").select2({
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Add_INW'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#is_lded_type").select2({
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Add_INW'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#is_rded_type").select2({
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Add_INW'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#is_mded_type").select2({
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Add_INW'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });
    });
    //#endregion

    //#region Validation Initialization
    var validate = function () {
        $("#form_Add_INW").validate({
            rules: {
                is_title: {
                    required: true
                }
            },
            messages: {
                is_title: {
                    required: "Please Enter Network Title!"
                }
            },
            highlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                } else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });

        $('#is_copay').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_dcopay').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_hp_dcopay').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_ip_dcopay').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_cded').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_dded').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_pded').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_lded').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_rded').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_mded').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_copay_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_dcopay_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_hp_dcopay_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_ip_dcopay_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_cded_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_dded_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_pded_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_lded_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_rded_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_mded_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100) {
                return false;
            }
        });
        $('#is_allowed_limit1').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseInt(inputValue) > 100000) {
                return false;
            }
        });

        $("#is_copay").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_copay").val("0");
            }
        });
        $("#is_dcopay").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_dcopay").val("0");
            }
        });
        $("#is_hp_dcopay").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_hp_dcopay").val("0");
            }
        });
        $("#is_ip_dcopay").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_ip_dcopay").val("0");
            }
        });
        $("#is_cded").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_cded").val("0");
            }
        });
        $("#is_dded").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_dded").val("0");
            }
        });
        $("#is_pded").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_pded").val("0");
            }
        });
        $("#is_lded").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_lded").val("0");
            }
        });
        $("#is_rded").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_rded").val("0");
            }
        });
        $("#is_mded").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_mded").val("0");
            }
        });
        $("#is_copay_limit").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_copay_limit").val("0");
            }
        });
        $("#is_dcopay_limit").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_dcopay_limit").val("0");
            }
        });
        $("#is_hp_dcopay_limit").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_hp_dcopay_limit").val("0");
            }
        });
        $("#is_ip_dcopay_limit").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_ip_dcopay_limit").val("0");
            }
        });
        $("#is_cded_limit").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_cded_limit").val("0");
            }
        });
        $("#is_dded_limit").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_dded_limit").val("0");
            }
        });
        $("#is_pded_limit").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_pded_limit").val("0");
            }
        });
        $("#is_lded_limit").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_lded_limit").val("0");
            }
        });
        $("#is_rded_limit").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_rded_limit").val("0");
            }
        });
        $("#is_mded_limit").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_mded_limit").val("0");
            }
        });
        $("#is_allowed_limit1").on('input', function () {
            var _val = $(this).val();
            if (_val == "" || _val == null || _val == undefined) {
                $("#is_allowed_limit1").val("0");
            }
        });
    }
    //#endregion

    //#region Validate Decimal
    function validateOneDecimalNumeric(el, evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        var number = el.value.split('.');
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        //just one dot
        if (number.length > 1 && charCode == 46) {
            return false;
        }
        //get the Current position
        var caratPos = getSelectionStart(el);
        var dotPos = el.value.indexOf(".");
        if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {
            return false;
        }
        return true;
    }
    function getSelectionStart(o) {
        if (o.createTextRange) {
            var r = document.selection.createRange().duplicate()
            r.moveEnd('character', o.value.length)
            if (r.text == '') return o.value.length
            return o.value.lastIndexOf(r.text)
        } else return o.selectionStart
    }
    //#endregion

    //#region Insert Network Button Click
    $('#btn_Insert_Network').on('click', function (e) {
        e.preventDefault();

        if ($("#form_Add_INW").valid()) {

            var _dataInsert = {
                "isId": 0,
                "is_title": $("#is_title").val().trim(),
                "is_copay": parseFloat($("#is_copay").val()),
                "is_dcopay": parseFloat($("#is_dcopay").val()),
                "is_hp_dcopay": parseFloat($("#is_hp_dcopay").val()),
                "is_ip_dcopay": parseFloat($("#is_ip_dcopay").val()),
                "is_cded": parseFloat($("#is_cded").val()),
                "is_dded": parseFloat($("#is_dded").val()),
                "is_pded": parseFloat($("#is_pded").val()),
                "is_lded": parseFloat($("#is_lded").val()),
                "is_rded": parseFloat($("#is_rded").val()),
                "is_mded": parseFloat($("#is_mded").val()),
                "is_copay_limit": parseFloat($("#is_copay_limit").val()),
                "is_dcopay_limit": parseFloat($("#is_dcopay_limit").val()),
                "is_hp_dcopay_limit": parseFloat($("#is_hp_dcopay_limit").val()),
                "is_ip_dcopay_limit": parseFloat($("#is_ip_dcopay_limit").val()),
                "is_cded_limit": parseFloat($("#is_cded_limit").val()),
                "is_dded_limit": parseFloat($("#is_dded_limit").val()),
                "is_pded_limit": parseFloat($("#is_pded_limit").val()),
                "is_lded_limit": parseFloat($("#is_lded_limit").val()),
                "is_rded_limit": parseFloat($("#is_rded_limit").val()),
                "is_mded_limit": parseFloat($("#is_mded_limit").val()),
                "is_allowed_limit1": parseFloat($("#is_allowed_limit1").val()),
                "is_copay_type": $("#is_copay_type").val(),
                "is_dcopay_type": $("#is_dcopay_type").val(),
                "is_hp_dcopay_type": $("#is_hp_dcopay_type").val(),
                "is_ip_dcopay_type": $("#is_ip_dcopay_type").val(),
                "is_cded_type": $("#is_cded_type").val(),
                "is_dded_type": $("#is_dded_type").val(),
                "is_pded_type": $("#is_pded_type").val(),
                "is_lded_type": $("#is_lded_type").val(),
                "is_rded_type": $("#is_rded_type").val(),
                "is_mded_type": $("#is_mded_type").val(),
                "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("InsertInsuranceNetwork", "InsuranceCompanies", new {area = "Masters" })",
                dataType: 'json',
                data: _dataInsert,
                success: function (data) {
                    var alertPlaceholder = document.getElementById("InNetworkAlert");
                    function alert(e, t) {
                        var l = document.createElement("div");
                        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                    }

                    if (data.isSuccess) {
                        if (data.isInserted) {
                            alert("<i class='fe fe-check-circle text-white'></i> Insurance Network Created Successfully!", "success");
                            $('#inw_add').hide();
                            clearControls();
                            GetInsuranceNetworks();
                            Timeout();
                            GetInsuranceCompanies();
                        }
                        else {
                            $("#is_title").val('');
                            let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                "<div class='alert alert-light-warning' role='alert'>" +
                                "<button type='button' class='btn-close text-warning' style='margin-bottom:-5px;' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                "<strong><i class='fa fa-exclamation-triangle text-warning'></i> Insurance Network Already Exists with the same Title!</strong><br/>" +
                                "</div></div>";
                            $("#errorCreate").html(html);
                        }
                    }
                    else {
                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                            "<div class='alert alert-light-danger' role='alert'>" +
                            "<button type='button' class='btn-close text-danger' style='margin-bottom:-5px;' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                            "<strong><i class='fa fa-ban text-danger'></i> Validation Error! Please validate before submitting.&nbsp;</strong><br/><ul>";

                        $.each(data.message, function (index, value) {
                            html += "<li><small>" + value + "</small><li>";
                            var elem = $("#" + index);
                            if (elem.hasClass("select2-hidden-accessible")) {
                                $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                            }
                            else {
                                $(elem).addClass(" is-invalid");
                            }

                            setTimeout(function () {
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                }
                                else {
                                    $(elem).removeClass("is-invalid");
                                }
                            }, 5000);
                        });

                        html += "</ul></div></div>";
                        $("#errorCreate").html(html);
                    }
                },
                error: function (xhr) {
                    $('#inw_add').hide();
                    Timeout();
                }
            });
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });
    //#endregion

    //#region Clear Controls
    var clearControls = function () {
        $("#is_title").val("");
        $("#is_copay_type").val("Fixed");
        $("#is_dcopay_type").val("Fixed");
        $("#is_hp_dcopay_type").val("Fixed");
        $("#is_ip_dcopay_type").val("Fixed");
        $("#is_cded_type").val("Fixed");
        $("#is_dded_type").val("Fixed");
        $("#is_pded_type").val("Fixed");
        $("#is_lded_type").val("Fixed");
        $("#is_rded_type").val("Fixed");
        $("#is_mded_type").val("Fixed");

        $("#is_copay").val(0);
        $("#is_dcopay").val(0);
        $("#is_hp_dcopay").val(0);
        $("#is_ip_dcopay").val(0);
        $("#is_cded").val(0);
        $("#is_dded").val(0);
        $("#is_pded").val(0);
        $("#is_lded").val(0);
        $("#is_rded").val(0);
        $("#is_mded").val(0);
        $("#is_copay_limit").val(0);
        $("#is_dcopay_limit").val(0);
        $("#is_hp_dcopay_limit").val(0);
        $("#is_ip_dcopay_limit").val(0);
        $("#is_cded_limit").val(0);
        $("#is_dded_limit").val(0);
        $("#is_pded_limit").val(0);
        $("#is_lded_limit").val(0);
        $("#is_rded_limit").val(0);
        $("#is_mded_limit").val(0);
        $("#is_allowed_limit1").val(0);
    }
    //#endregion
</script>