@model IEnumerable<BusinessEntities.Masters.Medicines>
@{
    ViewBag.Title = "Medicines";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary" data-lang-key="medicines">Medicines</h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list btn-animation">
            <button class="btn btn-outline-primary mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#searchFilter" aria-expanded="false" aria-controls="collapseExample">
                <i class="fa fa-filter"></i> Advanced Filters
            </button>
            <button type="button" class="btn btn-outline-dark" id="Import_DHA_Prescriptions"><i class="fa fa-cloud-download"></i> <span data-lang-key="Import DHA prescriptions">Import DHA Prescriptions</span></button>
            <button type="button" class="btn btn-outline-dark" id="Import_MOH_Prescriptions"><i class="fa fa-cloud-download"></i> <span data-lang-key="Import MOH prescriptions">Import MOH Prescriptions</span></button>          
            <a data-bs-toggle="modal" data-bs-target="#Medicine_modal" class="btn btn-secondary" onclick="addMedicine()" ><i class="mdi mdi-plus"></i>&nbsp;<span data-lang-key="add-medicine">Add Medicine</span></a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="MedicinesAlert"></div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card mb-0">
            <div class="collapse" id="searchFilter">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-6 col-md-3 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Branch<small>(es)</small></label>
                                <select id="select_branch" class="form-control mb-4" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-3 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Item Name / Code</label>
                                <input class="form-control" placeholder="Enter Item Name Or Code" id="text_name_code" autocomplete="off" maxlength="500" />
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-2 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Item Group</label>
                                <select id="select_item_group" class="form-control mb-4" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-2 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Item Location</label>
                                <select id="select_item_location" class="form-control mb-4" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-2 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Type</label>
                                <select id="select_types" class="form-control mb-4" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-sm-6 col-md-2 col-lg-2">
                                <div class="form-group mb-2">
                                    <label class="form-label font-weight-semibold">Status<small>(es)</small></label>
                                    <select id="select_status" class="form-control mb-4" multiple="multiple"></select>
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-2 col-lg-2">
                                <div class="form-group mb-2">
                                    <label class="form-label font-weight-semibold">&nbsp;</label>
                                    <button class="btn btn-primary mb-2" type="button" id="btnSearch">
                                        <i class="fa fa-search-plus"></i> Search
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div id="progress-loader" style="display:none;">
                    <div class="progress progress-sm mb-3">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-teal progress-bar-indeterminate"></div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tbl_medicines" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                <th class="border-bottom-0 font-weight-semibold text-white">#</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="code">Code</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="generic-name">Generic Name</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="status">Status</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="edit">Edit</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="delete">Delete</span>
                                </th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Medicine Modal -->
<div class="modal fade" id="medicine_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="medicine_modal_body">
        </div>
    </div>
</div>
<!-- End Medicine Modal -->

@section myScripts{
    <script type="text/javascript">
        //#region Page Load
        $(function () {
            load_branches();

            load_status();

            load_groups();

            load_locations();

            load_types();

            $('#select_status')[0].sumo.selectItem(["Active"]);

            BindDataTable(null);
        });
        //#endregion

        //#region Filter on Button Click
        $("#btnSearch").click(function (e) {
            e.preventDefault();

            GetMedicines();
        });
        //#endregion

        //#region Load Advanced Filters
        // Load branches
        var load_branches = function () {
            $('#select_branch').SumoSelect({
                placeholder: 'Select Branch(es)',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Enter here.',
                selectAll: true
            });

            $('#select_branch').html('');
            $('#select_branch')[0].sumo.reload();

            BranchList =@Html.Raw(Json.Encode(@ViewData["BranchList"]));

            $.each(BranchList, function (j) {
                $('#select_branch')[0].sumo.add(BranchList[j]["Value"], BranchList[j]["Text"]);
                $('#select_branch')[0].sumo.selectItem([BranchList[0]["Value"]]);
            });

            $('#select_branch')[0].sumo.reload();
        };
        // Load Item Groups
        var load_groups = function () {
            $('#select_item_group').SumoSelect({
                placeholder: 'Select Item Group(s)',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Enter here.',
                selectAll: true
            });

            $('#select_item_group').html('');
            $('#select_item_group')[0].sumo.reload();

            ItemGroupList =@Html.Raw(Json.Encode(@ViewData["ItemGroupList"]));

            $.each(ItemGroupList, function (j) {
                $('#select_item_group')[0].sumo.add(ItemGroupList[j]["Value"], ItemGroupList[j]["Text"]);
            });

            $('#select_item_group')[0].sumo.reload();
        };
        // Load Item Locations
        var load_locations = function () {
            $('#select_item_location').SumoSelect({
                placeholder: 'Select Item Location(s)',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Enter here.',
                selectAll: true
            });

            $('#select_item_location').html('');
            $('#select_item_location')[0].sumo.reload();
            ItemGroupList =@Html.Raw(Json.Encode(@ViewData["ItemLocationList"]));

            $.each(ItemGroupList, function (j) {
                $('#select_item_location')[0].sumo.add(ItemGroupList[j]["Value"], ItemGroupList[j]["Text"]);
            });

            $('#select_item_location')[0].sumo.reload();
        };
        // Load Status
        var load_status = function () {
            $('#select_status').SumoSelect({
                placeholder: 'Select Status(es)',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Enter here.',
                selectAll: true
            });

            $('#select_status').html('');
            $('#select_status')[0].sumo.reload();

            $('#select_status')[0].sumo.add("Active", "Active");
            $('#select_status')[0].sumo.add("Inactive", "Inactive");
            $('#select_status')[0].sumo.add("Deleted", "Deleted");

            $('#select_status')[0].sumo.reload();
        };
        // Load Item Types
        var load_types = function () {
            $('#select_types').SumoSelect({
                placeholder: 'Select Patient Class(es)',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Enter here.',
                selectAll: true
            });

            $('#select_types').html('');
            $('#select_types')[0].sumo.reload();

            $('#select_types')[0].sumo.add("Stock", "Stock");
            $('#select_types')[0].sumo.add("Service", "Service");
            $('#select_types')[0].sumo.add("Fixed", "Fixed Asset");
            $('#select_types')[0].sumo.reload();
        };
        //#endregion

        //#region Get All Medicines
        var GetMedicines = function () {
            var _data = {
                "item_branch": $('#select_branch').val().toString(),
                "item_type": $('#select_types').val().toString(),
                "item_name_code": $('#text_name_code').val(),
                "item_status": $('#select_status').val().toString(),
                "item_category": $('#select_item_group').val().toString(),
                "item_brand": '',
                "item_location": $('#select_item_location').val().toString()
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetMedicines", "Medicines", new { area = "Masters" })",
                dataType: 'json',
                data: _data,
                beforeSend: function () {
                    $('#progress-loader').show();
                },
                success: function (response) {
                    var table;

                    if ($.fn.dataTable.isDataTable('#tbl_medicines')) {
                        table = $('#tbl_medicines').DataTable();
                        table.clear();
                        table.rows.add(response).draw();
                    }
                    else {
                        BindDataTable(response);
                    }

                    $('#progress-loader').hide();
                },
                error: function (xhr) {
                    console.log(xhr);

                    $('#progress-loader').hide();
                }
            });
        }
        //#endregion

        //#region Bind DataTable
        var BindDataTable = function (response) {
            var table = $("#tbl_medicines").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "mData": "itemId",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-center",
                        "render": function (data, type, row, meta) {
                            let _index = (meta.row) + 1;
                            if (_index >= 10) {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>" + _index + "</a>";
                            }
                            else {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>0" + _index + "</a>";
                            }
                        }
                    },
                    { "mData": "item_code" },
                    {
                        "mData": "item_name",
                        "className": 'text-justify text-wrap'
                    },
                    {
                        "className": 'text-center',
                        "mData": "itemId",
                        "render": function (itemId, type, full, meta) {
                            var visible = full.ActionVisible;
                            var item_status = full.item_status;

                            if (visible === "True") {
                                if (item_status === "Active") {
                                    return '<button type="button" class="badge rounded-pill bg-success mt-2 border-success" style="width: 60px;" onclick="updateMedicinestatus(\'' + itemId + '\',\'' + item_status + '\')">' + item_status + '</button>'
                                }
                                else if (item_status === "Inactive") {
                                    return '<button type="button" class="badge rounded-pill bg-warning mt-2 border-warning" style="width: 60px;" onclick="updateMedicinestatus(\'' + itemId + '\',\'' + item_status + '\')">' + item_status + '</button>'
                                }
                                else if (item_status === "Deleted") {
                                    return '<button type="button" class="badge rounded-pill bg-danger mt-2 border-danger" style="width: 60px;" onclick="updateMedicinestatus(\'' + itemId + '\',\'' + item_status + '\')">' + item_status + '</button>'
                                }
                                else {
                                    return ''
                                }
                            }
                            else {
                                return '<span class="badge rounded-pill text-danger mt-2 border-danger">Allocated</span>'
                            }
                        }
                    },
                    {
                        "mData": "itemId",
                        "className": 'text-center',
                        "orderable": false,
                        "searchable": false,
                        "render": function (itemId, type, full, meta) {
                            var status = full.item_status;
                            var visible = full.ActionVisible;

                            if (status === "Active" && visible === "True") {
                                return '<button type="button" data-bs-toggle="modal" data-bs-target="#medicine_modal" onclick="editMedicine(' + full.itemId + ')" class="btn btn-sm btn-outline-primary">Edit</button>';
                            }
                            else {
                                return '';
                            }
                        }
                    },
                    {
                        "mData": "itemId",
                        "className": 'text-center',
                        "orderable": false,
                        "searchable": false,
                        "render": function (itemId, type, full, meta) {
                            var status = full.item_status;
                            var visible = full.ActionVisible;

                            if (status === "Active" && visible === "True") {
                                return '<button type="button" onclick="deleteMedicine(' + full.itemId + ')" class="btn btn-sm btn-outline-danger">Delete</button>';
                            }
                            else {
                                return '';
                            }
                        }
                    }
                ],
                order: [[0, 'asc']],
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Medicines',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Medicines to Excel!");
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Medicines',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Medicines to PDF!");
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Medicines',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Medicines to CSV!");
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Medicines',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, node, config);
                            exportLogs("Employee Printed Medicines!");
                        }
                    }
                ],
                language: {
                    searchPlaceholder: 'Search...',
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Branch / Medicine / Status</span>',
                    lengthMenu: '_MENU_',
                    scrollX: "100%"
                }
            });

            table.buttons().container().appendTo('#tbl_medicines_wrapper .col-md-6:eq(0)');
        }
        //#endregion

        //#region Add Medicine
        function addMedicine() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("CreateMedicine", "Medicines", new { area = "Masters" })",
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#medicine_modal_body").html(data);
                    $("#medicine_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Adding Medicine : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Edit Medicine
        function editMedicine(itemId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("EditMedicine", "Medicines", new { area = "Masters" })?itemId=" + itemId,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#medicine_modal_body").html(data);
                    $("#medicine_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Editing Medicine : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Update Medicine Status
        var updateMedicinestatus = function (itemId, item_status) {
            item_status = (item_status == "Deleted" || item_status == "Inactive") ? "Active" : "Inactive"

            Swal.fire({
                title: "Are you sure you want to change status ?",
                text: "This action will change the status of the selected Medicine!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: "@Url.Action("UpdateMedicinestatus", "Medicines", new { area = "Masters" })?itemId=" + itemId + "&item_status=" + item_status,
                        type: "POST",
                        dataType: "json",
                        success: function (data) {
                            console.log(data);
                            if (data.isAuthorized) {
                                if (data.success) {
                                    GetMedicines();
                                    Swal.fire({
                                        title: "Success!",
                                        text: data.message,
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        title: "Action Forbidden!",
                                        text: data.message,
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to change Medicine Status!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            console.log(xhr);
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Update Medicine Status! Please refresh the Page and Try Again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            })
                        }
                    });
                }
            });
        }
        //#endregion

        //#region Delete Medicine
        var deleteMedicine = function (itemId) {
            Swal.fire({
                title: "Are you sure you want to delete this Medicine ?",
                text: "This action will delete this Medicine!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: '@Url.Action("DeleteMedicinestatus", "Medicines", new { area = "Masters" })?itemId=' + itemId+'&item_status=Deleted',
                        type: "POST",
                        dataType: "json",
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.success) {
                                    GetMedicines();
                                    Swal.fire({
                                        title: "Success!",
                                        text: data.message,
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        title: "Action Forbidden!",
                                        text: data.message,
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to delete Medicines!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Delete Medicine! Please refresh the Page and Try Again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    });
                }
            });
        }
        //#endregion

        //#region Insert DHA Prescriptions Click
        $('#Import_DHA_Prescriptions').on('click', function (e) {
            e.preventDefault();

            $('#Import_DHA_Prescriptions').removeClass("btn btn-outline-dark");
            $('#Import_DHA_Prescriptions').addClass("btn btn-dark btn-loaders btn-icon disabled");
            $('#Import_MOH_Prescriptions').addClass("disabled");
            $('#Import_DHA_Prescriptions').html('<i class="fa fa-cloud-download"></i> Importing...');

            $.ajax({
                type: "Post",
                url: "@Url.Action("InsertDHA_Prescriptions", "Medicines", new { area = "Masters" })",
                dataType: 'json',
                success: function (data) {
                    $('#Import_DHA_Prescriptions').removeClass("btn btn-dark btn-loaders btn-icon text-dark disabled");
                    $('#Import_DHA_Prescriptions').addClass("btn btn-outline-dark");
                    $('#Import_MOH_Prescriptions').removeClass("disabled");
                    $('#Import_DHA_Prescriptions').html('<i class="fa fa-cloud-download"></i> <span data-lang-key="Import DHA prescriptions">Import DHA Prescriptions</span>');

                    if (data.isAuthorized) {
                        if (data.success) {
                            alert("<i class='fe fe-check-circle text-white'></i> Medicines Successfully Imported from DHA!", "success");

                            Timeout();
                        }
                        else {
                            console.log(data.message);
                        }
                    }
                },
                error: function (xhr) {
                    $('#Import_DHA_Prescriptions').removeClass("btn btn-dark btn-loaders btn-icon text-dark disabled");
                    $('#Import_DHA_Prescriptions').addClass("btn btn-outline-dark");
                    $('#Import_MOH_Prescriptions').removeClass("disabled");
                    $('#Import_DHA_Prescriptions').html('<i class="fa fa-cloud-download"></i> <span data-lang-key="Import DHA prescriptions">Import DHA Prescriptions</span>');

                    console.log(xhr);
                }
            });
        });
        //#endregion

        //#region Insert MOH Prescriptions Click
        $('#Import_MOH_Prescriptions').on('click', function (e) {
            e.preventDefault();

            $('#Import_MOH_Prescriptions').removeClass("btn btn-outline-dark");
            $('#Import_MOH_Prescriptions').addClass("btn btn-dark btn-loaders btn-icon disabled");
            $('#Import_DHA_Prescriptions').addClass("disabled");
            $('#Import_MOH_Prescriptions').html('<i class="fa fa-cloud-download"></i> Importing...');

            $.ajax({
                type: "Post",
                url: "@Url.Action("InsertMOH_Prescriptions", "Medicines", new { area = "Masters" })",
                dataType: 'json',
                success: function (data) {
                    $('#Import_MOH_Prescriptions').removeClass("btn btn-dark btn-loaders btn-icon text-dark disabled");
                    $('#Import_MOH_Prescriptions').addClass("btn btn-outline-dark");
                    $('#Import_DHA_Prescriptions').removeClass("disabled");
                    $('#Import_MOH_Prescriptions').html('<i class="fa fa-cloud-download"></i> <span data-lang-key="Import MOH prescriptions">Import MOH Prescriptions</span>');

                    if (data.isAuthorized) {
                        if (data.success) {
                            alert("<i class='fe fe-check-circle text-white'></i> Medicines Successfully Imported from MOH!", "success");

                            Timeout();
                        }
                        else {
                            console.log(data.message);
                        }
                    }
                },
                error: function (xhr) {
                    $('#Import_MOH_Prescriptions').removeClass("btn btn-dark btn-loaders btn-icon text-dark disabled");
                    $('#Import_MOH_Prescriptions').addClass("btn btn-outline-dark");
                    $('#Import_DHA_Prescriptions').removeClass("disabled");
                    $('#Import_MOH_Prescriptions').html('<i class="fa fa-cloud-download"></i> <span data-lang-key="Import MOH prescriptions">Import MOH Prescriptions</span>');

                    console.log(xhr);
                }
            });
        });
        //#endregion

        //#region Export General Logs
        var exportLogs = function (desc) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportLogs", "AuditLogs", new { area = "Common" })?desc="+ desc,
                contentType: "application/json",
                dataType: "json"
            });
        }
        //#endregion

        //#region Alert Timeout
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }

        var alertPlaceholder = document.getElementById("MedicinesAlert");

        function alert(e, t) {
            var l = document.createElement("div");
            l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
        }
        //#endregion

        //#region Resize Datatable
        function resizedt() {
            setTimeout(function () {
                $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
            }, 350);
        }
        //#endregion

        //#region Alert Timeout
        var alertPlaceholder = document.getElementById("MedicinesAlert");
        function alert(e, t) {
            var l = document.createElement("div");
            l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close"><span aria-hidden="true">&times;</span></button></div>', alertPlaceholder.append(l)
        }

        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
        function error_timeout(_id) {
            setTimeout(function () {
                $(".has-error").removeClass("has-error");
                $(".error").removeClass("error");
                $("#" + _id + "-error").text("");
            }, 5200);
        }
        //#endregion
    </script>
}

