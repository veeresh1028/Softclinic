@model BusinessEntities.Masters.Employees
<!-- INTERNAL telephoneinput css-->
<link href="~/assets/plugins/telephoneinput2/intlTelInput.css" rel="stylesheet" />
<!-- Color Picker css-->
<link href="~/assets/plugins/date-picker/date-picker.css" rel="stylesheet" />
<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold">Update Employee</h5>
    <button type="button" class="btn-close btnCloseUpdate" data-bs-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body p-4">
    <form id="form_Update_Employee" enctype="multipart/form-data" >
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.empId)
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12 mb-4 font-weight-semibold">
                <span class="text-danger" style="font-size:smaller">Required fields are marked with *</span>
            </div>
        </div>
        <div class="row mt-2">
            <div class="panel-group accordion-panel" role="tablist" aria-multiselectable="true">
                <div class="panel panel-default active">
                    <div class="panel-heading bg-azure-lightest" role="tab" id="heading5">
                        <h4 class="panel-title">
                            <a role="button" data-bs-toggle="collapse" data-parent="#accordion1" aria-expanded="true" aria-controls="collapse5">
                                Employee Information
                                <span class="float-end"><i class="fe fe-chevrons-down"></i></span>
                            </a>
                        </h4>
                    </div>
                    <div id="collapse5" class="panel-collapse collapse show" role="tabpanel" aria-labelledby="heading5">
                        <div class="col mt-5">
                            <div class="row">
                                <div class="col-sm-6 col-md-6 col-lg-4">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Branch&nbsp;<span class="text-danger">*</span></label>
                                        @Html.DropDownListFor(m => m.emp_branch, new SelectList(Model.BranchList, "id", "text"), "Please Select", new { @class = "form-select select2", @id = "uemp_branch" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Code&nbsp;</label>
                                        @Html.TextBoxFor(m => m.emp_fax, new { @class = "form-control", @placeholder = "Ex : DOC-813", @id = "uemp_fax", @maxlength = "20" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">First Name&nbsp;<span class="text-danger">*</span></label>
                                        @Html.TextBoxFor(m => m.emp_name, new { @class = "form-control", @placeholder = "Ex : Shawn", @id = "uemp_name", @maxlength = "50" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Last Name&nbsp;<span class="text-danger">*</span></label>
                                        @Html.TextBoxFor(m => m.emp_lname, new { @class = "form-control", @placeholder = "Ex : Dias", @id = "uemp_lname", @maxlength = "50" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Gender&nbsp;</label>
                                        @Html.DropDownListFor(m => m.emp_gender, new List<SelectListItem>
                                        {
                                            new SelectListItem{ Text="Male", Value = "Male" },
                                            new SelectListItem{ Text="Female", Value = "Female" },
                                        }, "Select Gender", new { @class = "form-select select2", @id = "uemp_gender" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Department&nbsp;<span class="text-danger">*</span></label>
                                        @Html.DropDownListFor(m => m.emp_dept, new SelectList(Model.DepartmentList, "deptId", "department"), "Please Select", new { @class = "form-select select2", @id = "uemp_dept" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Designation&nbsp;<span class="text-danger">*</span></label>
                                        @Html.DropDownListFor(m => m.emp_desig, new SelectList(Model.DesignationList, "id", "text"), "Please Select", new { @class = "form-select select2", @id = "uemp_desig" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Nationality&nbsp;<span class="text-danger">*</span></label>
                                        @Html.DropDownListFor(m => m.emp_nat, new SelectList(Model.NationalityList, "id", "text"), "Please Select", new { @class = "form-select select2", @id = "uemp_nat" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">License</label>
                                        @Html.TextBoxFor(m => m.emp_license, new { @class = "form-control", @placeholder = "Ex : G549LI324", @id = "uemp_license", @maxlength = "14" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group">
                                        <label class="form-label">Mobile&nbsp;<span class="text-danger">*</span></label>
                                        <div class="input-group">
                                            <div class="d-flex">
                                                @Html.TextBoxFor(m => m.emp_mob, new { @type = "tel", @class = "form-control mb-2", @style = "width:100%;", @id = "uemp_mob" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group">
                                        <label class="form-label">Telephone #&nbsp;</label>
                                        <div class="input-group">
                                            <div class="d-flex">
                                                @Html.TextBoxFor(m => m.emp_tel, new { @type = "tel", @class = "form-control mb-2", @style = "width:100%;", @id = "uemp_tel" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group">
                                        <label class="form-label">EMID #&nbsp;</label>
                                        @Html.TextBoxFor(m => m.emp_address, new { @class = "form-control mb-2", @placeholder = "Ex:784-1991-1234567-8", @id = "uemp_address", @maxlength = "18" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group">
                                        <label class="form-label">Email&nbsp;<span class="text-danger">*</span></label>
                                        @Html.TextBoxFor(m => m.emp_email, new { @class = "form-control mb-2", @placeholder = "Ex : username@domain.com", @type = "email", @id = "uemp_email", @maxlength = "60" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Teeth&nbsp;</label>
                                        @Html.DropDownListFor(m => m.emp_teeth, new List<SelectListItem>
                                        {
                                            new SelectListItem{ Text="Universal", Value = "Universal" },
                                            new SelectListItem{ Text="International", Value = "International" },
                                            new SelectListItem{ Text="British", Value = "British" },
                                        }, "Select Teeth", new { @class = "form-select select2", @id = "uemp_teeth" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Speciality&nbsp;</label>
                                        @Html.DropDownListFor(m => m.emp_speciality, new List<SelectListItem> { }, "Select Speciality", new { @class = "form-select mb-2 select2", @id = "uemp_speciality" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">DHA Speciality&nbsp;</label>
                                        @Html.DropDownListFor(m => m.emp_dha_speciality, new List<SelectListItem> { }, "Select DHA Speciality", new { @class = "form-select mb-2 select2", @id = "uemp_dha_speciality" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Color Code&nbsp;</label>
                                        @Html.TextBoxFor(m => m.emp_color, new { @placeholder = "Select Color", @type = "text", @id = "uemp_color" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2 d-none" id="doctorEditView">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Scheduler&nbsp;<span class="text-danger">*</span></label>
                                        @Html.DropDownListFor(m => m.emp_scheduler, new List<SelectListItem>
                                        {
                                            new SelectListItem{ Text="NO", Value = "0" },
                                            new SelectListItem{ Text="YES", Value = "1" }
                                        }, new { @class = "form-select select2", @id = "uemp_scheduler" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group">
                                        <label class="form-label">Disc. Allowed %</label>
                                        @Html.TextBoxFor(m => m.emp_disc_allowed, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 10.00", @min = 0, @max = 100, @onkeypress = "return validateOneDecimalNumeric(this,event);", @id = "uemp_disc_allowed" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group">
                                        <label class="form-label">Sign&nbsp;<a style="cursor:pointer" id="viewSign"><i class="fe fe-info text-info fs-14" title="File should be less than 5 MB (Allowed Formats : .jpg/png/gif | Resolution : 500X500)"></i></a></label>
                                        <div class="input-group file-browser">
                                            @Html.TextBoxFor(m => m.emp_sign, new { @class = "form-control browse-file", @placeholder = "Choose", @id = "uemp_sign", @readonly = "readonly", @title = "File should be less than 5 MB (Allowed Formats : .jpg/.png/.gif | Resolution : 500X500)" })
                                            <label class="input-group-text btn btn-primary">
                                                Browse <input type="file" id="usign" name="emp_sign" class="file-browserinput" style="display: none;" accept=".png,.jpg,.jpeg,.gif" onchange="document.getElementById('uemp_sign').value = this.value.split('\\').pop().split('/').pop()">
                                            </label>
                                        </div>
                                        <div class="d-none" id="Sview">
                                            <img class="shadow-lg img-responsive" src="~/images/EMPLOYEE_SIGNS/@Model.emp_sign" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group">
                                        <label class="form-label">Photo&nbsp;<a style="cursor:pointer" id="viewPhoto"><i class="fe fe-info text-info fs-14" title="File should be less than 5 MB (Allowed Formats : .jpg/.png/.gif | Resolution : 500X500)"></i></a></label>
                                        <div class="input-group file-browser">
                                            @Html.TextBoxFor(m => m.emp_photo, new { @class = "form-control browse-file", @placeholder = "Choose", @id = "uemp_photo", @readonly = "readonly", @title = "File should be less than 5 MB (Allowed Formats : .jpg/.png/.gif | Resolution : 500X500)" })
                                            <label class="input-group-text btn btn-primary">
                                                Browse <input type="file" id="uphoto" name="emp_photo" class="file-browserinput" style="display: none;" accept=".png,.jpg,.jpeg,.gif" onchange="document.getElementById('uemp_photo').value = this.value.split('\\').pop().split('/').pop()">
                                            </label>
                                        </div>
                                        <div class="d-none" id="Pview">
                                            <img class="shadow-lg img-responsive" src="~/images/employee_photos/@Model.emp_photo" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group">
                                        <label class="form-label">EMID Front&nbsp;<a style="cursor:pointer" id="viewEFront"><i class="fe fe-info text-info fs-14" title="File should be less than 5 MB (Allowed Formats : .jpg/.png/.gif | Resolution : 500X500)"></i></a></label>
                                        <div class="input-group file-browser">
                                            @Html.TextBoxFor(m => m.emp_emid, new { @class = "form-control browse-file", @placeholder = "Choose EMID Front", @id = "uemp_emid", @readonly = "readonly", @title = "File should be less than 5 MB (Allowed Formats : .jpg/.png/.gif | Resolution : 500X500)" })
                                            <label class="input-group-text btn btn-primary">
                                                Browse <input type="file" id="uemid" name="emp_emid" class="file-browserinput" style="display: none;" accept=".png,.jpg,.jpeg,.gif" onchange="document.getElementById('uemp_emid').value = this.value.split('\\').pop().split('/').pop()">
                                            </label>
                                        </div>
                                        <div class="d-none" id="EFview">
                                            <img class="shadow-lg img-responsive" src="~/images/EMPLOYEE_EMID/@Model.emp_emid" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group">
                                        <label class="form-label">EMID Back&nbsp;<a style="cursor:pointer" id="viewEBack"><i class="fe fe-info text-info fs-14" title="File should be less than 5 MB (Allowed Formats : .jpg/.png/.gif | Resolution : 500X500)"></i></a></label>
                                        <div class="input-group file-browser">
                                            @Html.TextBoxFor(m => m.emp_stamp, new { @class = "form-control browse-file", @placeholder = "Choose EMID Back", @id = "uemp_stamp", @readonly = "readonly", @title = "File should be less than 5 MB (Allowed Formats : .jpg/.png/.gif | Resolution : 500X500)" })
                                            <label class="input-group-text btn btn-primary">
                                                Browse <input type="file" id="ustamp" name="emp_stamp" class="file-browserinput" style="display: none;" accept=".png,.jpg,.jpeg,.gif" onchange="document.getElementById('uemp_stamp').value = this.value.split('\\').pop().split('/').pop()">
                                            </label>
                                        </div>
                                        <div class="d-none" id="EBview">
                                            <img class="shadow-lg img-responsive" src="~/images/EMPLOYEE_EMID/@Model.emp_stamp" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label text-black">WhatsApp Instance ID&nbsp;</label>
                                        @Html.TextBoxFor(m => m.emp_whatsappId, new { @class = "form-control", @placeholder = "Ex : 649xxxxx97", @maxlength = "50", @id = "uemp_whatsappId" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label text-black">WhatsApp Access Token&nbsp;</label>
                                        @Html.TextBoxFor(m => m.emp_whatsappToken, new { @class = "form-control", @placeholder = "Ex : xxxxF1xxxxx", @maxlength = "60", @id = "uemp_whatsappToken" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Password Validity</label>
                                        @Html.DropDownListFor(m => m.emp_pwd_validity, new List<SelectListItem>
                                        {
                                            new SelectListItem{ Value="30", Text="30"},
                                            new SelectListItem{ Value="60", Text="60" },
                                            new SelectListItem{ Value="90", Text="90" ,Selected=true},
                                             new SelectListItem{ Value="120", Text="120" },
                                        }, "Please Select", new { @class = "form-control select2 mb-2", @id = "uemp_pwd_validity" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-3">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Software Access From Outside Facility</label>
                                        @Html.DropDownListFor(m => m.emp_outside_access, new List<SelectListItem>
                                        {
                                            new SelectListItem{ Value="Allowed", Text="Allowed"},
                                            new SelectListItem{ Value="Not Allowed", Text="Not Allowed"}
                                        }, new { @class = "form-control select2 mb-2", @id = "uemp_outside_access" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default mt-2 active">
                    <div class="panel-heading" role="tab" id="heading6">
                        <h4 class="panel-title">
                            <a class="collapsed" role="button" data-bs-toggle="collapse" data-parent="#accordion1" aria-expanded="false" aria-controls="collapse6">
                                ClinicSoft Login Information
                                <span class="float-end"><i class="fe fe-chevrons-down"></i></span>
                            </a>
                        </h4>
                    </div>
                    <div id="collapse6" class="panel-collapse collapse show" role="tabpanel" aria-labelledby="heading6">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-sm-6 col-md-4 col-lg-4">
                                    <div class="form-group mb-3">
                                        <label class="form-label text-black">Employee Working Branch(es)&nbsp;<span class="text-danger">*</span></label>
                                        @Html.DropDownListFor(m => m.emp_work_branch, new SelectList(Model.BranchList, "id", "text"), new { @class = "form-control mb-3", @multiple = "multiple", @id = "uemp_work_branch" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-4">
                                    <div class="form-group mb-3">
                                        <label class="form-label text-black">Username&nbsp;<span class="text-danger">*</span> </label>
                                        <div class="input-icon">
                                            <span class="input-icon-addon text-primary">
                                                <i class="fe fe-user fs-14"></i>
                                            </span>
                                            @Html.TextBoxFor(m => m.emp_login, new { @class = "form-control", @placeholder = "Enter Username", @id = "uemp_login", @maxlength = "14" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default mt-2">
                    <div class="panel-heading " role="tab" id="heading7">
                        <h4 class="panel-title">
                            <a role="button" data-bs-toggle="collapse" data-parent="#accordion1" href="#collapse7" aria-expanded="true" aria-controls="collapse7">
                                <span class="mt-5">DHA / DOH / MOH Login Information</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>Malaffi / Nabidh / Riayati Flag</span>
                                <span class="float-end"><i class="fe fe-chevrons-down"></i></span>
                            </a>
                        </h4>
                    </div>
                    <div id="collapse7" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading7">
                        <div class="col mt-5">
                            <div class="row">
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label text-black">DHA / DOH  Username&nbsp;</label>
                                        <div class="input-icon">
                                            <span class="input-icon-addon text-primary">
                                                <i class="fe fe-user fs-14"></i>
                                            </span>
                                            @Html.TextBoxFor(m => m.emp_dha_login, new { @class = "form-control", @placeholder = "Enter DHA / DOH  Username", @id = "uemp_dha_login", @maxlength = "10" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label text-black">DHA / DOH  Password&nbsp;</label>
                                        <div class="input-icon">
                                            <span class="input-icon-addon text-primary">
                                                <i class="fe fe-eye-off fs-14"></i>
                                            </span>
                                            @Html.TextBoxFor(m => m.emp_dha_pass, new { @class = "form-control", @placeholder = "Enter DHA / DOH  Password", @type = "password", @id = "uemp_dha_pass", @maxlength = "15" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label text-black"> MOH Username&nbsp;</label>
                                        <div class="input-icon">
                                            <span class="input-icon-addon text-primary">
                                                <i class="fe fe-user fs-14"></i>
                                            </span>
                                            @Html.TextBoxFor(m => m.emp_moh_login, new { @class = "form-control", @placeholder = "Enter  MOH Username", @maxlength = "10", @id = "uemp_moh_login" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label text-black"> MOH Password&nbsp;</label>
                                        <div class="input-icon">
                                            <span class="input-icon-addon text-primary">
                                                <i class="fe fe-eye-off fs-14"></i>
                                            </span>
                                            @Html.TextBoxFor(m => m.emp_moh_pass, new { @class = "form-control", @placeholder = "Enter  MOH Password", @type = "password", @maxlength = "15", @id = "uemp_moh_pass" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-4 col-lg-2">
                                    <div class="form-group mb-3">
                                        <label class="form-label">Sync (Malaffi / Nabidh / Riayati)</label>
                                        @Html.DropDownListFor(m => m.emp_flag, new List<SelectListItem>
                                        {
                                            new SelectListItem{ Value="Yes", Text="Yes"},
                                            new SelectListItem{ Value="No", Text="No" ,Selected=true},
                                        }, "Please Select", new { @class = "form-control select2 mb-2", @id = "uemp_flag" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default mt-2">
                    <div class="panel-heading" role="tab" id="heading8">
                        <h4 class="panel-title">
                            <a class="collapsed" role="button" data-bs-toggle="collapse" data-parent="#accordion1" href="#collapse8" aria-expanded="false" aria-controls="collapse8">
                                Commission Information
                                <span class="float-end"><i class="fe fe-chevrons-down"></i></span>
                            </a>
                        </h4>
                    </div>
                    <div id="collapse8" class="panel-collapse collapse" role="tabpanel" aria-labelledby="heading8">
                        <div class="panel-body">
                            <div class="panel-body ">
                                <div class="row">
                                    <div class="col-sm-6 col-md-4 col-lg-2">
                                        <div class="form-group">
                                            <label class="form-label">Consultation %</label>
                                            @Html.TextBoxFor(m => m.emp_consultation_commi, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 0.00", @min = 0, @man = 100, @onkeypress = "return validateOneDecimalNumeric(this,event);", @id = "uemp_consultation_commi" })
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-md-4 col-lg-2">
                                        <div class="form-group">
                                            <label class="form-label">Procedure %</label>
                                            @Html.TextBoxFor(m => m.emp_procedure_commi, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 0.00", @min = 0, @man = 100, @onkeypress = "return validateOneDecimalNumeric(this,event);", @id = "uemp_procedure_commi" })
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-md-4 col-lg-2">
                                        <div class="form-group">
                                            <label class="form-label">Lab %</label>
                                            @Html.TextBoxFor(m => m.emp_lab_commi, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 0.00", @min = 0, @man = 100, @onkeypress = "return validateOneDecimalNumeric(this,event);", @id = "uemp_lab_commi" })
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-md-4 col-lg-2">
                                        <div class="form-group">
                                            <label class="form-label">Radiology %</label>
                                            @Html.TextBoxFor(m => m.emp_rad_commi, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 0.00", @min = 0, @man = 100, @onkeypress = "return validateOneDecimalNumeric(this,event);", @id = "uemp_rad_commi" })
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-md-4 col-lg-2">
                                        <div class="form-group">
                                            <label class="form-label">Pharmacy %</label>
                                            @Html.TextBoxFor(m => m.emp_pha_commi, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 0.00", @min = 0, @man = 100, @onkeypress = "return validateOneDecimalNumeric(this,event);", @id = "uemp_pha_commi" })
                                        </div>
                                    </div>
                                    <div class="col-sm-6 col-md-4 col-lg-2">
                                        <div class="form-group">
                                            <label class="form-label">Maternity %</label>
                                            @Html.TextBoxFor(m => m.emp_met_commi, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 0.00", @min = 0, @man = 100, @onkeypress = "return validateOneDecimalNumeric(this,event);", @id = "uemp_met_commi" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-sm-12 col-md-12 col-lg-12 d-flex justify-content-center" id="errorEdit"></div>
            <div class="col-sm-12 col-md-12 col-lg-12 text-center">
                <div class="btn-list btn-animation">
                    <button type="submit" class="btn btn-warning" id="btn_Update_Emp">Save Changes</button>
                    <button type="button" class="btn btn-outline-danger me-1 btnCloseUpdate" data-bs-dismiss="modal">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>
<!--INTERNAL telephoneinput js-->
<script src="~/assets/plugins/telephoneinput2/intlTelInput.min.js"></script>
<script src="~/assets/plugins/telephoneinput2/intlTelInput-jquery.min.js"></script>
<!-- Color Picker js-->
<script src="~/assets/plugins/spectrum-colorpicker/spectrum.js"></script>
<style>
    .sp-container {
        z-index: 99999999 !important;
    }
</style>
<script type="text/javascript">

    //#region Page Load
    $(function () {
        $('#uemp_address').mask('999-9999-9999999-9');

        $("#uemp_branch").select2({
            placeholder: 'Select Branch',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 10,
            dropdownParent: $('#form_Update_Employee'),
            escapeMarkup: function (markup) {
                return markup;
            }

        });

        $('#uemp_work_branch').SumoSelect({
            placeholder: "Select Branch(es)",
            csvDispCount: 3,
            okCancelInMulti: true,
            isClickAwayOk: true,
            search: true,
            searchText: 'Enter here.',
            selectAll: true,
            Selection: false
        });

        $("#uemp_gender").select2({
            placeholder: 'Select Gender',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Update_Employee'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#uemp_dept").select2({
            placeholder: 'Select Department',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 10,
            dropdownParent: $('#form_Update_Employee'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#uemp_scheduler").select2({
            placeholder: 'Please Select',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Update_Employee'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#uemp_desig").select2({
            placeholder: 'Select Designation',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 10,
            dropdownParent: $('#form_Update_Employee'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $('#uemp_desig').on('select2:select', function (e) {
            var _data = e.params.data.text;

            if (_data == "Doctor") {
                $("#doctorEditView").removeClass("d-none");
            }
            else {
                if (!$("#doctorEditView").hasClass("d-none")) {
                    $("#doctorEditView").addClass("d-none");
                }
            }
        });

        $("#uemp_nat").select2({
            placeholder: 'Select Nationality',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 10,
            dropdownParent: $('#form_Update_Employee'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#uemp_teeth").select2({
            placeholder: 'Select Teeth',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Update_Employee'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $('#uemp_color').spectrum({
            type: "flat",
            showInput: true,
            preferredFormat: "hex",
            color: '#0061da'
        });
        $('#uemp_flag').select2({
            minimumResultsForSearch: '',
            dropdownParent: $('#form_Update_Employee'),
            width: '100%'
        });
        $('#uemp_speciality').select2({
            minimumResultsForSearch: '',
            dropdownParent: $('#form_Update_Employee'),
            width: '100%'
        });
        $('#uemp_pwd_validity').select2({
            minimumResultsForSearch: '',
            dropdownParent: $('#form_Update_Employee'),
            width: '100%'
        });

        $('#uemp_outside_access').select2({
            minimumResultsForSearch: '',
            dropdownParent: $('#form_Update_Employee'),
            width: '100%'
        });


        load_speciality();
        load_dhaspeciality();
        validation();
        mobileFieldInititalization();

        //$("#uemp_outside_access").val('@Model.emp_outside_access').trigger('change');

        // Set Colorpicker Value
        $("#uemp_color").spectrum("set", "@Model.emp_color");

        // Set Work Branches Value(s)
        var data = "@Model.emp_work_branch";
        var arr = data.split(",");
        $.each(arr, function (index, value) {
            $('#uemp_work_branch')[0].sumo.selectItem(value);
        });
    });
    //#endregion

    //#region International Telephone Input
    var mobileFieldInititalization = function () {
        @{
            string mob = string.Empty;
            string tel = string.Empty;
            if (Model.emp_mob.Contains("971")) {
                mob = "+" + Model.emp_mob;
            }
            else
            {
                mob = "+971" + Model.emp_mob;
            }
            if (Model.emp_tel.Contains("971")) {
                tel = "+" + Model.emp_tel;
            }
            else
            {
                tel = "+971" + Model.emp_tel;
            }
        }
        $("#uemp_mob").intlTelInput({
        initialCountry: "auto",
            geoIpLookup: callback => {
                fetch("https://ipapi.co/json")
                    .then(res => res.json())
                    .then(data => {
                        callback(data.country_code);

                        $("#uemp_mob").intlTelInput("setNumber", "@mob");
                    })
                    .catch(() => callback("ae"));

            },
            separateDialCode: true,
            numberType: "MOBILE",
            allowExtensions: true,
            autoPlaceholder: "polite",
            preventInvalidNumbers: true,
            formatOnDisplay: true,
            autoInsertDialCode: true,
            preferredCountries: ["ae"],
            //allowDropdown: false,
            utilsScript: "../../assets/plugins/telephoneinput2/utils.js"
        });

        $("#uemp_tel").intlTelInput({
            initialCountry: "auto",
            geoIpLookup: callback => {
                fetch("https://ipapi.co/json")
                    .then(res => res.json())
                    .then(data => {
                        callback(data.country_code);
                        $("#uemp_mob").intlTelInput("setNumber", "@tel");
                    })
                    .catch(() => callback("ae"));
            },
            separateDialCode: true,
            allowExtensions: true,
            autoPlaceholder: "polite",
            preventInvalidNumbers: true,
            formatOnDisplay: true,
            autoInsertDialCode: true,
            preferredCountries: ["ae"],
            //allowDropdown: false,
            utilsScript: "../../assets/plugins/telephoneinput2/utils.js"
        });

        setTimeout(function () {
            $("#uemp_tel").intlTelInput("setNumber", "@tel");
        }, 100);
    }
    //#endregion

    //#region Validation Initialization
    var validation = function () {
        $.validator.addMethod("intlPhoneNumber", function (value, element) {
            return value === '' || $("#" + element.id).intlTelInput('isValidNumber');
        }, "Invalid Phone number");

        $.validator.addMethod('checkpass', function (value) {
            return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@$!%*?&])[A-Za-z\d@@$!%*?&]{8,15}$/.test(value);
            return PasswordRegex.test(checkpass);
        }, 'Password does not meet the length / Complexity / Age or History requirements!');

        $("#form_Update_Employee").validate({
            focusInvalid: true,
            rules:
            {
                "emp_branch": {
                    required: true
                },
                "emp_email": {
                    required: true
                },
                "emp_name": {
                    required: true
                },
                "emp_lname": {
                    required: true
                },
                "emp_dept": {
                    required: true
                },
                "emp_desig": {
                    required: true
                },
                "emp_mob": {
                    required: true
                },
                "emp_login": {
                    required: true,
                    minlength: 5
                },
                "emp_work_branch": {
                    required: true
                },
                "emp_nat": {
                    required: true
                },
                "emp_license": {
                    required: function () {
                        if ($('#uemp_desig :selected').text() == "Doctor" || $('#uemp_desig :selected').text() == "Nurse")
                            return true;
                        else
                            return false;
                    },
                    minlength: 14,
                    maxlength: 14
                },
                "emp_speciality": {
                    required: function () {
                        if ($('#uemp_desig :selected').text() == "Doctor")
                            return true;
                        else
                            return false;
                    }
                }
            },
            messages: {
                "emp_branch": {
                    required: "Please Select Branch"
                },
                "emp_email": {
                    required: "Enter E-Mail ID"
                },
                "emp_name": {
                    required: "Enter First Name"
                },
                "emp_lname": {
                    required: "Enter Last Name"
                },
                "emp_dept": {
                    required: "Please Select Department"
                },
                "emp_desig": {
                    required: "Please Select Designation"
                },
                "emp_mob": {
                    required: "Enter Mobile No."
                },
                "emp_login": {
                    required: "Enter Username",
                    minlength: "Min 5 characters"
                },
                "emp_work_branch": {
                    required: "Select Work Branch(es)"
                },
                "emp_nat": {
                    required: "Select Nationality"
                },
                "emp_license": {
                    required: "Please Enter License",
                    minlength: "Enter Valid License",
                    maxlength: "Enter Valid License"
                },
                "emp_speciality": {
                    required: "Please Select Speciality"
                }
            },
            highlight: function (element) {
                var elem = $(element);

                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                }
                else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
                error_timeout(elem.attr("id"));
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });

        $('#uemp_mob').on('change', function () {
            $(this).trigger('blur');
        });

        $('#uemp_branch').on('change', function () {
            $(this).trigger('blur');
        });

        $('#uemp_dept').on('change', function () {
            $(this).trigger('blur');
        });

        $('#uemp_desig').on('change', function () {
            $(this).trigger('blur');
        });

        $('#uemp_nat').on('change', function () {
            $(this).trigger('blur');
        });

        $('#uemp_work_branch').on('change', function () {
            $(this).trigger('blur');
        });

        $('#uemp_name').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^a-zA-Z ]/g))
                return false;
        });

        $('#uemp_lname').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^a-zA-Z ]/g))
                return false;
        });

        $('#uemp_mob').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9]/g)) {
                return false;
            }
            else {
                if (e.target.value.length >= 13)
                    return false;
            }
        });

        $('#uemp_tel').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9]/g)) {
                return false;
            }
            else {
                if (e.target.value.length >= 13)
                    return false;
            }
        });

        $('#uemp_email').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^a-z0-9@@.]/g))
                return false;
        });

        $('#uemp_disc_allowed').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 100) {
                return false;
            }
        });

        $('#uemp_consultation_commi').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 100) {
                return false;
            }
        });

        $('#uemp_procedure_commi').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 100) {
                return false;
            }
        });

        $('#uemp_lab_commi').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 100) {
                return false;
            }
        });

        $('#uemp_rad_commi').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 100) {
                return false;
            }
        });

        $('#uemp_pha_commi').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 100) {
                return false;
            }
        });

        $('#uemp_met_commi').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 100) {
                return false;
            }
        });

        $("#uemp_fax").keypress(function (e) {
            var charCode = (e.which) ? e.which : e.charCode;

            if (String.fromCharCode(charCode).match(/[^0-9A-z-]/g))
                e.preDefault();
        });

        $("#uemp_disc_allowed").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#uemp_disc_allowed").val(0.00);
            }
        });

        $("#uemp_consultation_commi").on('input', function () {
            var deci = $(this).val();
            if (deci == "" || deci == null || deci == undefined) {
                $("#uemp_consultation_commi").val(0.00);
            }
        });

        $("#uemp_procedure_commi").on('input', function () {
            var deci = $(this).val();
            if (deci == "" || deci == null || deci == undefined) {
                $("#uemp_procedure_commi").val(0.00);
            }
        });

        $("#uemp_lab_commi").on('input', function () {
            var deci = $(this).val();
            if (deci == "" || deci == null || deci == undefined) {
                $("#uemp_lab_commi").val(0.00);
            }
        });

        $("#uemp_rad_commi").on('input', function () {
            var deci = $(this).val();
            if (deci == "" || deci == null || deci == undefined) {
                $("#uemp_rad_commi").val(0.00);
            }
        });

        $("#uemp_met_commi").on('input', function () {
            var deci = $(this).val();
            if (deci == "" || deci == null || deci == undefined) {
                $("#uemp_met_commi").val(0.00);
            }
        });

        $("#uemp_pha_commi").on('input', function () {
            var deci = $(this).val();
            if (deci == "" || deci == null || deci == undefined) {
                $("#uemp_pha_commi").val(0.00);
            }
        });

        $('#usign').on('change', function () {
            if (this.files[0] != undefined) {
                const fileSize = this.files[0].size / 1024 / 1024;
                if (fileSize > 5) {
                    $("#uemp_sign").val('');
                    $("#usign").val('');

                    var alertPlaceholder = document.getElementById("error");
                    function alert(e, t) {
                        var l = document.createElement("div");
                        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close"><span aria-hidden="true">&times;</span></button></div>', alertPlaceholder.append(l)
                    }
                    alert("<i class='fa fa-times text-white'></i> File size shouldn't exceed 5 MB!", "warning");

                    Timeout();
                }
            }
        });

        $('#uphoto').on('change', function () {
            if (this.files[0] != undefined) {
                const fileSize = this.files[0].size / 1024 / 1024;
                if (fileSize > 5) {
                    $("#uemp_photo").val('');
                    $("#uphoto").val('');

                    var alertPlaceholder = document.getElementById("error");
                    function alert(e, t) {
                        var l = document.createElement("div");
                        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close"><span aria-hidden="true">&times;</span></button></div>', alertPlaceholder.append(l)
                    }
                    alert("<i class='fa fa-times text-white'></i> File size shouldn't exceed 5 MB!", "warning");

                    Timeout();
                }
            }
        });

        $('#uemid').on('change', function () {
            if (this.files[0] != undefined) {
                const fileSize = this.files[0].size / 1024 / 1024;
                if (fileSize > 5) {
                    $("#uemp_emid").val('');
                    $("#uemid").val('');

                    var alertPlaceholder = document.getElementById("error");
                    function alert(e, t) {
                        var l = document.createElement("div");
                        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close"><span aria-hidden="true">&times;</span></button></div>', alertPlaceholder.append(l)
                    }
                    alert("<i class='fa fa-times text-white'></i> File size shouldn't exceed 5 MB!", "warning");

                    Timeout();
                }
            }
        });

        $('#ustamp').on('change', function () {
            if (this.files[0] != undefined) {
                const fileSize = this.files[0].size / 1024 / 1024;
                if (fileSize > 5) {
                    $("#uemp_stamp").val('');
                    $("#ustamp").val('');

                    var alertPlaceholder = document.getElementById("error");
                    function alert(e, t) {
                        var l = document.createElement("div");
                        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close"><span aria-hidden="true">&times;</span></button></div>', alertPlaceholder.append(l)
                    }
                    alert("<i class='fa fa-times text-white'></i> File size shouldn't exceed 5 MB!", "warning");

                    Timeout();
                }
            }
        });
    }
   //#endregion

    //#region View / Hide Photos
    $('#viewSign').on('click', function (e) {
        if ($('#Sview').hasClass("d-none")) {
            $('#Sview').removeClass("d-none");
        }
        else {
            $('#Sview').addClass("d-none");
        }
    });
    $('#viewPhoto').on('click', function (e) {
        if ($('#Pview').hasClass("d-none")) {
            $('#Pview').removeClass("d-none");
        }
        else {
            $('#Pview').addClass("d-none");
        }
    });
    $('#viewEFront').on('click', function (e) {
        if ($('#EFview').hasClass("d-none")) {
            $('#EFview').removeClass("d-none");
        }
        else {
            $('#EFview').addClass("d-none");
        }
    });
    $('#viewEBack').on('click', function (e) {
        if ($('#EBview').hasClass("d-none")) {
            $('#EBview').removeClass("d-none");
        }
        else {
            $('#EBview').addClass("d-none");
        }
    });
    //#endregion

    //#region Validate Decimal
    function validateOneDecimalNumeric(el, evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        var number = el.value.split('.');
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        //just one dot
        if (number.length > 1 && charCode == 46) {
            return false;
        }
        //get the Current position
        var caratPos = getSelectionStart(el);
        var dotPos = el.value.indexOf(".");
        if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {
            return false;
        }
        return true;
    }
    function getSelectionStart(o) {
        if (o.createTextRange) {
            var r = document.selection.createRange().duplicate()
            r.moveEnd('character', o.value.length)
            if (r.text == '') return o.value.length
            return o.value.lastIndexOf(r.text)
        } else return o.selectionStart
    }
    //#endregion

    //#region Load Specialities
    var load_speciality = function () {
        $.ajax({
            url: '@Url.Action("GetSpeciality", "Employees", new { area = "Masters" })?_type=' + "@Model.set_city",
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                $("#uemp_speciality").select2({
                    placeholder: 'Select Speciality',
                    width: '100%',
                    minimumResultsForSearch: '',
                    maximumInputLength: 10,
                    dropdownParent: $('#form_Update_Employee'),
                    escapeMarkup: function (markup) {
                        return markup;
                    }
                });
                console.log(response);
                if (response.length > 0) {
                    var value = "@Model.emp_speciality";
                    $.each(response, function (j) {
                        var newOption;

                        if (value != null && value != "" && value != undefined && value != 0) {
                            newOption = new Option(response[j].text, response[j].id, (response[j].id === value) ? true : false, (response[j].id === value) ? true : false);
                        }
                        else {
                            newOption = new Option(response[j].text, response[j].id);
                        }

                        $('#uemp_speciality').append(newOption);
                    });
                    $('#uemp_speciality').val(value).trigger('change');

                }

            },
            error: function (xhr) {
                console.log("Failed to Load Specilaities! Error : " + xhr.statusText);
            }
        }).done(function () {
            var _data = {
                "id": @Model.emp_desig,
                "text": "@Model.designation"
            };

            $('#uemp_desig').trigger({
                type: 'select2:select',
                params: {
                    data: _data
                }
            });
        });
    };
    //#endregion

    //#region Load DHA Specialities
    var load_dhaspeciality = function () {
        $.ajax({
            url: '@Url.Action("GetDHASpeciality", "Employees", new { area = "Masters" })',
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                $("#uemp_dha_speciality").select2({
                    placeholder: 'Select DHA Speciality',
                    width: '100%',
                    minimumResultsForSearch: '',
                    maximumInputLength: 10,
                    dropdownParent: $('#form_Update_Employee'),
                    escapeMarkup: function (markup) {
                        return markup;
                    }
                });

                if (response.length > 0) {
                    var value = parseInt("@Model.emp_dha_speciality");
                    $.each(response, function (j) {
                        var newOption = "";
                        if (value != null && value != '' && value != undefined && value != 0) {
                            newOption = new Option(response[j].text, response[j].id, (response[j].id === value) ? true : false, (response[j].id === value) ? true : false);
                        }
                        else {
                            newOption = new Option(response[j].text, response[j].id, false, false);
                        }
                        $('#uemp_dha_speciality').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log("Failed to DHA Specilaities! Error : " + xhr.statusText);
            }
        });
    };
    //#endregion

    //#region Update Employee Click
    $('#btn_Update_Emp').on('click', function (e) {
        e.preventDefault();

        if ($("#form_Update_Employee").valid()) {

            $('#btn_Update_Emp').removeClass("btn btn-warning");
            $('#btn_Update_Emp').addClass("btn btn-warning btn-loaders btn-icon");
            $('#btn_Update_Emp').parent().addClass("curdrop");
            $('.btnCloseUpdate').addClass("disabled");
            $('#btn_Update_Emp').html("Saving Changes... Please Wait");

            var formData = new FormData();
            var files = $('input[type=file]');
            formData.append("__RequestVerificationToken", $('input[name="__RequestVerificationToken"]').val());
            formData.append("empId", parseInt($("#empId").val()));
            formData.append("emp_login", $("#uemp_login").val().trim());
            formData.append("emp_pass", $("#uemp_pass").val());
            formData.append("emp_name", $("#uemp_name").val().trim());
            formData.append("emp_gender", $("#uemp_gender").val());
            formData.append("emp_tel", $("#uemp_tel").intlTelInput("getNumber"));
            formData.append("emp_mob", $("#uemp_mob").intlTelInput("getNumber"));
            formData.append("emp_fax", $("#uemp_fax").val().trim());
            formData.append("emp_email", $("#uemp_email").val());
            formData.append("emp_address", $("#uemp_address").val().trim());
            formData.append("emp_license", $("#uemp_license").val().trim());
            formData.append("emp_teeth", $("#uemp_teeth").val());
            formData.append("emp_work_branch", $("#uemp_work_branch").val().toString());
            formData.append("emp_color", $("#uemp_color").spectrum('get').toString());
            formData.append("emp_dept", $("#uemp_dept").val());
            formData.append("emp_desig", $("#uemp_desig").val());
            formData.append("emp_nat", $("#uemp_nat").val());
            formData.append("emp_branch", $("#uemp_branch").val());
            formData.append("emp_consultation_commi", parseFloat($("#uemp_consultation_commi").val()));
            formData.append("emp_procedure_commi", parseFloat($("#uemp_procedure_commi").val()));
            formData.append("emp_lab_commi", parseFloat($("#uemp_lab_commi").val()));
            formData.append("emp_rad_commi", parseFloat($("#uemp_rad_commi").val()));
            formData.append("emp_pha_commi", parseFloat($("#uemp_pha_commi").val()));
            formData.append("emp_met_commi", parseFloat($("#uemp_met_commi").val()));
            formData.append("emp_disc_allowed", parseFloat($("#uemp_disc_allowed").val()));
            formData.append("emp_dha_pass", $("#uemp_dha_pass").val().trim());
            formData.append("emp_lname", $("#uemp_lname").val().trim());
            formData.append("emp_dha_login", $("#uemp_dha_login").val().trim());
            formData.append("emp_whatsappId", $("#uemp_whatsappId").val().trim());
            formData.append("emp_whatsappToken", $("#uemp_whatsappToken").val().trim());
            formData.append("emp_speciality", $("#uemp_speciality option:selected").text());
            formData.append("emp_dha_speciality", $("#uemp_dha_speciality").val());
            formData.append("emp_scheduler", $("#uemp_scheduler").val());
            formData.append("emp_moh_login", $("#uemp_moh_login").val().trim());
            formData.append("emp_moh_pass", $("#uemp_moh_pass").val().trim());
            formData.append("emp_outside_access", $("#uemp_outside_access").val().trim());

            for (var i = 0; i < files.length; i++) {
                if (files[i].value == "" || files[i].value == null) {
                    if (files[i].name === "emp_sign") {
                        formData.append("emp_sign", $("#uemp_sign").val());
                    }
                    else if (files[i].name === "emp_photo") {
                        formData.append("emp_photo", $("#uemp_photo").val());
                    }
                    else if (files[i].name === "emp_emid") {
                        formData.append("emp_emid", $("#uemp_emid").val());
                    }
                    else if (files[i].name === "emp_stamp") {
                        formData.append("emp_stamp", $("#uemp_stamp").val());
                    }
                }
                else {
                    formData.append(files[i].name, files[i].files[0]);
                }
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("UpdateEmployee", "Employees", new { area = "Masters" })",
                dataType: 'json',
                contentType: false,
                processData: false,
                data: formData,
                success: function (data) {
                    $('#btn_Update_Emp').parent().removeClass("curdrop");
                    $('#btn_Update_Emp').removeClass("btn btn-warning btn-loaders btn-icon");
                    $('#btn_Update_Emp').addClass("btn btn-warning");
                    $('#btn_Update_Emp').html("Save Changes");
                    $('.btnCloseUpdate').removeClass("disabled");
                    $("#error").html('');

                    if (data.isSuccess) {
                        if (data.isUpdated) {
                            GetEmployees();
                            var alertPlaceholder = document.getElementById("EmployeeAlert");
                            function alert(e, t) {
                                var l = document.createElement("div");
                                l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close"><span aria-hidden="true">&times;</span></button></div>', alertPlaceholder.append(l)
                            }
                            alert("<i class='fe fe-check-circle text-white'></i> " + data.message +"", "success");
                            $('#employee_modal_update').modal('toggle');
                            Timeout();
                        }
                        else {
                            let html = "<div class='alert alert-light-warning' role='alert'>" +
                                "<button type='button' class='btn-close mr-negative-16 text-warning' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                "<strong><i class='fa fa-exclamation-triangle text-warning'></i> " + data.message +"</strong><br/>" +
                                "</div>";
                            $("#errorEdit").html(html);
                        }
                    }
                    else
                    {
                        let html = "<div class='alert alert-danger' role='alert'>" +
                            "<button type='button' class='btn-close mr-negative-16 text-white' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                            "<strong>Validation Error Summary!</strong><br/><ul class='list-group mt-2'>";

                        $.each(data.message, function (index, value) {
                            html += "<li class='list-group-item list-group-item-danger text-black' style='width:300px'><small><i class='fa fa-circle me-2' aria-hidden='true'></i> " + value + "</small><li>";
                            var elem = $("#" + index);
                            if (elem.hasClass("select2-hidden-accessible")) {
                                $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                            }
                            else {
                                $(elem).addClass(" is-invalid");
                            }

                            setTimeout(function () {
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                }
                                else {
                                    $(elem).removeClass("is-invalid");
                                }
                            }, 5000);
                        });

                        html += "</ul></div>";
                        $("#errorEdit").html(html);
                    }
                },
                error: function (xhr) {
                    console.log("Failed to Update Employee! Error : " + xhr.statusText);
                    $('#btn_Update_Emp').parent().removeClass("curdrop");
                    $('#btn_Update_Emp').removeClass("btn btn-warning btn-loaders btn-icon");
                    $('#btn_Update_Emp').addClass("btn btn-warning");
                    $('#btn_Update_Emp').html("Save Changes");
                    $('.btnCloseUpdate').removeClass("disabled");
                    $('#employee_modal_update').modal('toggle');
                    Timeout();
                }
            }).done(function () {
                $('#btn_Update_Emp').parent().removeClass("curdrop");
                $('#btn_Update_Emp').removeClass("btn btn-warning btn-loaders btn-icon");
                $('#btn_Update_Emp').addClass("btn btn-warning");
                $('#btn_Update_Emp').html("Save Changes");
                $('.btnCloseUpdate').removeClass("disabled");
            });
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });
    //#endregion

    //#region Remove Valiate Error Class
    function error_timeout(_id) {
        setTimeout(function () {
            $(".has-error").removeClass("has-error");
            $(".error").removeClass("error");
            $("#" + _id + "-error").text("");
        }, 5200);
    }
    //#endregion

</script>