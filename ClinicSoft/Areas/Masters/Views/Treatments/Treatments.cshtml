@using System.Security.Claims;
@{
    ViewBag.Title = "Treatments & Tariff";
    ViewBag.tt_active = "background: none !important; color: #664dc9 !important;";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var empId = claims.Where(c => c.Type == ClaimTypes.Sid).Select(c => c.Value).SingleOrDefault();
    var emp_name = claims.Where(c => c.Type == ClaimTypes.GivenName).Select(c => c.Value).SingleOrDefault();
    var emp_dept = claims.Where(c => c.Type == ClaimTypes.Locality).Select(c => c.Value).SingleOrDefault();
    var emp_department = claims.Where(c => c.Type == ClaimTypes.Surname).Select(c => c.Value).SingleOrDefault();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    var company = claims.Where(c => c.Type == ClaimTypes.PrimarySid).Select(c => c.Value).SingleOrDefault();
    var emp_branch = claims.Where(c => c.Type == ClaimTypes.GroupSid).Select(c => c.Value).SingleOrDefault();
    var emp_desig = claims.Where(c => c.Type == ClaimTypes.Version).Select(c => c.Value).SingleOrDefault();
}

<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary" data-lang-key="treatments-tariff" >Treatments & Tariff</h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list">
            <button class="btn btn-outline-primary mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#searchFilter" aria-expanded="false" aria-controls="collapseExample" data-lang-key="advance-filter">
                <i class="fa fa-filter"></i> Advanced Filters
            </button>
            <a data-bs-toggle="modal" data-bs-target="#treatment_modal" class="btn btn-secondary" onclick="addTreatment()" data-lang-key="add-treatment"><i class="mdi mdi-plus" data-lang-key="add-treatment"></i>&nbsp;Add Treatment</a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="TreatmentAlert"></div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card mb-0">
            <div class="card-status bg-primary-1"></div>
            <div class="collapse" id="searchFilter">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-12 col-md-3 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="branch" >Branch<small>(es)</small></label>
                                <select class="form-control" id="select_branch" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="groups">Group<small>(s)</small></label>
                                <select class="form-control" id="select_group" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="insurance TPA">Insurance TPA<small>(s)</small></label>
                                <select class="form-control select2-show-search" multiple="multiple" id="select_tpa">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="insurance-scheme">Insurance Scheme<small>(s)</small></label>
                                <select class="form-control select2-show-search" multiple="multiple" id="select_scheme">
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-sm-12 col-md-3 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="lab-department">Lab Department<small>(s)</small></label>
                                <select class="form-control select2-show-search" multiple="multiple" id="select_lab">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-3 d-none">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="category">VAT Category</label>
                                <select class="form-control select2-show-search" multiple="multiple" id="select_vat">
                                    <option value="None" data-lang-key="none">None</option>
                                    <option value="Medical Necessity" data-lang-key="medical-necessity">Medical Necessity</option>
                                    <option value="Medical Un-necessity" data-lang-key="medical-unnecessity">Medical Un-necessity</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="active-types">Activity Type<small>(s)</small></label>
                                <select class="form-control select2-show-search" multiple="multiple" id="select_activity">
                                    <option value="3" >CPT</option>
                                    <option value="4">HCPCS</option>
                                    <option value="5">DRUG</option>
                                    <option value="6">Dental</option>
                                    <option value="8" data-lang-key="service">Service</option>
                                    <option value="9">IR-DRG</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="treatment-types">Treatment Type<small>(s)</small></label>
                                <select class="form-control select2-show-search" multiple="multiple" id="select_type">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="status">Status</label>
                                <select class="form-control select2-show-search" multiple="multiple" id="select_status">
                                    <option value="Active" data-lang-key="active">Active</option>
                                    <option value="Inactive" data-lang-key="inactive">Inactive</option>
                                    <option value="Deleted" data-lang-key="delete">Deleted</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="expiry-from-date">Expiry From Date</label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_from_treat" class="form-control" placeholder="Select Treatment Date From" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-3 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="expiry-date">Expiry To Date</label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_to_treat" class="form-control" placeholder="Select Treatment Date To" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-2 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">&nbsp;</label>
                                <button class="btn btn-primary mb-2" type="button" id="btnSearch" data-lang-key="search">
                                    <i class="fa fa-search-plus"></i> Search
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div id="progress-loader" style="display:none;">
                    <div class="progress progress-sm mb-3">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-teal progress-bar-indeterminate"></div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tbl_treatments" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="branch">Branch</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="insurance">Insurance</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="treatment-details">Treatment Details</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="class">Class</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="lab-department">Lab Dept.</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="date">S/E Date</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span >VAT</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="group">Group</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="price">Price</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="cost">Cost</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="discount">Discount</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="status">Status</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white"><i class="fe fe-more-vertical" style="font-size: 20px;"></i></th>
                                <!-- Hidden Export Columns -->
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="package-type">Package Type</span>
                                </th><!--13-->
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="treatment-type">Treatment Type</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span >CPT Code</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="treatment">Treatment</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="start-date">Start Date</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="end-date">End Date</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >VAT %</th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="insurance-company-code">Insurance Company Code</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="insurance-company-name">Insurance Company Name</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="insurance scheme">Insurance Scheme<</span>/th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="insurance-code">Insurance Code<</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="insurance-payers">Insurance Payer<</span>
                                </th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th class="text-right text-dark font-weight-semibold" data-lang-key="total">Total :</th>
                                <th class="table_footer_align"></th>
                                <th class="table_footer_align"></th>
                                <th class="table_footer_align"></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Treatments Modal -->
<div class="modal fade" id="treatment_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="treatment_modal_body">
        </div>
    </div>
</div>
<!-- End Treatments Modal -->
<!-- Treatments Audit Modal -->
<div class="modal fade" id="treatment_modal_log" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="treatment_log_modal_body">
        </div>
    </div>
</div>
<!-- End Treatments Audit Modal -->

@section myScripts{
    <script>
        //#region Page Load
        $(function () {
            load_filters();

            BindDataTable(null);

            // Focus Search On Opening Select2
            $(document).on('select2:open', () => {
                document.querySelector('.select2-search__field').focus();
            });
        });
        //#endregion

        //#region Load Advanced Filters
        // Initialize All Items
        var load_filters = function () {
            load_branches();
            load_status();
            load_ins_tpa();
            load_treat_groups();
            load_vat();
            load_lab_depts();
            load_treat_types();
            load_act_types();

            $('#select_date_from_treat').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            $("#select_date_from_treat").bootstrapdatepicker("setDate", "");
            $('#select_date_to_treat').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            $("#select_date_to_treat").bootstrapdatepicker("setDate", "");
            $('#select_date_from_treat').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });
            $('#select_date_to_treat').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });
        }
        // Load Branches
        var load_branches = function () {
            $('#select_branch').SumoSelect({
                placeholder: 'Select Branch(es)',
                captionFormat: '{0} Branch(es) Selected',
                captionFormatAllSelected: 'All {0} Branches selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            var _url = "";

            if ("@emp_designation.ToString().Contains("Administrator")" == "True") {
                _url = "@Url.Action("GetBranches", "Employees", new { area = "Masters" })?empId=" + @empId.ToString();
            }
            else {
                _url = "@Url.Action("GetBranches", "Employees", new { area = "Masters" })?setid=" + @emp_branch.ToString();
            }

            $.ajax({
                url: _url,
                type: "GET",
                dataType: "JSON",
                async: false,
                success: function (response) {
                    $('#select_branch').html('');
                    $('#select_branch')[0].sumo.reload();

                    if ("@emp_designation.ToString().Contains("Administrator")" == "True") {
                        $.each(response, function (j) {
                            $('#select_branch')[0].sumo.add(response[j].id, response[j].text);
                            $('#select_branch')[0].sumo.selectItem(["@emp_branch.ToString()"]);
                        });
                    }
                    else {
                        $('#select_branch')[0].sumo.add(@emp_branch.ToString(), "@company.ToString()");
                        $('#select_branch')[0].sumo.selectItem(["@emp_branch.ToString()"]);
                    }
                },
                error: function (xhr) {
                    console.log("Failed to Load Branch(es)! Error Message : " + xhr.statusText);
                }
            }).done(function () {
                $('#select_branch')[0].sumo.reload();
            });
        }
        // Load Status
        var load_status = function () {
            $('#select_status').SumoSelect({
                placeholder: 'Select Status(es)',
                captionFormat: '{0} Status Selected',
                captionFormatAllSelected: 'All {0} Status selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });
        }
        // Load Insurance TPA
        var load_ins_tpa = function () {
            $("#select_tpa").SumoSelect({
                placeholder: 'Select Insurance TPA(s)',
                captionFormat: '{0} Insurance TPA(s) Selected',
                captionFormatAllSelected: 'All {0} Insurance TPAs selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $.ajax({
                url: '@Url.Action("GetInsuranceCompanies", "Treatments", new { area = "Masters" })',
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    $('#select_tpa').html('');
                    $('#select_tpa')[0].sumo.reload();

                    $.each(response, function (j) {
                        $('#select_tpa')[0].sumo.add(response[j].id, response[j].text);
                    });

                    $('#select_tpa')[0].sumo.reload();
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                }
            }).done(function () {
                load_schemes();
            });
        }
        // Load Treatment Groups
        var load_treat_groups = function () {
            $("#select_group").SumoSelect({
                placeholder: 'Select Treatment Group(s)',
                captionFormat: '{0} Treatment Group(s) Selected',
                captionFormatAllSelected: 'All {0} Treatment Groups selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $.ajax({
                url: '@Url.Action("GetTreatmentGroup", "Treatments", new { area = "Masters" })?query=' ,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    $('#select_group').html('');
                    $('#select_group')[0].sumo.reload();

                    $.each(response, function (j) {
                        $('#select_group')[0].sumo.add(response[j].id, response[j].text);
                    });

                    $('#select_group')[0].sumo.reload();
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }
        // Load VAT Categories
        var load_vat = function () {
            $("#select_vat").SumoSelect({
                placeholder: 'Select VAT Category',
                captionFormat: '{0} VAT Category Selected',
                captionFormatAllSelected: 'All {0} VAT Categories selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });
        }
        // Load Laboratory Departments
        var load_lab_depts = function () {
            $("#select_lab").SumoSelect({
                placeholder: 'Select Laboratory Department(s)',
                captionFormat: '{0} Laboratory Department(s) Selected',
                captionFormatAllSelected: 'All {0} Laboratory Departments selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $.ajax({
                url: '@Url.Action("GetLabDepartment", "Treatments", new { area = "Masters" })?query=',
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    $('#select_lab').html('');
                    $('#select_lab')[0].sumo.reload();

                    $.each(response, function (j) {
                        $('#select_lab')[0].sumo.add(response[j].text, response[j].text);
                    });

                    $('#select_lab')[0].sumo.reload();
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }
        // Load Treatment Types
        var load_treat_types = function () {
            $("#select_type").SumoSelect({
                placeholder: 'Select Treatment Type(s)',
                captionFormat: '{0} Treatment Type(s) Selected',
                captionFormatAllSelected: 'All {0} Treatment Types selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $.ajax({
                url: '@Url.Action("GetTreatmentType", "Treatments", new { area = "Masters" })?query=',
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    $('#select_type').html('');
                    $('#select_type')[0].sumo.reload();

                    $.each(response, function (j) {
                        $('#select_type')[0].sumo.add(response[j].text, response[j].text);
                    });

                    $('#select_type')[0].sumo.reload();
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        };
        // Load Activity Types
        var load_act_types = function () {
            $('#select_activity').SumoSelect({
                placeholder: 'Select Activity Type(s)',
                captionFormat: '{0} Activity Type(s) Selected',
                captionFormatAllSelected: 'All {0} Activity Types selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });
        }
        // Load Scehemes
        var load_schemes = function () {
            $("#select_scheme").SumoSelect({
                placeholder: 'Select Insurance Scheme(s)',
                captionFormat: '{0} Insurance Scheme(s) Selected',
                captionFormatAllSelected: 'All {0} Insurance Schemes selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $('#select_scheme').html('');
            $('#select_scheme')[0].sumo.reload();
        }
        // Insurance Company Change Event (Load Schemes)
        $('#select_tpa').on('change', function (e) {
            if ($(this).val() != "" && $(this).val() != null && $(this).val() != undefined) {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetInsuranceSchemes", "Treatments", new { area = "Masters" })?icIds=' + $(this).val().toString(),
                    dataType: 'json',
                    success: function (response) {
                        $('#select_scheme').html('');
                        $('#select_scheme')[0].sumo.reload();

                        $.each(response, function (j) {
                            $('#select_scheme')[0].sumo.add(response[j].Value, response[j].Text);
                        });

                        $('#select_scheme')[0].sumo.reload();
                    },
                    error: function (xhr) {
                        console.log("Failed! Error Message : " + xhr.statusText);
                    }
                });
            }
            else {
                $('#select_scheme').html('');
                $('#select_scheme')[0].sumo.reload();
            }
        });
        //#endregion

        //#region Search Treatments Click
        $("#btnSearch").click(function (e) {
            e.preventDefault();
            if ($("#select_branch").val() != null && $("#select_branch").val() != 0 && $("#select_branch").val() != "") {

                if (($("#select_tpa").val() != null && $("#select_tpa").val() != 0 && $("#select_tpa").val() != "") ||
                    ($("#select_group").val() != null && $("#select_group").val() != 0 && $("#select_group").val() != "") ||
                    ($("#select_vat").val() != null && $("#select_vat").val() != 0 && $("#select_vat").val() != "") ||
                    ($("#select_lab").val() != null && $("#select_lab").val() != 0 && $("#select_lab").val() != "") ||
                    ($("#select_type").val() != null && $("#select_type").val() != 0 && $("#select_type").val() != "") ||
                    ($("#select_activity").val() != null && $("#select_activity").val() != 0 && $("#select_activity").val() != "") ||
                    ($("#select_status").val() != null && $("#select_status").val() != 0 && $("#select_status").val() != "")) {

                    let isValid = true;
                    let treat_frm = moment($("#select_date_from_treat").val());
                    let treat_to = moment($("#select_date_to_treat").val());

                    // Check if Date From is a valid Date
                    if ($("#select_date_from_treat").val() != null && $("#select_date_from_treat").val() != 0 && $("#select_date_from_treat").val() != "" && $("#select_date_from_treat").val() != undefined) {
                        if (!treat_frm.isValid()) {
                            isValid = false;
                            e.stopPropagation();
                            return $.growl.error({
                                title: "Error",
                                message: "Invalid Treatment From Date!"
                            });
                        }
                    }
                    // Check if Date To is a valid Date
                    if ($("#select_date_to_treat").val() != null && $("#select_date_to_treat").val() != 0 && $("#select_date_to_treat").val() != "" && $("#select_date_to_treat").val() != undefined) {
                        if (!treat_to.isValid()) {
                            isValid = false;
                            e.stopPropagation();
                            return $.growl.error({
                                title: "Error",
                                message: "Invalid Treatment To Date!"
                            });
                        }
                    }
                    // Check if Date Range is valid
                    if (($("#select_date_from_treat").val() != null && $("#select_date_from_treat").val() != 0 && $("#select_date_from_treat").val() != "" && $("#select_date_from_treat").val() != undefined) && ($("#select_date_to_treat").val() != null && $("#select_date_to_treat").val() != 0 && $("#select_date_to_treat").val() != "" && $("#select_date_to_treat").val() != undefined)) {
                        if (treat_frm.isValid() && treat_to.isValid()) {
                            if (treat_to.diff(treat_frm, 'days') <= 0) {
                                isValid = false;

                                var index = [];
                                index.push("select_date_from_treat");
                                index.push("select_date_to_treat");

                                $.each(index, function (i, v) {
                                    if (index[i] != null && index[i] != "") {
                                        var elem = $("#" + index[i]);
                                        if (elem.hasClass("select2-hidden-accessible")) {
                                            $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                        }
                                        else {
                                            $(elem).addClass(" is-invalid");
                                        }

                                        setTimeout(function () {
                                            if (elem.hasClass("select2-hidden-accessible")) {
                                                $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                            }
                                            else {
                                                $(elem).removeClass("is-invalid");
                                            }
                                        }, 5000);
                                    }
                                });

                                e.stopPropagation();

                                return $.growl.error({
                                    title: "Error!",
                                    message: "Treatment From Date Filter should be less than Treatment To Date Filter!"
                                });
                            }
                        }
                    }
                    // Check If Valid
                    if (isValid) {
                        GetTreatments(1);
                    }
                }
                else {
                    Swal.fire({
                        title: "Attention!",
                        text: "Search by Either of the following filters : Group(s) / Insurance TPA(s) / Lab Department(s) / VAT Cateogries / Activity Type(s) / Treatment Type(s) / Status(es)",
                        icon: "warning",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                    });
                }
            }
            else {
                Swal.fire({
                    title: "Attention!",
                    text: "You need to select atleast 1 Branch to Filter Treatments!",
                    icon: "warning",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                });
            }

        });
        //#endregion

        //#region Get Treatments
        var GetTreatments = function (search_type) {
            var branch = "";

            if ("@emp_designation.ToString()" === "Doctor") {
                branch = @emp_branch.ToString();
            }
            else {
                branch = $('#select_branch').val().toString();
            }

            var _data = {
                "search_type"       : search_type,
                "branch_ids"        : branch,
                "select_status"     : $('#select_status').val().toString(),
                "select_tpa"        : $('#select_tpa').val().toString(),
                "select_scheme"     : $('#select_scheme').val().toString(),
                "select_group"      : $('#select_group').val().toString(),
                "select_vat"        : $('#select_vat').val().toString(),
                "select_lab"        : $('#select_lab').val().toString(),
                "select_type"       : $('#select_type').val().toString(),
                "select_activity"   : $('#select_activity').val().toString(),
                "date_from"         : $('#select_date_from_treat').val(),
                "date_to"           : $('#select_date_to_treat').val()
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("SearchTreatments", "Treatments", new { area = "Masters" })",
                data: _data,
                beforeSend: function () {
                    $('#progress-loader').show();
                },
                success: function (response) {
                    if (response.isAuthorized) {
                        if (response.isSearched == 1) {
                            var table;
                            if ($.fn.dataTable.isDataTable('#tbl_treatments')) {
                                table = $('#tbl_treatments').DataTable();
                                table.clear();
                                table.rows.add(response.data).draw();
                            }
                            else {
                                BindDataTable(response.data);
                            }
                        }
                        else {
                            Swal.fire({
                                title: "Internal Server Error!",
                                text: response.data,
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    }
                    else
                    {
                        console.log("You are not Authorized!");
                    }
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                    $('#progress-loader').hide();
                }
            }).done(function () {
                resizedt();
                $('#progress-loader').hide();
            });
        }
        //#endregion

        //#region Bind DataTable
        var BindDataTable = function (response) {
            var numFormat = $.fn.dataTable.render.number('\,', '.', 2, '').display;
            var table = $("#tbl_treatments").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "className": 'td_max_width',
                        "mData": "set_company"
                    },
                    {
                        "mData": "ic_name",
                        "className": 'text-center',
                        "render": function (ic_name, type, full, meta) {
                            let _html = '<span class="font-weight-semibold">Insurance TPA</span><br />'
                                + "[" + full.ic_code + "] " + ic_name + '<br />'
                                + '<span class="font-weight-semibold">Insurance Scheme</span><br />'
                                + full.is_title + '<br />'
                                + '<span class="font-weight-semibold">Insurance Payer</span><br />'
                                + "[" + full.ip_code + "] " + full.ip_name + '<br />';

                            return _html;
                        }
                    },
                    {
                        "mData": "tr_name",
                        "className": 'text-justify text-wrap',
                        "render": function (tr_name, type, full, meta) {
                            let _html = '';
                            var ptype = full.tr_lcode;
                            var ttype = full.tr_type;
                            var cpt = full.tr_code;

                            if (cpt != "") {
                                _html += '<span class="badge bg-primary-light mb-1">CPT Code</span><br/><span class="font-weight-normal">' + cpt + '</span><br/>';
                            }
                            else {
                                _html += '<span class="badge bg-primary-light mb-1">CPT Code</span><br/><span class="text-muted">N/A</span><br/>';
                            }

                            if (ptype != "") {
                                _html += '<span class="badge bg-secondary-light mb-1">Package Type</span><br/><span class="font-weight-normal">' + ptype + '</span><br/>';
                            }
                            else {
                                _html += '<span class="badge bg-secondary-light mb-1">Package Type</span><br/><span class="text-muted">N/A</span><br/>';
                            }

                            if (ttype != "") {
                                _html += '<span class="badge bg-azure-light mb-1">Type</span><br/><span class="font-weight-normal">' + ttype + '</span><br/>';
                            }

                            _html += '<span class="text-muted-dark">' + tr_name + '</span>';

                            return _html;
                        }
                    },
                    { "mData": "tr_class" },
                    {
                        "mData": "tr_lab_dept",
                        "render": function (tr_lab_dept, type, full, meta) {
                            let _html = '';

                            if (tr_lab_dept != "") {
                                _html += tr_lab_dept;
                            }
                            else {
                                _html += '<span class="text-muted">N/A</span>';
                            }
                            return _html;
                        }
                    },
                    {
                        "className": 'text-center',
                        "mData": "tr_start_date",
                        "render": function (tr_start_date, type, full, meta) {
                            if (type === 'display' || type === 'filter') {
                                return '<span class="badge bg-success-light mb-1">Start Date</span><br/>' + moment(tr_start_date).format('DD-MM-YYYY') + '<br/>' +
                                    '<span class="badge bg-danger-light mb-1">End Date</span><br/>' + moment(full.tr_end_date).format('DD-MM-YYYY');
                            }
                            return moment(tr_start_date).format('YYYY-MM-DD');
                        }
                    },
                    {
                        "className": 'text-center',
                        "mData": "tr_vat",
                        "render": function (tr_vat, type, full, meta) {
                            let _html = '';

                            _html += tr_vat + ' %';

                            return _html;
                        }
                    },
                    { "mData": "tg_group" },
                    {
                        "mData": "tr_price",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "tr_cost",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "tr_disc",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "className": 'text-center',
                        "mData": "trId",
                        "render": function (trId, type, full, meta) {
                            var visible = full.actionvisible;
                            var tr_status = full.tr_status;
                            if (visible == "True") {
                                if (full.tr_status === "Active") {
                                    return '<button type="button" class="badge rounded-pill bg-success mt-2 border-success" style="width: 60px;" onclick="updateStatus(\'' + trId + '\',\' Active \')">' + tr_status + '</button>';
                                }
                                else if (full.tr_status === "Inactive") {
                                    return '<button type="button" class="badge rounded-pill bg-warning mt-2 border-warning" style="width: 60px;" onclick="updateStatus(\'' + trId + '\',\'Inactive\')">' + tr_status + '</button>';
                                }
                                else if (full.tr_status === "Deleted") {
                                    return '<button type="button" class="badge rounded-pill bg-danger mt-2 border-danger" style="width: 60px;" onclick="updateStatus(\'' + trId + '\',\'Deleted\')">' + tr_status + '</button>';
                                }
                                else {
                                    return ''
                                }
                            }
                            else {
                                return '<span class="badge rounded-pill text-danger mt-2 border-danger">Allocated</span>'
                            }
                        }
                    },
                    {
                        "className": 'text-center',
                        "orderable": false,
                        "searchable": false,
                        "mData": "trId",
                        "render": function (trId, type, full, meta) {
                            var status = full.tr_status;
                            var visible = full.actionvisible;
                            var more = '<div class="dropdown"><a type="button" class="" data-bs-toggle="dropdown"><i class="fe fe-more-vertical" style="font-size: 20px;"></i></a><div class="dropdown-menu" style="min-width:auto">';

                            if (visible === "True" && status == "Active") {
                                more += '<a class="dropdown-item text-dark fw-bold" data-bs-toggle="modal" data-bs-target="#treatment_modal" onclick="editTreatment(' + trId + ')"><i class="fe fe-edit-2 text-success" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Edit</a>' +
                                    '<a class="dropdown-item text-dark fw-bold" onclick="deleteTreatment(\'' + trId + '\')"><i class="fe fe-trash text-danger" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Delete</a>';
                            }

                            more += '<a class="dropdown-item text-dark fw-bold" data-bs-toggle="modal" data-bs-target="#treatment_modal_log" onclick="viewTreatmentLogs(' + trId + ')"><i class="fa fa-eye" style="font-size: 15px;margin-right: 0.5rem;color:#046058 !important"></i>&nbsp;Logs</a></div></div>';

                            return more;
                        }
                    },
                    //#region Hidden Export Columns
                    {
                        "visible": false,
                        "mData": "tr_lcode"
                    },
                    {
                        "visible": false,
                        "mData": "tr_type"
                    },
                    {
                        "visible": false,
                        "mData": "tr_code"
                    },
                    {
                        "visible": false,
                        "className": 'text-justify text-wrap',
                        "mData": "tr_name"
                    },
                    {
                        "visible": false,
                        "mData": "tr_start_date",
                        'render': function (tr_start_date, type, full, meta) {
                            return moment(tr_start_date).format("DD-MM-YYYY");
                        }
                    },
                    {
                        "visible": false,
                        "mData": "tr_end_date",
                        'render': function (tr_end_date, type, full, meta) {
                            return moment(tr_end_date).format("DD-MM-YYYY");
                        }
                    },
                    {
                        "visible": false,
                        "mData": "tr_vat"
                    },
                    {
                        "visible": false,
                        "mData": "ic_code"
                    },
                    {
                        "visible": false,
                        "mData": "ic_name"
                    },
                    {
                        "visible": false,
                        "mData": "is_title"
                    },
                    {
                        "visible": false,
                        "mData": "ip_code"
                    },
                    {
                        "visible": false,
                        "mData": "ip_name"
                    }
                    //#endregion
                ],
                order: [[5, 'desc']],
                language: {
                    searchPlaceholder: 'Search...',
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Branch / Insurance / CPT Code / Type</span>',
                    scrollX: "100%",
                    lengthMenu: '_MENU_ ',
                },
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api();

                    var intVal = function (i) {
                        return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                    };

                    total_price = api.column(8).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(8).footer()).html(numFormat(total_price));

                    total_c = api.column(9).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(9).footer()).html(numFormat(total_c));

                    total_d = api.column(10).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(10).footer()).html(numFormat(total_d));
                },
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Treatments and Tariffs',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 20, 21, 22, 23, 24, 16, 15, 13, 14, 16, 17, 18, 19, 3, 4, 7, 8, 9, 10, 11]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Treatments and Tariffs to Excel!");
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Treatments and Tariffs',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 20, 21, 22, 23, 24, 16, 15, 13, 14, 16, 17, 18, 19, 3, 4, 7, 8, 9, 10, 11]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Treatments and Tariffs to PDF!");
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Treatments and Tariffs',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 20, 21, 22, 23, 24, 16, 15, 13, 14, 16, 17, 18, 19, 3, 4, 7, 8, 9, 10, 11]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Treatments and Tariffs to CSV!");
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Treatments and Tariffs',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 20, 21, 22, 23, 24, 16, 15, 13, 14, 16, 17, 18, 19, 3, 4, 7, 8, 9, 10, 11]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, node, config);
                            exportLogs("Employee Printed Treatments and Tariffs!");
                        }
                    }
                ]
            });
            table.buttons().container().appendTo('#tbl_treatments_wrapper .col-md-6:eq(0)');
        };
        //#endregion

        //#region Add Treatment
        function addTreatment() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("CreateTreatment", "Treatments", new { area = "Masters" })",
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#treatment_modal_body").html(data);
                    $("#treatment_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Adding Treatment : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Edit Treatment
        function editTreatment(trId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("EditTreatment", "Treatments", new { area = "Masters" })?trId=" + trId,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#treatment_modal_body").html(data);
                    $("#treatment_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Editing Treatment : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Update Status Function
        var updateStatus = function (trId, tr_status) {
            tr_status = (tr_status == "Deleted" || tr_status == "Inactive") ? "Active" : "Inactive"

            Swal.fire({
                title: "Are you sure you want to change status ?",
                text: "This action will change the status of the selected Treatment!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: "@Url.Action("UpdateTreatmentsStatus", "Treatments", new { area = "Masters" })?trId=" + trId + "&tr_status=" + tr_status,
                        type: "POST",
                        dataType: "json",
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.success) {
                                    GetTreatments(1);
                                    Swal.fire({
                                        title: "Success!",
                                        text: data.message,
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        title: "Action Forbidden!",
                                        text: data.message,
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to change Treatment Status!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Update Treatments Status! Please refresh the Page and Try Again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    });
                }
            });
        }
        //#endregion

        //#region Delete Treatment
        var deleteTreatment = function (trId) {
            Swal.fire({
                title: "Are you sure you want to delete this Treatment ?",
                text: "This action will delete this Treatment!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: '@Url.Action("DeleteTreatment", "Treatments", new { area = "Masters" })?trId=' + trId +'&tr_status=Deleted',
                        type: "POST",
                        dataType: "json",
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.success) {
                                    GetTreatments(1);
                                    Swal.fire({
                                        title: "Success!",
                                        text: data.message,
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        title: "Action Forbidden!",
                                        text: data.message,
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to delete treatments!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Delete Treatment! Please refresh the page and try again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    });
                }
            });
        }
        //#endregion

        //#region Export General Logs
        var exportLogs = function (desc) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportLogs", "AuditLogs", new { area = "Common" })?desc="+ desc,
                contentType: "application/json",
                dataType: "json"
            });
        }
        //#endregion

        //#region View Treatment Logs
        function viewTreatmentLogs(trId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("ViewTreatmentLogs", "Treatments", new { area = "Masters" })?trId=" + trId,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#treatment_log_modal_body").html(data);
                    $("#treatment_modal_log").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Viewing Treatment Logs : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region UI / UX Functions
        function resizedt() {
            setTimeout(function () {
                $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
            }, 350);
        }
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
         //#endregion
    </script>
}