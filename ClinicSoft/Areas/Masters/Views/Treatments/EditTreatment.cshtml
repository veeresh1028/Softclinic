@model BusinessEntities.Masters.Treatments
<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold">Update Treatment</h5>
    <button type="button" class="btn-close btnCloseEdit" data-bs-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body p-4">
    <form id="form_EditTreatment" >
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.trId)
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12 mb-4 font-weight-semibold">
                <span class="text-danger" style="font-size:smaller">Required fields are marked with *</span>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12 col-md-6 col-lg-6">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Branch&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.tr_branch, new SelectList(Model.BranchList, "id", "text"), "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-6">
                <div class="form-group mb-3">
                    <label class="form-label">Insurance&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.tr_ins, new List<SelectListItem> { }, "Select Insurance", new { @class = "form-select mb-2 select2", @id = "tr_ins" })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Activity Type&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.tr_itype, new List<SelectListItem>
                      {
                         new SelectListItem{ Text="CPT", Value = "3", Selected=true},
                         new SelectListItem{ Text="HCPCS", Value = "4" },
                         new SelectListItem{ Text="DRUG", Value = "5" },
                         new SelectListItem{ Text="Dental", Value = "6" },
                         new SelectListItem{ Text="Service", Value = "8" },
                         new SelectListItem{ Text="IR-DRG", Value = "9" },
                      }, "Select Activity Type", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Package Type&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.tr_lcode, new List<SelectListItem>
                    {
                        new SelectListItem{ Text="Normal", Value = "Normal", Selected=true },
                        new SelectListItem{ Text="Package", Value = "Package" },
                    }, "Select Type", new { @class = "form-select select2", })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Internal Code&nbsp;</label>
                    @Html.TextBoxFor(m => m.tr_icode, new { @class = "form-control", @placeholder = "Enter Internal Code", @maxlength = "14" })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">CPT Code&nbsp;<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.tr_code, new { @class = "form-control", @placeholder = "Ex : 1201", @maxlength = "40" })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Group&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.tr_group, new List<SelectListItem> { }, "Select Group", new { @class = "form-select  mb-2 select2", @id = "tr_group" })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">VAT %&nbsp;<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.tr_vat, new { @class = "form-control text-end", @placeholder = "Ex : 5.00", @min = 0, @max = 100, @onkeypress = "return validateOneDecimalNumeric(this,event);" })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Classification&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.tr_class, new List<SelectListItem>
                      {
                         new SelectListItem{ Text="Routine", Value = "Routine", Selected=true },
                         new SelectListItem{ Text="High Profile", Value = "High Profile" },
                      }, "Select Classification", new { @class = "form-select select2", })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Multi-Tooth Treatment?&nbsp;</label>
                    @Html.DropDownListFor(m => m.tr_notes, new List<SelectListItem>
                      {
                         new SelectListItem{ Text="No", Value = "No", Selected=true },
                         new SelectListItem{ Text="Yes", Value = "Yes" },
                      }, "Select Classification", new { @class = "form-select select2", })
                </div>
            </div>
            <div class="col-sm-12 col-md-12 col-lg-12">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Treatment&nbsp;<span class="text-danger">*</span></label>
                    @Html.TextAreaFor(m => m.tr_name, new { @class = "form-control mb-2", @placeholder = "Ex : Root Canal Treatment", @maxlength = "500" })
                </div>
            </div>
            <div class="col-sm-12 col-md-2 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Treatment Type&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.tr_type, new List<SelectListItem> { }, "Select Type", new { @class = "form-select mb-2 select2", @id = "tr_type" })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Attachment Needed ?&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.tr_norm_range, new List<SelectListItem>
                    {
                        new SelectListItem{ Text="Yes", Value = "Yes", },
                        new SelectListItem{ Text="No", Value = "No", Selected=true },
                    }, "Select Type", new { @class = "form-select select2", @id = "tr_norm_range" })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Teeth No.&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.tr_tooth, new List<SelectListItem>
                       {
                          new SelectListItem{ Text="Required", Value = "Required" },
                          new SelectListItem{ Text="Not-Required", Value = "Not-Required", Selected=true },
                       }, "Select Teeth", new { @class = "form-select select2", })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Prior Auth&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.tr_dent_option, new List<SelectListItem>
                    {
                        new SelectListItem{ Text="Required", Value = "Required" },
                        new SelectListItem{ Text="Not-Required", Value = "Not-Required", Selected=true },
                    }, "Select Prior Auth", new { @class = "form-select select2", })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Lab Department&nbsp;</label>
                    @Html.DropDownListFor(m => m.tr_lab_dept, new List<SelectListItem> { }, "Select Lab Department", new { @class = "form-select mb-2 select2", @id = "tr_lab_dept" })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Price&nbsp;</label>
                    @Html.TextBoxFor(m => m.tr_price, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 250.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
                </div>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Cost &nbsp;</label>
                    @Html.TextBoxFor(m => m.tr_cost, new { @class = "form-control mb-2 text-right", @placeholder = "Ex: 500.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
                </div>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Validity Days &nbsp;</label>
                    @Html.TextBoxFor(m => m.tr_rdays, new { @class = "form-control mb-2 text-right", @placeholder = "Ex : 30", @id = "tr_rdays", @min = 0 })
                </div>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Discount &nbsp;</label>
                    @Html.TextBoxFor(m => m.tr_disc, new { @class = "form-control mb-2 text-right", @placeholder = "Ex : 10.00", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
                </div>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black"> &nbsp;</label>
                    @Html.DropDownListFor(m => m.tr_disc_type, new List<SelectListItem>
                    {
                        new SelectListItem{ Text="Fixed", Value = "Fixed" },
                        new SelectListItem{ Text="%", Value = "%", Selected=true },
                    }, "Select Disc Type", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black font-weight-semibold">Valid From&nbsp;<span class="text-danger">*</span></label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="input-group-text">
                                <i class="fe fe-calendar"></i>
                            </div>
                        </div>
                        @Html.TextBoxFor(m => m.tr_start_date, new { @class = "form-control", @placeholder = "DD-MMMM-YYYY", @id = "tr_start_date" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-3 col-lg-3">
                <div class="form-group mb-3">
                    <label class="form-label text-black font-weight-semibold">Valid To&nbsp;<span class="text-danger">*</span></label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="input-group-text">
                                <i class="fe fe-calendar"></i>
                            </div>
                        </div>
                        @Html.TextBoxFor(m => m.tr_end_date, new { @class = "form-control", @placeholder = "DD-MMMM-YYYY", @id = "tr_end_date" })
                    </div>
                </div>
            </div>

        </div>
        <div class="row mt-2">
            <div id="errorEdit"></div>
            <div class="col-sm-12 col-lg-12 text-center">
                <div class="btn-list btn-animation">
                    <button type="submit" class="btn btn-warning" id="btn_Update">Save Changes</button>
                    <button type="button" class="btn btn-outline-danger me-1 btnCloseEdit" data-bs-dismiss="modal">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

<script type="text/javascript">
    //#region Page Load
    $(function () {
        $("#tr_branch").select2({
            placeholder: 'Select Branch',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 6,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#tr_itype").select2({
            placeholder: 'Select Activity Type',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#tr_lcode").select2({
            placeholder: 'Select Package Type',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#tr_class").select2({
            placeholder: 'Select Classification',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#tr_notes").select2({
            placeholder: 'Select',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#tr_tooth").select2({
            placeholder: 'Select Teeth No.',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#tr_dent_option").select2({
            placeholder: 'Select Prior Auth',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#tr_norm_range").select2({
            placeholder: 'Select Attachment Needed',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#tr_disc_type").select2({
            placeholder: 'Select Discount Type',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#tr_lab_dept").select2({
            placeholder: 'Select Lab Department',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 6,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $('#tr_start_date,#tr_end_date').bootstrapdatepicker({
            format: "dd-MM-yyyy",
            viewMode: "date",
            todayHighlight: true,
            autoclose: true,
            multidate: false,
            multidateSeparator: "-",
            startDate: moment("@Model.tr_start_date").format("DD-MMMM-YYYY")
        });

        $("#tr_start_date").bootstrapdatepicker("setDate", moment("@Model.tr_start_date").format("DD-MMMM-YYYY"));
        $("#tr_end_date").bootstrapdatepicker("setDate", moment("@Model.tr_end_date").format("DD-MMMM-YYYY"));

        load_insurance("@Model.tr_ins");
        load_treatgroup("@Model.tr_group");
        load_treattype("@Model.tr_type");
        load_labdept("@Model.tr_lab_dept");

        validation();
    });
    //#endregion

    //#region Validation Initialization
    var validation = function () {
        $("#form_EditTreatment").validate({
            focusInvalid: true,
            rules:
            {
                tr_branch: {
                    required: true
                },
                tr_ins: {
                    required: true
                },
                tr_group: {
                    required: true
                },
                tr_vat: {
                    required: true
                },
                tr_vat2: {
                    required: true
                },
                tr_name: {
                    required: true
                },
                tr_class: {
                    required: true
                },
                tr_tooth: {
                    required: true
                },
                tr_dent_option: {
                    required: true
                },
                tr_norm_range: {
                    required: true
                },
                tr_start_date: {
                    required: true
                },
                tr_end_date: {
                    required: true
                },
                tr_category: {
                    required: true
                },
                tr_itype: {
                    required: true
                },
                tr_code: {
                    required: true
                }
            },
            messages: {
                tr_branch: {
                    required: "Please Select Branch"
                },
                tr_ins: {
                    required: "Please Select Insurance"
                },
                tr_group: {
                    required: "Please Select Group"
                },
                tr_vat: {
                    required: "Enter Medical Necessity VAT %"
                },
                tr_vat2: {
                    required: "Enter Medical Un-Necessity VAT %"
                },
                tr_name: {
                    required: "Enter Treatment"
                },
                tr_class: {
                    required: "Please Select Class"
                },
                tr_tooth: {
                    required: "Please Select Teeth"
                },
                tr_dent_option: {
                    required: "Please Select Prior Auth"
                },
                tr_norm_range: {
                    required: "Please Select Attachment Req"
                },
                tr_start_date: {
                    required: "Please Select Start Date"
                },
                tr_end_date: {
                    required: "Please Select End Date"
                },
                tr_category: {
                    required: "Please Select VAT Category"
                },
                tr_itype: {
                    required: "Please Select Activity Type"
                },
                tr_code: {
                    required: "Enter CPT Code"
                }
            },
            highlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                } else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });

        $('#tr_branch').on('change', function () {
            $(this).trigger('blur');
        });
        $('#tr_ins').on('change', function () {
            $(this).trigger('blur');
        });
        $('#tr_group').on('change', function () {
            $(this).trigger('blur');
        });
        $('#tr_class').on('change', function () {
            $(this).trigger('blur');
        });
        $('#tr_tooth').on('change', function () {
            $(this).trigger('blur');
        });
        $('#tr_itype').on('change', function () {
            $(this).trigger('blur');
        });
        $('#tr_category').on('change', function () {
            $(this).trigger('blur');
        });
        $('#tr_dent_option').on('change', function () {
            $(this).trigger('blur');
        });
        $('#tr_start_date').on('change', function () {
            $(this).trigger('blur');
        });
        $('#tr_end_date').on('change', function () {
            $(this).trigger('blur');
        });

        $('#tr_price').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 1000000) {
                return false;
            }
        });
        $("#tr_price").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#tr_price").val(0.00);
            }
        });

        $('#tr_cost').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 1000000) {
                return false;
            }
        });
        $("#tr_cost").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#tr_cost").val(0.00);
            }
        });

        $('#tr_disc').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);
            var discType = $('#tr_disc_type').val();

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            var maxAllowed = (discType === '%' ? 100 : 100000);
            if (parseFloat(inputValue) > maxAllowed) {
                return false;
            }
        });

        $("#tr_disc").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#tr_disc").val(0.00);
            }
        });

        $("#tr_disc_type").on('change', function () {
            $('#tr_disc').trigger('keypress');
        });

        $('#tr_vat').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 100) {
                return false;
            }
        });
        $("#tr_vat").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#tr_vat").val(0.00);
            }
        });

        $('#tr_rdays').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 366) {
                return false;
            }
        });
        $("#tr_rdays").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#tr_rdays").val(0);
            }
        });

        $('#tr_start_date').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                return false;

            }
            else {
                if (e.target.value.length >= 18)
                    return false;
            }
        });
        $('#tr_end_date').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                return false;

            }
            else {
                if (e.target.value.length >= 18)
                    return false;
            }
        });
    }
    //#endregion

    //#region Validate Decimal
    function validateOneDecimalNumeric(el, evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        var number = el.value.split('.');
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        //just one dot
        if (number.length > 1 && charCode == 46) {
            return false;
        }
        //get the Current position
        var caratPos = getSelectionStart(el);
        var dotPos = el.value.indexOf(".");
        if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {
            return false;
        }
        return true;
    }
    function getSelectionStart(o) {
        if (o.createTextRange) {
            var r = document.selection.createRange().duplicate()
            r.moveEnd('character', o.value.length)
            if (r.text == '') return o.value.length
            return o.value.lastIndexOf(r.text)
        } else return o.selectionStart
    }
    //#endregion

    //#region Load Insurances
    var load_insurance = function (tr_ins) {
        $("#tr_ins").select2({
            placeholder: 'Select Insurance',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 6,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $.ajax({
            url: '@Url.Action("GetInsurance", "Treatments", new { area = "Masters" })?query=',
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                $('#tr_ins').empty();

                if (response.length > 0) {
                    $.each(response, function (j) {
                        var newOption = new Option(response[j].text, response[j].id, (parseInt(response[j].id) == tr_ins) ? true : false, (parseInt(response[j].id) == tr_ins) ? true : false);
                        $('#tr_ins').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    };
    //#endregion

    //#region Load Treatment Groups
    var load_treatgroup = function (tr_group) {
        $("#tr_group").select2({
            placeholder: 'Select Treatment Group',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 6,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $.ajax({
            url: '@Url.Action("GetTreatmentGroup", "Treatments", new { area = "Masters" })?query=',
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                $('#tr_group').empty();

                if (response.length > 0) {
                    $.each(response, function (j) {
                        var newOption = new Option(response[j].text, response[j].id, (response[j].id == tr_group) ? true : false, (response[j].id == tr_group) ? true : false);
                        $('#tr_group').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    };
    //#endregion

    //#region load Treatment Type
    var load_treattype = function (tr_type) {
        $("#tr_type").select2({
            placeholder: 'Select Treatment Type ',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 6,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $.ajax({
            url: '@Url.Action("GetTreatmentType", "Treatments", new { area = "Masters" })?query=',
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                $('#tr_type').empty();

                if (response.length > 0) {
                    $.each(response, function (j) {
                        var newOption = new Option(response[j].text, response[j].id, (response[j].text == tr_type) ? true : false, (response[j].text == tr_type) ? true : false);
                        $('#tr_type').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    };
    //#endregion

    //#region Load Lab Departments
    var load_labdept = function (tr_lab_dept) {
        $("#tr_lab_dept").select2({
            placeholder: 'Select Lab Dept',
            width: '100%',
            minimumResultsForSearch: '',
            maximumInputLength: 6,
            dropdownParent: $('#form_EditTreatment'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $.ajax({
            url: '@Url.Action("GetLabDepartment", "Treatments", new { area = "Masters" })?query=',
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                $('#tr_lab_dept').empty();

                if (response.length > 0) {
                    $.each(response, function (j) {
                        var newOption = new Option(response[j].text, response[j].id, (response[j].id == tr_lab_dept) ? true : false, (response[j].id == tr_lab_dept) ? true : false);
                        $('#tr_lab_dept').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    };
    //#endregion

    //#region Update Treatment Click
    $('#btn_Update').on('click', function (e) {
        e.preventDefault();

        if ($("#form_EditTreatment").valid()) {

            $('#btn_Update').removeClass("btn btn-warning");
            $('#btn_Update').addClass("btn btn-warning btn-loaders btn-icon");
            $('#btn_Update').parent().addClass("curdrop");
            $('.btnCloseEdit').addClass("disabled");
            $('#btn_Update').html("Saving Changes... Please Wait");

            let isValid = true;
            let start = moment($("#tr_start_date").val(), "DD-MMMM-YYYY");
            let end = moment($("#tr_end_date").val(), "DD-MMMM-YYYY");

            if (($("#tr_start_date").val() != null && $("#tr_start_date").val() != 0 && $("#tr_start_date").val() != "" && $("#tr_start_date").val() != undefined) && ($("#tr_end_date").val() != null && $("#tr_end_date").val() != 0 && $("#tr_end_date").val() != "" && $("#tr_end_date").val() != undefined)) {
                if (start.isValid() && end.isValid()) {
                    if (end.diff(start, 'days') <= 0) {
                        isValid = false;

                        var index = [];
                        index.push("tr_start_date");
                        index.push("tr_end_date");

                        $.each(index, function (i, v) {
                            if (index[i] != null && index[i] != "") {
                                var elem = $("#" + index[i]);
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                }
                                else {
                                    $(elem).addClass(" is-invalid");
                                }

                                setTimeout(function () {
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                    }
                                    else {
                                        $(elem).removeClass("is-invalid");
                                    }
                                }, 5000);
                            }
                        });

                        e.stopPropagation();

                        var alertPlaceholder = document.getElementById("errorEdit");
                        function alert(e, t) {
                            var l = document.createElement("div");
                            l.innerHTML = '<div class="alert alert-light-' + t + ' alert-dismissible d-flex justify-content-center" role="alert">' + e +
                                '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                        }
                        alert("<i class='fa fa-ban text-white'></i>&nbsp; Valid To date should be greater than Valid From Date!", "danger");
                        Timeout();
                    }
                }
            }

            var lab_dept = "";
            if ($("#tr_lab_dept :selected").text() != "Select Lab Department") {
                lab_dept = $("#tr_lab_dept :selected").text();
            }

            if (isValid) {

                var _dataUpdate = {
                    "trId": $("#trId").val(),
                    "tr_branch": $("#tr_branch").val(),
                    "tr_ins": $("#tr_ins").val(),
                    "tr_itype": $("#tr_itype").val(),
                    "tr_icode": $("#tr_icode").val(),
                    "tr_lcode": $("#tr_lcode").val(),
                    "tr_code": $("#tr_code").val().trim(),
                    "tr_group": $("#tr_group").val(),
                    "tr_vat": parseFloat($("#tr_vat").val()),
                    "tr_name": $("#tr_name").val().trim(),
                    "tr_type": $("#tr_type :selected").text(),
                    "tr_class": $("#tr_class").val(),
                    "tr_tooth": $("#tr_tooth").val(),
                    "tr_lab_dept": lab_dept,
                    "tr_dent_option": $("#tr_dent_option").val(),
                    "tr_norm_range": $("#tr_norm_range").val(),
                    "tr_price": parseFloat($("#tr_price").val()),
                    "tr_cost": parseFloat($("#tr_cost").val()),
                    "tr_disc_type": $("#tr_disc_type").val(),
                    "tr_start_date": moment($("#tr_start_date").val()).format("YYYY-MM-DD"),
                    "tr_end_date": moment($("#tr_end_date").val()).format("YYYY-MM-DD"),
                    "tr_disc": parseFloat($("#tr_disc").val()),
                    "tr_rdays": $("#tr_rdays").val(),
                    "tr_notes": $("#tr_notes").val().trim(),
                    "tr_dept": "1",
                    "tr_parent": 0,
                    "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                }

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("UpdateTreatment", "Treatments", new {area = "Masters" })",
                    dataType: 'json',
                    data: _dataUpdate,
                    success: function (data) {
                        $('#btn_Update').parent().removeClass("curdrop");
                        $('.btnCloseEdit').removeClass("disabled");
                        $('#btn_Update').removeClass("btn btn-warning btn-loaders btn-icon");
                        $('#btn_Update').addClass("btn btn-warning");
                        $('#btn_Update').html("Save Changes");

                        if (data.isSuccess) {
                            if (data.isUpdated) {
                                var alertPlaceholder = document.getElementById("TreatmentAlert");
                                function alert(e, t) {
                                    var l = document.createElement("div");
                                    l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                }
                                alert("<i class='fe fe-check-circle text-white'></i> Treatment Updated Successfully!", "success");
                                $('#treatment_modal').modal('toggle');
                                GetTreatments(0);
                                Timeout();
                            }
                            else {
                                let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                    "<div class='alert alert-light-warning' role='alert'>" +
                                    "<button type='button' class='btn-close text-warning' style='margin-bottom:-5px;' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                    "<strong><i class='fa fa-exclamation-triangle text-warning'></i> Treatment Already Exists with the same details!</strong><br/>" +
                                    "</div></div>";
                                $("#errorEdit").html(html);
                            }
                        }
                        else {
                            let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                "<div class='alert alert-light-danger' role='alert'>" +
                                "<button type='button' class='btn-close text-danger' style='margin-bottom:-5px;' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                "<strong><i class='fa fa-ban text-danger'></i> Validation Error! Please validate before submitting.</strong><br/><ul>";

                            $.each(data.message, function (index, value) {
                                html += "<li><small>" + value + "</small><li>";
                                var elem = $("#" + index);
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                }
                                else {
                                    $(elem).addClass(" is-invalid");
                                }

                                setTimeout(function () {
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                    }
                                    else {
                                        $(elem).removeClass("is-invalid");
                                    }
                                }, 5000);
                            });

                            html += "</ul></div></div>";
                            $("#errorEdit").html(html);
                        }
                    },
                    error: function (xhr) {
                        $('#btn_Update').parent().removeClass("curdrop");
                        $('.btnCloseEdit').removeClass("disabled");
                        $('#btn_Update').removeClass("btn btn-warning btn-loaders btn-icon");
                        $('#btn_Update').addClass("btn btn-warning");
                        $('#btn_Update').html("Save Changes");

                        var alertPlaceholder = document.getElementById("DesignationAlert");
                        function alert(e, t) {
                            var l = document.createElement("div");
                            l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                        }
                        alert("<i class='fa fa-ban text-white'></i> Error while updating Treatment! Error : " + xhr.statusText, "danger");

                        $('#treatment_modal').modal('toggle');
                        Timeout();
                    }
                });
            }

            $('#btn_Update').parent().removeClass("curdrop");
            $('.btnCloseEdit').removeClass("disabled");
            $('#btn_Update').removeClass("btn btn-warning btn-loaders btn-icon");
            $('#btn_Update').addClass("btn btn-warning");
            $('#btn_Update').html("Save Changes");
    }
    else {
        $('.modal-body').animate({
            scrollTop: ($('.has-error').offset().top - 300)
        }, 2000);
    }
    });
    //#endregion
</script>