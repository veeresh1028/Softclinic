@model IEnumerable<BusinessEntities.Masters.Designations>
@{
    ViewBag.Title = "Employee Designations";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary">
            <span data-lang-key="designations">Designations</span>
        </h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list">
            <a data-bs-toggle="modal" data-bs-target="#create_desig_modal" class="btn btn-secondary" onclick="addDesignation()"><i class="mdi mdi-plus"></i>&nbsp; <span data-lang-key="add-designation">Add Designation</span></a>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="DesignationAlert"></div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table id="tbl_designations" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                <th class="border-bottom-0 font-weight-semibold text-white">#</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="designation-id">Designation ID</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                <span data-lang-key="designations">Designations
                                    </span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="rights">
                                        Rights
                                    </span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="status">
                                        Status
                                    </span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="edit">
                                        Edit
                                    </span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="delete">
                                        Delete
                                    </span>
                                </th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="demo-static-toast">
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 100000000">
        <div id="rightsToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        </div>
    </div>
</div>
<!-- Create Designation Modal -->
<div class="modal fade" id="create_desig_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" id="sizeC">
        <div class="modal-content" id="create_desig_body">
        </div>
    </div>
</div>
<!-- End Create Designation Modal -->
<!-- Update Designation Modal -->
<div class="modal fade" id="update_desig_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" id="sizeU">
        <div class="modal-content" id="update_desig_body">
        </div>
    </div>
</div>
<!-- End Update Designation Modal -->
<!-- Employeewise Designation Modal -->
<div class="modal fade" id="emp_desig_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" id="sizeV">
        <div class="modal-content" id="emp_desig_body">
        </div>
    </div>
</div>
<!-- End Employeewise Designation Modal -->
<!-- Designation Rights Modal -->
<div class="modal fade" id="desig_rights_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" id="sizeR">
        <div class="modal-content" id="desig_rights_body">
        </div>
    </div>
</div>
<!-- End Designation Rights Modal -->
@section myScripts{
    <script>
        //#region Page Load
        $(function () {
            GetDesignations();
        });
        //#endregion

        //#region Load Designations
        var GetDesignations = function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAllDesignations", "Designation", new { area = "Masters" })",
                success: function (response) {
                    if (response.isAuthorized != false) {
                        var table;
                        if ($.fn.dataTable.isDataTable('#tbl_designations')) {
                            table = $('#tbl_designations').DataTable();
                            table.clear();
                            table.rows.add(response).draw();
                        }
                        else {
                            BindDataTable(response);
                        }
                    }
                    else {
                        console.log("You are not Authorized!");
                    }
                },
                error: function (xhr) {
                    console.log("Failed to Load Designations! Error : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Bind Datatable
        var BindDataTable = function (response) {
            var table = $("#tbl_designations").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 50,
                stateSave: true,
                "retrieve": true,
                lengthChange: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "mData": "desiId",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-center",
                        "render": function (data, type, row, meta) {
                            let _index = (meta.row) + 1;
                            if (_index >= 10) {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>" + _index + "</a>";
                            }
                            else {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>0" + _index + "</a>";
                            }
                        }
                    },
                    {
                        "mData": "desiId",
                        "visible": false,
                        "className": "text-end"
                    },
                    {
                        "mData": "designation",
                        "className": "font-weight-bold text-info text-capitalize",
                        "render": function (data, type, full, meta) {
                            var desiId = full.desiId;
                            return '<a data-bs-toggle="modal" data-bs-target="#emp_desig_modal" onclick="viewEmpDesignation(' + desiId + ')">' + data + '</a>';
                        }
                    },
                    {
                        "mData": "desiId",
                        "className": 'text-center',
                        "orderable": false,
                        "searchable": false,
                        "render": function (desiId, type, full, meta) {
                            var status = full.desi_status;

                            if (status === "Active") {
                                return '<a data-bs-toggle="modal" data-bs-target="#desig_rights_modal" onclick="designationRights(' + desiId + ')"><i class="fe fe-lock text-warning" style="font-size: 15px;"></i></a>';
                            }
                            else {
                                return '';
                            }
                        }
                    },
                    {
                        "mData": "desiId",
                        "className": 'btn-status text-center',
                        "render": function (desiId, type, full, meta) {
                            var visible = full.actionvisible;
                            var desi_status = full.desi_status;

                            if (visible === "True") {
                                if (desi_status === "Active") {
                                    return '<button type="button" class="badge rounded-pill bg-success mt-2 border-success" style="width: 60px;" onclick="updateStatus(\'' + desiId + '\',\' Active \')">Active</button>'
                                }
                                else if (desi_status === "Inactive") {
                                    return '<button type="button" class="badge rounded-pill bg-warning mt-2 border-warning" style="width: 60px;" onclick="updateStatus(\'' + desiId + '\',\'Inactive\')">Inactive</button>'
                                }
                                else if (desi_status === "Deleted") {
                                    return '<button type="button" class="badge rounded-pill bg-danger mt-2 border-danger" style="width: 60px;" onclick="updateStatus(\'' + desiId + '\',\'Deleted\')">Deleted</button>'
                                }
                                else {
                                    return ''
                                }
                            }
                            else {
                                return '<span class="badge rounded-pill text-danger mt-2 border-danger">Allocated</span>'
                            }
                        }
                    },
                    {
                        "mData": "desiId",
                        "className": 'btn-edit text-center',
                        "orderable": false,
                        "searchable": false,
                        "render": function (desiId, type, full, meta) {
                            var status = full.desi_status;
                            var visible = full.actionvisible;

                            if (status === "Active" && visible === "True") {
                                return '<button type="button" data-bs-toggle="modal" data-bs-target="#update_desig_modal" onclick="editDesignation(' + desiId + ')" class="btn btn-sm btn-outline-primary">Edit</button>';
                            }
                            else {
                                return ''
                            }
                        }
                    },
                    {
                        "mData": "desiId",
                        "className": 'btn-delete text-center',
                        "orderable": false,
                        "searchable": false,
                        "render": function (desiId, type, full, meta) {
                            var status = full.desi_status;
                            var visible = full.actionvisible;

                            if (status === "Active" && visible === "True") {
                                return '<button type="button" onclick="deleteDesignation(' + desiId + ')" class="btn btn-sm btn-outline-danger">Delete</button>';
                            }
                            else {
                                return ''
                            }
                        }
                    }
                ],
                order: [[2, 'asc']],
                language: {
                    searchPlaceholder: 'Search...',
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Designation / Status</span>',
                    lengthMenu: '_MENU_',
                    scrollX: "100%"
                },
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Designations',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 2, 4]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Designations to Excel!");
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Designations',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 2, 4]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Designations to PDF!");
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Designations',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 2, 4]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Designations to CSV!");
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Designations',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 2, 4]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, node, config);
                            exportLogs("Employee Printed Designations!");
                        }
                    }
                ]
            });
            table.buttons().container().appendTo('#tbl_designations_wrapper .col-md-6:eq(0)');
        };
        //#endregion

        //#region Add Designation
        function addDesignation() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("CreateDesignation", "Designation", new { area = "Masters" })",
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#create_desig_body").html(data);
                    $("#create_desig_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Adding Designation : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Edit Designation
        function editDesignation(desiId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("EditDesignation", "Designation", new { area = "Masters" })?desiId=" + desiId,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#update_desig_body").html(data);
                    $("#update_desig_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Editing Designation : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Update Designation Status
        var updateStatus = function (desiId, desi_status) {
            desi_status = (desi_status == "Deleted" || desi_status == "Inactive") ? "Active" : "Inactive"
            Swal.fire({
                title: "Are you sure you want to change this status ?",
                text: "The selected designation status will be changed!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        type: 'POST',
                        url: "@Url.Action("UpdateDesignationStatus", "Designation", new { area = "Masters" })?desiId=" + desiId + "&desi_status=" + desi_status ,
                        dataType: 'json',
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.success) {
                                    GetDesignations();
                                    Swal.fire({
                                        title: "Success!",
                                        text: data.message,
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        title: "Action Forbidden!",
                                        text: data.message,
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to change Designation Status!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Change Status! Please Refresh the Page & Try Again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                       }
                    });
                }
            });
        }
        //#endregion

        //#region Delete Designation
        var deleteDesignation = function (desiId) {
            Swal.fire({
                title: "Are you sure you want to delete this designation ?",
                text: "The selected Designation will be deleted!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: '@Url.Action("DeleteDesignation", "Designation", new { area = "Masters" })?desiId=' + desiId + '&desi_status=Deleted',
                        type: "POST",
                        dataType: 'json',
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.success) {
                                    GetDesignations();
                                    Swal.fire({
                                        title: "Success!",
                                        text: data.message,
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        title: "Action Forbidden!",
                                        text: data.message,
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to delete designations!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Delete Designation! Please Refresh The Page & Try Again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    });
                }
            });
        }
        //#endregion

        //#region View Employees Based on Designation
        function viewEmpDesignation(desiId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("ViewEmpDesignation", "Designation", new { area = "Masters" })?desiId=" + desiId,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#emp_desig_body").html(data);
                    $("#emp_desig_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Viewing Employeewise Designation : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Export General Logs
        var exportLogs = function (desc) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportLogs", "AuditLogs", new { area = "Common" })?desc="+ desc,
                contentType: "application/json",
                dataType: "json"
            });
        }
        //#endregion

        //#region Designation Rights
        function designationRights(desiId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("DesignationRights", "Designation", new { area = "Masters" })?desiId=" + desiId,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#desig_rights_body").html(data);
                    $("#desig_rights_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while loading Designation Rights! Error : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region UI Functions
        var alertPlaceholder = document.getElementById("DesignationAlert");
        function alert(e, t) {
            var l = document.createElement("div");
            l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                '<button type="button" class="btn-close text-white" style="margin-bottom:-5px;" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
        }
        function resizedt() {
            setTimeout(function () {
                $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
            }, 350);
        }
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
        //#endregion
    </script>
}