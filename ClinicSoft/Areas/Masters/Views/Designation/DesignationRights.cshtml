@model BusinessEntities.Masters.DesignationRights
@{
    string viewModelJson = System.Text.Json.JsonSerializer.Serialize(Model);
}
<style>
    #sizeR {
        max-width: 1200px;
    }

    .custom-switch-input:checked ~ .custom-switch-indicator-success {
        background: #38cb89;
    }

    .custom-switch-input:checked ~ .custom-switch-indicator-info {
        background: #3e80eb;
    }

    .custom-switch-input:checked ~ .custom-switch-indicator-warning {
        background: #ffab00;
    }

    .custom-switch-input:checked ~ .custom-switch-indicator-danger {
        background: #dc0441;
    }

    .custom-switch-input:checked ~ .custom-switch-indicator-secondary {
        background: #5b73e8;
    }

    .custom-switch-input:checked ~ .custom-switch-indicator-dark {
        background: #343a40;
    }
</style>
<!-- INTERNAL treeview -->
<link href="~/assets/plugins/treeview/treeview.css" rel="stylesheet" type="text/css" />
<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold">Designation Rights</h5>
    <button type="button" class="btn-close btnCloseRights" data-bs-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body p-4">
    <div class="row mb-2">
        <div class="col-lg-12 col-md-12 col-sm-12 text-end">
            <div class="form-group">
                <label class="custom-switch">
                    <span class="custom-switch-description me-2">All</span>
                    <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="all_all" onchange="pageAccess_all('all')">
                    <span class="custom-switch-indicator"></span>
                </label>

                <label class="custom-switch">
                    <span class="custom-switch-description me-2">Create</span>
                    <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="all_c" onchange="pageAccess_all('c')">
                    <span class="custom-switch-indicator custom-switch-indicator-success"></span>
                </label>

                <label class="custom-switch">
                    <span class="custom-switch-description me-2">Update</span>
                    <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="all_u" onchange="pageAccess_all('u')">
                    <span class="custom-switch-indicator custom-switch-indicator-warning"></span>
                </label>

                <label class="custom-switch">
                    <span class="custom-switch-description me-2">Read</span>
                    <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="all_r" onchange="pageAccess_all('r')">
                    <span class="custom-switch-indicator custom-switch-indicator-info"></span>
                </label>

                <label class="custom-switch">
                    <span class="custom-switch-description me-2">Delete</span>
                    <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="all_d" onchange="pageAccess_all('d')">
                    <span class="custom-switch-indicator custom-switch-indicator-danger"></span>
                </label>

                <label class="custom-switch">
                    <span class="custom-switch-description me-2">Export</span>
                    <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="all_e" onchange="pageAccess_all('e')">
                    <span class="custom-switch-indicator custom-switch-indicator-secondary"></span>
                </label>

                <label class="custom-switch">
                    <span class="custom-switch-description me-2">Print</span>
                    <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="all_p" onchange="pageAccess_all('p')">
                    <span class="custom-switch-indicator custom-switch-indicator-dark"></span>
                </label>
            </div>
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <div class="card shadow-lg">
                <div class="card-body">
                    @Html.HiddenFor(m => m.desiId)
                    <ul id="rights_treeview">
                        @foreach (var m in Model.modules_list)
                        {
                            <li>
                                <a href="javascript:void(0);">@m.L1_Value</a>

                                <div class="pull-right">
                                    <label class="custom-switch">
                                        <span class="custom-switch-description me-2">All</span>
                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="alll1_@m.L1Id" onchange="pageAccess('all', @m.L1Id, 1, @m.L1Id, 0)">
                                        <span class="custom-switch-indicator"></span>
                                    </label>

                                    <label class="custom-switch">
                                        <span class="custom-switch-description me-2">Create</span>
                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="cl1_@m.L1Id" onchange="pageAccess('c', @m.L1Id, 1, @m.L1Id, 0)">
                                        <span class="custom-switch-indicator custom-switch-indicator-success"></span>
                                    </label>

                                    <label class="custom-switch">
                                        <span class="custom-switch-description me-2">Update</span>
                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="ul1_@m.L1Id" onchange="pageAccess('u', @m.L1Id, 1, @m.L1Id, 0)">
                                        <span class="custom-switch-indicator custom-switch-indicator-warning"></span>
                                    </label>

                                    <label class="custom-switch">
                                        <span class="custom-switch-description me-2">Read</span>
                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="rl1_@m.L1Id" onchange="pageAccess('r', @m.L1Id, 1, @m.L1Id, 0)">
                                        <span class="custom-switch-indicator custom-switch-indicator-info"></span>
                                    </label>

                                    <label class="custom-switch">
                                        <span class="custom-switch-description me-2">Delete</span>
                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="dl1_@m.L1Id" onchange="pageAccess('d', @m.L1Id, 1, @m.L1Id, 0)">
                                        <span class="custom-switch-indicator custom-switch-indicator-danger"></span>
                                    </label>

                                    <label class="custom-switch">
                                        <span class="custom-switch-description me-2">Export</span>
                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="el1_@m.L1Id" onchange="pageAccess('e', @m.L1Id, 1, @m.L1Id, 0)">
                                        <span class="custom-switch-indicator custom-switch-indicator-secondary"></span>
                                    </label>

                                    <label class="custom-switch">
                                        <span class="custom-switch-description me-2">Print</span>
                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="pl1_@m.L1Id" onchange="pageAccess('p', @m.L1Id, 1, @m.L1Id, 0)">
                                        <span class="custom-switch-indicator custom-switch-indicator-dark"></span>
                                    </label>
                                </div>
                                @{
                                    var sub_module = from submod in Model.sub_modules_list
                                                     where submod.L1Id == m.L1Id
                                                     select new { submod.L1Id, submod.L2Id, submod.L2_Value, submod.L2_Status };


                                    foreach (var sm in sub_module)
                                    {
                                        <ul>
                                            <li>
                                                @sm.L2_Value

                                                <div class="pull-right">
                                                    <label class="custom-switch">
                                                        <span class="custom-switch-description me-2">All</span>
                                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="alll2_@sm.L2Id" onchange="pageAccess('all', @sm.L2Id, 2, @m.L1Id, @sm.L2Id)">
                                                        <span class="custom-switch-indicator"></span>
                                                    </label>

                                                    <label class="custom-switch">
                                                        <span class="custom-switch-description me-2">Create</span>
                                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="cl2_@sm.L2Id" onchange="pageAccess('c', @sm.L2Id, 2, @m.L1Id, @sm.L2Id)">
                                                        <span class="custom-switch-indicator custom-switch-indicator-success"></span>
                                                    </label>

                                                    <label class="custom-switch">
                                                        <span class="custom-switch-description me-2">Update</span>
                                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="ul2_@sm.L2Id" onchange="pageAccess('u', @sm.L2Id, 2, @m.L1Id, @sm.L2Id)">
                                                        <span class="custom-switch-indicator custom-switch-indicator-warning"></span>
                                                    </label>

                                                    <label class="custom-switch">
                                                        <span class="custom-switch-description me-2">Read</span>
                                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="rl2_@sm.L2Id" onchange="pageAccess('r', @sm.L2Id, 2, @m.L1Id, @sm.L2Id)">
                                                        <span class="custom-switch-indicator custom-switch-indicator-info"></span>
                                                    </label>

                                                    <label class="custom-switch">
                                                        <span class="custom-switch-description me-2">Delete</span>
                                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="dl2_@sm.L2Id" onchange="pageAccess('d', @sm.L2Id, 2, @m.L1Id, @sm.L2Id)">
                                                        <span class="custom-switch-indicator custom-switch-indicator-danger"></span>
                                                    </label>

                                                    <label class="custom-switch">
                                                        <span class="custom-switch-description me-2">Export</span>
                                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="el2_@sm.L2Id" onchange="pageAccess('e', @sm.L2Id, 2, @m.L1Id, @sm.L2Id)">
                                                        <span class="custom-switch-indicator custom-switch-indicator-secondary"></span>
                                                    </label>

                                                    <label class="custom-switch">
                                                        <span class="custom-switch-description me-2">Print</span>
                                                        <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="pl2_@sm.L2Id" onchange="pageAccess('p', @sm.L2Id, 2, @m.L1Id, @sm.L2Id)">
                                                        <span class="custom-switch-indicator custom-switch-indicator-dark"></span>
                                                    </label>
                                                </div>

                                                @{
                                                    var page = from pg in Model.pages_list
                                                               where pg.L2Id == sm.L2Id
                                                               select new { pg.L1Id, pg.L2Id, pg.L3Id, pg.L3_Value };
                                                }

                                                <ul>
                                                    @foreach (var pg in page)
                                                    {
                                                        <li>
                                                            <i class="fe fe-corner-down-right"></i> @pg.L3_Value

                                                            <div class="pull-right">
                                                                <label class="custom-switch">
                                                                    <span class="custom-switch-description me-2">All</span>
                                                                    <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="alll3_@pg.L3Id" onchange="pageAccess('all', @pg.L3Id, 3, @m.L1Id, @sm.L2Id)">
                                                                    <span class="custom-switch-indicator"></span>
                                                                </label>

                                                                <label class="custom-switch">
                                                                    <span class="custom-switch-description me-2">Create</span>
                                                                    <input type="checkbox" name="page-access" class="custom-switch-input" id="cl3_@pg.L3Id" onchange="pageAccess('c', @pg.L3Id, 3, @m.L1Id, @sm.L2Id)">
                                                                    <span class="custom-switch-indicator custom-switch-indicator-success"></span>
                                                                </label>

                                                                <label class="custom-switch">
                                                                    <span class="custom-switch-description me-2">Update</span>
                                                                    <input type="checkbox" name="page-access" class="custom-switch-input" id="ul3_@pg.L3Id" onchange="pageAccess('u', @pg.L3Id, 3, @m.L1Id, @sm.L2Id)">
                                                                    <span class="custom-switch-indicator custom-switch-indicator-warning"></span>
                                                                </label>

                                                                <label class="custom-switch">
                                                                    <span class="custom-switch-description me-2">Read</span>
                                                                    <input type="checkbox" name="page-access" class="custom-switch-input" id="rl3_@pg.L3Id" onchange="pageAccess('r', @pg.L3Id, 3, @m.L1Id, @sm.L2Id)">
                                                                    <span class="custom-switch-indicator custom-switch-indicator-info"></span>
                                                                </label>

                                                                <label class="custom-switch">
                                                                    <span class="custom-switch-description me-2">Delete</span>
                                                                    <input type="checkbox" name="page-access" class="custom-switch-input" id="dl3_@pg.L3Id" onchange="pageAccess('d', @pg.L3Id, 3, @m.L1Id, @sm.L2Id)">
                                                                    <span class="custom-switch-indicator custom-switch-indicator-danger"></span>
                                                                </label>

                                                                <label class="custom-switch">
                                                                    <span class="custom-switch-description me-2">Export</span>
                                                                    <input type="checkbox" name="page-access" class="custom-switch-input" id="el3_@pg.L3Id" onchange="pageAccess('e', @pg.L3Id, 3, @m.L1Id, @sm.L2Id)">
                                                                    <span class="custom-switch-indicator custom-switch-indicator-secondary"></span>
                                                                </label>

                                                                <label class="custom-switch">
                                                                    <span class="custom-switch-description me-2">Print</span>
                                                                    <input type="checkbox" name="page-access" class="custom-switch-input" id="pl3_@pg.L3Id" onchange="pageAccess('p', @pg.L3Id, 3, @m.L1Id, @sm.L2Id)">
                                                                    <span class="custom-switch-indicator custom-switch-indicator-dark"></span>
                                                                </label>
                                                            </div>
                                                        </li>
                                                    }
                                                </ul>
                                            </li>
                                        </ul>
                                    }
                                }
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col-sm-12 col-md-12 col-lg-12 text-center">
            <button type="submit" class="btn btn-warning" id="btn_Update_Rights">Save Changes</button>
            <button type="button" class="btn btn-outline-danger me-1 btnCloseRights" data-bs-dismiss="modal">
                Close
            </button>
        </div>
    </div>
</div>
<!-- Internal Treeview -->
<script src="~/assets/plugins/treeview/treeview.js"></script>
<script>
    //#region Page Load
    $(function () {
        $('#rights_treeview').treed();

        var obj = JSON.parse('@Html.Raw(viewModelJson)');

        $.each(obj["checked_pages"], function (key, value) {
            var element = "#" + value;
            $(element).prop("checked", true);
        });
    });
    //#endregion

    //#region Checkbox Initializaion
    function pageAccess_all(type) {
        var el = "#all_" + type;
        var obj = JSON.parse('@Html.Raw(viewModelJson)');

        var elements = new Array();

        if (type == "all") {
            elements.push("all_all");
            elements.push("all_c");
            elements.push("all_u");
            elements.push("all_r");
            elements.push("all_d");
            elements.push("all_p");
            elements.push("all_e");
        }
        else {
            elements.push("all" + type);
        }

        $.each(obj["modules_list"], function (key, value) {
            if (type == "all") {
                elements.push("alll1_" + value["L1Id"]);
                elements.push("cl1_" + value["L1Id"]);
                elements.push("ul1_" + value["L1Id"]);
                elements.push("rl1_" + value["L1Id"]);
                elements.push("dl1_" + value["L1Id"]);
                elements.push("el1_" + value["L1Id"]);
                elements.push("pl1_" + value["L1Id"]);
            }
            else {
                elements.push(type + "l1_" + value["L1Id"]);
            }
        });

        $.each(obj["sub_modules_list"], function (key, value) {
            if (type == "all") {
                elements.push("alll2_" + value["L2Id"]);
                elements.push("cl2_" + value["L2Id"]);
                elements.push("ul2_" + value["L2Id"]);
                elements.push("rl2_" + value["L2Id"]);
                elements.push("dl2_" + value["L2Id"]);
                elements.push("el2_" + value["L2Id"]);
                elements.push("pl2_" + value["L2Id"]);
            }
            else {
                elements.push(type + "l2_" + value["L2Id"]);
            }
        });

        $.each(obj["pages_list"], function (key2, value2) {
            if (type == "all") {
                elements.push("alll3_" + value2["L3Id"]);
                elements.push("cl3_" + value2["L3Id"]);
                elements.push("ul3_" + value2["L3Id"]);
                elements.push("rl3_" + value2["L3Id"]);
                elements.push("dl3_" + value2["L3Id"]);
                elements.push("el3_" + value2["L3Id"]);
                elements.push("pl3_" + value2["L3Id"]);
            }
            else {
                elements.push(type + "l3_" + value2["L3Id"]);
            }
        });

        // Loop to Check All/Uncheck All
        if ($(el).is(':checked')) {
            $.each(elements, function (key, value) {
                var element = "#" + value;
                $(element).prop("checked", true);
            });
        }
        else {
            $.each(elements, function (key, value) {
                var element = "#" + value;
                $(element).prop("checked", false);
            });
        }
    }
    function pageAccess(type, id, level, l1Id, l2Id) {

        var obj = JSON.parse('@Html.Raw(viewModelJson)');

        var el = "#" + type + "l" + level + "_" + id;
        var el_l1Id = "#" + type + "l1_" + l1Id;
        var el_l2Id = "#" + type + "l2_" + l2Id;

        var el_alll1Id = "#alll1_" + l2Id;
        var el_cl1Id = "#cl1_" + l2Id;
        var el_ul1Id = "#ul1_" + l2Id;
        var el_rl1Id = "#rl1_" + l2Id;
        var el_dl1Id = "#dl1_" + l2Id;
        var el_pl1Id = "#pl1_" + l2Id;
        var el_el1Id = "#el1_" + l2Id;

        var el_alll2Id = "#alll2_" + l2Id;
        var el_cl2Id = "#cl2_" + l2Id;
        var el_ul2Id = "#ul2_" + l2Id;
        var el_rl2Id = "#rl2_" + l2Id;
        var el_dl2Id = "#dl2_" + l2Id;
        var el_pl2Id = "#pl2_" + l2Id;
        var el_el2Id = "#el2_" + l2Id;

        var elements = new Array();

        // Element Binding for Array
        if (level == 1) {
            if (type == "all") {
                elements.push("alll1_" + id);
                elements.push("cl1_" + id);
                elements.push("ul1_" + id);
                elements.push("rl1_" + id);
                elements.push("dl1_" + id);
                elements.push("el1_" + id);
                elements.push("pl1_" + id);
            }
            else {
                elements.push(type + "l1_" + id);
            }

            $.each(obj["sub_modules_list"], function (key, value) {
                if (value["L1Id"] === l1Id) {
                    if (type == "all") {
                        elements.push("alll2_" + value["L2Id"]);
                        elements.push("cl2_" + value["L2Id"]);
                        elements.push("ul2_" + value["L2Id"]);
                        elements.push("rl2_" + value["L2Id"]);
                        elements.push("dl2_" + value["L2Id"]);
                        elements.push("el2_" + value["L2Id"]);
                        elements.push("pl2_" + value["L2Id"]);
                    }
                    else {
                        elements.push(type + "l2_" + value["L2Id"]);
                    }

                    $.each(obj["pages_list"], function (key2, value2) {
                        if (value["L2Id"] === value2["L2Id"]) {
                            if (type == "all") {
                                elements.push("alll3_" + value2["L3Id"]);
                                elements.push("cl3_" + value2["L3Id"]);
                                elements.push("ul3_" + value2["L3Id"]);
                                elements.push("rl3_" + value2["L3Id"]);
                                elements.push("dl3_" + value2["L3Id"]);
                                elements.push("el3_" + value2["L3Id"]);
                                elements.push("pl3_" + value2["L3Id"]);
                            }
                            else {
                                elements.push(type + "l3_" + value2["L3Id"]);
                            }
                        }
                    });

                }
            });
        }
        else if (level == 2) {
            if (type == "all") {
                elements.push("alll2_" + id);
                elements.push("cl2_" + id);
                elements.push("ul2_" + id);
                elements.push("rl2_" + id);
                elements.push("dl2_" + id);
                elements.push("el2_" + id);
                elements.push("pl2_" + id);
            }
            else {
                elements.push(type + "l2_" + id);
            }

            $.each(obj["pages_list"], function (key, value) {
                if (l2Id === value["L2Id"]) {
                    if (type == "all") {
                        elements.push("alll3_" + value["L3Id"]);
                        elements.push("cl3_" + value["L3Id"]);
                        elements.push("ul3_" + value["L3Id"]);
                        elements.push("rl3_" + value["L3Id"]);
                        elements.push("dl3_" + value["L3Id"]);
                        elements.push("el3_" + value["L3Id"]);
                        elements.push("pl3_" + value["L3Id"]);
                    }
                    else {
                        elements.push(type + "l3_" + value["L3Id"]);
                    }
                }
            });
        }
        else if (level == 3) {
            if (type == "all") {
                elements.push("alll3_" + id);
                elements.push("cl3_" + id);
                elements.push("ul3_" + id);
                elements.push("rl3_" + id);
                elements.push("dl3_" + id);
                elements.push("el3_" + id);
                elements.push("pl3_" + id);
            }
            else {
                elements.push(type + "l3_" + id);
            }
        }

        // Loop to Check All/Uncheck All
        if ($(el).is(':checked')) {
            $.each(elements, function (key, value) {
                var element = "#" + value;
                $(element).prop("checked", true);
            });
        }
        else {
            $.each(elements, function (key, value) {
                var element = "#" + value;
                $(element).prop("checked", false);
            });
        }

        // Checking/Unchecking in Single
        if (level == 1) {
            if ($(el).is(':checked')) {
            }
            else {

            }
        }
        else if (level == 2) {
            if ($(el).is(':checked')) {
                var l2_obj = new Array();

                $.each(obj["sub_modules_list"], function (key, value) {
                    if (value["L1Id"] === l1Id) {
                        l2_obj.push(value);
                    }
                });

                var total = 0;
                var total_checked = 0;

                $.each(l2_obj, function (key, value) {
                    total++;
                    var _l2Id = "#" + type + "l2_" + value["L2Id"];
                    if ($(_l2Id).is(':checked')) {
                        total_checked++;
                    }
                });

                if (total === total_checked) {
                    if (type == "all") {
                        $(el_alll1Id).prop("checked", true);
                        $(el_cl1Id).prop("checked", true);
                        $(el_ul1Id).prop("checked", true);
                        $(el_rl1Id).prop("checked", true);
                        $(el_dl1Id).prop("checked", true);
                        $(el_pl1Id).prop("checked", true);
                        $(el_el1Id).prop("checked", true);
                    }
                    else {
                        $(el_l1Id).prop("checked", true);
                    }
                }
                else {
                    if (type == "all") {
                        $(el_alll1Id).prop("checked", false);
                        $(el_cl1Id).prop("checked", false);
                        $(el_ul1Id).prop("checked", false);
                        $(el_rl1Id).prop("checked", false);
                        $(el_dl1Id).prop("checked", false);
                        $(el_pl1Id).prop("checked", false);
                        $(el_el1Id).prop("checked", false);
                    }
                    else {
                        $(el_l1Id).prop("checked", true);
                    }
                }
            }
            else {
                if (type == "all") {
                    $(el_alll1Id).prop("checked", false);
                    $(el_cl1Id).prop("checked", false);
                    $(el_ul1Id).prop("checked", false);
                    $(el_rl1Id).prop("checked", false);
                    $(el_dl1Id).prop("checked", false);
                    $(el_pl1Id).prop("checked", false);
                    $(el_el1Id).prop("checked", false);
                }
                else {
                    $(el_l1Id).prop("checked", true);
                }
            }
        }
        else if (level == 3) {
            if ($(el).is(':checked')) {
                var l2_obj = new Array();
                var l3_obj = new Array();

                $.each(obj["sub_modules_list"], function (key, value) {
                    if (value["L1Id"] === l1Id) {
                        l2_obj.push(value);
                        $.each(obj["pages_list"], function (key2, value2) {
                            if (l2Id === value2["L2Id"]) {
                                l3_obj.push(value2);
                            }
                        });
                    }
                });

                var l2_total = 0;
                var l2_total_checked = 0;
                var l3_total = 0;
                var l3_total_checked = 0;

                $.each(l3_obj, function (key, value) {
                    l3_total++;
                    var _l3Id = "#" + type + "l3_" + value["L3Id"];
                    if ($(_l3Id).is(':checked')) {
                        l3_total_checked++;
                    }
                });

                if (l3_total === l3_total_checked) {
                    if (type == "all") {

                        $(el_alll2Id).prop("checked", true);
                        $(el_cl2Id).prop("checked", true);
                        $(el_ul2Id).prop("checked", true);
                        $(el_rl2Id).prop("checked", true);
                        $(el_dl2Id).prop("checked", true);
                        $(el_pl2Id).prop("checked", true);
                        $(el_el2Id).prop("checked", true);
                    }
                    else {
                        $(el_l2Id).prop("checked", true);
                    }
                }
                else {
                    if (type == "all") {

                        $(el_alll2Id).prop("checked", false);
                        $(el_cl2Id).prop("checked", false);
                        $(el_ul2Id).prop("checked", false);
                        $(el_rl2Id).prop("checked", false);
                        $(el_dl2Id).prop("checked", false);
                        $(el_pl2Id).prop("checked", false);
                        $(el_el2Id).prop("checked", false);
                    }
                    else {
                        $(el_l2Id).prop("checked", false);
                    }
                }

                $.each(l2_obj, function (key, value) {
                    l2_total++;
                    var _l2Id = "#" + type + "l2_" + value["L2Id"];
                    if ($(_l2Id).is(':checked')) {
                        l2_total_checked++;
                    }
                });

                if (l2_total === l2_total_checked) {
                    if (type == "all") {
                        $(el_alll1Id).prop("checked", true);
                        $(el_cl1Id).prop("checked", true);
                        $(el_ul1Id).prop("checked", true);
                        $(el_rl1Id).prop("checked", true);
                        $(el_dl1Id).prop("checked", true);
                        $(el_pl1Id).prop("checked", true);
                        $(el_el1Id).prop("checked", true);
                    }
                    else {
                        $(el_l1Id).prop("checked", true);
                    }
                }
                else {
                    if (type == "all") {
                        $(el_alll1Id).prop("checked", false);
                        $(el_cl1Id).prop("checked", false);
                        $(el_ul1Id).prop("checked", false);
                        $(el_rl1Id).prop("checked", false);
                        $(el_dl1Id).prop("checked", false);
                        $(el_pl1Id).prop("checked", false);
                        $(el_el1Id).prop("checked", false);
                    }
                    else {
                        $(el_l1Id).prop("checked", false);
                    }
                }
            }
            else {
                if (type == "all") {
                    $(el_alll1Id).prop("checked", false);
                    $(el_cl1Id).prop("checked", false);
                    $(el_ul1Id).prop("checked", false);
                    $(el_rl1Id).prop("checked", false);
                    $(el_dl1Id).prop("checked", false);
                    $(el_pl1Id).prop("checked", false);
                    $(el_el1Id).prop("checked", false);
                }
                else {
                    $(el_l1Id).prop("checked", false);
                }

                if (type == "all") {
                    $(el_alll2Id).prop("checked", false);
                    $(el_cl2Id).prop("checked", false);
                    $(el_ul2Id).prop("checked", false);
                    $(el_rl2Id).prop("checked", false);
                    $(el_dl2Id).prop("checked", false);
                    $(el_pl2Id).prop("checked", false);
                    $(el_el2Id).prop("checked", false);
                }
                else {
                    $(el_l2Id).prop("checked", false);
                }
            }
        }

        var checkboxId = type + "l" + l1Id;
        var checkbox = document.getElementById(checkboxId);

        // Update the checkbox state in the page_access list
        var pageAccess = JSON.parse('@Html.Raw(viewModelJson)');
        pageAccess = pageAccess["page_access"];

        var page = pageAccess.find(p => p.L3Id === l3Id && p.type === type);
        if (page) {
            page.IsChecked = checkbox.checked;
        }
    };
    //#endregion

    //#region Update Rights Click
    $('#btn_Update_Rights').on('click', function (e) {
        e.preventDefault();
        $('#btn_Update_Rights').removeClass("btn btn-warning");
        $('#btn_Update_Rights').addClass("btn btn-warning btn-loaders btn-icon disabled");
        $('#btn_Update_Rights').parent().addClass("curdrop");
        $('.btnCloseRights').addClass("disabled");
        $('#btn_Update_Rights').html("Saving...");

        var _rights = [];

        $('[id*="l3_"]').each(function () {
            var pageId = $(this).attr('id').split('_')[1];
            var pageData = {
                desiId: $('#desiId').val(),
                l3Id: pageId,
                isCreate: $('#cl3_' + pageId).is(':checked') ? 1 : 0,
                isRead: $('#rl3_' + pageId).is(':checked') ? 1 : 0,
                isUpdate: $('#ul3_' + pageId).is(':checked') ? 1 : 0,
                isDelete: $('#dl3_' + pageId).is(':checked') ? 1 : 0,
                isExport: $('#el3_' + pageId).is(':checked') ? 1 : 0,
                isPrint: $('#pl3_' + pageId).is(':checked') ? 1 : 0
            };

            // Check if the page already exists in the array
            var exists = _rights.find(function (item) {
                return item.l3Id === pageData.l3Id;
            });

            // If the page doesn't exist, push it to the array
            if (!exists) {
                _rights.push(pageData);
            }
        });

        var test = JSON.stringify(_rights);
       

        $.ajax({
            type: "POST",
            url: "@Url.Action("UpdateRights", "Designation", new { area = "Masters" })",
            dataType: 'json',
            data: test,
            contentType: "application/json; charset=utf-8",
            success: function (response) {

                $('#btn_Update_Rights').parent().removeClass("curdrop");
                $('#btn_Update_Rights').removeClass("btn btn-warning btn-loaders btn-icon disabled");
                $('#btn_Update_Rights').addClass("btn btn-warning");
                $('#btn_Update_Rights').html("Save Changes");
                $('.btnCloseRights').removeClass("disabled");

                var _toast_html = "";

                if (response == "Success") {
                    _toast_html = toast_html("success", "Designation Rights", "<i class='fe fe-check-circle me-2 text-success'></i> You've successfully updated Designation Rights!");
                }
                else {
                    _toast_html = toast_html('error', 'Designation Rights', '<i class="fe fe-slash me-2 text-danger"></i> Failed to Update Designation Rights!');
                }

                var rightsToast = document.getElementById('rightsToast');
                rightsToast.innerHTML = _toast_html;

                var toast = new bootstrap.Toast(rightsToast);
                toast.show();

                $('#desig_rights_modal').modal('toggle');
            },
            error: function (xhr) {
                $('#btn_Update_Rights').parent().removeClass("curdrop");
                $('#btn_Update_Rights').removeClass("btn btn-warning btn-loaders btn-icon disabled");
                $('#btn_Update_Rights').addClass("btn btn-warning");
                $('#btn_Update_Rights').html("Save Changes");
                $('.btnCloseRights').removeClass("disabled");

                $('#desig_rights_modal').modal('toggle');
                console.log("Failed to Update Designation Rights! " + xhr);
            }
        });
    });
    //#endregion

    //#region Set Checkbox Values
    var checkedItems = function () {
        var obj = JSON.parse('@Html.Raw(viewModelJson)');

    }
    //#endregion

    //#region Toast Body
    var toast_html = function (type, heading, content) {
        var div = "";

        if (type === "success") {
            div = '<div class="toast-header bg-success text-white">';
        }
        else if (type === "error") {
            div = '<div class="toast-header bg-danger text-white">';
        }
        else if (type === "info") {
            div = '<div class="toast-header bg-info text-white">';
        }
        else if (type === "warning") {
            div = '<div class="toast-header bg-warning text-white">';
        }
        else {
            div = '<div class="toast-header bg-primary text-white">';
        }

        var html = div +
            '<img src="../../assets/images/brand/favicon.png" class="rounded me-2" alt="CS9" height="16"><strong class="me-auto">' + heading + '</strong>' +
            '<small>just now</small>' +
            '<button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close">' +
            '<span aria-hidden="true">×</span>' +
            '</button>' +
            '</div>' +
            '<div class="toast-body">' +
            content
        '</div>';

        return html;
    }
    //#endregion
</script>