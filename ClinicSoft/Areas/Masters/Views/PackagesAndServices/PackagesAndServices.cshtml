@model IEnumerable<BusinessEntities.Masters.PackagesAndServices>
@{
    ViewBag.Title = "Packages";
    ViewBag.pkg_active = "background: none !important; color: #664dc9 !important;";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary" data-lang-key="packages">Packages</h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list btn-animation">
            <a data-bs-toggle="modal" data-bs-target="#package_modal" class="btn btn-secondary" onclick="addPackagesService()" data-lang-key="add-packages"><i class="mdi mdi-plus"></i>&nbsp;Add Packages</a>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="PackagesServiceAlert"></div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table id="tbl_PackagesService" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D;">
                                <th class="border-bottom-0 font-weight-semibold text-white">#</th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="code">Code</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="package-name">Package Name</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="package-price">Package Price</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="package-services">Package Services</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="status">Status</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="delete">Delete</span></th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th></th>
                                <th class="text-right text-dark font-weight-semibold" >
                                    <span data-lang-key="total">Total :</span> </th>
                                <th class="table_footer_align"></th>
                                <th class="table_footer_align"></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Package Modal -->
<div class="modal fade" id="package_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="package_body">
        </div>
    </div>
</div>
<!-- End Package Modal -->
<!-- Package Tests Modal -->
<div class="modal fade" id="tests_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="sizePT">
        <div class="modal-content" id="tests_modal_body">
        </div>
    </div>
</div>
<!-- End Package Tests Modal -->
@section myScripts{
    <script type="text/javascript">
        //#region Page Load
        $(function () {
            GetPackagesServices();

            // Focus Search On Opening Select2
            $(document).on('select2:open', () => {
                document.querySelector('.select2-search__field').focus();
            });
        });
        //#endregion

        //#region Get Packages
        var GetPackagesServices = function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAllPackagesServices", "PackagesAndServices", new { area = "Masters" })",
                success: function (response) {
                    if (response.isAuthorized != false) {
                        var table;
                        if ($.fn.dataTable.isDataTable('#tbl_PackagesService')) {
                            table = $('#tbl_PackagesService').DataTable();
                            table.clear();
                            table.rows.add(response).draw();
                        }
                        else
                        {
                            BindDataTable(response);
                        }
                    }
                    else
                    {
                        console.log("You are not Authorized!");
                    }
                },
                error: function (xhr) {
                    console.log(xhr.statusText);
                }
            })
         }
        //#endregion

        //#region Bind DataTable
        var BindDataTable = function (response) {
            var table = $("#tbl_PackagesService").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "mData": "pkgId",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-center",
                        "render": function (data, type, row, meta) {
                            let _index = (meta.row) + 1;
                            if (_index >= 10) {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>" + _index + "</a>";
                            }
                            else {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>0" + _index + "</a>";
                            }
                        }
                    },
                    {
                        "className": "text-capitalize",
                        "mData": "pkg_code"
                    },
                    {
                        "className": "text-capitalize",
                        "mData": "pkg_name"
                    },
                    {
                        "className": "text-end",
                        "mData": "pkg_price",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "className": 'text-center',
                        "orderable": false,
                        "searchable": false,
                        "mData": "pkgId",
                        "render": function (data, type, full, meta) {
                            var status = full.pkg_status;
                            if (status === "Active") {
                                return '<a class="text-dark fw-bold" data-bs-toggle="modal" data-bs-target="#tests_modal" onclick="packagesMaster(' + data + ')"><i class="fa fa-medkit text-indigo" style="font-size: 20px;cursor: pointer;"></i></a>';
                            }
                            else {
                                return ''
                            }
                        }
                    },
                    {
                        "className": 'text-center',
                        "mData": "pkgId",
                        "render": function (pkgId, type, full, meta) {
                            var visible = full.actionvisible;
                            var pkg_status = full.pkg_status;

                            if (visible === "True") {
                                if (full.pkg_status === "Active") {
                                    return '<button type="button" class="badge rounded-pill bg-success mt-2 border-success" style="width: 60px;" onclick="updateStatus(\'' + pkgId + '\',\' Active \')">' + pkg_status + '</button>'

                                }
                                else if (full.pkg_status === "Inactive") {
                                    return '<button type="button" class="badge rounded-pill bg-warning mt-2 border-warning" style="width: 60px;" onclick="updateStatus(\'' + pkgId + '\',\'Inactive\')">' + pkg_status + '</button>'

                                }
                                else if (full.pkg_status === "Deleted") {
                                    return '<button type="button" class="badge rounded-pill bg-danger mt-2 border-danger" style="width: 60px;" onclick="updateStatus(\'' + pkgId + '\',\'Deleted\')">' + pkg_status + '</button>'
                                }
                                else {
                                    return ''
                                }
                            }
                            else {
                                return '<span class="badge rounded-pill text-danger mt-2 border-danger">Allocated</span>'
                            }
                        }
                    },
                    {
                        "mData": "pkgId",
                        "className": 'text-center',
                        "orderable": false,
                        "searchable": false,
                        "render": function (pkgId, type, full, meta) {
                            var status = full.pkg_status;
                            var visible = full.actionvisible;
                            if (status === "Active" && visible === "True") {
                                return '<button type="button" onclick="deletePackagesService(' + full.pkgId + ')" class="btn btn-sm btn-outline-danger">Delete</button>';
                            }
                            else {
                                return ''
                            }
                        }
                    }
                ],
                order: [[2, 'asc']],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Packages',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 5]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Packages to Excel!");
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Packages',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 5]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Packages to PDF!");
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Packages',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 5]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Packages to CSV!");
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Packages',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 5]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, node, config);
                            exportLogs("Employee Printed Packages!");
                        }
                    }
                ],
                language: {
                    searchPlaceholder: 'Search...',
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Package / Cost / Status</span>',
                    lengthMenu: '_MENU_',
                    scrollX: "100%"
                },
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api();

                    var intVal = function (i) {
                        return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                    };
                    var numFormat = $.fn.dataTable.render.number('\,', '.', 2, '').display;

                    total_gc = api.column(3).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(3).footer()).html(numFormat(total_gc));

                    total_gd = api.column(4).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(4).footer()).html(numFormat(total_gd));
                },
                rowCallback: function (row, data, index) {
                    if (data.pkg_status === "Deleted") {
                        $('td:eq(0)', row).find("input[type=checkbox]").remove();
                    }
                }
            });
            table.buttons().container().appendTo('#tbl_PackagesService_wrapper .col-md-6:eq(0)');
        }
        //#endregion

        //#region Add Package
        function addPackagesService() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("CreatePackagesService", "PackagesAndServices", new { area = "Masters" })",
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#package_body").html(data);
                    $("#package_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Adding Designation : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Edit Package
        function editPackagesService(pkgId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("EditPackagesService", "PackagesAndServices", new { area = "Masters" })?pkgId=" + pkgId,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#package_body").html(data);
                    $("#package_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Adding Designation : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Update Status
        var updateStatus = function (pkgId, pkg_status) {
            pkg_status = (pkg_status == "Deleted" || pkg_status == "Inactive") ? "Active" : "Inactive"

            Swal.fire({
                title: "Are you sure you want to change status ?",
                text: "This action will change the status of the selected Package!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: "@Url.Action("UpdatePackagesServiceStatus", "PackagesAndServices", new { area = "Masters" })?pkgId=" + pkgId + "&pkg_status=" + pkg_status,
                        type: "POST",
                        dataType: "json",
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.success) {
                                    GetPackagesServices();
                                    Swal.fire({
                                        title: "Success!",
                                        text: data.message,
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        title: "Action Forbidden!",
                                        text: data.message,
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to change Status!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            console.log(xhr);
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Update Package Status! Please refresh the Page and Try Again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            })
                        }
                    });
                }
            });
        }
        //#endregion

        //#region Delete Package
        var deletePackagesService = function (pkgId) {
            Swal.fire({
                title: "Are you sure you want to delete this Package ?",
                text: "This action will delete this Packages!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: '@Url.Action("DeletePackagesServiceStatus", "PackagesAndServices", new { area = "Masters" })?pkgId=' + pkgId +'&pkg_status=Deleted',
                        type: "POST",
                        dataType: "json",
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.success) {
                                    GetPackagesServices();
                                    Swal.fire({
                                        title: "Success!",
                                        text: data.message,
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        title: "Action Forbidden!",
                                        text: data.message,
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to delete designations!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Delete Package! Please refresh the page and try again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    });
                }
            });
        }
        //#endregion

        //#region Export General Logs
        var exportLogs = function (desc) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportLogs", "AuditLogs", new { area = "Common" })?desc="+ desc,
                contentType: "application/json",
                dataType: "json"
            });
        }
        //#endregion

        //#region Test Packages
        function packagesMaster(pkgId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("Packages", "PackagesAndServices", new { area = "Masters" })?pkgId=" + pkgId,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#tests_modal_body").html(data);
                    $("#tests_modal").modal("show");
                    resizedt();
                },
                error: function (xhr) {
                    console.log("Error while Adding Designation : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Generate Sales Account
        $('#btn_Generate_Sales_Acc').click(function (e) {

            var table = $("#tbl_PackagesService").DataTable();

            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));

            if (rows.length > 0) {
                $('#btn_Generate_Sales_Acc').removeClass("btn btn-indigo text-white");
                $('#btn_Generate_Sales_Acc').addClass("btn btn-info btn-loaders btn-icon text-white");
                $('#btn_Generate_Sales_Acc').parent().addClass("curdrop");
                $('#btn_Generate_Sales_Acc').html("Generating...");

                $.each(rows, function (index, rowId) {

                    var _data = table.row(rowId).data();

                    $.ajax({
                        url: '@Url.Action("GenerateSalesAccount", "PackagesAndServices", new { area = "Masters" })?pkgId=' + _data.pkgId,
                        type: "POST",
                        dataType: "json",
                        success: function (response) {
                            $('#btn_Generate_Sales_Acc').parent().removeClass("curdrop");
                            $('#btn_Generate_Sales_Acc').removeClass("btn btn-indigo btn-loaders btn-icon text-white");
                            $('#btn_Generate_Sales_Acc').addClass("btn btn-info text-white");
                            $('#btn_Generate_Sales_Acc').html("<i class='mdi mdi-account-key'></i> Generate Sales Account");

                            if (response.success) {
                                GetPackagesServices();

                                return $.growl.notice({
                                title: "Success!",
                                message: response.message
                                });
                            }
                            else {
                                return $.growl.warning({
                                    title: "Failure!",
                                    message: response.message
                                });
                            }
                        },
                        error: function (xhr) {
                            $('#btn_Generate_Sales_Acc').parent().removeClass("curdrop");
                            $('#btn_Generate_Sales_Acc').removeClass("btn btn-indigo btn-loaders btn-icon text-white");
                            $('#btn_Generate_Sales_Acc').addClass("btn btn-info text-white");
                            $('#btn_Generate_Sales_Acc').html("<i class='mdi mdi-account-key'></i> Generate Sales Account");

                            return $.growl.error({
                                title: "Error while Generating Sales Account!",
                                message: xhr.statusText
                            });
                        }
                    });
                });
            }
            else {
                Swal.fire({
                    title: "Alert!",
                    text: "Please select atleast One Package to Generate Sales Account!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                });
            }
        });
        //#endregion

        //#region UI Functions
        function resizedt() {
            setTimeout(function () {
                $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
            }, 350);
        }
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
        //#endregion
    </script>
}