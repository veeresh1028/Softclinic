@model IEnumerable<BusinessEntities.Masters.Diagnosis>
@{
    ViewBag.Title = "Diagnosis";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary" data-lang-key="diagnosis">Diagnosis</h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list btn-animation">
            <button class="btn btn-outline-primary mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#searchFilter" aria-expanded="false" aria-controls="collapseExample" data-lang-key="advance-filter">
                <i class="fa fa-filter"></i> Advanced Filters
            </button>
            <a data-bs-toggle="modal" data-bs-target="#create_diag_modal" class="btn btn-secondary" onclick="addDiagnosis()" data-lang-key="add-diagnosis"><i class="mdi mdi-plus"></i>&nbsp;Add Diagnosis</a>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card mb-0">
            <div class="card-status bg-primary-1"></div>
            <div class="collapse" id="searchFilter">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-6 col-md-4 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold"data-lang-key="departments">Department<small>(s)</small></label>
                                <select class="form-control" id="select_dept" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="type">ICD Type<small>(s)</small></label>
                                <select class="form-control" id="select_type" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="status">Status<small>(es)</small></label>
                                <select class="form-control select2-show-search" multiple="multiple" id="select_status"></select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold" data-lang-key="code">Code</label>
                                <select class="form-control select2" id="select_code"></select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">&nbsp;</label>
                                <button class="btn btn-primary mb-2" type="button" id="btnSearch" data-lang-key="search">
                                    <i class="fa fa-search-plus"></i> Search
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="DiagnosisAlert"></div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div id="progress-loader" style="display:none;">
                    <div class="progress progress-sm mb-3">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-teal progress-bar-indeterminate"></div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tbl_diagnosis" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D;">
                                <th class="border-bottom-0 font-weight-semibold text-white">#</th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="departments">Department</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key=" ICD type">ICD Type</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="code">Code</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="diagnosis">Diagnosis</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="notes">Notes</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="status">Status</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="edit">Edit</span>
                                </th>
                                <th class="border-bottom-0 font-weight-semibold text-white" >
                                    <span data-lang-key="delete">Delete</span></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Diagnosis Toast -->
<div class="text-wrap d-none" id="toastDiag">
    <div class="toast-main p-5">
        <div class="demo-static-toast">
            <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
                <div id="diagToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header text-dark">
                        <img src="~/assets/images/brand/favicon.ico" class="rounded me-2" alt="img" height="16">
                        <strong class="me-auto" data-lang-key="diagnosis">Diagnosis</strong>
                        <small data-lang-key="just-now">Just Now</small>
                        <button type="button" class="btn-close btn-close" data-bs-dismiss="toast" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="toast-body">
                        <i class="fe fe-check-circle me-2 text-success"></i> <b class="text-dark" data-lang-key="filtered">Filtered </b> <b class="text-primary" id="app_count" data-lang-key="records-in-about"> </b> record(s) in about <b id="etime"></b> ms
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- End Diagnosis Toast -->
<!-- Create Diagnosis Modal -->
<div class="modal fade" id="create_diag_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="sizeC">
        <div class="modal-content" id="create_diag_body">
        </div>
    </div>
</div>
<!-- End Create Diagnosis Modal -->
<!-- Update Diagnosis Modal -->
<div class="modal fade" id="update_diag_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="sizeU">
        <div class="modal-content" id="update_diag_body">
        </div>
    </div>
</div>
<!-- End Update Diagnosis Modal -->
@section myScripts{
    <script type="text/javascript">
        //#region Page Load
        $(function () {
            GetDiagnosis(0);

            load_filters();

            // Focus Search On Opening Select2
            $(document).on('select2:open', () => {
                document.querySelector('.select2-search__field').focus();
            });
        });
        //#endregion

        //#region Load Advanced Filters
        // Initialize All Items
        var load_filters = function () {
            load_departments();
            load_status();
            load_diag_codes();
            load_types();
        }
        // Load Departments
        var load_departments = function () {
            $('#select_dept').SumoSelect({
                placeholder: 'Select Department(s)',
                captionFormat: '{0} Department(s) Selected',
                captionFormatAllSelected: 'All {0} Departments selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $.ajax({
                url: '@Url.Action("GetDepartments", "Diagnosis", new { area = "Masters" })',
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    $('#select_dept').html('');
                    $('#select_dept')[0].sumo.reload();

                    $.each(response, function (j) {
                        $('#select_dept')[0].sumo.add(response[j].deptId, response[j].department);
                    });

                    $('#select_dept')[0].sumo.reload();
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                }
            });
        }
        // Load Types
        var load_types = function () {
            $('#select_type').SumoSelect({
                placeholder: 'Select Type(s)',
                captionFormat: '{0} Type(s) Selected',
                captionFormatAllSelected: 'All {0} Types selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $('#select_type').html('');
            $('#select_type')[0].sumo.reload();

            $('#select_type')[0].sumo.add("ICD 9.0", "ICD 9.0");
            $('#select_type')[0].sumo.add("ICD 10.0", "ICD 10.0");

            $('#select_type')[0].sumo.reload();
        }
        // Load Status
        var load_status = function () {
            $('#select_status').SumoSelect({
                placeholder: 'Select Status(es)',
                captionFormat: '{0} Status(es) Selected',
                captionFormatAllSelected: 'All {0} Status selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $('#select_status').html('');
            $('#select_status')[0].sumo.reload();

            $('#select_status')[0].sumo.add("Active", "Active");
            $('#select_status')[0].sumo.add("Inactive", "Inactive");
            $('#select_status')[0].sumo.add("Deleted", "Deleted");

            $('#select_status')[0].sumo.reload();
        }
        // Load Diagnosis Code
        var load_diag_codes = function () {
            $('#select_code').select2({
                placeholder: 'Search Diagnosis Code',
                width: '100%',
                allowClear: true,
                minimumInputLength: 3,
                escapeMarkup: function (markup) {
                    return markup;
                },
                ajax: {
                    url: '@Url.Action("GetDiagnosisCodes", "Diagnosis", new { area = "Masters" })',
                    dataType: 'json',
                    delay: 250,
                    data: function (query) {
                        return {
                            query: query.term,
                            type: 0
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    },
                    cache: true
                }
            });
        }
        //#endregion

        //#region Search Diagnosis Click
        $("#btnSearch").click(function (e) {
            e.preventDefault();

            if (($("#select_type").val() != null && $("#select_type").val() != 0 && $("#select_type").val() != "") ||
                ($("#select_dept").val() != null && $("#select_dept").val() != 0 && $("#select_dept").val() != "") ||
                ($("#select_status").val() != null && $("#select_status").val() != 0 && $("#select_status").val() != "") ||
                ($("#select_code").val() != null && $("#select_code").val() != 0 && $("#select_code").val() != "")) {

                GetDiagnosis(1);
            }
            else {
                Swal.fire({
                    title: "Attention!",
                    text: "Search by Either of the following filters : Department(s) / Type(s) / Status(es) / Diagnosis Code",
                    icon: "warning",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                });
            }
        });
        //#endregion

        //#region Load Diagnosis
        var GetDiagnosis = function (search_type) {

            var _data = {
                "search_type"   : search_type,
                "select_dept"   : $('#select_dept').val().toString(),
                "select_type"   : $('#select_type').val().toString(),
                "select_status" : $('#select_status').val().toString(),
                "select_code"   : $('#select_code').val()
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("SearchDiagnosis", "Diagnosis", new { area = "Masters" })",
                data: _data,
                beforeSend: function () {
                    $('#progress-loader').show();
                },
                start_time: new Date().getTime(),
                success: function (response) {
                    $('#etime').html(new Date().getTime() - this.start_time);

                    if (response.isAuthorized != false) {
                        //#region Load Datatable
                        var table;
                        if ($.fn.dataTable.isDataTable('#tbl_diagnosis')) {
                            table = $('#tbl_diagnosis').DataTable();
                            table.clear();
                            table.rows.add(response).draw(false);
                        }
                        else {
                            BindDataTable(response);
                        }
                        //#endregion

                        if (response.length > 0) {
                            count_total = response.length;
                            $('#toastDiag').removeClass("d-none");
                            $('#diagToast').show();
                            $('#app_count').html(count_total.toLocaleString());
                        }
                    }
                    else
                    {
                        console.log("You are not Authorized To View This Page!");
                    }
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                    $('#progress-loader').hide();
                }
            }).done(function () {
                resizedt();
                setTimeout(function () {
                    $('#diagToast').fadeOut('fast');
                    $('#toastDiag').addClass("d-none");
                }, 6000);
                $('#progress-loader').hide();
            });
        }
        //#endregion

        //#region Bind Datatable
        var BindDataTable = function (response) {
            var table = $("#tbl_diagnosis").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "mData": "diagId",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-center",
                        "render": function (data, type, row, meta) {
                            let _index = (meta.row) + 1;
                            if (_index >= 10) {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>" + _index + "</a>";
                            }
                            else {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>0" + _index + "</a>";
                            }
                        }
                    },
                    { "mData": "department"},
                    { "mData": "diag_class" },
                    { "mData": "diag_code" },
                    { "mData": "diag_name" },
                    {
                        "className": "text-justify text-wrap",
                        "mData": "diag_notes",
                        "render": function (diag_notes) {
                            if (diag_notes != "") {
                                return diag_notes;
                            }
                            else {
                                return "<span class='text-muted'>No Notes</span>";
                            }
                        }
                    },
                    {
                        "className": 'text-center',
                        "mData": "diagId",
                        "render": function (diagId, type, full, meta) {
                            var visible = full.actionvisible;
                            var diag_status = full.diag_status;

                            if (visible === "True") {
                                if (diag_status === "Active") {
                                    return '<button type="button" class="badge rounded-pill bg-success mt-2 border-success" style="width: 60px;" onclick="updateDiagnosisStatus(\'' + diagId + '\',\'' + diag_status + '\')">' + diag_status + '</button>'
                                }
                                else if (diag_status === "Inactive") {
                                    return '<button type="button" class="badge rounded-pill bg-warning mt-2 border-warning" style="width: 60px;" onclick="updateDiagnosisStatus(\'' + diagId + '\',\'' + diag_status + '\')">' + diag_status + '</button>'
                                }
                                else if (diag_status === "Deleted") {
                                    return '<button type="button" class="badge rounded-pill bg-danger mt-2 border-danger" style="width: 60px;" onclick="updateDiagnosisStatus(\'' + diagId + '\',\'' + diag_status + '\')">' + diag_status + '</button>'
                                }
                                else {
                                    return ''
                                }
                            }
                            else {
                                return '<span class="badge rounded-pill text-danger mt-2 border-danger">Allocated</span>'
                            }
                        }
                    },
                    {
                        "className": 'text-center',
                        "orderable": false,
                        "searchable": false,
                        "mData": "diagId",
                        "render": function (diagId, type, full, meta) {
                            var status = full.diag_status;
                            var visible = full.actionvisible;
                            if (status === "Active" && visible === "True") {
                                return '<button type="button" data-bs-toggle="modal" data-bs-target="#update_diag_modal" onclick="editDiagnosis(' + diagId + ')" class="btn btn-sm btn-outline-primary">Edit</button>';
                            }
                            else {
                                return ''
                            }
                        }
                    },
                    {
                        "className": 'text-center',
                        "orderable": false,
                        "searchable": false,
                        "mData": "diagId",
                        "render": function (diagId, type, full, meta) {
                            var status = full.diag_status;
                            var visible = full.actionvisible;
                            if (status === "Active" && visible === "True") {
                                return '<button type="button" onclick="deleteDiagnosis(' + diagId + ')" class="btn btn-sm btn-outline-danger">Delete</button>';
                            }
                            else {
                                return ''
                            }
                        }
                    }
                ],
                order: [[0, 'asc']],
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Diagnosis',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Diagnosis to Excel!");
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Diagnosis',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Diagnosis to PDF!");
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Diagnosis',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Diagnosis to CSV!");
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Diagnosis',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 5, 6]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, node, config);
                            exportLogs("Employee Printed Diagnosis!");
                        }
                    }
                ],
                language: {
                    searchPlaceholder: 'Search...',
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Code / ICD Type / Diagnosis / Notes</span>',
                    scrollX: "100%",
                    lengthMenu: '_MENU_ ',
                }
            });
            table.buttons().container().appendTo('#tbl_diagnosis_wrapper .col-md-6:eq(0)');
        }
        //#endregion

        //#region Add Diagnosis
        function addDiagnosis() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("CreateDiagnosis", "Diagnosis", new { area = "Masters" })",
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#create_diag_body").html(data);
                    $("#create_diag_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Adding Diagnosis : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Edit Diagnosis
        function editDiagnosis(diagId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("EditDiagnosis", "Diagnosis", new { area = "Masters" })?diagId=" + diagId,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#update_diag_body").html(data);
                    $("#update_diag_modal").modal("show");
                },
                error: function (xhr) {
                    console.log("Error while Editing Diagnosis : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Delete Diagnosis
        var deleteDiagnosis = function (diagId) {
            Swal.fire({
                title: "Are you sure you want to delete this Diagnosis ?",
                text: "This action will delete this record!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: '@Url.Action("DeleteDiagnosis", "Diagnosis", new { area = "Masters" })?diagId=' + diagId +'&diag_status=Deleted',
                        type: "POST",
                        dataType: "JSON",
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.success) {
                                    GetDiagnosis();
                                    Swal.fire({
                                        title: "Success!",
                                        text: data.message,
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        title: "Action Forbidden!",
                                        text: data.message,
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to delete Diagnosis!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Delete Diagnosis! Please Refresh the Page and Try Again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    });
                }
            });
        }
        //#endregion

        //#region Update Status
        var updateDiagnosisStatus = function (diagId, diag_status) {
            diag_status = (diag_status == "Deleted" || diag_status == "Inactive") ? "Active" : "Inactive"

            Swal.fire({
                title: "Are you sure you want to change status ?",
                text: "This action will change the status of the selected Diagnosis!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: "@Url.Action("UpdateDiagnosisStatus", "Diagnosis", new { area="Masters"})?diagId=" + diagId + "&diag_status=" + diag_status,
                        type: "POST",
                        dataType: "json",
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.success) {
                                    GetDiagnosis();
                                    Swal.fire({
                                        title: "Success!",
                                        text: data.message,
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        title: "Action Forbidden!",
                                        text: data.message,
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to change Diagnosis Status!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Change Status! Please refresh the Page and Try Again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            })
                        }
                    });
                }
            });
        }
        //#endregion

        //#region Export General Logs
        var exportLogs = function (desc) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportLogs", "AuditLogs", new { area = "Common" })?desc="+ desc,
                contentType: "application/json",
                dataType: "json"
            });
        }
        //#endregion

        //#region UI/UX Functions
        function resizedt() {
            setTimeout(function () {
                $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
            }, 350);
        }
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
       //#endregion
    </script>
}