@model BusinessEntities.Masters.Vouchers
<style>
    .ui-datepicker {
        z-index: 100000000 !important;
    }

    #vou_date, #vou_edate {
        border: 0px;
    }

    #size {
        max-width: 800px;
    }
</style>
<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold">Update Voucher</h5>
    <button type="button" class="btn-close btnCloseEdit" data-bs-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body p-4">
    <form id="form_Edit_Voucher" >
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12 mb-4 font-weight-semibold">
                <span class="text-danger" style="font-size:smaller">Required fields are marked with *</span>
            </div>
        </div>
        <div class="row">
            @Html.HiddenFor(m => m.vouId)
            <div class="col-sm-6 col-md-6 col-lg-6">
                <div class="form-group mb-3">
                    <label class="form-label text-black font-weight-semibold">Code &nbsp;<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.vou_code, new { @class = "form-control", @placeholder = "Ex : MEDLIFE08URT", @maxlength = "40" })
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-6">
                <div class="form-group">
                    <label class="form-label font-weight-semibold"> Branch &nbsp;<span class="text-danger">*</span></label>
                    <div class="input-group">
                        @Html.DropDownListFor(m => m.vou_branch, new SelectList(Model.BranchList, "id", "text"), new { @class = "form-select select2" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-6">
                <div class="form-group mb-3">
                    <label class="form-label text-black font-weight-semibold">Issue Date&nbsp;<span class="text-danger">*</span></label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="input-group-text">
                                <i class="fe fe-calendar"></i>
                            </div>
                        </div>
                        @Html.TextBoxFor(m => m.vou_date, new { @class = "form-control", @placeholder = "DD-MMMM-YYYY", @id = "uvou_date" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-6">
                <div class="form-group mb-3">
                    <label class="form-label text-black font-weight-semibold"> Expiry Date&nbsp;<span class="text-danger">*</span></label>

                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="input-group-text">
                                <i class="fe fe-calendar"></i>
                            </div>
                        </div>
                        @Html.TextBoxFor(m => m.vou_edate, new { @class = "form-control", @placeholder = "DD-MMMM-YYYY", @id = "uvou_edate" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-6">
                <div class="form-group g-md-3">
                    <label class="form-label text-black font-weight-semibold"> From</label>
                    @Html.TextBoxFor(m => m.vou_from, new { @class = "form-control", @placeholder = "Ex : Vision", @maxlength = "150" })
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-6">
                <div class="form-group g-md-3">
                    <label class="form-label text-black font-weight-semibold"> Amount</label>
                    @Html.TextBoxFor(m => m.vou_amount, new { @class = "form-control mb-2 text-right", @placeholder = "Ex : 200.25", @onkeypress = "return validateOneDecimalNumeric(this,event);" })
                </div>
            </div>
            <div class="col-sm-12 col-md-12 col-lg-12">
                <div class="form-group g-md-3">
                    <label class="form-label text-black font-weight-semibold"> Notes</label>
                    @Html.TextAreaFor(m => m.vou_notes, new { @class = "form-control", @placeholder = "Ex : A small printed piece of paper that entitles the holder to a discount...", @maxlength = "500" })
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div id="errorEdit"></div>
            <div class="col-sm-12 col-lg-12 text-center">
                <div class="btn-list btn-animation">
                    <button type="submit" class="btn btn-warning" id="btn_Update">Save Changes</button>
                    <button type="button" class="btn btn-outline-danger me-1 btnCloseEdit" data-bs-dismiss="modal">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>
<script type="text/javascript">

    //#region Page Load
    $(function () {
        $('#vou_branch').select2({
            dropdownParent: $('#form_Edit_Voucher'),
            width: "100%"
        });

        $('#uvou_date,#uvou_edate').bootstrapdatepicker({
            format: "dd-MM-yyyy",
            viewMode: "date",
            todayHighlight: true,
            autoclose: true,
            multidate: false,
            multidateSeparator: "-",
            minDate:moment("@Model.vou_date").format("DD-MM-YYYY")
        });

        $("#uvou_date").bootstrapdatepicker("setDate", moment("@Model.vou_date").format("DD-MM-YYYY"));
        $("#uvou_edate").bootstrapdatepicker("setDate", moment("@Model.vou_edate").format("DD-MM-YYYY"));

        validation();
    });
    //#endregion

    //#region Validation Initialization
    var validation = function () {
        $("#form_Edit_Voucher").validate({
            focusInvalid: true,
            rules:
            {
                vou_branch: {
                    required: true
                },
                vou_code: {
                    required: true
                },
                vou_date: {
                    required: true,
                    date: true
                },
                vou_edate: {
                    required: true,
                    date: true,
                    dateValid: "#vou_date"
                }
            },
            messages: {
                vou_branch: {
                    required: "Please Select Branch"
                },
                vou_code: {
                    required: "Enter Voucher Code"
                },
                vou_date: {
                    required: "Pleaes Select Date",
                },
                vou_edate: {
                    required: "Pleaes Select Expiry Date"
                }
            },
            highlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                } else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });

        $.validator.addMethod("dateValid", function (value, element, params) {
            var vouDate = new Date($(params).val());
            var vouEdate = new Date(value);
            return vouEdate >= vouDate;
        }, "Expiry Date should be greater than or equal to Issue Date");

        $('#vou_date').on('change', function () {
            $(this).trigger('blur');
        });

        $('#vou_edate').on('change', function () {
            $(this).trigger('blur');
        });

        $('#vou_amount').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 10000) {
                return false;
            }
        });

        $("#vou_amount").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#vou_amount").val(0.00);
            }
        });

        $('#vou_date').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                return false;

            }
            else {
                if (e.target.value.length >= 18)
                    return false;
            }
        });

        $('#vou_edate').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                return false;

            }
            else {
                if (e.target.value.length >= 18)
                    return false;
            }
        });
    }
    //#endregion

    //#region Validate Decimal
    function validateOneDecimalNumeric(el, evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        var number = el.value.split('.');
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        //just one dot
        if (number.length > 1 && charCode == 46) {
            return false;
        }
        //get the Current position
        var caratPos = getSelectionStart(el);
        var dotPos = el.value.indexOf(".");
        if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {
            return false;
        }
        return true;
    }
    function getSelectionStart(o) {
        if (o.createTextRange) {
            var r = document.selection.createRange().duplicate()
            r.moveEnd('character', o.value.length)
            if (r.text == '') return o.value.length
            return o.value.lastIndexOf(r.text)
        } else return o.selectionStart
    }
    //#endregion

    //#region Update Voucher Click
    $('#btn_Update').on('click', function (e) {
        e.preventDefault();

        if ($("#form_Edit_Voucher").valid()) {

            $('#btn_Update').removeClass("btn btn-warning");
            $('#btn_Update').addClass("btn btn-warning btn-loaders btn-icon");
            $('#btn_Update').parent().addClass("curdrop");
            $('.btnCloseEdit').addClass("disabled");
            $('#btn_Update').html("Saving Changes... Please Wait");

            var _dataUpdate = {
                "vouId": $("#vouId").val(),
                "vou_code": $("#vou_code").val().trim(),
                "vou_from": $("#vou_from").val().trim(),
                "vou_date": $("#uvou_date").val(),
                "vou_edate": $("#uvou_edate").val(),
                "vou_amount": parseFloat($("#vou_amount").val()),
                "vou_notes": $("#vou_notes").val(),
                "vou_branch": $("#vou_branch").val(),
                "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("UpdateVoucher", "Vouchers", new {area = "Masters" })",
                dataType: 'json',
                data: _dataUpdate,
                success: function (data) {
                    $('#btn_Update').parent().removeClass("curdrop");
                    $('.btnCloseEdit').removeClass("disabled");
                    $('#btn_Update').removeClass("btn btn-warning btn-loaders btn-icon");
                    $('#btn_Update').addClass("btn btn-warning");
                    $('#btn_Update').html("Save Changes");

                    if (data.isSuccess) {
                        if (data.isUpdated) {
                            GetVouchers();
                            alert("<i class='fe fe-check-circle text-white'></i> Voucher Updated Successfully!", "success");
                            clearControls();
                            $('#vouchers_modal').modal('toggle');
                            Timeout();
                        }
                        else {
                            let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                "<div class='alert alert-light-warning' role='alert'>" +
                                "<button type='button' class='btn-close text-warning' style='margin-bottom:-5px;' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                "<strong><i class='fa fa-exclamation-triangle text-warning'></i> Voucher Already exists with the same details!</strong><br/>" +
                                "</div></div>";
                            $("#errorEdit").html(html);
                        }
                    }
                    else {
                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                            "<div class='alert alert-light-danger' role='alert'>" +
                            "<button type='button' class='btn-close text-danger' style='margin-bottom:-5px;' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                            "<strong><i class='fa fa-ban text-danger'></i> Validation Error! Please validate before submitting.</strong><br/><ul>";

                        $.each(data.message, function (index, value) {
                            html += "<li><small>" + value + "</small><li>";
                            var elem = $("#" + index);
                            if (elem.hasClass("select2-hidden-accessible")) {
                                $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                            }
                            else {
                                $(elem).addClass(" is-invalid");
                            }

                            setTimeout(function () {
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                }
                                else {
                                    $(elem).removeClass("is-invalid");
                                }
                            }, 5000);
                        });

                        html += "</ul></div></div>";
                        $("#errorEdit").html(html);
                    }
                },
                error: function (xhr) {
                    $('#btn_Update').parent().removeClass("curdrop");
                    $('.btnCloseEdit').removeClass("disabled");
                    $('#btn_Update').removeClass("btn btn-warning btn-loaders btn-icon");
                    $('#btn_Update').addClass("btn btn-warning");
                    $('#btn_Update').html("Save Changes");

                    $('#vouchers_modal').modal('toggle');
                    Timeout();
                }
            });
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });
    //#endregion

    //#region Clear Controls
    var clearControls = function () {
        $("#vou_branch").val(1).trigger('change');
        $("#vou_code").val("");
        $("#vou_date").bootstrapdatepicker("setDate", 'today');
        $("#vou_edate").bootstrapdatepicker("setDate", 'today');
        $("#vou_from").val("");
        $("#vou_notes").val("");
        $("#vou_amount").val(0);
    }
    //#endregion
</script>