@model BusinessEntities.Masters.Referals
<style>
    #size {
        max-width: 800px;
    }
</style>
<!-- INTERNAL telephoneinput css-->
<link href="~/assets/plugins/telephoneinput2/intlTelInput.css" rel="stylesheet" />
<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold">Update Referal</h5>
    <button type="button" class="btn-close btnCloseEdit" data-bs-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body p-4">
    <form id="form_Edit_Referal" autocomplete="off" ondrop="return false;" oncut="return false;">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.refId)
        <div class="panel panel-default mt-2">
            <div class="panel-heading" role="tab" id="heading1">
                <h4 class="panel-title">
                    <a class="collapsed" role="button" data-bs-toggle="collapse" data-parent="#accordion1">
                        Basic Information
                        <span class="float-end"><i class="fe fe-chevrons-down"></i></span>
                    </a>
                </h4>
            </div>
            <div id="collapse1" class="panel-collapse collapse show" role="tabpanel" aria-labelledby="heading1">
                <div class="panel-body border-1">
                    <div class="row">
                        <div class="col-sm-12 col-md-6 col-lg-6">
                            <div class="form-group mb-3">
                                <label class="form-label text-black">Type&nbsp;<span class="text-danger">*</span></label>
                                @Html.DropDownListFor(m => m.ref_type, new List<SelectListItem>
                                {
                                    new SelectListItem{ Text="Medical", Value = "Medical" },
                                    new SelectListItem{ Text="Non-Medical", Value = "Non-Medical" },
                                }, "Select Type", new { @class = "form-select select2" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-6">
                            <div class="form-group mb-3">
                                <label class="form-label text-black">Name&nbsp;<span class="text-danger">*</span></label>
                                @Html.TextBoxFor(m => m.ref_name, new { @class = "form-control", @placeholder = "Ex : Instagram", @maxlength = "80" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-4">
                            <div class="form-group">
                                <label class="form-label">Mobile&nbsp;<span class="text-danger">*</span></label>
                                <div class="input-group">
                                    <div class="d-flex">
                                        @Html.TextBoxFor(m => m.ref_mob, new { @type = "tel", @class = "form-control mb-2", @style = "width:100%;" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-4">
                            <div class="form-group">
                                <label class="form-label">Telephone #&nbsp;</label>
                                <div class="input-group">
                                    <div class="d-flex">
                                        @Html.TextBoxFor(m => m.ref_tel, new { @type = "tel", @class = "form-control mb-2", @style = "width:100%;" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-4">
                            <div class="form-group mb-3">
                                <label class="form-label text-black">Fax&nbsp;</label>
                                @Html.TextBoxFor(m => m.ref_fax, new { @class = "form-control", @placeholder = "Ex : 654856321", @maxlength = "20" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-6">
                            <div class="form-group mb-3">
                                <label class="form-label text-black">City&nbsp;</label>
                                @Html.TextBoxFor(m => m.ref_city, new { @class = "form-control", @placeholder = "Ex : Dubai", @maxlength = "50" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-6">
                            <div class="form-group mb-3">
                                <label class="form-label text-black">Email&nbsp;</label>
                                @Html.TextBoxFor(m => m.ref_email, new { @class = "form-control", @placeholder = "Ex : info@visionsoftwares.com", @type = "email", @maxlength = "60" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-6">
                            <div class="form-group mb-3">
                                <label class="form-label text-black">Country&nbsp;<span class="text-danger">*</span></label>
                                @Html.DropDownListFor(m => m.ref_country, new SelectList(Model.CountryList, "id", "text"), "Please Select", new { @class = "form-select select2" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-6">
                            <div class="form-group mb-3">
                                <label class="form-label text-black">Company&nbsp;</label>
                                @Html.TextBoxFor(m => m.ref_company, new { @class = "form-control", @placeholder = "Ex : Vision Technologies", @maxlength = "150" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel-heading" role="tab" id="headingTwo2">
                <h4 class="panel-title">
                    <a class="collapsed" role="button" data-bs-toggle="collapse" data-parent="#accordion1">
                        Login Information
                        <span class="float-end"><i class="fe fe-chevrons-down"></i></span>
                    </a>
                </h4>
            </div>
            <div id="collapseTwo2" class="panel-collapse collapse show" role="tabpanel" aria-labelledby="headingTwo2">
                <div class="panel-body ">
                    <div class="row">
                        <div class="col-sm-4 col-md-4 col-lg-4">
                            <div class="form-group mb-3">
                                <label class="form-label text-black">Loginname&nbsp;<span class="text-danger">*</span></label>
                                @Html.TextBoxFor(m => m.ref_login, new { @class = "form-control", @placeholder = "Ex : vision", @maxlength = "10" })
                            </div>
                        </div>
                        <div class="col-sm-4 col-md-4 col-lg-4">
                            <div class="form-group mb-3">
                                <label class="form-label text-black">Password&nbsp;<span class="text-danger">*</span> <i class="fe fe-info text-info" style="cursor:pointer" data-bs-placement="top" data-bs-toggle="tooltip" title="Must contain min 8 and max 10 characters, 1 uppercase letter, 1 lowercase letter, 1 numeric & 1 special character"></i></label>
                                @Html.TextBoxFor(m => m.ref_pass, new { @class = "form-control", @placeholder = "Enter Password", @type = "password", @maxlength = "10" })
                            </div>
                        </div>
                        <div class="col-sm-4 col-md-4 col-lg-4">
                            <div class="form-group mb-3">
                                <label class="form-label text-black">Confirm Password&nbsp;<span class="text-danger">*</span></label>
                                @Html.TextBoxFor(m => m.ref_pass, new { @class = "form-control", @placeholder = "Confirm Password", @type = "password", @id = "ref_cpass", @maxlength = "10" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div id="errorEdit"></div>
            <div class="col-sm-12 col-lg-12 text-center">
                <div class="btn-list btn-animation">
                    <button type="submit" class="btn btn-warning" id="btn_Update">Save Changes</button>
                    <button type="button" class="btn btn-outline-danger me-1 btnCloseEdit" data-bs-dismiss="modal">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>
<!--INTERNAL telephoneinput js-->
<script src="~/assets/plugins/telephoneinput2/intlTelInput.min.js"></script>
<script src="~/assets/plugins/telephoneinput2/intlTelInput-jquery.min.js"></script>
<script type="text/javascript">

    //#region Page Load
    $(function () {
        mobileFieldInititalization();

        $("#ref_type").select2({
            placeholder: 'Select Type',
            width: '100%',
            minimumResultsForSearch: '',
            dropdownParent: $('#form_Edit_Referal')
        });

        $("#ref_country").select2({
            placeholder: 'Select Country',
            width: '100%',
            minimumResultsForSearch: '',
            dropdownParent: $('#form_Edit_Referal')
        });

        validation();
    });
    //#endregion

    //#region International Telephone Input
    var mobileFieldInititalization = function () {
        @{
            string mob = string.Empty;
            string tel = string.Empty;
            if (Model.ref_mob.Contains("971")) {
                mob = "+" + Model.ref_mob;
            }
            else
            {
                mob = "+971" + Model.ref_mob;
            }

            if (Model.ref_tel.Contains("971")) {
                tel = "+" + Model.ref_tel;
            }
            else
            {
                tel = "+971" + Model.ref_tel;
            }
        }

        $("#ref_mob").intlTelInput({
            initialCountry: "auto",
            geoIpLookup: callback => {
                fetch("https://ipapi.co/json")
                    .then(res => res.json())
                    .then(data => {
                        callback(data.country_code);

                        $("#ref_mob").intlTelInput("setNumber", "@mob");
                    })
                    .catch(() => callback("ae"));

            },
            separateDialCode: true,
            numberType: "MOBILE",
            allowExtensions: true,
            autoPlaceholder: "polite",
            preventInvalidNumbers: true,
            formatOnDisplay: true,
            autoInsertDialCode: true,
            preferredCountries: ["ae"],
            utilsScript: "../../assets/plugins/telephoneinput2/utils.js"
        });

        $("#ref_tel").intlTelInput({
            initialCountry: "auto",
            geoIpLookup: callback => {
                fetch("https://ipapi.co/json")
                    .then(res => res.json())
                    .then(data => {
                        callback(data.country_code);
                        $("#ref_tel").intlTelInput("setNumber", "@tel");
                    })
                    .catch(() => callback("ae"));
            },
            separateDialCode: true,
            allowExtensions: true,
            autoPlaceholder: "polite",
            preventInvalidNumbers: true,
            formatOnDisplay: true,
            autoInsertDialCode: true,
            preferredCountries: ["ae"],
            utilsScript: "../../assets/plugins/telephoneinput2/utils.js"
        });

        setTimeout(function () {
            $("#ref_tel").intlTelInput("setNumber", "@tel");
        }, 100);
    }
    //#endregion

    //#region Validation Initialization
    var validation = function () {
        $.validator.addMethod("intlPhoneNumber", function (value, element) {
            return value === '' || $("#" + element.id).intlTelInput('isValidNumber');
        }, "Invalid Phone number");

        $.validator.addMethod('checkpass', function (value) {
            return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@$!%*?&])[A-Za-z\d@@$!%*?&]{8,15}$/.test(value);
            return PasswordRegex.test(checkpass);
        }, 'Password does not meet the length / Complexity / Age or History requirements!');

        $("#form_Edit_Referal").validate({
            focusInvalid: true,
            rules:
            {
                ref_type: {
                    required: true
                },
                ref_name: {
                    required: true
                },
                ref_mob: {
                    required: true,
                    intlPhoneNumber: true
                },
                ref_tel: {
                    intlPhoneNumber: true
                },
                ref_country: {
                    required: true
                },
                ref_login: {
                    required: true,
                    minlength: 5
                },
                ref_pass: {
                    required: true,
                    checkpass: true
                },
                ref_cpass: {
                    required: function () {
                        if ($('#ref_pass').val() != "")
                            return true;
                        else
                            return false;
                    },
                    equalTo: "#ref_pass"
                }
            },
            messages: {
                ref_type: {
                    required: "Select Type"
                },
                ref_name: {
                    required: "Enter Name"
                },
                ref_mob: {
                    required: "Enter Mobile",
                    minlength: "Mobile should be Minimum 10 Characters"
                },
                ref_country: {
                    required: "Select Country"
                },
                ref_login: {
                    required: "Enter Username"
                },
                ref_pass: {
                    required: "Enter Password"
                },
                ref_cpass: {
                    required: "Confirm Password",
                    equalTo: "Password doesn't match"
                }
            },
            highlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                } else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });

        $('#ref_mob').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9]/g)) {
                return false;
            }
            else {
                if (e.target.value.length >= 13)
                    return false;
            }
        });

        $('#ref_tel').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9]/g)) {
                return false;
            }
            else {
                if (e.target.value.length >= 13)
                    return false;
            }
        });

        $('#ref_fax').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9]/g)) {
                return false;
            }
            else {
                if (e.target.value.length >= 13)
                    return false;
            }
        });

        $('#ref_mob').on('change', function () {
            $(this).trigger('blur');
        });

        $('#ref_type').on('change', function () {
            $(this).trigger('blur');
        });

        $('#ref_country').on('change', function () {
            $(this).trigger('blur');
        });
    }
    //#endregion

    //#region Update Referral Click
    $('#btn_Update').on('click', function (e) {
        e.preventDefault();

        if ($("#form_Edit_Referal").valid()) {

            $('#btn_Update').removeClass("btn btn-warning");
            $('#btn_Update').addClass("btn btn-warning btn-loaders btn-icon");
            $('#btn_Update').parent().addClass("curdrop");
            $('.btnCloseEdit').addClass("disabled");
            $('#btn_Update').html("Saving Changes... Please Wait");

            var _dataUpdate = {
                "refId": $("#refId").val(),
                "ref_type": $("#ref_type").val(),
                "ref_name": $("#ref_name").val().trim(),
                "ref_mob": $("#ref_mob").intlTelInput("getNumber"),
                "ref_tel": $("#ref_tel").intlTelInput("getNumber"),
                "ref_fax": $("#ref_fax").val().trim(),
                "ref_city": $("#ref_city").val().trim(),
                "ref_email": $("#ref_email").val().trim(),
                "ref_country": $("#ref_country").val(),
                "ref_company": $("#ref_company").val().trim(),
                "ref_login": $("#ref_login").val().trim(),
                "ref_pass": $("#ref_pass").val(),
                "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("UpdateReferral", "Referals", new { area = "Masters" })",
                dataType: 'json',
                data: _dataUpdate,
                success: function (data) {
                    $('#btn_Update').parent().removeClass("curdrop");
                    $('.btnCloseEdit').removeClass("disabled");
                    $('#btn_Update').removeClass("btn btn-warning btn-loaders btn-icon");
                    $('#btn_Update').addClass("btn btn-warning");
                    $('#btn_Update').html("Save Changes");

                    if (data.isSuccess) {
                        if (data.isUpdated) {
                            GetReferals();
                            alert("<i class='fe fe-check-circle text-white'></i> Referral Updated Successfully!", "success");
                            $('#referral_modal').modal('toggle');
                            Timeout();
                        }
                        else {
                            let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                "<div class='alert alert-light-warning' role='alert'>" +
                                "<button type='button' class='btn-close text-warning' style='margin-bottom:-5px;' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                "<strong><i class='fa fa-exclamation-triangle text-warning'></i> Referral Already Exists with the same details!</strong><br/>" +
                                "</div></div>";
                            $("#errorEdit").html(html);
                        }
                    }
                    else {
                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                            "<div class='alert alert-light-danger' role='alert'>" +
                            "<button type='button' class='btn-close text-danger' style='margin-bottom:-5px;' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                            "<strong><i class='fa fa-ban text-danger'></i> Validation Error! Please validate before submitting.</strong><br/><ul>";

                        $.each(data.message, function (index, value) {
                            html += "<li><small>" + value + "</small><li>";
                            var elem = $("#" + index);
                            if (elem.hasClass("select2-hidden-accessible")) {
                                $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                            }
                            else {
                                $(elem).addClass(" is-invalid");
                            }

                            setTimeout(function () {
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                }
                                else {
                                    $(elem).removeClass("is-invalid");
                                }
                            }, 5000);
                        });

                        html += "</ul></div></div>";

                        $("#errorEdit").html(html);
                    }
                },
                error: function (xhr) {
                    $('#btn_Update').parent().removeClass("curdrop");
                    $('.btnCloseEdit').removeClass("disabled");
                    $('#btn_Update').removeClass("btn btn-warning btn-loaders btn-icon");
                    $('#btn_Update').addClass("btn btn-warning");
                    $('#btn_Update').html("Save Changes");
                    Timeout();
                }
            });
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });
    //#endregion
</script>