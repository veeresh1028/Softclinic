@model BusinessEntities.Patient.Remarks
<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold" id="exampleModalLongTitle">Add / Delete Remarks for &nbsp;</h5>
    <span class="badge bg-primary-light-1 text-uppercase"> Enquiry @Model.ar_flag </span>
    <button type="button" class="btn-close close-modal" data-bs-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body p-4">
    <form id="form_Remarks_Create" autocomplete="off">
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12 mb-4 font-weight-semibold">
                <span class="text-danger" style="font-size:smaller">Required fields are marked with *</span>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-6">
                <div class="form-group">
                    <label class="form-label">Follow Up Date&nbsp;<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.ar_fllowupdate, new { @class = "form-control mb-2", @placeholder = "Ex : DD-MMMM-YYYY", @id = "ar_fllowupdate" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-6">
                <div class="form-group">
                    <label class="form-label">Follow Up Time&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.ar_ftime, new SelectList(Model.FromTimeList, "id", "text"), "Please Select", new { @class = "form-select select2", @id = "ar_ftime" })
                </div>
            </div>
            <div class="col-sm-12 col-md-12 col-lg-12">
                <div class="form-group">
                    <label class="form-label">Remarks / Notes / Comments&nbsp;<span class="text-danger">*</span></label>
                    @Html.TextAreaFor(m => m.ar_remarks, new { @class = "form-control mb-2", @placeholder = "Ex : Remarks for the Enquiry", @id = "ar_remarks", rows = "4" })
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div id="error"></div>
            <div class="col-sm-12 col-lg-12 text-center">
                <div class="btn-list btn-animation">
                    <button type="submit" class="btn btn-success" id="btn_Insert_Remarks">Add Remark</button>
                    <button type="button" class="btn btn-outline-danger me-1" data-bs-dismiss="modal">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </form>
    <div id="div_remarks_list">
        <div class="table-responsive" style="min-height:unset;">
            <table id="tbl_remarks_lists" class="table table-bordered text-nowrap" style="width:100%;">
                <thead>
                    <tr style="color: #fff !important; background-color: #5b73e8; border-color: #5b73e8; ">
                        <th class="border-bottom-0 font-weight-semibold text-white">Follow Up Date</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Follow Up Time</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Remarks</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Entered By</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Log Date &amp; Time</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Delete</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">

    //#region Document Load
    $(function () {
        $("#div_remarks_list").hide();

        if ('@Model.ar_flag' == "Patient") {
            GetRemarks(@Model.ar_patId, '@Model.ar_flag');
        }
        else if ('@Model.ar_flag' == "Appointment") {
            GetRemarks(@Model.ar_appId, '@Model.ar_flag');
        }

        validation();

        $('#ar_fllowupdate').bootstrapdatepicker({
            format: "dd-MM-yyyy",
            viewMode: "date",
            todayHighlight: true,
            autoclose: true,
            multidate: false,
            multidateSeparator: "-"
        });
        $("#ar_fllowupdate").bootstrapdatepicker("setDate", "today");

        $("#ar_ftime").select2({
            placeholder: 'Select Follow Up Time',
            width: '100%',
            dropdownParent: $('#form_Remarks_Create')
        });
    });
    //#endregion

    //#region Validation Initialization
    var validation = function () {
        $("#form_Remarks_Create").validate({
            focusInvalid: true,
            rules:
            {
                ar_remarks: {
                    required: true
                },
                ar_fllowupdate: {
                    required: true
                },
                ar_ftime: {
                    required: true
                }
            },
            messages: {
                ar_remarks: {
                    required: "Enter Remark"
                },
                ar_fllowupdate: {
                    required: "Select Follow Up Date"
                },
                ar_ftime: {
                    required: "Select Follow Up Time"
                }
            },
            highlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                } else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });

        $('#ar_remarks').on('change', function () {
            $(this).trigger('blur');
        });

        $('#ar_fllowupdate').on('change', function () {
            $(this).trigger('blur');
        });

        $('#ar_ftime').on('change', function () {
            $(this).trigger('blur');
        });
    };
    //#endregion

    //#region Load Remarks
    var GetRemarks = function (id, flag) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetPatientRemarks", "Patient", new { area = "Patient" })?id=" + id + "&flag=" + flag,
            dataType: 'json',
            success: function (response) {
                if (response.isSuccess) {
                    $("#div_remarks_list").show();
                    var table;
                    if ($.fn.dataTable.isDataTable('#tbl_remarks_lists')) {
                        table = $('#tbl_remarks_lists').DataTable();
                        table.clear();
                        table.rows.add(response.message).draw();
                    }
                    else {
                        BindDataTable(response.message);
                    }
                }
            },
            error: function (xhr) {
                console.log("Error :" + xhr.statusText);
            }
        });
    }
    //#endregion

    //#region Bind DataTable
    var BindDataTable = function (response) {
        var table = $("#tbl_remarks_lists").DataTable({
            processing: true,
            "pageLength": 100,
            "retrieve": true,
            lengthChange: true,
            "aaData": response,
            "aoColumns": [
                {
                    "mData": "ar_fllowupdate",
                    "render": function (ar_fllowupdate) {
                        return moment(ar_fllowupdate).format("DD-MM-YYYY");
                    }
                },
                { "mData": "ftime" },
                {
                    "className": "fs-13 text-wrap",
                    "mData": "ar_remarks"
                },
                { "mData": "ar_employee_name" },
                {
                    "mData": "ar_date_created",
                    "render": function (ar_date_created) {
                        return moment(ar_date_created).format('DD-MM-YYYY - HH:mm:ss');
                    }
                },
                {
                    "mData": "arId",
                    "className": "text-center",
                    "orderable": false,
                    "searchable": false,
                    "render": function (arId) {
                        return '<button type="button" onclick="deleteRemarks(' + arId + ')" class="btn btn-sm btn-outline-danger">Delete</button>';
                    }
                }
            ],
            order: [[0, 'desc']],
            language: {
                searchPlaceholder: 'Search...',
                sSearch: '<span class="text-primary font-weight-semi-bold">Search Remark(s)</span>',
                lengthMenu: '_MENU_',
            },
            scrollX: true,
            scrollY: 500,
            scrollCollapse: true,
            fixedColumns: true,
            fixedHeader: {
                header: true,
                footer: true
            },
            buttons: [
                {
                    extend: 'excel',
                    title: 'Remarks',
                    columns: [0, 1, 2, 3, 4]
                },
                {
                    extend: 'pdf',
                    title: 'Remarks',
                    columns: [0, 1, 2, 3, 4]
                },
                {
                    extend: 'csv',
                    title: 'Remarks',
                    columns: [0, 1, 2, 3, 4]
                },
                {
                    extend: 'print',
                    title: 'Remarks',
                    columns: [0, 1, 2, 3, 4]
                }
            ]
        });
        table.buttons().container().appendTo('#tbl_remarks_lists_wrapper .col-md-6:eq(0)');

        setTimeout(function () {
            table.columns.adjust().draw();
        }, 350);
    }
    //#endregion

    //#region Insert Remark Click
    $('#btn_Insert_Remarks').on('click', function (e) {

        e.preventDefault();

        if ($("#form_Remarks_Create").valid()) {
            $('#btn_Insert_Remarks').removeClass("btn btn-success");
            $('#btn_Insert_Remarks').addClass("btn btn-success btn-loaders btn-icon");
            $('#btn_Insert_Remarks').html("Saving... Please Wait");

            var _insertdata = {
                "arId": 0,
                "ar_appId": 0,
                "ar_employee_name":  '@Model.ar_employee_name',
                "ar_remarks": $("#ar_remarks").val(),
                "ar_patId":  @Model.ar_patId,
                "ar_fllowupdate": $('#ar_fllowupdate').val(),
                "ar_ftime": $('#ar_ftime :selected').val(),
                "ar_flag": '@Model.ar_flag',
                "ar_status": '@Model.ar_status',
                "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("CreateRemarks", "Patient", new { area = "Patient" })",
                dataType: 'JSON',
                data: _insertdata,
                success: function (data) {
                    $('#btn_Insert_Remarks').removeClass("btn btn-success btn-loaders btn-icon");
                    $('#btn_Insert_Remarks').addClass("btn btn-success");
                    $('#btn_Insert_Remarks').html("Add Remarks");

                    var _from = $('#patient_remarks').attr("data-modal-from");

                    if (data.isAutherized) {
                        if (data.isSuccess) {

                            if ('@Model.ar_flag' == "Patient") {
                                GetRemarks(@Model.ar_patId, '@Model.ar_flag');
                            }
                            else if ('@Model.ar_flag' == "Appointment") {
                                GetRemarks(@Model.ar_appId, '@Model.ar_flag');
                            }

                            if (_from === "appointment-list") {
                                GetAppointments(1);
                            }
                            else if (_from === "enquiry-list") {
                                GetMarketing(1);
                            }

                            $("#ar_remarks").val("");
                            $("#ar_fllowupdate").val("");
                            $("#ar_ftime").val("").text("").trigger("change");
                        }
                        else {
                            let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                "<div class='alert alert-danger' role='alert'>" +
                                "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                "<strong>Error to Saving the Record.. Please Try Again</strong></div></div>";

                            $("#error").html(html);
                        }
                    }
                    else {
                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                            "<div class='alert alert-danger' role='alert'>" +
                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                            "<strong>Validation Error.. Please correct before you submit the form!&nbsp;</strong><br/><ul>";




                        $.each(data.message, function (_index, value) {
                            html += "<li><small>" + value + "</small><li>";

                            var index = _index.split(',');

                            $.each(index, function (i, v) {
                                if (index[i] != null && index[i] != "") {
                                    var elem = $("#" + index[i]);
                                    console.log($("#" + index[i]));
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                    }
                                    else {
                                        $(elem).addClass(" is-invalid");
                                    }

                                    setTimeout(function () {
                                        if (elem.hasClass("select2-hidden-accessible")) {
                                            $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                        }
                                        else {
                                            $(elem).removeClass("is-invalid");
                                        }
                                    }, 5000);
                                }
                            });
                        });

                        html += "</ul></div></div>";

                        $("#error").html(html);
                    }
                },
                error: function (xhr) {
                    $('#btn_Insert_Remarks').removeClass("btn btn-success btn-loaders btn-icon");
                    $('#btn_Insert_Remarks').addClass("btn btn-success");
                    $('#btn_Insert_Remarks').html("Add Remarks");

                    console.log(xhr);
                }
            });
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });
    //#endregion

    //#region Delete Remark
    var deleteRemarks = function (arId) {
        Swal.fire({
            title: "Are you sure you want to delete this Remark ?",
            text: "This action will permanently delete this remark!",
            icon: "question",
            showCancelButton: !0,
            confirmButtonText: 'Yes! I Confirm',
            cancelButtonText: 'No! Cancel Please',
            confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
        }).then(function (t) {
            if (t.value) {
                $.ajax({
                    url: '@Url.Action("DeleteRemark", "Patient", new { area = "Patient" })?arId=' + arId,
                    type: "GET",
                    dataType: "JSON",
                    success: function (data) {
                        if (data.isAuthorized) {
                            if (data.success) {
                                Swal.fire({
                                    title: "Success!",
                                    text: "Remark is Deleted Successfully!",
                                    icon: "success",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                                });

                                if ('@Model.ar_flag' == "Patient") {
                                    GetRemarks(@Model.ar_patId, '@Model.ar_flag');
                                }
                                else if ('@Model.ar_flag' == "Appointment") {
                                    GetRemarks(@Model.ar_appId, '@Model.ar_flag');
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Error!",
                                    text: "Failed to Delete Remark!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        }
                        else {
                            Swal.fire({
                                title: "Access Denied!",
                                text: "You do not have enough privileges to delete this Remark!",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }

                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: "Error!",
                            text: "Failed to Delete Remark! Please refresh the page and try again.",
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                        });
                    }
                });
            }
        });
    }
    //#endregion

</script>