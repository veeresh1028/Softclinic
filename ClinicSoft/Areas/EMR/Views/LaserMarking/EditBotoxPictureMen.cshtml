@using System.Configuration;
@using System.Linq;
@using System.Security.Claims;
@using BusinessEntities;
@model BusinessEntities.EMR.LaserMarking
@{
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    EMRInfo emr = (EMRInfo)TempData["emr_data"];
    TempData.Keep("emr_data");
}
<form id="form_EditBotoxMen" class="needs-validation" name="BotoxPictureMen">

    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.lfmId)
    @Html.HiddenFor(m => m.lfm_appId)
    @Html.HiddenFor(m => m.lfmId, new { @id = "ulfmId", @value = "@Model.lfmId" })

    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-6">
            <div class="form-group mb-3">
                <button id="udrawingTriangleLine" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="uTriangleLine" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-triangle" viewBox="0 0 16 16">
                        <path d="M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.15.15 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.2.2 0 0 1-.054.06.1.1 0 0 1-.066.017H1.146a.1.1 0 0 1-.066-.017.2.2 0 0 1-.054-.06.18.18 0 0 1 .002-.183L7.884 2.073a.15.15 0 0 1 .054-.057m1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767z" />
                    </svg>
                </button>
                <button id="udrawingTrianglefill" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="uTrianglefill" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-triangle-fill" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M7.022 1.566a1.13 1.13 0 0 1 1.96 0l6.857 11.667c.457.778-.092 1.767-.98 1.767H1.144c-.889 0-1.437-.99-.98-1.767z" />
                    </svg>
                </button>
                <button id="udrawingSquarefill" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="uSquarefill" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-square-fill" viewBox="0 0 16 16">
                        <path d="M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2z" />
                    </svg>
                </button>
                <button id="udrawingSquareLine" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="uSquareLine" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-square" viewBox="0 0 16 16">
                        <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
                    </svg>
                </button>
                <button id="udrawingdot" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="udot" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-circle-fill" viewBox="0 0 16 16">
                        <circle cx="8" cy="8" r="8" />
                    </svg>
                </button>
                <button id="udrawingcheck" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="ucheck" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-check" viewBox="0 0 16 16">
                        <path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z" />
                    </svg>
                </button>
                <button id="udrawingcircle" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="ucircle" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-circle" viewBox="0 0 16 16">
                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                    </svg>
                </button>
                <button id="udrawingcupping" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="ucupping" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash2" viewBox="0 0 16 16">
                        <path d="M14 3a.7.7 0 0 1-.037.225l-1.684 10.104A2 2 0 0 1 10.305 15H5.694a2 2 0 0 1-1.973-1.671L2.037 3.225A.7.7 0 0 1 2 3c0-1.105 2.686-2 6-2s6 .895 6 2M3.215 4.207l1.493 8.957a1 1 0 0 0 .986.836h4.612a1 1 0 0 0 .986-.836l1.493-8.957C11.69 4.689 9.954 5 8 5s-3.69-.311-4.785-.793" />
                    </svg>
                </button>
                <button id="uundo_button" class="btn bg-dark-transparent btn-icon btn-svg" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-arrow-counterclockwise" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2v1z" />
                        <path d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466z" />
                    </svg>
                </button>
                <button id="udrawingeraser" class="btn bg-dark-transparent btn-icon btn-svg udrawing-mode" data-mode="ueraser" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eraser-fill text-danger" viewBox="0 0 16 16">
                        <path d="M8.086 2.207a2 2 0 0 1 2.828 0l3.879 3.879a2 2 0 0 1 0 2.828l-5.5 5.5A2 2 0 0 1 7.879 15H5.12a2 2 0 0 1-1.414-.586l-2.5-2.5a2 2 0 0 1 0-2.828zm.66 11.34L3.453 8.254 1.914 9.793a1 1 0 0 0 0 1.414l2.5 2.5a1 1 0 0 0 .707.293H7.88a1 1 0 0 0 .707-.293z" />
                    </svg>
                </button>
                <input id="ucolor_picker" type="text">
                <div>
                    <canvas id="uimageCanvas" width="578" height="650"></canvas>
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-12 col-lg-6">
            <div class="form-group mb-3">
                <label class="form-label text-black">Notes&nbsp;<span class="text-danger">*</span></label>
                <div id="uBotoxmennote">

                </div>
            </div>

        </div>
    </div>
    <div class="row mt-2">
        <div class="col-sm-12 col-md-6 col-lg-12 text-center">
            <div class="btn-list btn-animation">
                <button type="submit" class="btn btn-sm btn-warning" id="btn_Update_BotoxMen">Save Changes</button>
                <button type="submit" class="btn btn-sm btn-outline-danger" id="btn_Delete_BotoxMen">Delete</button>
                <button type="submit" class="btn btn-sm btn-outline-light" id="btn_Print_BotoxMen" onclick="PrintBotoxPictureMen(@Model.lfmId)">
                    <i class="fa fa-print">&nbsp;&nbsp;</i>Print
                </button>
            </div>
        </div>
    </div>
</form>

<script>
    //#region Page Load
        $(function () {

            if ("@emp_designation.ToString()" === "Super Administrator") {
                $("#btn_Update_BotoxMen,#btn_Delete_BotoxMen").show();
            } else {
                if ("@emr.set_emr_lock" == "NoLock") {
                    $("#btn_Update_BotoxMen,#btn_Delete_BotoxMen").show();

                }
                else {
                    if ("@emr.app_ae_date" >= "@emr.today") {
                        $("#btn_Update_BotoxMen,#btn_Delete_BotoxMen").show();
                    }
                    else {
                        $("#btn_Update_BotoxMen,#btn_Delete_BotoxMen").hide();
                    }
                }
            }
            const udrawingButtons = document.querySelectorAll('.udrawing-mode');
            udrawingButtons.forEach((button) => {
                button.addEventListener('click', function () {
                    uDrawingMode = button.getAttribute('data-mode');
                });
            });
            $('#ucolor_picker').spectrum({
                type: "flat",
                showInput: true,
                preferredFormat: "hex",
                color: '#0061da'
            });
            LoadimageExisting();
            uquill = new Quill('#uBotoxmennote', {
                 modules: {
                     toolbar:
                         [[{
                             'header': [1, 2, 3, 4, 5, 6, false]
                         }],
                             ['bold', 'italic', 'underline', 'strike'],
                     [{
                         'list': 'ordered'
                     }, {
                         'list': 'bullet'
                     }]]
                 },
                 theme: 'snow',
                 placeholder: 'Write your Addendum here.....',
             });
             var realHTML = $('<textarea />').html("@Model.lfm_doc2").text();
            uquill.root.innerHTML = realHTML;

        });

    //#endregion Page Load

    //#region drawing
       var uisErasing = false;

     //#region drawing
     var ucanvas = document.getElementById('uimageCanvas');
     var uctx = ucanvas.getContext('2d');
     var udrawingHistory = [];
     var uDrawingMode = 'udot';
     //#region Load an image
     var LoadimageExisting = function () {
       var uimage = new Image();
       if ("@Model.lfm_doc" != "") {
           uimage.src = "@Model.lfm_doc";
       }
       else {
           uimage.src = "@ConfigurationManager.AppSettings["ClinicSoftEndPoint"].ToString()" + "images/Laser/Men/botox_men.png";
       }
       uimage.onload = function () {
           // Draw the image onto the canvas
           uctx.drawImage(uimage, 0, 0,ucanvas.width, ucanvas.height);
       };
   }
    // Add drawing functionality
     var uisDrawing = false;
     var ulastX, ulastY;
     ucanvas.addEventListener('mousedown', function (e) {
         var rect = ucanvas.getBoundingClientRect();
         var x = e.clientX - rect.left;
         var y = e.clientY - rect.top;

         if (uisErasing) {
             uerase(x, y);
         } else {
             if (uDrawingMode === 'uTriangleLine') {
                 udrawingTriangleLine(x, y);
             }
             else if (uDrawingMode === 'uTrianglefill') {
                 udrawingTrianglefill(x, y);
             }
             else if (uDrawingMode === 'uSquarefill') {
                 udrawingSquarefill(x, y);
             }
             else if (uDrawingMode === 'uSquareLine') {
                 udrawingSquareLine(x, y);
             }
             if (uDrawingMode === 'udot') {
                 udrawDot(x, y);
             } else if (uDrawingMode === 'ucheck') {
                 udrawcheckMark(x, y);
             }
             else if (uDrawingMode === 'ucircle') {
                 udrawingCircle(x, y);
             }
             else if (uDrawingMode === 'ucupping') {
                 udrawingCupping(x, y);
             }
             else if (uDrawingMode === 'ueraser') {
                 udrawingEraser(x, y);
             }
         }
         uisDrawing = true;
         udrawingHistory.push(ucanvas.toDataURL());
     });
     ucanvas.addEventListener('mousemove', function (e) {

         if (uisErasing) {
             var x = e.clientX - ucanvas.getBoundingClientRect().left;
             var y = e.clientY - ucanvas.getBoundingClientRect().top;
             uerase(x, y);
         } else if (!uisDrawing) {
             return;
         }

         if (!uisDrawing) return;

         var x = e.offsetX - ucanvas.getBoundingClientRect().left;
         var y = e.offsetY - ucanvas.getBoundingClientRect().top;


         uisDrawing = true;
         udrawingHistory.push(ucanvas.toDataURL());
     });
       var udrawingTriangleLine = function (x, y) {
           uctx.strokeStyle = $("#ucolor_picker").val(); // Set stroke color for the triangle icon
           uctx.lineWidth = 2;
           uctx.beginPath();
           uctx.moveTo(x, y + 14); // Start drawing from the bottom center
           uctx.lineTo(x + 8, y); // Draw line to the top right
           uctx.lineTo(x - 8, y); // Draw line to the top left
           uctx.closePath();
           uctx.stroke();
           udrawingHistory.push(ucanvas.toDataURL());
       }
       var udrawingTrianglefill = function (x, y) {
           uctx.fillStyle = $("#ucolor_picker").val(); // Set fill color for the triangle icon
           uctx.beginPath();
           uctx.moveTo(x, y + 11.667); // Start drawing from the bottom center
           uctx.lineTo(x + 8, y - 1.101); // Draw line to the top right
           uctx.lineTo(x - 8, y - 1.101); // Draw line to the top left
           uctx.closePath();
           uctx.fill();
           udrawingHistory.push(ucanvas.toDataURL());
       }
       var udrawingSquarefill = function (x, y) {
           uctx.fillStyle = $("#ucolor_picker").val(); // Set fill color
           uctx.fillRect(x - 5, y - 5, 10, 10); // Draw a square centered at (x, y) with side length 10
           udrawingHistory.push(ucanvas.toDataURL());
       }
       var udrawingSquareLine = function (x, y) {
           uctx.strokeStyle = $("#ucolor_picker").val(); // Set stroke color
           uctx.lineWidth = 2; // Set line width
           uctx.strokeRect(x - 5, y - 5, 10, 10); // Draw a square outline centered at (x, y) with side length 10
           udrawingHistory.push(ucanvas.toDataURL());
       }

     function udrawDot(x, y) {
         uctx.fillStyle = $("#ucolor_picker").val();
         uctx.beginPath();
         uctx.arc(x, y, 5, 0, Math.PI * 2);
         uctx.fill();
         udrawingHistory.push(ucanvas.toDataURL());
     }
     var udrawcheckMark = function (x, y) {
         uctx.strokeStyle = $("#ucolor_picker").val();
         uctx.lineWidth = 2;
         uctx.beginPath();
         uctx.moveTo(x - 20, y);
         uctx.lineTo(x - 10, y + 10);
         uctx.lineTo(x + 20, y - 20);
         uctx.stroke();
         udrawingHistory.push(ucanvas.toDataURL());
     }

     var udrawingCircle = function (x, y) {
         uctx.strokeStyle = $("#ucolor_picker").val();
         uctx.lineWidth = 2;
         uctx.beginPath();
         uctx.arc(x, y, 5, 0, Math.PI * 2); // Use the arc method to draw a circle
         uctx.stroke();
         udrawingHistory.push(ucanvas.toDataURL());
     }

     var udrawingCupping = function (x, y) {
         uctx.strokeStyle = $("#ucolor_picker").val(); // Set color for the trash icon
         uctx.lineWidth = 2;
         uctx.beginPath();
         uctx.moveTo(x - 8, y - 16);
         uctx.lineTo(x + 8, y - 16);
         uctx.lineTo(x + 4, y - 2);
         uctx.lineTo(x - 4, y - 2);
         uctx.closePath();
         uctx.stroke();
         udrawingHistory.push(ucanvas.toDataURL());
     }

     var udrawingEraser = function (x, y) {
         var squareSize = 20;
         uctx.fillStyle = "#ffffff";
         uctx.beginPath();
         uctx.rect(x - squareSize / 2, y - squareSize / 2, squareSize, squareSize);
         uctx.fill();
         udrawingHistory.push(ucanvas.toDataURL());
         $("#ucolor_picker").val("#000000");
     }
     function uerase(x, y) {
         uctx.fillStyle = '#ffffff';
         uctx.beginPath();
         uctx.arc(x, y, 10, 0, Math.PI * 2);
         uctx.fill();
         udrawingHistory.push(ucanvas.toDataURL());
     }

 ucanvas.addEventListener('mouseup', function () {
     uisDrawing = false;
 });

     //#region Undo
     $('#uundo_button').on('click', function (e) {
         if (udrawingHistory.length > 1) {
             udrawingHistory.pop(); // Remove the current state
             var uimg = new Image();
             uimg.src = udrawingHistory[udrawingHistory.length - 1];
             uimg.onload = function () {
                 uctx.clearRect(0, 0, ucanvas.width, ucanvas.height);
                 uctx.drawImage(uimg, 0, 0, ucanvas.width, ucanvas.height);
             };
         }
     });
     //#endregion Undo
     //#region Update  Button Click
        $('#btn_Update_BotoxMen').on('click', function (e) {
             e.preventDefault();
            var isvalid = true;

            if (uquill.getText().trim().length == 0) {
                $("#uBotoxmennote").attr("style", "border:1px solid red;");
                error_timeout_quil($("#uBotoxmennote"));
                isvalid = false;
            }

            /*if (isDrawing) {*/
            if (isvalid) {
                $('#btn_Update_BotoxMen').removeClass("btn btn-sm btn-success");
                $('#btn_Update_BotoxMen').addClass("btn btn-sm btn-success btn-loaders btn-icon");
                $('#btn_Update_BotoxMen').html("Updating the Record....");

                var canvas = $("#uimageCanvas").get(0);
                var imgData = canvas.toDataURL();

                var chartname = "@emr.patId"+"_"+"BotoxPictureMen"+"_"+"@emr.appId";
                var _dataInsert = {
                    "lfmId": @Model.lfmId,
                    "lfm_appId": @emr.appId,
                    "lfm_patId": "@emr.patId",
                    "lfm_doc": chartname,
                    "image": imgData,
                    "lfm_doc2": uquill.root.innerHTML,
                    "lfm_form": "BotoxMen",
                    "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                }
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("UploadBotoxPictureMen", "LaserMarking", new { area = "EMR" })",
                    dataType: 'JSON',
                    data: _dataInsert,
                    success: function (data) {
                        $('#btn_Update_BotoxMen').removeClass("btn btn-sm btn-warning btn-loaders btn-icon");
                        $('#btn_Update_BotoxMen').addClass("btn btn-sm btn-warning");
                        $('#btn_Update_BotoxMen').html("Save Changes");
                        if (data.isSuccess) {
                            if (data.isInserted) {
                                var alertPlaceholder = document.getElementById("Alert");
                                function alert(e, t) {
                                    var l = document.createElement("div");
                                    l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                }
                                alert("<i class='fe fe-check-circle text-white'></i> Botox Picture Men Updated Successfully!", "success");
                                Timeout();
                                GetBotoxPictureMen();
                            }
                            else {
                                let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                    "<div class='alert alert-warning' role='alert'>" +
                                    "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                    "<strong>Warning.. Botox Picture Men Alredy Exists..</strong><br/>" +
                                    "</div></div>";
                                $("#error").html(html);
                            }
                        }
                        else {
                            let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                "<div class='alert alert-danger' role='alert'>" +
                                "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                "<strong>Validation Error.. Please correct before you submit the form!&nbsp;</strong><br/><ul>";
                            $.each(data.message, function (index, value) {
                                html += "<li><small>" + value + "</small><li>";
                                var elem = $("#" + index);
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                }
                                else {
                                    $(elem).addClass(" is-invalid");
                                }

                                setTimeout(function () {
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                    }
                                    else {
                                        $(elem).removeClass("is-invalid");
                                    }
                                }, 5000);
                            });
                            html += "</ul></div></div>";
                            $("#error").html(html);
                        }
                    },
                    error: function (xhr) {
                        $('#btn_Update_BotoxMen').removeClass("btn btn-sm btn-warning btn-loaders btn-icon");
                        $('#btn_Update_BotoxMen').addClass("btn btn-sm btn-warning");
                        $('#btn_Update_BotoxMen').html("Save Changes");
                        Timeout();
                    }
                });
            }
        });
    //#endregion Update  Button Click


    //#region Delete Click
        $('#btn_Delete_BotoxMen').on('click', function (e) {
            e.preventDefault();
            $('#btn_Delete_BotoxMen').removeClass("btn btn-sm btn-success");
            $('#btn_Delete_BotoxMen').addClass("btn btn-sm btn-success btn-loaders btn-icon");
            $('#btn_Delete_BotoxMen').html("Deleting the Record....");

                $.ajax({
                    url: '@Url.Action("DeleteBotoxPictureMen", "LaserMarking", new { area = "EMR" })?lfmId=' + @Model.lfmId,
                    type: "POST",
                    dataType: 'JSON',
                    success: function (data) {
                        $('#btn_Delete_BotoxMen').removeClass("btn btn-sm btn-success btn-loaders btn-icon");
                        $('#btn_Delete_BotoxMen').addClass("btn btn-sm btn-warning");
                        $('#btn_Delete_BotoxMen').html("Delete");
                        if (data.isAuthorized) {
                            if (data.success) {
                                var alertPlaceholder = document.getElementById("Alert");
                                function alert(e, t) {
                                    var l = document.createElement("div");
                                    l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                }
                                alert("<i class='fe fe-check-circle text-white'></i> Botox Picture Men Deleted Successfully!", "success");
                                GetBotoxPictureMen();
                                Timeout();
                            }
                            else {
                                let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                    "<div class='alert alert-warning' role='alert'>" +
                                    "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                    "<strong>Error!.. Failed to Delete..</strong><br/>" +
                                    "</div></div>";
                                $("#error").html(html);
                            }
                        }
                        else {
                            var alertPlaceholder = document.getElementById("Alert");
                            function alert(e, t) {
                                var l = document.createElement("div");
                                l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                            }
                            alert("<i class='fe fe-check-circle text-white'></i> You do not have Enough Privileges to Delete this Designation!", "Access Denied!");
                        }
                    },
                    error: function (xhr) {
                        $('#btn_Delete_BotoxMen').removeClass("btn btn-sm btn-success btn-loaders btn-icon");
                        $('#btn_Delete_BotoxMen').addClass("btn btn-sm btn-Delete");
                        $('#btn_Delete_BotoxMen').html("Delete");
                        Timeout();
                    }
                })
        });
    //#endregion Delete Click

</script>


