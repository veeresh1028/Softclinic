@using BusinessEntities;
@using System.Configuration;

@{
    EMRInfo emr = (EMRInfo)TempData["emr_data"];
    TempData.Keep("emr_data");
}
<style>
    .emr-pat-info {
        padding-right: 2px;
        padding-left: 2px;
        font-weight: bold;
    }

    .alert1 {
        position: relative;
        padding: 0.75rem 1.25rem;
        margin-bottom: 1rem;
        border: 1px solid transparent;
        border-radius: 3px;
        font-size: 0.9375rem;
    }
</style>

<div class="mt-2">
    <div class="page-header">
        <div class="page-leftheader d-flex">
            <span class="ms-2">
                <a class="btn btn-outline-primary" data-bs-toggle="collapse" href="#pat_emr_info" role="button" aria-expanded="false" aria-controls="pat_emr_info">
                    Patient Appointment &amp; Medical Informations
                </a>
            </span>

            <span class="ms-2 " id="strt"><label class="btn btn-outline-light" id="t_start" name="">&nbsp;</label></span>
            <span class="ms-2" id="btn-start">
                <a class="btn btn-outline-success" data-bs-toggle="collapse" href="#emr_start" role="button" aria-expanded="false" aria-controls="pat_emr_info">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clock" viewBox="0 0 16 16">
                        <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z" />
                        <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z" />
                    </svg>  Start
                </a>
            </span>
            <span class="ms-2 text-success margin-right-5 text-bold" id="spn-started">Started.....</span>
            <span class="ms-2 text-success margin-right-5 text-bold" id="spn-timer">00:00:00</span>
            <span class="ms-2" id="hidden_id"></span>
            <span class="ms-2 " id="end"><label class="btn btn-outline-light" id="t_end" name="">&nbsp;</label></span>
            <span class="ms-2" id="btn-end">
                <a class="btn btn-outline-danger" data-bs-toggle="collapse" href="#emr_start" role="button" aria-expanded="false" aria-controls="pat_emr_info">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clock-fill" viewBox="0 0 16 16">
                        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z" />
                    </svg> End
                </a>
            </span>
            <span class="ms-2">
                <a class="btn btn-danger btn-pill" role="button" href="@Url.Action("QuickEMR", "QuickEMR", new { area = "EMR" })">
                    <i class="fa fa-medkit me-2 fs-14"></i>
                    Quick EMR
                </a>
            </span>
        </div>
        <div class="page-rightheader">
            <a class="btn btn-outline-light" role="button" href="@Url.Action("PrintMedicalSheet", "QuickEMR", new { area = "EMR" })">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="me-2 fs-14  bi bi-clipboard-pulse" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M10 1.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-1Zm-5 0A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5v1A1.5 1.5 0 0 1 9.5 4h-3A1.5 1.5 0 0 1 5 2.5v-1Zm-2 0h1v1H3a1 1 0 0 0-1 1V14a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V3.5a1 1 0 0 0-1-1h-1v-1h1a2 2 0 0 1 2 2V14a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3.5a2 2 0 0 1 2-2Zm6.979 3.856a.5.5 0 0 0-.968.04L7.92 10.49l-.94-3.135a.5.5 0 0 0-.895-.133L4.232 10H3.5a.5.5 0 0 0 0 1h1a.5.5 0 0 0 .416-.223l1.41-2.115 1.195 3.982a.5.5 0 0 0 .968-.04L9.58 7.51l.94 3.135A.5.5 0 0 0 11 11h1.5a.5.5 0 0 0 0-1h-1.128L9.979 5.356Z" />
                </svg>
                Medical Sheet
            </a>
            <a class="btn btn-outline-light" role="button" href="@Url.Action("SignedDocuments", "QuickEMR", new { area = "EMR" })">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="me-2 fs-14  bi bi-pen" viewBox="0 0 16 16">
                    <path d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001zm-.644.766a.5.5 0 0 0-.707 0L1.95 11.756l-.764 3.057 3.057-.764L14.44 3.854a.5.5 0 0 0 0-.708l-1.585-1.585z" />
                </svg>
                Signed Docs.
            </a>
            <a class="btn btn-outline-light" role="button" href="@Url.Action("AuditLog", "QuickEMR", new { area = "EMR" })">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="me-2 fs-14  bi bi-shield-lock" viewBox="0 0 16 16">
                    <path d="M5.338 1.59a61.44 61.44 0 0 0-2.837.856.481.481 0 0 0-.328.39c-.554 4.157.726 7.19 2.253 9.188a10.725 10.725 0 0 0 2.287 2.233c.346.244.652.42.893.533.12.057.218.095.293.118a.55.55 0 0 0 .101.025.615.615 0 0 0 .1-.025c.076-.023.174-.061.294-.118.24-.113.547-.29.893-.533a10.726 10.726 0 0 0 2.287-2.233c1.527-1.997 2.807-5.031 2.253-9.188a.48.48 0 0 0-.328-.39c-.651-.213-1.75-.56-2.837-.855C9.552 1.29 8.531 1.067 8 1.067c-.53 0-1.552.223-2.662.524zM5.072.56C6.157.265 7.31 0 8 0s1.843.265 2.928.56c1.11.3 2.229.655 2.887.87a1.54 1.54 0 0 1 1.044 1.262c.596 4.477-.787 7.795-2.465 9.99a11.775 11.775 0 0 1-2.517 2.453 7.159 7.159 0 0 1-1.048.625c-.28.132-.581.24-.829.24s-.548-.108-.829-.24a7.158 7.158 0 0 1-1.048-.625 11.777 11.777 0 0 1-2.517-2.453C1.928 10.487.545 7.169 1.141 2.692A1.54 1.54 0 0 1 2.185 1.43 62.456 62.456 0 0 1 5.072.56z" />
                    <path d="M9.5 6.5a1.5 1.5 0 0 1-1 1.415l.385 1.99a.5.5 0 0 1-.491.595h-.788a.5.5 0 0 1-.49-.595l.384-1.99a1.5 1.5 0 1 1 2-1.415z" />
                </svg>
                Audit Log
            </a>
            <a class="btn btn-primary btn-pill" role="button" href="@Url.Action("AppointmentList", "AppointmentList", new { area = "Appointment" })">
                <i class="fa fa-calendar me-2 fs-14"></i>
                Back To Appointment
            </a>
        </div>
    </div>
    <div class="collapse show mb-2" id="pat_emr_info" style="background:white;">
        <div class="border p-3">
            <div class="row">
                <div class="col-md-1">
                    <div class="widget-user-image mx-auto mt-2">
                        @if (!string.IsNullOrEmpty(emr.pat_photo))
                        {
                            string imgDataURL = ConfigurationManager.AppSettings["ClinicSoftEndPoint"].ToString() + "images/patient_images/" + emr.pat_photo;
                            <img src="@imgDataURL" alt="Patient Profile" class="rounded-circle" />
                        }
                        else
                        {
                            if (emr.pat_gender.ToLower().StartsWith("f"))
                            {
                                <img src='~/images/no-photo-female.jpg' alt="Patient Profile" class="rounded-circle" />
                            }
                            else
                            {
                                <img src='~/images/no-photo-male.jpg' alt="Patient Profile" class="rounded-circle" />
                            }
                        }
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="alert1 alert-dark" role="alert">
                        MRN : <span class="emr-pat-info">@emr.pat_code</span>  |
                        Name: <span class="emr-pat-info">  @emr.pat_name </span>  |
                        EMID: <span class="emr-pat-info">  @emr.pat_emirateid </span>  |
                        Age: <span class="emr-pat-info"> @emr.pat_age </span>  |
                        Gender: <span class="emr-pat-info"> @emr.pat_gender </span>  |
                        Nationality: <span class="emr-pat-info">  @emr.pat_nationality </span>  |
                        Status: <span class="emr-pat-info"> @emr.pat_ms </span>  |
                        TPA: <span class="emr-pat-info">@emr.app_ic_name (@emr.pi_insno) </span>  |
                        Scheme: <span class="emr-pat-info">@emr.is_title </span>  |
                        Payer: <span class="emr-pat-info">@emr.app_ip_code </span>
                    </div>
                    <div class="alert1 alert-light" role="alert">
                        Visit No : <span class="emr-pat-info">@emr.appId</span>  |
                        Category : <span class="emr-pat-info">  @emr.app_category </span>  |
                        <i class="fe fe-calendar"></i> <span class="emr-pat-info">  @emr.app_fdate_time </span>  |
                        <i class="fa fa-user-md"></i> <span class="emr-pat-info">  @emr.app_doctor_department </span>
                    </div>
                    @if (emr.isAlert)
                    {
                        <div class="alert1 alert-light-danger" role="alert">
                            @if (!string.IsNullOrEmpty(emr.vital_sign))
                            {
                                <span class="badge badge-gradient-success mt-2">Vitals Alert</span> @emr.vital_sign;
                            }
                            else
                            {
                                <span class="badge badge-gradient-danger mt-2">Vitals Alert</span> <span>No vital sign data found</span>
                            }

                            @if (!string.IsNullOrEmpty(emr.allergy))
                            {
                                <span class="badge badge-gradient-info mt-2">Allergy Alert</span> @emr.allergy;
                            }
                            else
                            {
                                <span class="badge badge-gradient-danger mt-2">Allergy Alert</span> <span>Patient doen't have any allergy</span>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert1 alert-light-danger mb-0" role="alert">No vital sign data found & Patient doesn't have any allergy</div>
                    }
                </div>
                <div class="col-md-1">
                    <div class="widget-user-image mx-auto mt-2">
                        @if (!string.IsNullOrEmpty(emr.emp_photo.ToString()))
                        {
                            if (emr.emp_photo.ToString().Contains(".") && !(emr.emp_photo.ToString().ToUpper().Equals("N/A") || emr.emp_photo.ToString().ToUpper().Equals("NA")))
                            {
                                string imgDataURL = ConfigurationManager.AppSettings["ClinicSoftEndPoint"].ToString() + "images/employee_photos/" + emr.emp_photo.ToString();
                                //string imgDataURL = "~/images/EMPLOYEE_PHOTOS/" + emr.emp_photo.ToString();
                                <img src="@imgDataURL" alt="Doctor Profile" class="rounded-circle" />
                            }
                            else
                            {
                                <img src="~/images/no-photo-doctor.jpg" alt="Doctor Profile" class="rounded-circle" />
                            }
                        }
                        else
                        {
                            <img src="~/images/no-photo-doctor.jpg" alt="Doctor Profile" class="rounded-circle" />
                        }
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="mb-2">
        <!-- Modal Signature Pad -->
        <div class="modal fade" id="signature_pad" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="EMR-list">
            <div class="modal-dialog modal-dialog-centered modal-lg ">
                <div class="modal-content" id="signature_pad_body">
                </div>
            </div>
        </div>
        <!-- End Modal Signature Pad -->
    </div>
    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="Alert"></div>
        <div id="error"></div>
    </div>

</div>
<script>
    //#region Page Load
    $(function () {
        $("body").addClass("app sidebar-mini sidenav-toggled");
        GetStartEnd();

    });
    //#endregion Page Load
    //region Remove Error Class
    function error_timeout(_id) {
        setTimeout(function () {
            $(".has-error").removeClass("has-error");
            $(".error").removeClass("error");
            $("#" + _id + "-error").text("");
        }, 5200);
    }
     //#endregion
    var timerInterval;

    var startTime;
    var elapsedTime = 0;
    var timerElement = $('#spn-timer');
     //#region Load StartEnd
        var GetStartEnd = function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetStartEndTime", "QuickEMR", new { area = "EMR" })?appId=" + "@emr.appId",
                success: function (response) {
                    if (response.length > 0) {
                        console.log(response);
                        /*timerElement.text(response[0].t_duration);*/
                        $("#hidden_id").val(response[0].tId);
                        if (response[0].t_status == "START") {
                            $('#t_start').text(response[0].t_start1);
                            $("#spn-started").removeClass("text-info margin-right-5");
                            $("#spn-started").addClass("text-danger margin-right-5");
                            $("#spn-started").html('  <a class="btn btn-outline-success" data-bs-toggle="collapse" href="#emr_start" role="button" aria-expanded="false" aria-controls="pat_emr_info" ><i class=fa fa-clock ></i> Started....</a >');

                            $("#btn-start").hide();
                            $("#spn-started").show();
                            $("#spn-timer").show();
                            $("#btn-end").show();
                            $("#strt").show();

                        }
                        else if (response[0].t_status == "End") {

                            timerElement.text(response[0].t_duration);
                            $('#t_end').text(response[0].t_end1);
                            $('#t_start').text(response[0].t_start1);
                            $("#spn-started").removeClass("text-info margin-right-5");
                            $("#spn-started").addClass("text-danger margin-right-5");
                            $("#spn-started").html('  <a class="btn btn-outline-success" data-bs-toggle="collapse" href="#emr_start" role="button" aria-expanded="false" aria-controls="pat_emr_info" ><i class=fa fa-clock ></i> Started....</a >');

                            $("#btn-start").hide();
                            $("#spn-started").show();
                            $("#spn-timer").show();
                            $("#btn-end").show();
                            $("#strt").show();
                            $("#end").show();
                        }
                        else {

                        }

                    }

                },
                error: function (xhr) {
                    console.log(xhr);
                }
            })
        }
    //#endregion Load StartEnd


    $(document).ready(function () {

        $("#spn-started").hide();
        $("#spn-timer").hide();
        $("#btn-pause").hide();
        $("#btn-end").hide();
        $("#strt").hide();
        $("#end").hide();

    });
    var currentDate = new Date();

    // Format the date as "yyyy-MM-dd HH:mm:ss.000"
    var formattedStartDate = currentDate.getFullYear() + '-' +
        ('0' + (currentDate.getMonth() + 1)).slice(-2) + '-' +
        ('0' + currentDate.getDate()).slice(-2) + ' ' +
        ('0' + currentDate.getHours()).slice(-2) + ':' +
        ('0' + currentDate.getMinutes()).slice(-2) + ':' +
        ('0' + currentDate.getSeconds()).slice(-2) + '.000';

    $("#btn-start").on('click', function () {
        var _dateInsert = {
            "tId": 0,
            "t_appId": @emr.appId,
            "t_start": new Date().toLocaleString(),
            "t_end": '',
            "t_duration": timerElement.text(),
            "t_status": "START",
        }
        $.ajax({
            type: "Post",
            url: "@Url.Action("InsertStartTime", "QuickEMR", new {area = "EMR" })",
            dataType: 'JSON',
            data: _dateInsert,
            success: function (data) {
                if (data.isSuccess) {
                    if (data.isInserted) {
                        GetStartEnd();

                    }
                }
            }
        })

        $("#spn-started").removeClass("text-info margin-right-5");
        $("#spn-started").addClass("text-danger margin-right-5");
        $("#spn-started").html('  <a class="btn btn-outline-success" data-bs-toggle="collapse" href="#emr_start" role="button" aria-expanded="false" aria-controls="pat_emr_info" ><i class=fa fa-clock ></i> Started....</a >');

        $("#btn-start").hide();
        $("#spn-started").show();
        $("#spn-timer").show();
        $("#btn-end").show();
        $("#strt").show();
        startTime = new Date().getTime();
        timerInterval = setInterval(updateTimer, 1000);

    });

    $("#btn-end").on('click', function () {
        var _dateInsert = {
            "tId": $("#hidden_id").val(),
            "t_appId": @emr.appId,
            "t_start": "@emr.today",
            "t_end": new Date().toLocaleString(),
            "t_duration": timerElement.text(),
            "t_status": "End",
        }
        $.ajax({
            type: "Post",
            url: "@Url.Action("UpdateendTime", "QuickEMR", new {area = "EMR" })",
            dataType: 'JSON',
            data: _dateInsert,
            success: function (data) {
                if (data.isSuccess) {
                    if (data.isInserted) {
                        GetStartEnd();

                    }
                }
            }
        })

        $("#btn-start").show();
        $("#btn-start").html('  <a class="btn btn-outline-success" data-bs-toggle="collapse" href="#emr_start" role="button" aria-expanded="false" aria-controls="pat_emr_info" ><i class=fa fa-clock ></i> Started....</a >');
        $("#spn-started").hide();
        $("#spn-timer").hide();
        $("#btn-end").hide();


        clearInterval(timerInterval);
        timerElement.text("00:00:00");
        elapsedTime = 0;
    });
    function updateTimer() {
        var currentTime = new Date().getTime();
        var totalMilliseconds = currentTime - startTime + elapsedTime;

        // Calculate hours, minutes, and seconds
        var hours = Math.floor(totalMilliseconds / 3600000);
        var minutes = Math.floor((totalMilliseconds % 3600000) / 60000);
        var seconds = Math.floor((totalMilliseconds % 60000) / 1000);

        // Format the time as HH:MM:SS
        var formattedTime = padNumber(hours) + ':' + padNumber(minutes) + ':' + padNumber(seconds);

        // Update the timer element
        timerElement.text(formattedTime);
    }

    function padNumber(number) {
        return number.toString().padStart(2, '0');
    }

</script>
