@model BusinessEntities.EMR.PatientPackage
@using System.Linq;
@using System.Security.Claims;
@using BusinessEntities;
@{
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    EMRInfo emr = (EMRInfo)TempData["emr_data"];
    TempData.Keep("emr_data");
    ViewBag.Title = "Index";
    var id = TempData["Layout"] as string;
    Layout = "~/Areas/EMR/Views/Shared/_EMR_Layout.cshtml";
}
<head>
    <style>
        .bg-light-green {
            background-color: lightgreen !important;
        }

        .dataTables_scrollBody {
            min-height: 500px; /* Adjust the value as needed */
        }
    </style>
</head>
<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold" id="exampleModalLongTitle">Create New Advance/Loyalty/Refund </h5>
    <button type="button" class="btn-close close-modal" data-bs-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="row">
    @*@if (TempData["ErrorMessage"] != null)
        {
            <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    <strong>Error!&nbsp;</strong>@TempData["ErrorMessage"]
                </div>
            </div>
        }*@
    <div class="modal-body p-4">
        <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
            <div id="AdvancePackReceiptAlert"></div>
        </div>
        <form id="form_Package_order" autocomplete="off" ondrop="return false;" oncut="return false;">
            @*@Html.AntiForgeryToken()*@
            <div class="row">
                <div class="col">
                    <div class="form-group mb-2">
                        <div class="form-row">
                            <label class="form-label"><span class="text-info">Ref. No </span></label>
                            @Html.TextBoxFor(model => model.po_refno, new { @class = "form-control", @placeholder = "YYYY-MM-DD" })
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="form-row mb-3">
                        <label class="form-label"> Package Order<span class="text-danger">*</span></label>
                        <select class="select2 form-control" id="po_package"></select>
                        @*@Html.DropDownListFor(m => m.po_package, new List<SelectListItem> { }, "Search for", new { @class = "form-select select2 mb-4" })*@
                    </div>
                </div>
                <div class="col">
                    <div class="form-row mb-3">
                        <label class="form-label">Start Date&nbsp;<span class="text-danger">*</span></label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <div class="input-group-text">
                                    <i class="fe fe-calendar"></i>
                                </div>
                            </div>
                            @Html.TextBoxFor(model => model.po_date, new { @class = "form-control", @placeholder = "YYYY-MM-DD" })
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="form-row mb-3">
                        <label class="form-label text-black">End Date&nbsp;<span class="text-danger">*</span></label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <div class="input-group-text">
                                    <i class="fe fe-calendar"></i>
                                </div>
                            </div>
                            @Html.TextBoxFor(model => model.po_exp_date, new { @class = "form-control", @placeholder = "YYYY-MM-DD" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-row mb-3">
                        <label class="form-label">Notes&nbsp;</label>
                        @Html.TextAreaFor(m => m.po_notes, new { @class = "form-control", @placeholder = "Enter Notes" })
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="form-row text-center mt-6">
                        <button type="submit" class="btn btn-success" id="btn_Insert_PatPackage">Save</button>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col d-none">
                    <div class="form-row mb-3">
                        <label class="form-label"> Package Service<span class="text-danger">*</span></label>
                        @Html.DropDownListFor(m => m.po_services, new List<SelectListItem> { }, "Search for", new { @class = "form-select select2 mb-4", @multiple = "multiple" })
                    </div>
                </div>
            </div>

            <div class="row mt-2">
                <div class="table-responsive">
                    <table id="tbl_PackageOrder" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                <th class="border-bottom-0 font-weight-semibold text-white">#</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Ref.No</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Date</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Package</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Package Price</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Advance</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Alllocated</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Adv. Bal.</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Total Paid</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Pkg. Bal.</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Notes</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Exp. Date</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Status</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Actions</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </form>
    </div>
</div>
<style>
    /* Add this CSS to your parent modal */
    .modal.fade.overflow-auto.shown + .modal-backdrop {
        opacity: 0.5; /* Adjust the opacity value as needed */
    }
</style>
<!-- Modal Appointment Remarks -->
<div class="modal fade overflow-auto" id="patient_packages" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="appointment-list">
    <div class="modal-dialog modal-dialog-centered modal-lg pe-8 ps-8">
        <div class="modal-content shadow-lg" id="patient_packages_body">
        </div>
    </div>
</div>
<!-- End Modal Appointment Remarks -->
<!-- Modal Add New Receipt -->
<div class="modal fade overflow-auto" id="addnew_advance_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg  pe-8 ps-8" id="size">
        <div class="modal-content  shadow-lg" id="addnew_advance_modal_body">
        </div>
    </div>
</div>
<!-- End Modal Add New Receipt -->

@section myScripts{
    <script type="text/javascript">
    //#region Page Load
    $(function () {
        //debugger;
        var idString = "";
        $('#po_date,#po_exp_date').bootstrapdatepicker({
            format: "yyyy-mm-dd",
            viewMode: "date",
            todayHighlight: true,
            autoclose: true,
            multidate: false,
            multidateSeparator: "-",
            startDate: new Date()
        });
        $("#po_date,#po_exp_date").bootstrapdatepicker("setDate", "today");
        $('#po_services').SumoSelect({
            placeholder: 'Select Service(s)',
            captionFormat: '{0} Service(s) Selected',
            captionFormatAllSelected: 'All {0} Service selected!',
            csvDispCount: 3,
            okCancelInMulti: true,
            isClickAwayOk: true,
            search: true,
            searchText: 'Search here...',
            selectAll: true,
            dropdownParent: $('#form_Package_order'),
        });
        load_Packages();
        validation();
        GetPackageOrders();
    });
    //#endregion

    //#region Packages
        var load_Packages = function () {
            $("#po_package").select2({
                placeholder: 'Select a package',
                width: '100%',
                dropdownParent: $('#form_Package_order'),
                minimumInputLength: 3,
                maximumInputLength: 15,
                escapeMarkup: function (markup) {
                    return markup;
                },
                ajax: {
                    url: '@Url.Action("PACKAGE_TYPE", "Appointment", new { area = "Appointment" })',
                    dataType: 'json',
                    delay: 250,
                    data: function (query) {
                        return {
                            query: query.term,
                        };
                    },
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: data
                        };
                    },
                    cache: true
                }
            })
        };
    //#endregion

    //#region Package Order Select Event
        $('#po_package').on('select2:select', function (e) {
            debugger;
            $('#po_services').SumoSelect({
                placeholder: 'Select Service(s)',
                captionFormat: '{0} Service(s) Selected',
                captionFormatAllSelected: 'All {0} Service selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true,
                dropdownParent: $('#form_Package_order'),
            });
            var data = e.params.data;
            if (data.id > 0) {
                $.ajax({
                    url: '@Url.Action("GetPackageServices", "Appointment", new { area = "Appointment" })?query=' + $('#po_package').val(),
                    type: "GET",
                    dataType: "JSON",
                    async: false,
                    success: function (response) {
                        $('#po_services').html('');
                        $('#po_services')[0].sumo.reload();

                        $.each(response, function (j) {
                            $('#po_services')[0].sumo.add(response[j].id, response[j].text);
                                //$('#select_dept')[0].sumo.selectItem([response[j].id]);
                        });
                        $('#po_services')[0].sumo.reload();
                        // Select all items after loading data
                        $('#po_services')[0].sumo.selectAll();

                         idString = ""; // Initialize an empty string to hold the concatenated IDs
                        $.each(response, function (j) {
                            idString += response[j].id; // Concatenate the current ID to the string
                            if (j < response.length - 1) {
                                idString += ", "; // Add a comma and space if it's not the last ID
                            }
                        });
                    },
                    error: function (xhr) {
                        console.log("Failed to Load Service(es)! Error Message : " + xhr.statusText);
                    }
                }).done(function () {
                    $('#po_services')[0].sumo.reload();
                });
            }

        });
    //#endregion

    //#region Validation Initialization
        var validation = function () {
            $("#form_Package_order").validate({
                focusInvalid: true,
                rules:
                {
                    po_package: {
                        required: true
                    },
                    po_services: {
                        required: true,
                    },
                    po_date: {
                        required: true
                    },
                    po_exp_date: {
                        required: true
                    },

                },
                messages: {
                    po_package: {
                        required: "Select Package"
                    },
                    po_services: {
                        required: "Select Service",
                    },
                    po_date: {
                        required: "Select Package order Date"
                    },
                    po_exp_date: {
                        required: "Select Package Expiry"
                    },
                },
                highlight: function (element) {
                    var elem = $(element);
                    if (elem.hasClass("select2-hidden-accessible")) {
                        $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                    } else {
                        elem.parent().addClass('has-error');
                    }
                    $(element).parent().addClass('has-error');
                },
                unhighlight: function (element) {
                    var elem = $(element);
                    if (elem.hasClass("select2-hidden-accessible")) {
                        $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                    } else {
                        elem.removeClass('has-error');
                    }
                    $(element).parent().removeClass('has-error');
                },
                errorElement: 'span',
                errorClass: 'text-danger fw-bold',
                errorPlacement: function (error, element) {
                    var elem = $(element);
                    if (elem.hasClass("select2-hidden-accessible")) {
                        element = $("#select2-" + elem.attr("id") + "-container").parent();
                        error.insertAfter(element);
                    } else {
                        error.insertAfter(element);
                    }
                    if (element.parent('.input-group').length) {
                        error.insertAfter(element.parent());
                    } else {
                        error.insertAfter(element);
                    }
                }
            });

            $('#po_package').on('change', function () {
                $(this).trigger('blur');
            });

            $('#po_services').on('change', function () {
                $(this).trigger('blur');
            });

        }
   //#endregion

    //#region Insert Patient Package Click
    $('#btn_Insert_PatPackage').on('click', function (e) {
      
        debugger;
        if ($("#form_Package_order").valid()) {

            $('#btn_Insert_PatPackage').removeClass("btn btn-success");

            var storedData = localStorage.getItem("patientData");
            if (storedData) {
                var parsedData = JSON.parse(storedData);
                var branchValue = parsedData.branch;
            }
            var _from = $('#patient_package_modal').attr("data-modal-from");
            var _dataInsert = {
                "poId": 0,
                "app_ins": @emr.patId,
                "po_refno": $("#po_refno").val(),
                "po_branch": "1",
                "po_services": idString,
                "po_package": $("#po_package").val(),
                "po_notes": $("#po_notes").val(),
                "po_date": moment($("#po_date").val()).format("YYYY-MM-DD"),
                "po_exp_date": moment($("#po_exp_date").val()).format("YYYY-MM-DD"),
            }
            $.ajax({
                type: "POST",
                url: "@Url.Action("InsertPatientPackageOrder", "Packages", new { area = "EMR" })",
                dataType: 'json',
                data: _dataInsert,
                success: function (data) {
                    $('#btn_Insert_PatPackage').parent().removeClass("curdrop");
                    $('#btn_Insert_PatPackage').removeClass("btn btn-success btn-loaders btn-icon");
                    $('#btn_Insert_PatPackage').addClass("btn btn-success");

                    if (data.isSuccess) {
                        if (data.isInserted) {
                            GetPackageOrders();
                        }
                        else {
                            let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                "<div class='alert alert-light-warning' role='alert'>" +
                                "<button type='button' class='btn-close text-warning' style='margin-bottom:-5px;' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                "<strong><i class='fa fa-exclamation-triangle text-warning'></i> Patient Package Already Exists with the same details!</strong><br/>" +
                                "</div></div>";
                            $("#errorCreate").html(html);
                        }
                    }
                    else {
                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                            "<div class='alert alert-light-danger' role='alert'>" +
                            "<button type='button' class='btn-close text-danger' style='margin-bottom:-5px;' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                            "<strong><i class='fa fa-ban text-danger'></i> Validation Error! Please validate before submitting.&nbsp;</strong><br/><ul>";

                        $.each(data.message, function (index, value) {
                            html += "<li><small>" + value + "</small><li>";
                            var elem = $("#" + index);
                            if (elem.hasClass("select2-hidden-accessible")) {
                                $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                            }
                            else {
                                $(elem).addClass(" is-invalid");
                            }

                            setTimeout(function () {
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                }
                                else {
                                    $(elem).removeClass("is-invalid");
                                }
                            }, 5000);
                        });

                        html += "</ul></div></div>";

                        $("#errorCreate").html(html);
                    }
                },
                error: function (xhr) {
                    $('#btn_Insert_PatPackage').parent().removeClass("curdrop");
                    $('#btn_Insert_PatPackage').removeClass("btn btn-success btn-loaders btn-icon");
                    $('#btn_Insert_PatPackage').addClass("btn btn-success");

                    $('#patient_package_modal').modal('toggle');
                    Timeout();
                }
            });
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });
    //#endregion

        //#region GetPackageOrders
        var GetPackageOrders = function () {
        $.ajax({
            url: '@Url.Action("GetPatientPackageOrders", "PatientTreatments", new { area = "EMR" })?patId=' + @emr.patId,
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                var table;
                if ($.fn.dataTable.isDataTable('#tbl_PackageOrder')) {
                    table = $('#tbl_PackageOrder').DataTable();
                    table.clear();
                    table.rows.add(response).draw();
                }
                else {
                    console.log(response);
                    BindDataTable(response);
                }
            },
            error: function (xhr) {
                console.log(xhr);
                alert(xhr.statusText);
            }
        }).done(function () {
            resizedt();;
        });
    }
    //#endregion

    //#region Bind Datatable
    var BindDataTable = function (response) {
        var table = $("#tbl_PackageOrder").DataTable({
            fixedHeader: {
                header: true,
                footer: true
            },
            processing: true,
            "deferRender": true,
            "pageLength": 100,
            "retrieve": true,
            lengthChange: true,
            "aaData": response,
            "aoColumns": [
                {
                    "mData": "poId",
                    "orderable": false,
                    "searchable": false,
                    "className": "text-center",
                    "render": function (data, type, row, meta) {
                        let _index = (meta.row) + 1;
                        if (_index >= 10) {
                            return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>" + _index + "</a>";
                        }
                        else {
                            return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>0" + _index + "</a>";
                        }
                    }
                },
                {
                    "mData": "po_refno",
                    "className": 'text-left',

                },
                {
                    "mData": "po_date",
                    "className": 'text-left',

                },
                {
                    "mData": "po_package_name",
                    "className": 'text-wrap text-justify',

                },
                {
                    "mData": "po_pkg_price",
                    "className": 'text-right',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pkg_advance",
                    "className": 'text-right',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pkg_total_allocated",
                    "className": 'text-right',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pkg_adv_bal",
                    "className": 'text-right',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "total_cash",
                    "className": 'text-right',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pkg_balance",
                    "className": 'text-right',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "po_notes",
                    "className": 'text-left',

                },
                {
                    "mData": "po_exp_date",
                    "className": 'text-left',

                },
                {
                    "mData": "po_status",
                    "className": 'text-left',

                },
                {
                    "className": 'text-center',
                    "orderable": false,
                    "searchable": false,
                    "mData": "poId",
                    "render": function (poId, type, full, meta) {
                        var status = full.po_status;
                        var po_pkg_price = full.po_pkg_price;

                        var more = '<div class="dropdown"><a type="button" class="" data-bs-toggle="dropdown"><i class="fe fe-more-vertical" style="font-size: 20px;"></i></a>' +
                            '<div class="dropdown-menu" >';

                        if (status == "Active") {
                            more +=
                                '<a class="dropdown-item text-dark fw-bold" onclick="DeletePackageOrder(\'' + poId + '\')"><i class="fe fe-trash text-danger" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Delete</a>' +
                                '<a class="dropdown-item text-dark fw-bold" onclick="CompletePackageOrder(\'' + poId + '\')"><i class="fe fe-check text-danger" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Completed</a>' +
                                '<a class="dropdown-item text-dark fw-bold Billing"><i class="fe fe-book text-dark" style="font-size: 15px;margin-right: 0.5rem"></i>&nbsp;Billing</a>' +
                                '<a class="dropdown-item text-dark fw-bold" href="javascript:void(0)"  onclick="newReceipt(\'' + poId + '\', \'' + po_pkg_price + '\')"><i class="fe fe-file-plus text-indigo" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Advance</a>'
                            '</div>' +
                                '</div>';
                        }
                        else if (status == "Allocated") {
                            more +=
                                '<a class="dropdown-item text-dark fw-bold" onclick="CompletePackageOrder(\'' + poId + '\')"><i class="fe fe-check text-danger" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Completed</a>' +
                                '<a class="dropdown-item text-dark fw-bold Billing"><i class="fe fe-book text-dark" style="font-size: 15px;margin-right: 0.5rem"></i>&nbsp;Billing</a>' +
                                '<a class="dropdown-item text-dark fw-bold" href="javascript:void(0)"  onclick="newReceipt(\'' + poId + '\', \'' + po_pkg_price + '\')"><i class="fe fe-file-plus text-indigo" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Advance</a>'
                            '</div>' +
                                '</div>';
                        }

                        return more;
                    }
                }
            ],
            order: [[0, 'asc']],
            language: {
                searchPlaceholder: 'Search...',
                sSearch: '<span class="text-primary font-weight-semi-bold">Search By Code/Tittle</span>',
                lengthMenu: '_MENU_',
                scrollX: "100%",
            },
            scrollX: true,
            scrollY: 500,
            scrollCollapse: true,
            buttons: [
                {
                    extend: 'excel',
                    title: 'Packages Allocated for Patient',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Packages Allocated for Patient',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'csv',
                    title: 'Packages Allocated for Patient',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'print',
                    title: 'Packages Allocated for Patient',
                    footer: 'true',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5]
                    }
                }
            ],
            "fnDrawCallback": function (settings) {
                var _poId;

                //#region Appointment Remarks
                $('.Billing', 'tr').on('click', function () {
                    var row = $(this).closest('tr');
                    var _data = table.row(row).data();

                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("PatientPackageServiceBilling", "PatientTreatments", new { area = "EMR" })?poId=" + _data.poId + "&appId=" + @emr.appId + "&patId=" + @emr.patId,
                        contentType: "application/json",
                        dataType: "html",
                        success: function (response) {
                            $('#patient_packages').attr("data-modal-from", "appointment-list");
                            $("#patient_packages_body").html(response);
                            $("#patient_packages").modal("show");
                        },
                        error: function (xhr) {
                            console.log("Error :" + xhr.statusText);
                        }
                    });
                });
                //#endregion
            },
            "createdRow": function (row, data, dataIndex) {
                if (data.po_status === "Completed") {
                    $(row).addClass('bg-light-green');
                    console.log("Status not completed for row: ");
                } else {
                    console.log("Status not completed for row: ", data);
                }
            },
        });

        table.buttons().container().appendTo('#tbl_PackageOrder_wrapper .col-md-6:eq(0)');
    };
    //#endregion Bind Datatable

    //#region Delete Package Order
        var DeletePackageOrder = function (poId) {
            Swal.fire({
                title: "Are you sure you want to delete this Package Order ?",
                text: "This action will delete this Package Order!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: '@Url.Action("DeletePackageOrder", "Packages", new { area = "EMR" })?Id=' + poId +'&status=Deleted',
                        type: "POST",
                        dataType: "JSON",
                        success: function (data) {
                            console.log(data)
                            if (data.isAuthorized) {
                                if (data.success) {
                                    GetOnFlyPackages();
                                    Swal.fire({
                                        title: "Success!",
                                        text: data.message,
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        title: "Action Forbidden!",
                                        text: data.message,
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to delete Package Order!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "Error while Deleting Package Order! Please refresh the page and try again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    });
                }
            });
        }
        //#endregion

    //#region Complete Package Order
        var CompletePackageOrder = function (poId) {
            $.ajax({
                url: '@Url.Action("DeletePackageOrder", "Packages", new { area = "EMR" })?Id=' + poId +'&status=Completed',
                type: "POST",
                dataType: "JSON",
                success: function (data) {
                    console.log(data)
                    if (data.isAuthorized) {
                        if (data.success) {
                            Swal.fire({
                                title: "Success!",
                                text: "Status changed successfully",
                                icon: "success",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197"
                            });
                        }
                        else {
                            Swal.fire({
                                title: "Action Forbidden!",
                                text: "Failed to change status",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197"
                            });
                        }
                    }
                    else {
                        Swal.fire({
                            title: "Access Denied!",
                            text: "You do not have enough privileges to Completed Package Order!",
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                        });
                    }
                },
                error: function (xhr) {
                    Swal.fire({
                        title: "Error!",
                        text: "Error while Completed Package Order! Please refresh the page and try again.",
                        icon: "error",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                    });
                }
            });
        }
    //#endregion

    function Timeout() {
        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 4200);
    }

     //#region View Billings
        var Billing = function (appId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("QuickCashBilling", "Invoice", new { area = "Invoice" })",
                contentType: "application/json",
                data: { "appId": appId },
                dataType: "html",
                success: function (data) {
                    $("#quick_billing_body").html(data);
                    $("#quick_billing").modal("show");
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                }
            });
        }
//#endregion
    var newReceipt = function (poId, po_pkg_price) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("NewPackageReceipt", "AdvanceLoyaltyRefund", new { area = "Invoice" })?poId=" + poId + "&patId=" + @emr.patId+ "&po_pkg_price=" + po_pkg_price + "&rec_date=" + moment().format("YYYY-MM-DD"),
            contentType: "application/json",
            dataType: "html",
            success: function (response) {
                $("#pkg_order_modal_body").modal("hide");
                $("#addnew_advance_modal_body").html(response);
                $("#addnew_advance_modal").modal("show");

            },
            error: function (xhr) {
                console.log("Error :" + xhr.statusText);
            }
        });
    }
    //#region Resize Datatable
    function resizedt() {
        setTimeout(function () {
            $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
        }, 350);
    }
    //#endregion Resize Datatable
    </script>
}

