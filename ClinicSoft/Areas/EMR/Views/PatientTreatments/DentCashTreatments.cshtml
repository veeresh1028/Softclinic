@model BusinessEntities.EMR.PatientTreatments
@using System.Linq;
@using System.Security.Claims;
@using BusinessEntities;
@{
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    EMRInfo emr = (EMRInfo)TempData["emr_data"];
    TempData.Keep("emr_data");
    ViewBag.Title = "Dental Cash Treatments";
    var id = TempData["Layout"] as string;
    var layoutPath = string.IsNullOrEmpty(id) ? "~/Areas/EMR/Views/Shared/_EMR_Layout.cshtml" : null;
    Layout = layoutPath;
}

<style type="text/css">
    #tbl_DentCashTreatments_wrapper .dataTables_scroll .dataTables_scrollBody {
        min-height: 200px;
    }

    #tbl_PreDentCashTreatments_wrapper .dataTables_scroll .dataTables_scrollBody {
        min-height: auto;
    }

    .bold-input {
        font-weight: bold;
    }
</style>

<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card shadow-sm mb-2">
            <div class="card-header d-flex justify-content-between">
                <h3 class="card-title text-primary fs-16">Dental Cash Treatments & Procedures</h3>
                <span class="text-danger font-weight-semibold" style="font-size:smaller">Required fields are marked with *</span>
            </div>
            <div class="card-body">
                <div id="dentCashTreatment_Add" style="display:none;"></div>

                <div id="dentCashTreatment_Edit"></div>

                <div class="row pb-2">
                    <div class="col-sm-12 col-md-12 d-flex justify-content-center">
                        <div id="errorCreate"></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12 col-md-6 col-lg-5 div-multibill">
                <div class="card border shadow-none p-0 overflow-hidden font-weight-semibold mb-0 br-3 bg-secondary-transparent text-secondary border-secondary">
                    <div class="card-body  pb-0 pt-0">
                        <div class="row">
                            <div class="col-sm-6 col-md-6 col-lg-4">
                                <div class="btn-animation">
                                    <label class="mt-0">&nbsp;</label>
                                    <div class="wd-150 mg-b-30">
                                        <label class="custom-switch mb-0">
                                            <span class="custom-switch-description me-2 font-weight-bold text-dark fs-12">Enable Quotation</span>
                                            <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" onchange="Enableby($(this).is(':checked'))" id="chkBT">
                                            <span class="custom-switch-indicator custom-switch-indicator-warning"></span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="ol-sm-6 col-md-6 col-lg-5 btn-qtn d-none">
                                <div class="btn-animation">
                                    <label class="mt-0 mb-0">&nbsp;</label>
                                    <div class="wd-150 mg-b-30">
                                        <div class="input-group">
                                            <button type="submit" class="btn btn-success ms-lg-2 p-2" id="btn_Quotation">Quotation</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-6 col-lg-5">
                                <label class="mt-0 text-dark font-weight-semibold"></label>
                                <div class="wd-150 mg-b-30">
                                    <div class="form-group  btn-preinv">
                                        @Html.DropDownListFor(m => m.prev_invoices, new SelectList(Model.InvNosList, "id", "text"), "Select Invoice", new { @class = "form-select select2" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-6 col-lg-3 btn-inv">
                                <div class="btn-animation">
                                    <label class="mt-0 mb-0">&nbsp;</label>
                                    <div class="wd-150 mg-b-30">
                                        <div class="input-group">
                                            <button type="submit" class="btn btn-danger ms-lg-2 p-2" id="btn_generateInvoice">Generate Invoice</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-7">
                <form id="form_DentCash" class="needs-validation" autocomplete="off">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="dchiInvId" value="0" />
                    <div class="row">
                        <div class="col-sm-12 col-md-6 col-lg-5">
                            <div class="bg-cyan-transparent text-cyan border-cyan card border shadow-none p-0 overflow-hidden font-weight-semibold mb-0 br-3">
                                <div class="card-body  pb-1 pt-1">
                                    <div class="row mb-0">
                                        <div class="col-sm-6 col-md-6 col-lg-5">
                                            <label class="mt-0 text-dark font-weight-semibold">Update Status</label>
                                            <div class="wd-150 mg-b-30">
                                                <div class="input-group">
                                                    @Html.DropDownListFor(m => m.pt_status, new List<SelectListItem>
                                                     {
                                                        new SelectListItem{ Text="Approved", Value = "Approved" },
                                                        new SelectListItem{ Text="Rejected", Value = "Rejected" },
                                                        new SelectListItem{ Text="In Review", Value = "In Review" },
                                                        new SelectListItem{ Text="Cancelled", Value = "Cancelled" },
                                                        new SelectListItem{ Text="Existing", Value = "Existing" },
                                                        new SelectListItem{ Text="Plan", Value = "Plan" },
                                                        new SelectListItem{ Text="Completed", Value = "Completed" },
                                                        new SelectListItem{ Text="Declined", Value = "Declined" }
                                                     }, "Select Status", new { @class = "form-select select2", @id = "upt_status" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-md-6 col-lg-7">
                                            <div class="btn-animation">
                                                <label class="mt-0">&nbsp;</label>
                                                <div class="wd-150 mg-b-30">
                                                    <div class="input-group">
                                                        <button type="submit" class="btn btn-warning" id="btn_Update_Status">Update</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-7 ps-0">
                            <div class="bg-success-transparent text-cyan border-cyan card border shadow-none p-0 overflow-hidden font-weight-semibold mb-0 br-3">
                                <div class="card-body  pb-1 pt-1">
                                    <div class="row mb-0">
                                        <div class="col-sm-12 col-md-6 col-lg-4">
                                            <label class="mt-0 text-dark font-weight-semibold">Set Start Time</label>
                                            <div class="wd-150 mg-b-30">
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <div class="input-group-text">
                                                            <svg class="svg-icon" xmlns="http://www.w3.org/2000/svg" height="18" viewBox="0 0 24 24" width="18"><path d="M0 0h24v24H0V0z" fill="none" /><path d="M12 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm4.25 12.15L11 13V7h1.5v5.25l4.5 2.67-.75 1.23z" opacity=".3" /><path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z" /></svg>
                                                        </div>
                                                    </div>
                                                    <input class="form-control" id="dc_time_picker1" name="dc_time_picker1" placeholder="Set time" type="text">
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-12 col-md-6 col-lg-4">
                                            <label class="mt-0 text-dark font-weight-semibold">Set End Time</label>
                                            <div class="wd-150 mg-b-30">
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <div class="input-group-text">
                                                            <svg class="svg-icon" xmlns="http://www.w3.org/2000/svg" height="18" viewBox="0 0 24 24" width="18"><path d="M0 0h24v24H0V0z" fill="none" /><path d="M12 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm4.25 12.15L11 13V7h1.5v5.25l4.5 2.67-.75 1.23z" opacity=".3" /><path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z" /></svg>
                                                        </div>
                                                    </div>
                                                    <input class="form-control" id="dc_time_picker2" name="dc_time_picker2" placeholder="Set time" type="text">
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-12 col-md-6 col-lg-4">
                                            <div class="btn-animation">
                                                <label class="mt-0">&nbsp;</label>
                                                <div class="wd-150 mg-b-30">
                                                    <div class="input-group">
                                                        <button type="submit" class="btn btn-cyan ms-lg-2" id="btn_set_StartEndTime">Update Time</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="card shadow-sm mt-2">
            <div class="card-body">
                <div class="row p-2">
                    <div class="col-sm-12 col-md-12 d-flex justify-content-center">
                        <div id="errorDental"></div>
                        <div id="errorSummary"></div>
                    </div>
                </div>

                <div class="table-responsive mt-4" id="dentcashtreat">
                    <table id="tbl_DentCashTreatments" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D;">
                                <th class="border-bottom-0 font-weight-semibold text-white text-center"></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">#</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Invoice #</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Time</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">CPT Code</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Treatment</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Teeth</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Surface</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Qty</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Session</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Unit Price</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Gross</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Discount</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Coupon</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Coupon<br />Disc</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">NET</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">VAT</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">NET + VAT</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Status</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Notes</th>
                                <th class="border-bottom-0 font-weight-semibold text-white"><i class="fe fe-more-vertical" style="font-size: 20px;"></i></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Start Time</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">End Time</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Status</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Lab Status</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th class="text-end text-dark font-weight-semibold fs-17">Total :</th>
                                <th class="table_footer_align fs-16"></th>
                                <th class="table_footer_align fs-16"></th>
                                <th class="table_footer_align fs-16"></th>
                                <th class="table_footer_align fs-16"></th>
                                <th class="table_footer_align fs-16"></th>
                                <th class="table_footer_align fs-16"></th>
                                <th class="table_footer_align fs-16"></th>
                                <th class="table_footer_align fs-16"></th>
                                <th class="table_footer_align fs-16"></th>
                                <th class="table_footer_align fs-16"></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card shadow-sm">
            <div class="card-header">
                <h3 class="card-title fs-16 text-primary">Previous Appointment(s) History</h3>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="tbl_PreDentCashTreatments" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #808080; border-color: #3C457D; ">
                                <th class="border-bottom-0 font-weight-semibold text-white">#</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Date</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Doctor</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">CPT<br /> Code</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Treatment</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Tooth</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Surfaces</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Qty</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Session</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">EXP.<br /> Date</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Unit<br /> Price</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Gross</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Discount</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Net</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">VAT</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">NET + VAT</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Status</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Lab<br /> Status</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Doctor<br /> Notes</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Action</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Treatment Items Details -->
<div class="modal fade overflow-auto" id="treatment_item_details" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="invoice-list">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="treatment_item_details_body">
        </div>
    </div>
</div>
<!-- End Modal Treatment Items Details -->
<!-- Modal Treatment Attachments Details -->
<div class="modal fade overflow-auto" id="treatment_attachments_details" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="treatment_attachments_details_body">
        </div>
    </div>
</div>
<!-- End Modal Treatment Attachments Details -->
<!-- Modal New Receipts -->
<div class="modal fade overflow-auto" id="new_receipts" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="invoice-list">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="new_receipts_body">
        </div>
    </div>
</div>
<!-- End Modal New Receipts -->

@section myScripts{
    <script type="text/javascript">
        var isInvoiced = true;
        var isRecEnabled = false;

        //#region Page Load
        $(function () {
            $(document).on('select2:open', () => {
                document.querySelector('.select2-search__field').focus();
            });

            $("body").addClass("app sidebar-mini sidenav-toggled");

            addDentCashTreatment();

            getDentCashTreatments();

            getPreviousDentCashTreatments();

            $("#upt_status").select2({
                placeholder: 'Select Status',
                width: '100%',
                dropdownParent: $('#form_DentCash')
            });

            $('#dc_time_picker1').timepicker({
                'scrollDefault': 'now',
                'disableTextInput': true,
                'step': 1,
                'timeFormat': 'H:i'
            });

            $('#dc_time_picker2').timepicker({
                'scrollDefault': 'now',
                'disableTextInput': true,
                'step': 1,
                'timeFormat': 'H:i'
            });


        });
        //#endregion

        var Enableby = function (isChecked) {

            if (isChecked) {
                isRecEnabled = true;
            }
            else {
                isRecEnabled = false;
            }
            getDentCashTreatments();
        }

        //#region Load Dental Cash Treatments
        var getDentCashTreatments = function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAllPatientTreatments", "PatientTreatments", new { area = "EMR" })?appId=" + "@emr.appId" + "&pt_type=Cash",
                success: function (response) {
                    if (!response.isAuthorized) {
                        var table;

                        if ($.fn.dataTable.isDataTable('#tbl_DentCashTreatments')) {
                            table = $('#tbl_DentCashTreatments').DataTable();
                            table.clear();
                            table.rows.add(response).draw();
                        }
                        else {
                            BindDentalCashTreat(response);
                        }
                    }
                    else {
                        console.log("You are not Authorized!");
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            }).done(function () {
                resizedt("tbl_DentCashTreatments");
                console.log(@emr.multi_bill);
                if (@emr.multi_bill == "1") {
                    $('.btn-cash').addClass('d-none');
                    $('.div-multibill').removeClass('d-none');
                } else {
                    $('.btn-cash').removeClass('d-none');
                    $('.div-multibill').addClass('d-none');
                }
                $('.btn-Receipt').addClass('d-none');
                $('.btn-Quotation').addClass('d-none');
                $('.btn-qtn').addClass('d-none');
                if (isRecEnabled == false) {
                    //$('.btn-Receipt').addClass('d-none');
                    $('.btn-Quotation').addClass('d-none');
                    if (@emr.multi_bill == "1") {
                        $('.btn-cash').addClass('d-none');
                        $('.btn-inv').removeClass('d-none');
                        $('.btn-preinv').removeClass('d-none');
                    } else {
                        $('.btn-cash').removeClass('d-none');
                        $('.btn-inv').addClass('d-none');
                        $('.btn-preinv').addClass('d-none');
                    }
                    $('.btn-pack').removeClass('d-none');
                } else {
                    //$('.btn-Receipt').removeClass('d-none');
                    if (@emr.multi_bill == "1") {
                         $('.btn-Quotation').addClass('d-none');
                         $('.btn-qtn').removeClass('d-none');
                     } else {
                         $('.btn-Quotation').removeClass('d-none');
                         $('.btn-qtn').addClass('d-none');
                     }
                    $('.btn-cash').addClass('d-none');
                    $('.btn-preinv').addClass('d-none');
                    $('.btn-inv').addClass('d-none');
                    $('.btn-pack').addClass('d-none');
                }
            });
        }
        //#endregion

        //#region Load Previous Dental Cash Treatments
        var getPreviousDentCashTreatments = function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAllPrePatientTreatments", "PatientTreatments", new { area = "EMR" })?appId=" + "@emr.appId" + "&patId=" + @emr.patId + "&pt_type=Cash",
                success: function (response) {
                    if (!response.isAuthorized) {
                        var table;

                        if ($.fn.dataTable.isDataTable('#tbl_PreDentCashTreatments')) {
                            table = $('#tbl_PreDentCashTreatments').DataTable();
                            table.clear();
                            table.rows.add(response).draw();
                        }
                        else {
                            BindPrevDentCashTreat(response);
                        }
                    }
                    else {
                        console.log("You are not Authorized!");
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            }).done(function () {
                resizedt("tbl_PreDentCashTreatments");
            });
        }
        //#endregion

        //#region Bind Dental Cash Datatable
        var BindDentalCashTreat = function (response) {
            var numFormat = $.fn.dataTable.render.number('\,', '.', 2, '').display;

            var table = $("#tbl_DentCashTreatments").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 25,
                "retrieve": true,
                lengthChange: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "mData": "ptId",
                        "orderable": false,
                        "className": "select-checkbox text-center inbox-small-cells",
                        'checkboxes': {
                            'selectRow': true
                        },
                        //"render": function (data, type, row, meta) {
                        //    if (row.pt_status !== "Invoiced") {

                        //        return '<input type="checkbox" class="select-checkbox" />';
                        //    }
                        //    else {
                        //        if (isRecEnabled) {
                        //            return '<input type="checkbox" class="select-checkbox" />';
                        //        }
                        //        else {
                        //            return '';
                        //        }
                        //    }
                        //}
                    },
                    {
                        "mData": "ptId",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-center",
                        "render": function (data, type, row, meta) {
                            let _index = (meta.row) + 1;

                            if (_index >= 10) {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>" + _index + "</a>";
                            }
                            else {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>0" + _index + "</a>";
                            }
                        }
                    },
                    {
                        "mData": "pt_invno",
                        "className": 'text-left',

                    },
                    {
                        "mData": "pt_date_collected",
                        "className": 'text-center',
                        "render": function (pt_date_collected, type, full, meta) {
                            var date_rec = full.pt_date_received;

                            var dt = '';

                            if (type === 'display' || type === 'filter') {
                                var collec = moment(pt_date_collected).format("DD-MM-YYYY");
                                var rec = moment(date_rec).format("DD-MM-YYYY");

                                if (collec == "31-12-1899") {
                                    dt += '<span class="badge bg-success-light mb-1">Start Time</span><br/>' +
                                        '<i class="fe fe-clock text-dark"></i> <b class="text-muted">N/A<b><br/>';
                                }
                                else {
                                    dt += '<span class="badge bg-success-light mb-1">Start Time</span><br/>' +
                                        '<i class="fe fe-clock text-dark"></i> <b class="text-dark">' + moment(pt_date_collected).format(" HH:mm") + '</b><br/>';
                                }

                                if (rec == "31-12-1899") {
                                    dt += '<span class="badge bg-danger-light mb-1">End Time</span><br/>' +
                                        '<i class="fe fe-clock text-dark"></i> <b class="text-muted">N/A<b><br/>';
                                }
                                else {
                                    dt += '<span class="badge bg-danger-light mb-1 mt-1">End Time</span><br/>' +
                                        '<i class="fe fe-clock text-dark"></i> <b class="text-dark">' + moment(date_rec).format(" HH:mm") + '<b>';
                                }

                                return dt;
                            }

                            return moment(pt_date_collected).format(" HH:mm");
                        }
                    },
                    {
                        "mData": "tr_code",
                        "render": function (tr_code, type, full, meta) {
                            var _html = tr_code;
                            var req = full.tr_norm_range;

                            if (req == "Yes") {
                                _html += "<br /> <span class='text-danger'>(Attachment Required!)</span>";
                            }

                            return _html;
                        }
                    },
                    {
                        "mData": "tr_name_type",
                        "className": 'text-wrap text-justify'
                    },
                    {
                        "mData": "pt_teeth",
                        "className": 'text-center'
                    },
                    { "mData": "pt_sur" },
                    {
                        "mData": "pt_qty",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_ses",
                        "className": 'text-right'
                    },
                    {
                        "mData": "pt_uprice",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_total",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_disc",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_coupon",
                        "className": 'text-left'
                    },
                    {
                        "mData": "pt_coupon_disc",
                        "className": 'text-left',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_net",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_vat",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_net_vat",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_status",
                        "className": 'text-center',
                        "render": function (pt_status, type, full, meta) {
                            var _more = '<b>' + pt_status + '</b><br />';
                            var lab_status = full.pt_lab_status;
                            if (lab_status != "") {
                                _more += '<span class="text-secondary" title="Lab Status">' + lab_status + '</span>';
                            }
                            else {
                                _more += '<span class="text-muted">N/A</span>';
                            }

                            return _more;
                        }
                    },
                    {
                        "mData": "pt_notes",
                        "className": 'text-justify text-wrap',
                        "render": function (pt_notes) {
                            if (pt_notes != "") {
                                return pt_notes;
                            }
                            else {
                                return '<span class="text-muted">N/A</span>';
                            }
                        }
                    },
                    {
                        "mData": "ptId",
                        "className": 'btn-edit text-center',
                        "orderable": false,
                        "searchable": false,
                        "render": function (ptId, type, full, meta) {
                            var status = full.pt_status;
                            var allocated = full.isAllocated;

                            var more = '<div class="dropdown"><a type="button" class="" data-bs-toggle="dropdown"><i class="fe fe-more-vertical" style="font-size: 20px;"></i></a>' +
                                '<div class="dropdown-menu" style="min-width:auto">';

                            var edit_and_delete = '<a class="edit dropdown-item text-dark fw-bold" onclick="editDentCashTreatment(\'' + ptId + '\')"><i class="fe fe-edit-2 text-success" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Edit</a>' +
                                '<a class="dropdown-item text-dark fw-bold" onclick="deleteDentalCashTreatments(\'' + ptId + '\',\'' + status + '\')"><i class="fe fe-trash text-danger" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Delete</a>' +
                                '<a class="dropdown-item text-dark fw-bold" onclick="addItems(\'' + ptId + '\')"><i class="fe fe-folder-plus text-primary curpointer" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Items</a>' +
                                '<a class="dropdown-item text-dark fw-bold remrk" onclick="addAttachements(\'' + ptId + '\')"><i class="fa fa-comments-o text-dark" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Attachments</a>' +
                                '</div>' +
                                '</div>';

                            var no_edit = '<a class="dropdown-item text-dark fw-bold" onclick="deleteDentalCashTreatments(\'' + ptId + '\',\'' + status + '\')"><i class="fe fe-trash text-danger" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Delete</a>' +
                                '<a class="dropdown-item text-dark fw-bold" onclick="addItems(\'' + ptId + '\')"><i class="fe fe-folder-plus text-primary curpointer" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Items</a>' +
                                '<a class="dropdown-item text-dark fw-bold remrk" onclick="addAttachements(\'' + ptId + '\')"><i class="fa fa-comments-o text-dark" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Attachments</a>' +
                                '</div>' +
                                '</div>';

                            var no_delete = '<a class="edit dropdown-item text-dark fw-bold" onclick="editDentCashTreatment(\'' + ptId + '\')"><i class="fe fe-edit-2 text-success" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Edit</a>' +
                                '<a class="dropdown-item text-dark fw-bold" onclick="addItems(\'' + ptId + '\')"><i class="fe fe-folder-plus text-primary curpointer" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Items</a>' +
                                '<a class="dropdown-item text-dark fw-bold remrk" onclick="addAttachements(\'' + ptId + '\')"><i class="fa fa-comments-o text-dark" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Attachments</a>' +
                                '</div>' +
                                '</div>';

                            var no_edit_and_no_delete = '<a class="dropdown-item text-dark fw-bold" onclick="addItems(\'' + ptId + '\')"><i class="fe fe-folder-plus text-primary curpointer" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Items</a>' +
                                '<a class="dropdown-item text-dark fw-bold remrk" onclick="addAttachements(\'' + ptId + '\')"><i class="fa fa-comments-o text-dark" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Attachments</a>' +
                                '</div>' +
                                '</div>';

                            if (allocated == 0) {
                                if ("@emp_designation.ToString()" === "Super Administrator") {
                                    more += edit_and_delete;
                                }
                                else {
                                    if ("@emr.set_emr_lock" == "NoLock") {
                                        more += edit_and_delete;
                                    }
                                    else {
                                        if ("@emr.app_ae_date" >= "@emr.today") {
                                            more += edit_and_delete;
                                        }
                                        else {
                                            if (status == "Approved" || status == "Rejected" || status == "Partially Approved") {
                                                more += no_edit;
                                            }
                                            else {
                                                more += edit_and_delete;
                                            }
                                        }
                                    }
                                }
                            }
                            else {
                                if ("@emp_designation.ToString()" === "Super Administrator") {
                                    more += no_delete;
                                }
                                else {
                                    if ("@emr.set_emr_lock" == "NoLock") {
                                        more += no_delete;
                                    }
                                    else {
                                        if ("@emr.app_ae_date" >= "@emr.today") {
                                            more += no_delete;
                                        }
                                        else {
                                            if (status == "Approved" || status == "Rejected" || status == "Partially Approved") {
                                                more += no_edit_and_no_delete;
                                            }
                                            else {
                                                more += no_delete;
                                            }
                                        }
                                    }
                                }
                            }

                            return more;
                        }
                    },
                    //#region Hidden Export Columns
                    {
                        "visible": false,
                        "mData": "pt_date_collected",
                        "render": function (pt_date_collected, type, full, meta) {
                            if (type === 'display' || type === 'filter') {
                                var dc = moment(pt_date_collected).format("DD-MM-YYYY");

                                if (dc == "31-12-1899") {
                                    return '';
                                }
                                else {
                                    return moment(pt_date_collected).format(" HH:mm");
                                }
                            }

                            return moment(pt_date_collected).format(" HH:mm");
                        }
                    },
                    {
                        "visible": false,
                        "mData": "pt_date_received",
                        "render": function (pt_date_received, type, full, meta) {
                            if (type === 'display' || type === 'filter') {
                                var dc = moment(pt_date_received).format("DD-MM-YYYY");

                                if (dc == "31-12-1899") {
                                    return '';
                                }
                                else {
                                    return moment(pt_date_received).format(" HH:mm");
                                }
                            }

                            return moment(pt_date_received).format(" HH:mm");
                        }
                    },
                    {
                        "visible": false,
                        "mData": "pt_status",
                        "render": function (pt_status, type, full, meta) {
                            return pt_status;
                        }
                    },
                    {
                        "visible": false,
                        "mData": "pt_lab_status",
                        "render": function (pt_lab_status, type, full, meta) {
                            return pt_lab_status;
                        }
                    },
                    //#endregion
                ],
                order: [[1, 'asc']],
                language: {
                    searchPlaceholder: 'Search...',
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search Treatment(s)</span>',
                    lengthMenu: '_MENU_',
                    scrollX: "100%",
                },
                searching: false,
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Dental Cash Treatments',
                        footer: 'true',
                        exportOptions: {
                            columns: [3, 4, 20, 21,22, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 22, 23, 18]
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Dental Cash Treatments',
                        footer: 'true',
                        exportOptions: {
                            columns: [3, 4, 20, 21, 22, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 22, 23, 18]
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Dental Cash Treatments',
                        footer: 'true',
                        exportOptions: {
                            columns: [3, 4, 20, 21, 22, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 22, 23, 18]
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Dental Cash Treatments',
                        className: 'btn btn-primary',
                        footer: 'true',
                        exportOptions: {
                            columns: [3, 4, 20, 21, 22, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 22, 23, 18]
                        }
                    },
                    {
                        text: '<i class="fe fe-check-circle"></i> Generate Invoice',
                        className: 'btn btn-outline-success ms-2 btn-cash',
                        action: function (e, dt, node, config) {
                            e.preventDefault();
                            generateInvoice();
                        }
                    },
                    {
                        text: '<label class="custom-switch mb-0"><span class="custom-switch-description me-2 font-weight-bold text-white fs-12">Enable Quotation</span><input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="chkBT"><span class="custom-switch-indicator custom-switch-indicator-warning"></span></label>',
                        className: 'btn btn-outline-success ms-2 btn-Enable',
                        init: function (dt, node, config) {
                            // Prevent button from triggering DataTables sorting on click
                            $(node).on('click', function (e) {
                                e.stopPropagation();
                            });

                            // Prevent checkbox from toggling its state when clicked directly
                            $(node).find('.custom-switch-input').on('click', function (e) {
                                e.stopPropagation();
                            });
                        },
                        action: function (e, dt, node, config) {
                            // Access the checkbox element
                            var checkbox = $(node).find('.custom-switch-input');

                            // Toggle checkbox state
                            checkbox.prop('checked', !checkbox.prop('checked'));

                            // Trigger the Enableby function with the new checkbox state
                            Enableby(checkbox.prop('checked'));
                        }
                    },
                    {
                        text: '<i class="fe fe-layers"></i> Create Package',
                        className: 'btn btn-outline-success ms-2 btn-pack',
                        action: function (e, dt, node, config) {
                            e.preventDefault();

                            Create_Package();
                        }
                    },
                    {
                        text: '<i class="fa fa-money"></i> Receipts',
                        className: 'btn btn-outline-success ms-2 btn-Receipt',
                        action: function (e, dt, node, config) {
                            e.preventDefault();
                            generateReceipts();
                        }
                    },
                    {
                        text: '<i class="fe fe-layout"></i> Print Quotation',
                        className: 'btn btn-outline-success ms-2 btn-Quotation',
                        action: function (e, dt, node, config) {
                            e.preventDefault();
                            print_Quotation();
                        }
                    },
                ],
                rowCallback: function (row, data, index) {
                    debugger;
                    if (data.pt_status === "Invoiced") {
                        if (!isRecEnabled) {
                            $('td:eq(0)', row).find("input[type=checkbox]").remove();
                        }
                        else {
                            $('td:eq(0)', row).find("input[type=checkbox]").add();
                        }
                    }
                    else {
                        $('td:eq(0)', row).find("input[type=checkbox]").add();
                    }
                },
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api();

                    var intVal = function (i) {
                        return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                    };

                    var total = api.column(8).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(8).footer()).html(numFormat(total));

                    total = api.column(9).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(9).footer()).html(total);

                    total = api.column(10).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(10).footer()).html(numFormat(total));

                    total = api.column(11).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(11).footer()).html(numFormat(total));

                    total = api.column(12).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(12).footer()).html(numFormat(total));

                    total = api.column(13).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(13).footer()).html(numFormat(total));

                    total = api.column(14).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(14).footer()).html(numFormat(total));

                    total = api.column(15).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(15).footer()).html(numFormat(total));

                    total = api.column(16).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(16).footer()).html(numFormat(total));

                    total = api.column(17).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(17).footer()).html(numFormat(total));
                }
            });

            table.buttons().container().appendTo('#tbl_DentCashTreatments_wrapper .col-sm-12:eq(0)');
        };
        //#endregion

        //#region Bind Previous Datatable
        var BindPrevDentCashTreat = function (response) {
            var table = $("#tbl_PreDentCashTreatments").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "mData": "ptId",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-center",
                        "render": function (data, type, row, meta) {
                            let _index = (meta.row) + 1;
                            if (_index >= 10) {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>" + _index + "</a>";
                            }
                            else {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>0" + _index + "</a>";
                            }
                        }
                    },
                    {
                        "mData": "app_fdate",
                        "className": "text-left",
                        "render": function (app_fdate, type, row, meta) {
                            if (type === 'display' || type === 'filter') {
                                return moment(app_fdate).format('DD-MM-YYYY')
                            }

                            return moment(app_fdate).format("YYYY-MM-DD");
                        }
                    },
                    {
                        "mData": "doctor_name",
                        "className": "text-left"
                    },
                    {
                        "mData": "tr_code",
                        "className": 'text-left'
                    },
                    {
                        "mData": "tr_name_type",
                        "className": 'text-wrap text-justify'
                    },
                    { "mData": "pt_teeth" },
                    { "mData": "pt_sur" },
                    {
                        "mData": "pt_qty",
                        "className": 'text-left'
                    },
                    {
                        "mData": "pt_ses",
                        "className": 'text-left',
                        "visible": false
                    },
                    {
                        "visible": false,
                        "mData": "pt_pack_exp_date",
                        "render": function (pt_pack_exp_date, type, full, meta) {
                            if (type === 'display' || type === 'filter') {
                                return moment(pt_pack_exp_date).format('DD-MM-YYYY');
                            }

                            return moment(pt_pack_exp_date).format("YYYY-MM-DD");
                        }
                    },
                    {
                        "mData": "pt_uprice",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_total",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_disc",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_net",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_vat",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_net_vat",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "pt_status",
                        "className": 'text-left'
                    },
                    {
                        "mData": "pt_lab_status",
                        "className": 'text-left'
                    },
                    {
                        "mData": "pt_tdn_notes",
                        "className": 'text-wrap text-justify'
                    },
                    {
                        "mData": "ptId",
                        "className": 'btn-view text-center',
                        "orderable": false,
                        "searchable": false,
                        "render": function (ptId, type, full, meta) {
                            var Action = '';

                            if ("@emp_designation.ToString()" === "Super Administrator") {
                                Action += '<a id=btn_Copy_PadTreatment style="cursor:pointer" class="text-secondary" title="Copy Treatment" onclick="copyPrevious(' + ptId + ')"><i class="fa fa-lg fa-copy"></i></a>';

                                if (full.pt_status != "Invoiced") {
                                    Action += '<a id=btn_Move_PadTreatment style="cursor:pointer" class="ms-2 text-success" title="Move Treatment" onclick="movePrevious(' + ptId + ')"><i class="fa fa-lg fa-cut"></i></a>';
                                }
                            }
                            else {
                                if ("@emr.set_emr_lock" == "NoLock") {
                                    if ("@emr.app_ae_date" >= "@emr.today") {
                                        if (full.pt_status != "Invoiced") {
                                            AAction += '<a id=btn_Copy_PadTreatment style="cursor:pointer" class="text-secondary" title="Copy Treatment" onclick="copyPrevious(' + ptId + ')"><i class="fa fa-lg fa-copy"></i></a>';

                                            if (full.pt_status != "Invoiced") {
                                                Action += '<a id=btn_Move_PadTreatment style="cursor:pointer" class="ms-2 text-success" title="Move Treatment" onclick="movePrevious(' + ptId + ')"><i class="fa fa-lg fa-cut"></i></a>';
                                            }
                                        }
                                    }
                                    else {
                                        Action += '';
                                    }
                                }
                                else {
                                    if (full.pt_status != "Invoiced") {
                                        Action += '<a id=btn_Copy_PadTreatment style="cursor:pointer" class="text-secondary" title="Copy Treatment" onclick="copyPrevious(' + ptId + ')"><i class="fa fa-lg fa-copy"></i></a>';

                                        if (full.pt_status != "Invoiced") {
                                            Action += '<a id=btn_Move_PadTreatment style="cursor:pointer" class="ms-2 text-success" title="Move Treatment" onclick="movePrevious(' + ptId + ')"><i class="fa fa-lg fa-cut"></i></a>';
                                        }
                                    }
                                }
                            }

                            return Action;
                        }
                    },

                ],
                order: [[1, 'desc']],
                language: {
                    searchPlaceholder: 'Search...',
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Treatments</span>',
                    lengthMenu: '_MENU_',
                    scrollX: "100%",
                },
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Previous Dental Cash Treatments',
                        footer: 'true',
                        className: 'oldbutton',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Previous Dental Cash Treatments',
                        footer: 'true',
                        className: 'oldbutton',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Previous Dental Cash Treatments',
                        footer: 'true',
                        className: 'oldbutton',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Previous Dental Cash Treatments',
                        footer: 'true',
                        className: 'oldbutton',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
                        }
                    }
                ]
            });

            table.buttons().container().appendTo('#tbl_PreDentCashTreatments_wrapper .col-sm-12:eq(0)');
        };
        //#endregion

        //#region Add Dental Cash Treatments
        function addDentCashTreatment() {
            $('#dentCashTreatment_Edit').hide();

            $.ajax({
                type: "GET",
                url: "@Url.Action("CreateDentCashTreatment", "PatientTreatments", new { area = "EMR" })?appId=" + @emr.appId,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#dentCashTreatment_Add").html(data);
                    $("#dentCashTreatment_Add").show();
                },
                error: function (xhr) {
                    console.log("Error while Adding Dental Cash Treatment : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Edit Dental Cash Treatments
        function editDentCashTreatment(ptId) {
            $('#dentCashTreatment_Add').hide();

            $.ajax({
                type: "GET",
                url: "@Url.Action("EditDentCashTreatment", "PatientTreatments", new { area = "EMR" })?ptId=" + ptId + "&appId=" + @emr.appId,
                contentType: "application/json",
                dataType: "html",
                success: function (data) {
                    $("#dentCashTreatment_Edit").html(data);
                    $("#dentCashTreatment_Edit").show();
                },
                error: function (xhr) {
                    console.log("Error while Editing Dental Cash Treatment : " + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Add Items
        function addItems(ptId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("TreatmentItems", "TreatmentItems", new { area = "EMR" })?ptId=" + ptId,
                contentType: "application/json",
                dataType: "html",
                success: function (response) {
                    localStorage.setItem("ptId", ptId)

                    $('#treatment_item_details').attr("data-modal-from", "Patient-Treatment");
                    $("#treatment_item_details_body").html(response);
                    $("#treatment_item_details").modal("show");
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Add Attachements
        function addAttachements(ptId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("TreatmentAttachements", "TreatmentAttachements", new { area = "EMR" })?ptId=" + ptId,
                contentType: "application/json",
                dataType: "html",
                success: function (response) {
                    $('#treatment_attachments_details').attr("data-modal-from", "Patient-Treatment");

                    $("#treatment_attachments_details_body").html(response);

                    $("#treatment_attachments_details").modal("show");
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Delete Cash Treatments
        var deleteDentalCashTreatments = function (ptId) {
            Swal.fire({
                title: "Are you sure you want to delete this Patient Treatment ?",
                text: "The selected Dental Insurance Treatment will be deleted!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: '@Url.Action("DeleteTreatments", "PatientTreatments", new { area = "EMR" })?data=' + ptId,
                        type: "POST",
                        dataType: 'json',
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.isSuccess) {
                                    Swal.fire({
                                        title: "Success!",
                                        text: "Patient Treatment Deleted Successfully!",
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                                    });

                                    getDentCashTreatments();
                                }
                                else {
                                    Swal.fire({
                                        title: "Forbidden!",
                                        text: "An active Patient Treatment with the same details already exists.",
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have Enough Privileges to Delete this Patient Treatment!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Delete Patient Treatment! Please Refresh The Page & Try Again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    });
                }
            });
        }
        //#endregion

        $('#btn_Quotation').on('click', function (e) {
            print_Quotation();
        });

        $('#btn_generateInvoice').on('click', function (e) {
            generateInvoice();
        });

        //#region Generate Invoice
        function generateInvoice() {
            var table = $("#tbl_DentCashTreatments").DataTable();
            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));

            if (rows.length > 0) {
                $.each(rows, function (index, rowId) {
                    var _data = table.row(rowId).data();
                    var _dataInsert = {
                        "ptId": _data.ptId,
                        "invId": $("#prev_invoices").val(),
                        "inv_appId": @Model.appId,
                        "inv_no": '@Model.inv_no',
                        "pat_code": '@Model.pat_code',
                        "pat_name": '@Model.pat_name',
                        "inv_date": '@Model.inv_date',
                        "inv_total": _data.pt_total,
                        "inv_tdisc": 0,
                        "inv_tdisc_type": "Fixed",
                        "inv_net": _data.pt_net,
                        "inv_disc": _data.pt_disc_value,
                        "inv_tded": 0,
                        "inv_lded": 0,
                        "inv_rded": 0,
                        "inv_mded": 0,
                        "inv_copay": 0,
                        "inv_dcopay": 0,
                        "inv_share": 0,
                        "inv_notes": "",
                        "inv_ic_name": "Cash",
                        "inv_type": "Cash",
                        "inv_insurance": 1,
                        "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    }

                    if (_data.pt_status == "Selected") {
                        isInvoiced = false;
                    }

                    if (isInvoiced) {
                        Swal.fire({
                            title: "Treatment Already Invoiced!",
                            text: "The selected Treatment is Already Invoiced!",
                            icon: "info",
                            showCancelButton: !0,
                            confirmButtonText: 'Yes! Proceed',
                            cancelButtonText: 'No! Cancel Please',
                            confirmButtonClass: "btn btn-success mt-2",
                            cancelButtonClass: "btn btn-danger ms-2 mt-2",
                            buttonsStyling: !1
                        }).then(function (t) {
                            if (t.value) {
                                isInvoiced = false;
                            }
                        });
                    }

                    if (!isInvoiced) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("GenerateInvoice", "PatientTreatments", new { area = "EMR" })",
                            dataType: 'json',
                            data: _dataInsert,
                            success: function (data) {
                                $("#dchiInvId").val(data.invId);
                                var message = JSON.stringify(data.msg);
                                if (data.isSuccess) {
                                    if (data.invId > 0) {
                                        Swal.fire({
                                            title: "Success!",
                                            text: message,
                                            icon: "success",
                                            showCancelButton: 0,
                                            confirmButtonColor: "#0bb197"
                                        });

                                        getDentCashTreatments();
                                        Timeout()
                                        //window.open("@Url.Action("PrintInvoice", "Invoice", new { area = "Invoice" })?invId=" + $("#dchiInvId").val(), "Print Invoice")
                                    }
                                    else {
                                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                            "<div class='alert alert-warning' role='alert'>" +
                                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                            "<strong>" + message +".</strong><br/>" +
                                            "</div></div>";
                                        $("#errorCreate").html(html);
                                    }
                                }
                                else {
                                    let html = "<div class='alert alert-danger alert-dismissible' role='alert'>" +
                                        "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='Close' aria-label='Close'>×</button>" +
                                        "<strong>Error! " + message + "</strong><br/>" +
                                        "</div>";
                                    $("#errorCreate").html(html);
                                    Timeout();
                                }

                            },
                            error: function (xhr) {
                                Timeout();
                            }
                        });
                    }
                });
            }
            else {
                Swal.fire({
                    title: "Attention!",
                    text: "Please Select Atleast One Treatment To Invoice!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197",
                    cancelButtonColor: "#ff3d60"
                });
            }
        }
        //#endregion

        //#region Create Package
        function Create_Package() {
            var table = $("#tbl_DentCashTreatments").DataTable();

            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));

            if (rows.length > 0) {
                $.each(rows, function (index, rowId) {
                    var _data = table.row(rowId).data();

                    var _dataInsert = {
                        "ptId": _data.ptId,
                    }

                    if (_data.pt_status == "Invoiced") {
                        isInvoiced = true;
                    }

                    if (!isInvoiced) {
                        Swal.fire({
                            title: "Invoice The Selected Treatment To Create Package",
                            text: "Can't Create Package!",
                            icon: "info",
                            showCancelButton: !0,
                            confirmButtonText: 'Yes! Proceed',
                            cancelButtonText: 'No! Cancel Please',
                            confirmButtonClass: "btn btn-success mt-2",
                            cancelButtonClass: "btn btn-danger ms-2 mt-2",
                            buttonsStyling: !1,
                        }).then(function (t) {
                            if (t.value) {
                                isInvoiced = true;
                            }
                        });
                    }

                    if (isInvoiced) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("CreatePackage", "PatientTreatments", new { area = "EMR" })",
                            dataType: 'json',
                            data: _dataInsert,
                            success: function (data) {
                                $("#dchiInvId").val(data.invId);

                                if (data.isSuccess) {
                                    if (data.invId > 0) {
                                        var alertPlaceholder = document.getElementById("errorCreate");
                                        function alert(e, t) {
                                            var l = document.createElement("div");
                                            l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                                '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                        }

                                        alert("<i class='fe fe-check-circle text-white'></i> Package Created Successfully for the selected Treatment!", "success");
                                    }
                                    else {
                                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                            "<div class='alert alert-warning' role='alert'>" +
                                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                            "<strong>Warning.. Notes Alredy Exists..</strong><br/>" +
                                            "</div></div>";
                                        $("#errorCreate").html(html);
                                        Timeout()
                                    }
                                }
                                else {
                                    let html = "<div class='alert alert-danger alert-dismissible' role='alert'>" +
                                        "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='Close' aria-label='Close'>×</button>" +
                                        "<strong>Error.. " + data.message + "</strong><br/>" +
                                        "</div>";
                                    $("#errorCreate").html(html);
                                    Timeout();
                                }
                            },
                            error: function (xhr) {
                                Timeout();
                            }
                        });
                    }
                });
            }
            else {
                Swal.fire({
                    title: "Attention!",
                    text: "Please Select atleast 1 Treatment in the list to Create Package!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197",
                    cancelButtonColor: "#ff3d60"
                });
            }
        }
        //#endregion

        //#region Update Status Click
        $('#btn_Update_Status').on('click', function (e) {
            e.preventDefault();

            var table = $("#tbl_DentCashTreatments").DataTable();

            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));

            if ($("#upt_status").val() != null && $("#upt_status").val() != "") {
                if (rows.length > 0) {
                    $('#btn_Update_Status').removeClass("btn btn-warning");
                    $('#btn_Update_Status').addClass("btn btn-warning btn-loaders btn-icon disabled");
                    $('#btn_Update_Status').html("Updating...");

                    $.each(rows, function (index, rowId) {
                        var _data = table.row(rowId).data();

                        var _dataInsert = {
                            "ptId": _data.ptId,
                            "pt_status": $("#upt_status :selected").val(),
                            "pt_notes": ""
                        }

                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("UpdatePatientTreatmentStatus", "PatientTreatments", new { area = "EMR" })",
                            dataType: 'json',
                            data: _dataInsert,
                            success: function (data) {
                                $('#btn_Update_Status').removeClass("btn btn-warning btn-loaders btn-icon disabled");
                                $('#btn_Update_Status').addClass("btn btn-warning");
                                $('#btn_Update_Status').html("Update");

                                var alertPlaceholder = document.getElementById("errorCreate");

                                function alert(e, t) {
                                    var l = document.createElement("div");
                                    l.innerHTML = '<div class="alert alert-light-' + t + ' alert-dismissible" role="alert">' + e +
                                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                }

                                if (data.isSuccess) {
                                    if (data.invId > 0) {
                                        alert("<i class='fe fe-check-circle text-success'></i> Patient Treatment(s) Status Updated Successfully!", "success");

                                        $("#upt_status").val("").trigger("change");

                                        getDentCashTreatments();
                                    }
                                    else {
                                        alert("<i class='fe fe-alert-triangle text-warning'></i> " + data.message + "", "warning");
                                    }
                                }
                                else {
                                    alert("<i class='fe fe-minus-circle text-danger'></i> " + data.message + "!", "danger");
                                }

                                Timeout();
                            },
                            error: function (xhr) {
                                console.log(xhr);
                                $('#btn_Update_Status').removeClass("btn btn-success btn-loaders btn-icon disabled");
                                $('#btn_Update_Status').addClass("btn btn-success");
                                $('#btn_Update_Status').html("Save Changes");
                            }
                        });
                    });
                }
                else {
                    Swal.fire({
                        title: "Attention!",
                        text: "Please Select atleast 1 Treatment in the list to Update Status!",
                        icon: "info",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197",
                        cancelButtonColor: "#ff3d60"
                    });
                }
            }
            else {
                Swal.fire({
                    title: "Attention!",
                    text: "Please Select Any Status to Update!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197",
                    cancelButtonColor: "#ff3d60"
                });
            }
        });
        //#endregion

        //#region Time Validation Initialization
        var validate_time = function () {

            $.validator.addMethod("compareTimes", function (value, element, params) {
                var startTime = $('#dc_time_picker1').val();
                var endTime = $('#dc_time_picker2').val();

                if (startTime && endTime) {
                    var startDate = new Date('2000-01-01T' + startTime);
                    var endDate = new Date('2000-01-01T' + endTime);

                    return startDate.getTime() < endDate.getTime();
                }

                return true;
            }, "End Time must be greater than Start Time");

            $("#form_DentCash").validate({
                rules: {
                    dc_time_picker1: {
                        required: true
                    },
                    dc_time_picker2: {
                        required: true,
                        compareTimes: true
                    }
                },
                messages: {
                    dc_time_picker1: {
                        required: "Select Start Time"
                    },
                    dc_time_picker2: {
                        required: "Select End Time"
                    }
                },
                highlight: function (element) {
                    var elem = $(element);
                    if (elem.hasClass("select2-hidden-accessible")) {
                        $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                    } else {
                        elem.parent().addClass('has-error');
                    }
                    $(element).parent().addClass('has-error');
                },
                unhighlight: function (element) {
                    var elem = $(element);
                    if (elem.hasClass("select2-hidden-accessible")) {
                        $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                    } else {
                        elem.removeClass('has-error');
                    }
                    $(element).parent().removeClass('has-error');
                },
                errorElement: 'span',
                errorClass: 'text-danger fw-bold',
                errorPlacement: function (error, element) {
                    var elem = $(element);
                    if (elem.hasClass("select2-hidden-accessible")) {
                        element = $("#select2-" + elem.attr("id") + "-container").parent();
                        error.insertAfter(element);
                    } else {
                        error.insertAfter(element);
                    }
                    if (element.parent('.input-group').length) {
                        error.insertAfter(element.parent());
                    } else {
                        error.insertAfter(element);
                    }
                }
            });
        }
        //#endregion

        //#region Update Time Button Click
        $('#btn_set_StartEndTime').on('click', function (e) {
            e.preventDefault();
            //validate_time();
            if ($("#form_DentCash").valid()) {

                var table = $("#tbl_DentCashTreatments").DataTable();

                var rows = $(table.$('input[type="checkbox"]').map(function () {
                    return $(this).prop("checked") ? $(this).closest('tr') : null;
                }));

                if (rows.length > 0) {
                    $('#btn_set_StartEndTime').removeClass("btn btn-cyan");
                    $('#btn_set_StartEndTime').addClass("btn btn-cyan btn-loaders btn-icon disabled");
                    $('#btn_set_StartEndTime').html("Updating...");

                    $.each(rows, function (index, rowId) {
                        var _data = table.row(rowId).data();

                        var _dataInsert = {
                            "ptId": _data.ptId,
                            "pt_date_collected": $("#dc_time_picker1").val(),
                            "pt_date_received": $("#dc_time_picker2").val(),
                            "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                        }

                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("UpdatePhysicianOrderTime", "PhysicianOrders", new { area = "NurseStation" })",
                            dataType: 'json',
                            data: _dataInsert,
                            success: function (data) {
                                $('#btn_set_StartEndTime').removeClass("btn btn-cyan btn-loaders btn-icon disabled");
                                $('#btn_set_StartEndTime').addClass("btn btn-cyan");
                                $('#btn_set_StartEndTime').html("Update Time");

                                var alertPlaceholder = document.getElementById("errorCreate");

                                function alert(e, t) {
                                    var l = document.createElement("div");
                                    l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                }

                                if (data.isSuccess) {
                                    if (data.isInserted) {
                                        getDentCashTreatments();

                                        alert("<i class='fe fe-check-circle text-white'></i> Time Updated Successfully!", "success");

                                        $("#dc_time_picker1").val("");

                                        $("#dc_time_picker2").val("");
                                    }
                                    else {
                                        alert("<i class='fe fe-alert-triangle text-white'></i> " + data.message + "", "warning");
                                    }
                                }
                                else {
                                    let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                        "<div class='alert alert-danger' role='alert'>" +
                                        "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                        "<strong>Validation Error! Please validate before resubmitting!&nbsp;</strong><br/><ul>";

                                    $.each(data.message, function (index, value) {
                                        html += "<li><small>" + value + "</small><li>";
                                        var elem = $("#" + index);
                                        if (elem.hasClass("select2-hidden-accessible")) {
                                            $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                        }
                                        else {
                                            $(elem).addClass(" is-invalid");
                                        }

                                        setTimeout(function () {
                                            if (elem.hasClass("select2-hidden-accessible")) {
                                                $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                            }
                                            else {
                                                $(elem).removeClass("is-invalid");
                                            }
                                        }, 5000);
                                    });

                                    html += "</ul></div></div>";

                                    $("#errorCreate").html(html);
                                }

                                Timeout();
                            },
                            error: function (xhr) {
                                $('#btn_set_StartEndTime').removeClass("btn btn-cyan btn-loaders btn-icon disabled");
                                $('#btn_set_StartEndTime').addClass("btn btn-cyan");
                                $('#btn_set_StartEndTime').html("Update Time");
                                console.log(xhr);
                            }
                        });
                    });
                }
                else {
                    Swal.fire({
                        title: "Attention!",
                        text: "Please Select atleast 1 Treatment in the list to Set Time!",
                        icon: "info",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197",
                        cancelButtonColor: "#ff3d60"
                    });
                }
            }
        });
        //#endregion

        //#region Print Qutation
        function print_Quotation() {
            var table = $("#tbl_DentCashTreatments").DataTable();

            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));

            if (rows.length > 0) {
                var _objArray = [];

                $.each(rows, function (index, rowId) {
                    var _data = table.row(rowId).data();

                    var _obj = {
                        "id": _data.ptId
                    };

                    _objArray.push(_obj);
                });

                var idsString = _objArray.map(obj => obj.id).join(',');

                $.ajax({
                    url: '@Url.Action("Print_Quotation", "PatientTreatments", new { area = "EMR" })',
                    type: "POST",
                    dataType: "json",
                    data: { ids: idsString, appId : "@emr.appId" },
                    async: false,
                    success: function (response) {
                        if (response.isSuccess == true) {
                            window.open(response.fileName)
                        }
                        else {
                            Swal.fire({
                                title: "Error!",
                                text: response.errorMessage,
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197",
                                cancelButtonColor: "#ff3d60"
                            });
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr);
                    }
                });
            }
            else {
                Swal.fire({
                    title: "Attention!",
                    text: "Please Select atleast 1 Treatment in the list to Print Quotation!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197",
                    cancelButtonColor: "#ff3d60"
                });
            }
        }
        //#endregion

        //#region Copy Previous Dental Treatment
        function copyPrevious(ptId) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("CopyInsuranceTreatment", "PatientTreatments", new { area = "EMR" })?pt_appId=" + @emr.appId +"&ptId=" + ptId + "&type=Dental",
                success: function (response) {
                    if (response.isAuthorized) {
                        if (response.isSuccess) {
                            getDentCashTreatments();

                            Swal.fire({
                                title: "Success!",
                                text: response.message,
                                icon: "success",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197"
                            });
                        }
                        else {
                            if (response.val == -1) {
                                Swal.fire({
                                    title: "Duplicate!",
                                    text: response.message,
                                    icon: "warning",
                                    confirmButtonColor: "#0bb197"
                                });
                            }
                            else {
                                Swal.fire({
                                    title: "Error!",
                                    text: response.message,
                                    icon: "error",
                                    confirmButtonColor: "#0bb197"
                                });
                            }
                        }
                    }
                    else {
                        Swal.fire({
                            title: "Access Denied!",
                            text: "You do not have enough priveleges to Copy Treatment!",
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197",
                            cancelButtonColor: "#ff3d60"
                        });
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }
        //#endregion

        //#region Move Previous Dental Treatment
        function movePrevious(ptId) {
            Swal.fire({
                title: "Are you sure you want to Move this Treatment ?",
                text: "The selected Treatment will be moved to the current Appointment!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2",
                cancelButtonClass: "btn btn-danger ms-2 mt-2",
                buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("MoveInsuranceTreatment", "PatientTreatments", new { area = "EMR" })?pt_appId=" + @emr.appId +"&ptId=" + ptId + "&type=Dental",
                        success: function (response) {
                            if (response.isAuthorized) {
                                if (response.isSuccess) {
                                    getPreviousDentCashTreatments();
                                    getDentCashTreatments();

                                    Swal.fire({
                                        title: "Success!",
                                        text: response.message,
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else {
                                    if (response.val == -1) {
                                        Swal.fire({
                                            title: "Forbidden!",
                                            text: response.message,
                                            icon: "warning",
                                            confirmButtonColor: "#0bb197"
                                        });
                                    }
                                    else if (response.val == -2) {
                                        Swal.fire({
                                            title: "Duplicate!",
                                            text: response.message,
                                            icon: "warning",
                                            confirmButtonColor: "#0bb197"
                                        });
                                    }
                                    else {
                                        Swal.fire({
                                            title: "Error!",
                                            text: response.message,
                                            icon: "error",
                                            confirmButtonColor: "#0bb197"
                                        });
                                    }
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: response.message,
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197",
                                    cancelButtonColor: "#ff3d60"
                                });
                            }
                        },
                        error: function (xhr) {
                            console.log(xhr);
                        }
                    });
                }
            });
        }
        //#endregion

        //#region UI/UX Functions
        function resizedt(tbl_name) {
            setTimeout(function () {
                var tables = $.fn.dataTable.tables({ visible: true, api: true });
                if (tables) {
                    $('#' + tbl_name).DataTable().columns.adjust();
                }
            }, 450);
        }

        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
        //#endregion

        //#region Generate Receipts
            function generateReceipts() {
                var table = $("#tbl_DentCashTreatments").DataTable();
                var rows = $(table.$('input[type="checkbox"]').map(function () {
                    return $(this).prop("checked") ? $(this).closest('tr') : null;
                }));

                var invoicedTotal = 0;
                var isInvoiced = true;
                table.rows().every(function () {
                    var rowData = this.data();

                    if (rowData.pt_status === "Invoiced") {
                        isInvoiced = false;
                    }
                });
                if (isInvoiced) {
                    Swal.fire({
                        title: "Error!",
                        text: "Please Invoice any One Treatment",
                        icon: "error",
                        error: 0,
                        confirmButtonColor: "#0bb197"
                    });
                }
                else {
                    $.ajax({
                     type: "GET",
                     url: "@Url.Action("GetInvoiceId", "PatientTreatments", new { area = "EMR" })?inv_appId=" + "@emr.appId",
                     contentType: "application/json",
                     success: function (data) {
                         if (data>0) {
                             $.ajax({
                                 type: "GET",
                                 url: "@Url.Action("InvoiceReceipts", "Receipt", new { area = "Invoice" })?invId=" + data + "&patId=" + "@emr.patId" + "&rec_date=" + moment().format("YYYY-MM-DD"),
                                 contentType: "application/json",
                                 dataType: "html",
                                 success: function (response) {
                                     $("#new_receipts_body").html(response);
                                     $("#new_receipts").modal("show");

                                 },
                                 error: function (xhr) {
                                     console.log("Error :" + xhr.statusText);
                                 }
                             });
                         }
                         else {
                             Swal.fire({
                                 title: "Error!",
                                 text: "There is no Invoice to Generate Receipt",
                                 icon: "error",
                                 error: 0,
                                 confirmButtonColor: "#0bb197"
                             });
                         }
                     },
                     error: function (xhr) {
                         console.log(xhr);
                     }
                 });
                }
            }
        //#endregion
    </script>
}
