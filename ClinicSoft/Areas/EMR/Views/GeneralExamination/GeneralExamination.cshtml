@model BusinessEntities.EMR.GeneralExamination
@using BusinessEntities;
@using System.Linq;
@using System.Security.Claims;
@{
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    EMRInfo emr = (EMRInfo)TempData["emr_data"];
    TempData.Keep("emr_data");
    ViewBag.Title = "Index";
    Layout = "~/Areas/EMR/Views/Shared/_EMR_Layout.cshtml";
}

<div class="row">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="col-12 col-sm-12 col-md-6 d-flex justify-content-center">
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                <strong>Error!&nbsp;</strong>@TempData["ErrorMessage"]
            </div>
        </div>
    }
    <div class="col-sm-12 col-md-6 col-lg-12">
        <div class="card">

            <div class="card-body">
                <div>
                    <form id="form_GeneralExam" autocomplete="off" name="generalexamination" ondrop="return false;" onpaste="return false;" oncut="return false;">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.geId, new { @id = "ugeId", @value = "@Model.geId" })
                        <div class="row">
                            <div class="col-sm-12 col-md-6 col-lg-12 mb-4 font-weight-semibold">
                                <span class='badge bg-danger'>Required</span>
                                <span class="text-info" style="font-size:smaller">Please Fill atlest One Entry</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-6 col-lg-12 mb-4 ">
                                <div class="row">
                                    <div class="col-sm-12 col-md-12 col-lg-12">
                                        <div>
                                            <h4 class="page-title mb-0 text-primary">
                                                General Examination
                                            </h4>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Built:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_1_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_1_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_1, new { @class = "form-control", @placeholder = "Enter Built", @id = "uge_1" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Pallor:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_2_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_2_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_2, new { @class = "form-control", @placeholder = "Enter Pallor", @id = "uge_2" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Cyanosis:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_3_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_3_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_3, new { @class = "form-control", @placeholder = "Enter Cyanosis", @id = "uge_3" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Icterus:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_4_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_4_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_4, new { @class = "form-control", @placeholder = "Enter Icterus", @id = "uge_4" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Eye:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_5_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_5_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_5, new { @class = "form-control", @placeholder = "Enter Eye", @id = "uge_5" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Fundi:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_6_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_6_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_6, new { @class = "form-control", @placeholder = "Enter Fundi", @id = "uge_6" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Pupils:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_7_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_7_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_7, new { @class = "form-control", @placeholder = "Enter Pupils", @id = "uge_7" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Nystagmus:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_8_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_8_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_8, new { @class = "form-control", @placeholder = "Enter Nystagmus", @id = "uge_8" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Ear:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_9_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_9_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_9, new { @class = "form-control", @placeholder = "Enter Ear", @id = "uge_9" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Neck:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_10_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_10_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_10, new { @class = "form-control", @placeholder = "Enter Neck", @id = "uge_10" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Thyroid:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_11_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_11_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_11, new { @class = "form-control", @placeholder = "Enter Thyroid", @id = "uge_11" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Nose:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_12_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_12_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_12, new { @class = "form-control", @placeholder = "Enter Nose", @id = "uge_12" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Sinuses:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_13_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_13_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_13, new { @class = "form-control", @placeholder = "Enter Sinuses", @id = "uge_13" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Throat:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_14_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_14_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_14, new { @class = "form-control", @placeholder = "Enter Throat", @id = "uge_14" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Breast:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_15_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_15_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_15, new { @class = "form-control", @placeholder = "Enter Breast", @id = "uge_15" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Tremors:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_16_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_16_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_16, new { @class = "form-control", @placeholder = "Enter Tremors", @id = "uge_16" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Peripheral Vessels:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_17_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_17_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_17, new { @class = "form-control", @placeholder = "Enter Peripheral Vessels", @id = "uge_17" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Carotids:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_18_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_18_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_18, new { @class = "form-control", @placeholder = "Enter Carotids", @id = "uge_18" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Lymphadenopathy:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_19_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_19_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_19, new { @class = "form-control", @placeholder = "Enter Lymphadenopathy", @id = "uge_19" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Cervical:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_20_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_20_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_20, new { @class = "form-control", @placeholder = "Enter Cervical", @id = "uge_20" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Axillary:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_21_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_21_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_21, new { @class = "form-control", @placeholder = "Enter Axillary", @id = "uge_21" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Inguinal:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_22_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_22_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_22, new { @class = "form-control", @placeholder = "Enter Inguinal", @id = "uge_22" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Edema:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_23_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_23_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_23, new { @class = "form-control", @placeholder = "Enter Edema", @id = "uge_23" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Genitals:&nbsp;</label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_24_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_24_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_24, new { @class = "form-control", @placeholder = "Enter Genitals", @id = "uge_24" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 col-md-6 col-lg-1">
                                        <div class="form-group mb-3"><label class="form-label text-black text-align-left"> Others:&nbsp;<span class="text-danger"> *</span></label></div>
                                    </div>
                                    <div class="col-sm-2 col-md-2 col-lg-2">
                                        <div class="form-group mb-3">
                                            @Html.DropDownListFor(m => m.ge_25_type, new List<SelectListItem>
                                             {
                                                new SelectListItem{ Text="Normal", Value = "Normal" },
                                                new SelectListItem{ Text="Abnormal", Value = "Abnormal" },
                                                new SelectListItem{ Text="Not-Indicated", Value = "Not-Indicated" },
                                             }, "Select Type", new { @class = "form-select select2", @id = "uge_25_type" })
                                        </div>
                                    </div>
                                    <div class="col-sm-3 col-md-3 col-lg-3">
                                        <div class="form-group mb-3">
                                            @Html.TextBoxFor(m => m.ge_25, new { @class = "form-control", @placeholder = "Enter Others", @id = "uge_25" })
                                        </div>
                                    </div>

                                </div>
                                <div class="row mt-2">
                                    <div class="col-sm-12 col-md-6 col-lg-12 text-center">
                                        <div class="btn-list btn-animation">
                                            <button type="submit" class="btn btn btn-success" style="display:none" id="btn_Insert_GeneralExam">Add</button>
                                            <button type="button" class="btn btn-outline-dark" id="btn_Reset_GeneralExam">Reset</button>
                                            <button type="submit" class="btn btn btn-outline-warning" id="btn_Update_GeneralExam">Save Changes</button>
                                            <button type="submit" class="btn btn btn-outline-danger" id="btn_Delete_GeneralExam">Delete</button>
                                            <button type="submit" class="btn btn btn-outline-light" id="btn_Print" style="display:none">
                                                @*<i class="fa fa-print">&nbsp;&nbsp;</i>Print*@
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div>
                    <h4 class="page-title mb-0 text-primary">
                        Previous History
                    </h4>
                </div>
                <div class="table-responsive">
                    <table id="tbl_PreGeneralExamination" class="table table-striped table-bordered text-nowrap" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #808080; border-color: #3C457D; ">
                                <th class="border-bottom-0 font-weight-semibold text-white">#</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Date</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Doctor</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Action</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="ge_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="ge_body">
        </div>
    </div>
</div>
@*@section myScripts{*@
<script>

    //#region Page Load
        $(function () {
            BindDataTableP(null);
            GetPreviousGeneralExamination();
            GetGeneralExamination();
            BindSelect();
            validate();
        });
    //#endregion Page Load
    //#region Reset
        $('#btn_Reset_GeneralExam').on('click', function (e) {
            e.preventDefault();
            clearControls();
        });
    //#endregion Reset



    //#region checking FormData
        $("#btn_Update_GeneralExam,#btn_Delete_GeneralExam").hide();
            //$(".form-control").on("change", function () {
            //    var obj = false;
            //    $("#form_GeneralExam :input[type=text]").each(function (i, value) {
            //        console.log("Input " + i + " = " + value.value);
            //        if (value.value != null && value.value != "" && value.value != undefined && (value.value).length > 0) {
            //            obj = true;
            //        }
            //    });
            //    if (obj) {
                    if ("@emp_designation.ToString()" === "Super Administrator") {
                        $("#btn_Insert_GeneralExam").show();
                        $("#btn_Reset_GeneralExam").show();
                    } else {
                        if ("@emr.set_emr_lock" == "NoLock") {
                            $("#btn_Insert_GeneralExam").show();
                            $("#btn_Reset_GeneralExam").show();

                        }
                        else {
                            if ("@emr.app_ae_date" >= "@emr.today") {
                                $("#btn_Insert_GeneralExam").show();
                                $("#btn_Reset_GeneralExam").show();
                            }
                            else {
                                $("#btn_Insert_GeneralExam").hide();
                                $("#btn_Reset_GeneralExam").hide();
                            }
                        }
                    }
            //    }
            //    else {

            //        $("#btn_Insert_GeneralExam").hide();
            //    }
            //});

    //#endregion checking FormData

    //#region Load GeneralExamination
        var GetGeneralExamination = function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAllGeneralExamination", "GeneralExamination", new { area = "EMR" })?appId=" + "@emr.appId",
                success: function (response) {
                    if (response.isAuthorized != false) {
                        var _data = response;
                        console.log(response);
                        console.log(_data);
                        if (_data.length > 0) {
                            console.log(response[0].geId);
                            $('#ugeId').val(response[0].geId);
                            //hide the Copy Data
                            var oTable = $('#tbl_PreGeneralExamination').dataTable();
                            oTable.$('#btn_Copy_GeneralExam').hide();
                            $("#btn_Insert_GeneralExam").hide();
                            $("#btn_Reset_GeneralExam").hide();
                            //$(".form-control").on("change", function () {
                            //    var obj = false;
                            //    $("#form_GeneralExam :input[type=text]").each(function (i, value) {
                            //        console.log("Input " + i + " = " + value.value);
                            //        if (value.value != null && value.value != "" && value.value != undefined && (value.value).length > 0) {
                            //            obj = true;
                            //        }
                            //    });
                            //    if (obj) {
                                    if ("@emp_designation.ToString()" === "Super Administrator") {
                                        $("#btn_Update_GeneralExam,#btn_Delete_GeneralExam").show();
                                    } else {
                                        if ("@emr.set_emr_lock" == "NoLock") {
                                            $("#btn_Update_GeneralExam,#btn_Delete_GeneralExam").show();

                                        }
                                        else {
                                            if ("@emr.app_ae_date" >= "@emr.today") {
                                                $("#btn_Update_GeneralExam,#btn_Delete_GeneralExam").show();
                                            }
                                            else {
                                                $("#btn_Update_GeneralExam,#btn_Delete_GeneralExam").hide();
                                            }
                                        }
                                    }

                            //    }
                            //    else {

                            //        $("#btn_Insert_GeneralExam").hide();

                            //    }
                            //});
                        }
                        else {
                            $("#btn_Update_GeneralExam,#btn_Delete_GeneralExam").hide();
                            //$(".form-control").on("change", function () {
                            //    var obj = false;
                            //    $("#form_GeneralExam :input[type=text]").each(function (i, value) {
                            //        console.log("Input " + i +" = "+ value.value);
                            //        if (value.value != null && value.value != "" && value.value != undefined && (value.value).length > 0) {
                            //            obj = true;
                            //        }
                            //    });
                            //    if (obj) {
                                    if ("@emp_designation.ToString()" === "Super Administrator") {
                                        $("#btn_Insert_GeneralExam").show();
                                        $("#btn_Reset_GeneralExam").show();
                                    } else {
                                        if ("@emr.set_emr_lock" == "NoLock") {
                                            $("#btn_Insert_GeneralExam").show();
                                            $("#btn_Reset_GeneralExam").show();


                                        }
                                        else {
                                            if ("@emr.app_ae_date" >= "@emr.today") {
                                                $("#btn_Insert_GeneralExam").show();
                                                $("#btn_Reset_GeneralExam").show();
                                            }
                                            else {
                                                $("#btn_Insert_GeneralExam").hide();
                                                $("#btn_Reset_GeneralExam").hide();
                                            }
                                        }
                                    }

                            //    }
                            //    else {

                            //        $("#btn_Insert_GeneralExam").hide();

                            //    }
                            //});
                        }
                    }
                    else {
                        console.log("You are not Authorized!");
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            })
        }
    //#endregion Load GeneralExamination

    //#region Load PreviousGeneralExamination
        var GetPreviousGeneralExamination = function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAllPreGeneralExamination", "GeneralExamination", new { area = "EMR" })?appId=" + "@emr.appId" + "&patId=" + @emr.patId,
                success: function (response) {
                    if (response.isAuthorized != false) {
                        var table;
                        if ($.fn.dataTable.isDataTable('#tbl_PreGeneralExamination')) {
                            table = $('#tbl_PreGeneralExamination').DataTable();
                            table.clear();
                            table.rows.add(response).draw();
                        }
                        else {
                            console.log(response);
                            BindDataTableP(response);
                        }
                    }
                    else {
                        console.log("You are not Authorized!");
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            })
        }
    //#endregion Load PreviousGeneralExamination

    //#region Previous Bind Datatable
        var BindDataTableP = function (response) {
            var table = $("#tbl_PreGeneralExamination").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "mData": "geId",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-center",
                        "render": function (data, type, row, meta) {
                            let _index = (meta.row) + 1;
                            if (_index >= 10) {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>" + _index + "</a>";
                            }
                            else {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>0" + _index + "</a>";
                            }
                        }
                    },
                    {
                        "mData": "app_fdate",
                        "className": "text-left",
                        "render": function (data) {
                            return moment(data).format('DD-MM-YYYY')
                        }
                    },
                    {
                        "mData": "doctor_name",
                        "className": 'text-justify text-wrap'
                    },
                    {
                        "mData": "geId",
                        "className": 'btn-view text-center',
                        "orderable": false,
                        "searchable": false,
                        "render": function (geId, type, full, meta) {
                            var Action = '';
                            //Copy Data
                            if ("@emp_designation.ToString()" === "Super Administrator") {
                                Action += '<a id=btn_Copy_GeneralExam onclick="CopyPrevious(' + geId + ')" class="me-2" ><i class="fa fa-lg fa-copy" ></i></a>';
                                }
                                else {
                                if ("@emr.set_emr_lock" == "NoLock") {
                                    Action += '<a id=btn_Copy_GeneralExam onclick="CopyPrevious(' + geId + ')" class="me-2" ><i class="fa fa-lg fa-copy" ></i></a>';


                                    }
                                else {
                                        if ("@emr.app_ae_date" >= "@emr.today") {
                                            Action += '<a id=btn_Copy_GeneralExam onclick="CopyPrevious(' + geId + ')" class="me-2" ><i class="fa fa-lg fa-copy" ></i></a>';
                                        }
                                        else {
                                            Action += ''
                                            }
                                    }
                                }
                                //View Details
                            Action += '<a id=btn_View_GeneralExam onclick="ViewGeneralExam(' + full.geId + ')" ><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#3C457D" class="fa fa-copy" viewBox="0 0 16 16">< path d = "M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z" /><path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z" /></svg ></a> ';

                                return Action;
                            }
                    },
                ],
                order: [[0, 'asc']],
                language: {
                    searchPlaceholder: 'Search...',
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Code/Tittle</span>',
                    lengthMenu: '_MENU_',
                    scrollX: "100%",
                },
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Previous GeneralExamination',
                        footer: 'true',
                        className: 'oldbutton',
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Previous GeneralExamination',
                        footer: 'true',
                        className: 'oldbutton',
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Previous GeneralExamination',
                        footer: 'true',
                        className: 'oldbutton',
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Previous GeneralExamination',
                        footer: 'true',
                        className: 'oldbutton',
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    }
                ]
            });
            table.buttons().container().appendTo('#tbl_PreGeneralExamination_wrapper .col-md-6:eq(0)');
        };
    //#endregion Previous Bind Datatable

    //#region Copy Previous  GeneralExam
        function CopyPrevious(geId) {
            var x = $("#btn_Copy_GeneralExam");
                $.ajax({
                type: "GET",
                    url: "@Url.Action("CopyGeneralExamination", "GeneralExamination", new { area = "EMR" })?geId=" + geId,
                success: function (response) {
                    if (response.isAuthorized != false) {
                        var _data = response;
                        console.log(response);
                        if (_data.length > 0) {
                            console.log(response[0].ge_3_type);
                            $('#uge_1').val(response[0].ge_1);
                            $('#uge_2').val(response[0].ge_2);
                            $('#uge_3').val(response[0].ge_3);
                            $('#uge_4').val(response[0].ge_4);
                            $('#uge_5').val(response[0].ge_5);
                            $('#uge_6').val(response[0].ge_6);
                            $('#uge_7').val(response[0].ge_7);
                            $('#uge_8').val(response[0].ge_8);
                            $('#uge_9').val(response[0].ge_9);
                            $('#uge_10').val(response[0].ge_10);
                            $('#uge_11').val(response[0].ge_11);
                            $('#uge_12').val(response[0].ge_12);
                            $('#uge_13').val(response[0].ge_13);
                            $('#uge_14').val(response[0].ge_14);
                            $('#uge_15').val(response[0].ge_15);
                            $('#uge_16').val(response[0].ge_16);
                            $('#uge_17').val(response[0].ge_17);
                            $('#uge_18').val(response[0].ge_18);
                            $('#uge_19').val(response[0].ge_19);
                            $('#uge_20').val(response[0].ge_20);
                            $('#uge_21').val(response[0].ge_21);
                            $('#uge_22').val(response[0].ge_22);
                            $('#uge_23').val(response[0].ge_23);
                            $('#uge_24').val(response[0].ge_24);
                            $('#uge_25').val(response[0].ge_25);
                            $('#uge_1_type').val(response[0].ge_1_type);
                            $('#uge_2_type').val(response[0].ge_2_type);
                            $('#uge_3_type').val(response[0].ge_3_type);
                            $('#uge_4_type').val(response[0].ge_4_type);
                            $('#uge_5_type').val(response[0].ge_5_type);
                            $('#uge_6_type').val(response[0].ge_6_type);
                            $('#uge_7_type').val(response[0].ge_7_type);
                            $('#uge_8_type').val(response[0].ge_8_type);
                            $('#uge_9_type').val(response[0].ge_9_type);
                            $('#uge_10_type').val(response[0].ge_10_type);
                            $('#uge_11_type').val(response[0].ge_11_type);
                            $('#uge_12_type').val(response[0].ge_12_type);
                            $('#uge_13_type').val(response[0].ge_13_type);
                            $('#uge_14_type').val(response[0].ge_14_type);
                            $('#uge_15_type').val(response[0].ge_15_type);
                            $('#uge_16_type').val(response[0].ge_16_type);
                            $('#uge_17_type').val(response[0].ge_17_type);
                            $('#uge_18_type').val(response[0].ge_18_type);
                            $('#uge_19_type').val(response[0].ge_19_type);
                            $('#uge_20_type').val(response[0].ge_20_type);
                            $('#uge_21_type').val(response[0].ge_21_type);
                            $('#uge_22_type').val(response[0].ge_22_type);
                            $('#uge_23_type').val(response[0].ge_23_type);
                            $('#uge_24_type').val(response[0].ge_24_type);
                            $('#uge_25_type').val(response[0].ge_25_type);
                            BindSelect();
                            $('.form-control').trigger("change");
                        }

                    }
                    else {
                        console.log("You are not Authorized!");
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            })
        }
    //#endregion Copy Previous  GeneralExam

    // #region Validation Initialization
        var validate = function () {
            $("#form_GeneralExam").validate({
                rules: {
                    ge_25: {
                        required: true
                    },

                },
                messages: {
                    ge_25: {
                        required: "Please Enter Others!"
                    },

                },
                highlight: function (element) {
                    var elem = $(element);
                    $(element).parent().addClass('has-error');
                },
                unhighlight: function (element) {
                    var elem = $(element);
                    $(element).parent().removeClass('has-error');
                },
                errorElement: 'span',
                errorClass: 'text-danger fw-bold',
                errorPlacement: function (error, element) {
                    var elem = $(element);
                    if (element.parent('.input-group').length) {
                        error.insertAfter(element.parent());
                    } else {
                        error.insertAfter(element);
                    }
                }
            });

        }
    //#endregion Validation Initialization

    //#region Add  Click
        $('#btn_Insert_GeneralExam').on('click', function (e) {
            e.preventDefault();
            if ($("#form_GeneralExam").valid()) {
                $('#btn_Insert_GeneralExam').removeClass("btn btn btn-success");
                $('#btn_Insert_GeneralExam').addClass("btn btn btn-success btn-loaders btn-icon");
                $('#btn_Insert_GeneralExam').html("Saving the Record....");

                var _dateInsert = {
                    "geId": 0,
                    "ge_appId": @emr.appId,
                    "ge_1": $("#uge_1").val(),
                    "ge_2": $("#uge_2").val(),
                    "ge_3": $("#uge_3").val(),
                    "ge_4": $("#ge_4").val(),
                    "ge_5": $("#uge_5").val(),
                    "ge_6": $("#uge_6").val(),
                    "ge_7": $("#uge_7").val(),
                    "ge_8": $("#uge_8").val(),
                    "ge_9": $("#uge_9").val(),
                    "ge_10": $("#uge_10").val(),
                    "ge_11": $("#uge_11").val(),
                    "ge_12": $("#uge_12").val(),
                    "ge_13": $("#uge_13").val(),
                    "ge_14": $("#uge_14").val(),
                    "ge_15": $("#uge_15").val(),
                    "ge_16": $("#uge_16").val(),
                    "ge_17": $("#uge_17").val(),
                    "ge_18": $("#uge_18").val(),
                    "ge_19": $("#uge_19").val(),
                    "ge_20": $("#uge_20").val(),
                    "ge_21": $("#uge_21").val(),
                    "ge_22": $("#uge_22").val(),
                    "ge_23": $("#uge_23").val(),
                    "ge_24": $("#uge_24").val(),
                    "ge_25": $("#uge_25").val(),
                    "ge_1_type": $("#uge_1_type").val(),
                    "ge_2_type": $("#uge_2_type").val(),
                    "ge_3_type": $("#uge_3_type").val(),
                    "ge_4_type": $("#uge_4_type").val(),
                    "ge_5_type": $("#uge_5_type").val(),
                    "ge_6_type": $("#uge_6_type").val(),
                    "ge_7_type": $("#uge_7_type").val(),
                    "ge_8_type": $("#uge_8_type").val(),
                    "ge_9_type": $("#uge_9_type").val(),
                    "ge_10_type": $("#uge_10_type").val(),
                    "ge_11_type": $("#uge_11_type").val(),
                    "ge_12_type": $("#uge_12_type").val(),
                    "ge_13_type": $("#uge_13_type").val(),
                    "ge_14_type": $("#uge_14_type").val(),
                    "ge_15_type": $("#uge_15_type").val(),
                    "ge_16_type": $("#uge_16_type").val(),
                    "ge_17_type": $("#uge_17_type").val(),
                    "ge_18_type": $("#uge_18_type").val(),
                    "ge_19_type": $("#uge_19_type").val(),
                    "ge_20_type": $("#uge_20_type").val(),
                    "ge_21_type": $("#uge_21_type").val(),
                    "ge_22_type": $("#uge_22_type").val(),
                    "ge_23_type": $("#uge_23_type").val(),
                    "ge_24_type": $("#uge_24_type").val(),
                    "ge_25_type": $("#uge_25_type").val(),
                    "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                }

                $.ajax({
                    type: "Post",
                    url: "@Url.Action("InsertGeneralExamination", "GeneralExamination", new {area = "EMR" })",
                    dataType: 'JSON',
                    data: _dateInsert,
                    success: function (data) {
                        $('#btn_Insert_GeneralExam').removeClass("btn btn btn-success btn-loaders btn-icon");
                        $('#btn_Insert_GeneralExam').addClass("btn btn btn-success");
                        $('#btn_Insert_GeneralExam').html("Add");
                        if (data.isSuccess) {
                            if (data.isInserted) {
                                console.log(data);
                                var alertPlaceholder = document.getElementById("Alert");
                                function alert(e, t) {
                                    var l = document.createElement("div");
                                    l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                }
                                alert("<i class='fe fe-check-circle text-white'></i>  General Examination Saved Successfully!", "success");
                                GetGeneralExamination();
                                Timeout();
                            }
                            else {

                                let html = "<div class='col-12 col-sm-12 col-md-6 d-flex justify-content-center'>" +
                                    "<div class='alert alert-warning' role='alert'>" +
                                    "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                    "<strong>Warning.. General Examination Alredy Exists..</strong><br/>" +
                                    "</div></div>";
                                $("#Alert").html(html);
                            }
                        }
                        else {
                        let html = "<div class='col-12 col-sm-12 col-md-6 d-flex justify-content-center'>" +
                        "<div class='alert alert-danger' role='alert'>" +
                        "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                        "<strong>Validation Error.. Please correct before you submit the form!&nbsp;</strong><br/><ul>";
                        $.each(data.message, function (index, value) {
                            html += "<li><small>" + value + "</small><li>";
                            var elem = $("#" + index);
                            if (elem.hasClass("select2-hidden-accessible")) {
                                $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                            }
                            else {
                                $(elem).addClass(" is-invalid");
                            }

                            setTimeout(function () {
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                }
                                else {
                                    $(elem).removeClass("is-invalid");
                                }
                            }, 5000);
                        });
                        html += "</ul></div></div>";
                        $("#error").html(html);
                    }
                    },
                    error: function (xhr) {
                        $('#btn_Insert_GeneralExam').removeClass("btn btn btn-success btn-loaders btn-icon");
                        $('#btn_Insert_GeneralExam').addClass("btn btn btn-warning");
                        $('#btn_Insert_GeneralExam').html("Add");
                        Timeout();
                    }
                });

            }
            else {
                $('.modal-body').animate({
                    scrollTop: ($('.has-error').offset().top - 300)
                }, 2000);
            }
        });
    //#endregion Add Click

    //#region Update  Click
        $('#btn_Update_GeneralExam').on('click', function (e) {
            e.preventDefault();
            if ($("#form_GeneralExam").valid()) {
                $('#btn_Update_GeneralExam').removeClass("btn btn btn-success");
                $('#btn_Update_GeneralExam').addClass("btn btn btn-success btn-loaders btn-icon");
                $('#btn_Update_GeneralExam').html("Updating the Record....");
                var _dateInsert = {
                    "geId": $("#ugeId").val(),
                    "ge_appId": @emr.appId,
                    "ge_1": $("#uge_1").val(),
                    "ge_2": $("#uge_2").val(),
                    "ge_3": $("#uge_3").val(),
                    "ge_4": $("#ge_4").val(),
                    "ge_5": $("#uge_5").val(),
                    "ge_6": $("#uge_6").val(),
                    "ge_7": $("#uge_7").val(),
                    "ge_8": $("#uge_8").val(),
                    "ge_9": $("#uge_9").val(),
                    "ge_10": $("#uge_10").val(),
                    "ge_11": $("#uge_11").val(),
                    "ge_12": $("#uge_12").val(),
                    "ge_13": $("#uge_13").val(),
                    "ge_14": $("#uge_14").val(),
                    "ge_15": $("#uge_15").val(),
                    "ge_16": $("#uge_16").val(),
                    "ge_17": $("#uge_17").val(),
                    "ge_18": $("#uge_18").val(),
                    "ge_19": $("#uge_19").val(),
                    "ge_20": $("#uge_20").val(),
                    "ge_21": $("#uge_21").val(),
                    "ge_22": $("#uge_22").val(),
                    "ge_23": $("#uge_23").val(),
                    "ge_24": $("#uge_24").val(),
                    "ge_25": $("#uge_25").val(),
                    "ge_1_type": $("#uge_1_type").val(),
                    "ge_2_type": $("#uge_2_type").val(),
                    "ge_3_type": $("#uge_3_type").val(),
                    "ge_4_type": $("#uge_4_type").val(),
                    "ge_5_type": $("#uge_5_type").val(),
                    "ge_6_type": $("#uge_6_type").val(),
                    "ge_7_type": $("#uge_7_type").val(),
                    "ge_8_type": $("#uge_8_type").val(),
                    "ge_9_type": $("#uge_9_type").val(),
                    "ge_10_type": $("#uge_10_type").val(),
                    "ge_11_type": $("#uge_11_type").val(),
                    "ge_12_type": $("#uge_12_type").val(),
                    "ge_13_type": $("#uge_13_type").val(),
                    "ge_14_type": $("#uge_14_type").val(),
                    "ge_15_type": $("#uge_15_type").val(),
                    "ge_16_type": $("#uge_16_type").val(),
                    "ge_17_type": $("#uge_17_type").val(),
                    "ge_18_type": $("#uge_18_type").val(),
                    "ge_19_type": $("#uge_19_type").val(),
                    "ge_20_type": $("#uge_20_type").val(),
                    "ge_21_type": $("#uge_21_type").val(),
                    "ge_22_type": $("#uge_22_type").val(),
                    "ge_23_type": $("#uge_23_type").val(),
                    "ge_24_type": $("#uge_24_type").val(),
                    "ge_25_type": $("#uge_25_type").val(),
                    "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                }
                console.log(_dateInsert);
                $.ajax({
                        type: "Post",
                        url: "@Url.Action("UpdateGeneralExamination", "GeneralExamination", new {area = "EMR" })",
                        dataType: 'JSON',
                         data: _dateInsert,
                         success: function (data) {
                             $('#btn_Update_GeneralExam').removeClass("btn btn btn-success btn-loaders btn-icon");
                             $('#btn_Update_GeneralExam').addClass("btn btn btn-warning");
                             $('#btn_Update_GeneralExam').html("Save Changes");
                             if (data.isSuccess) {
                                if (data.isInserted) {
                                    var alertPlaceholder = document.getElementById("Alert");
                                    function alert(e, t) {
                                        var l = document.createElement("div");
                                        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                    }
                                    alert("<i class='fe fe-check-circle text-white'></i>  General Examination Updated Successfully!", "success");
                                    GetGeneralExamination();
                                    Timeout();
                                }
                                else {
                                    let html = "<div class='col-12 col-sm-12 col-md-6 d-flex justify-content-center'>" +
                                        "<div class='alert alert-warning' role='alert'>" +
                                        "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                        "<strong>Warning..  General Examination Alredy Exists..</strong><br/>" +
                                        "</div></div>";
                                    $('#tab12').click();
                                    $("#Alert").html(html);
                                }

                             }
                             else {
                                 let html = "<div class='col-12 col-sm-12 col-md-6 d-flex justify-content-center'>" +
                                     "<div class='alert alert-danger' role='alert'>" +
                                     "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                     "<strong>Validation Error.. Please correct before you submit the form!&nbsp;</strong><br/><ul>";
                                 $.each(data.message, function (index, value) {
                                     html += "<li><small>" + value + "</small><li>";
                                     var elem = $("#" + index);
                                     if (elem.hasClass("select2-hidden-accessible")) {
                                         $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                     }
                                     else {
                                         $(elem).addClass(" is-invalid");
                                     }

                                     setTimeout(function () {
                                         if (elem.hasClass("select2-hidden-accessible")) {
                                             $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                         }
                                         else {
                                             $(elem).removeClass("is-invalid");
                                         }
                                     }, 5000);
                                 });
                                 html += "</ul></div></div>";
                                 $("#error").html(html);
                             }
                        },
                        error: function (xhr) {
                            $('#btn_Update_GeneralExam').removeClass("btn btn btn-success btn-loaders btn-icon");
                            $('#btn_Update_GeneralExam').addClass("btn btn btn-warning");
                            $('#btn_Update_GeneralExam').html("Save Changes");
                            Timeout();
                        }

                    })
            }
            else {
                $('.modal-body').animate({
                    scrollTop: ($('.has-error').offset().top - 300)
                }, 2000);
            }
        });
    //#endregion Update Click

    //#region Delete Click
        $('#btn_Delete_GeneralExam').on('click', function (e) {
            e.preventDefault();
            $('#btn_Delete_GeneralExam').removeClass("btn btn btn-success");
            $('#btn_Delete_GeneralExam').addClass("btn btn btn-success btn-loaders btn-icon");
                $('#btn_Delete_GeneralExam').html("Deleting the Record....");

                $.ajax({
                    url: '@Url.Action("DeleteGeneralExamination", "GeneralExamination", new { area = "EMR" })?geId=' + $("#ugeId").val(),
                    type: "POST",
                    dataType: 'JSON',
                    success: function (data) {
                        $('#btn_Delete_GeneralExam').removeClass("btn btn btn-success btn-loaders btn-icon");
                        $('#btn_Delete_GeneralExam').addClass("btn btn btn-warning");
                        $('#btn_Delete_GeneralExam').html("Delete");
                        if (data.isAuthorized) {
                            if (data.success) {

                                var alertPlaceholder = document.getElementById("Alert");
                                function alert(e, t) {
                                    var l = document.createElement("div");
                                    l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                }
                                alert("<i class='fe fe-check-circle text-white'></i> General Examination Deleted Successfully!", "success");
                                clearControls();
                                GetGeneralExamination();
                                Timeout();
                                $(".form-control").trigger("change");
                            }
                            else {

                                let html = "<div class='col-12 col-sm-12 col-md-6 d-flex justify-content-center'>" +
                                    "<div class='alert alert-warning' role='alert'>" +
                                    "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                    "<strong>Error!.. Failed to Delete..</strong><br/>" +
                                    "</div></div>";
                                $("#error").html(html);
                            }
                        }
                        else {
                            var alertPlaceholder = document.getElementById("Alert");
                            function alert(e, t) {
                                var l = document.createElement("div");
                                l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                            }
                            alert("<i class='fe fe-check-circle text-white'></i> You do not have Enough Privileges to Delete this Designation!", "Access Denied!");
                        }
                    },
                    error: function (xhr) {
                        $('#btn_Delete_GeneralExam').removeClass("btn btn btn-success btn-loaders btn-icon");
                        $('#btn_Delete_GeneralExam').addClass("btn btn btn-Delete");
                        $('#btn_Delete_GeneralExam').html("Delete");
                        Timeout();
                    }
                })
        });
    //#endregion Delete Click

    //#region View GeneralExam
        function ViewGeneralExam(geId) {
             var x = $("#ge_body");
            x.load("@Url.Action("ViewGeneralExamination", "GeneralExamination", new { area = "EMR" })?geId=" + geId, function () {
                    $("#ge_modal").modal("show");
            });
        }
    //#endregion View GeneralExam

    //#region Bind Select Data
        var BindSelect = function () {
            $("#uge_1_type,#uge_2_type,#uge_3_type,#uge_4_type, #uge_5_type, #uge_6_type").select2({
                placeholder: 'Select Type',
                width: '100%',
                minimumResultsForSearch: '',
                dropdownParent: $('#form_GeneralExam'),
                escapeMarkup: function (markup) {
                    return markup;
                }
            });
            $("#uge_7_type, #uge_8_type, #uge_9_type, #uge_10_type, #uge_11_type, #uge_12_type").select2({
                placeholder: 'Select Type',
                width: '100%',
                minimumResultsForSearch: '',
                dropdownParent: $('#form_GeneralExam'),
                escapeMarkup: function (markup) {
                    return markup;
                }
            });
            $("#uge_13_type, #uge_14_type, #uge_15_type, #uge_16_type,#uge_17_type, #uge_18_type, #uge_19_type ").select2({
                placeholder: 'Select Type',
                width: '100%',
                minimumResultsForSearch: '',
                dropdownParent: $('#form_GeneralExam'),
                escapeMarkup: function (markup) {
                    return markup;
                }
            });
            $("#uge_20_type,#uge_21_type,#uge_22_type,#uge_23_type,#uge_24_type, #uge_25_type").select2({
                placeholder: 'Select Type',
                width: '100%',
                minimumResultsForSearch: '',
                dropdownParent: $('#form_GeneralExam'),
                escapeMarkup: function (markup) {
                    return markup;
                }
            });
        }
    //#endregion Bind Select Data

    //#region Clear Controls
        var clearControls = function () {
            $("#ugeId").val(0);
            $("#uge_1").val("");
            $("#uge_2").val("");
            $("#uge_3").val("");
            $("#uge_4").val("");
            $("#uge_5").val("");
            $("#uge_6").val("");
            $("#uge_7").val("");
            $("#uge_8").val("");
            $("#uge_9").val("");
            $("#uge_10").val("");
            $("#uge_11").val("");
            $("#uge_12").val("");
            $("#uge_13").val("");
            $("#uge_14").val("");
            $("#uge_15").val("");
            $("#uge_16").val("");
            $("#uge_17").val("");
            $("#uge_18").val("");
            $("#uge_19").val("");
            $("#uge_20").val("");
            $("#uge_21").val("");
            $("#uge_22").val("");
            $("#uge_23").val("");
            $("#uge_24").val("");
            $("#uge_25").val("");
            $("#uge_1_type").val("").trigger("change");
            $("#uge_2_type").val("").trigger("change");
            $("#uge_3_type").val("").trigger("change");
            $("#uge_4_type").val("").trigger("change");
            $("#uge_5_type").val("").trigger("change");
            $("#uge_6_type").val("").trigger("change");
            $("#uge_7_type").val("").trigger("change");
            $("#uge_8_type").val("").trigger("change");
            $("#uge_9_type").val("").trigger("change");
            $("#uge_10_type").val("").trigger("change");
            $("#uge_11_type").val("").trigger("change");
            $("#uge_12_type").val("").trigger("change");
            $("#uge_13_type").val("").trigger("change");
            $("#uge_14_type").val("").trigger("change");
            $("#uge_15_type").val("").trigger("change");
            $("#uge_16_type").val("").trigger("change");
            $("#uge_17_type").val("").trigger("change");
            $("#uge_18_type").val("").trigger("change");
            $("#uge_19_type").val("").trigger("change");
            $("#uge_20_type").val("").trigger("change");
            $("#uge_21_type").val("").trigger("change");
            $("#uge_22_type").val("").trigger("change");
            $("#uge_23_type").val("").trigger("change");
            $("#uge_24_type").val("").trigger("change");
            $("#uge_25_type").val("").trigger("change");
        }
    //#endregion Clear Controls




    //#region Resize Datatable
        function resizedt() {
            setTimeout(function () {
                $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
            }, 350);
        }
    //#endregion Resize Datatable

    //#region Alert Timeout
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
    //#endregion Alert Timeout
</script>

@*}*@
