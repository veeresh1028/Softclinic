@using System.Security.Claims;
@{
    ViewBag.Title = "Doctor & Patient Collection (Daywise) Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var empId = claims.Where(c => c.Type == ClaimTypes.Sid).Select(c => c.Value).SingleOrDefault();
    var emp_name = claims.Where(c => c.Type == ClaimTypes.GivenName).Select(c => c.Value).SingleOrDefault();
    var emp_dept = claims.Where(c => c.Type == ClaimTypes.Locality).Select(c => c.Value).SingleOrDefault();
    var emp_department = claims.Where(c => c.Type == ClaimTypes.Surname).Select(c => c.Value).SingleOrDefault();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    var company = claims.Where(c => c.Type == ClaimTypes.PrimarySid).Select(c => c.Value).SingleOrDefault();
    var emp_branch = claims.Where(c => c.Type == ClaimTypes.GroupSid).Select(c => c.Value).SingleOrDefault();
}

<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary">Doctor & Patient Collection (Daywise) Report</h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list">
            <button class="btn btn-outline-primary mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#searchFilter" aria-expanded="false" aria-controls="collapseExample">
                <i class="fa fa-filter"></i> Advanced Filters
            </button>
            <button class="btn btn-secondary mb-2" type="button" id="printReport">
                <i class="fa fa-print"></i> Print
            </button>

            <button onclick="exportToExcel()" class="btn btn-success mb-2" id="btn_export">
                <i class="fa fa-file-excel-o"></i> Excel
            </button>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card mb-0">
            <div class="card-status bg-primary-1"></div>
            <div class="collapse" id="searchFilter">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-6 col-md-6 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Branch<small>(es)</small></label>
                                <select class="form-control" id="select_branch" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Insurance TPA<small>(s)</small></label>
                                <select class="form-control select2-show-search" multiple="multiple" id="select_ins_tpa">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Insurance Scheme<small>(s)</small></label>
                                <select class="form-control select2-show-search" multiple="multiple" id="select_scheme">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Insurance Payer<small>(s)</small></label>
                                <select class="form-control" multiple="multiple" id="select_ins_payer"></select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">From Date</label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_from" class="form-control" placeholder="Select Date From" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">To Date</label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_to" class="form-control" placeholder="Select Date To" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">&nbsp;</label>
                                <button class="btn btn-primary mb-2" type="button" id="btnSearch">
                                    <i class="fa fa-search-plus"></i> Search
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div id="progress_loader" style="display:none;">
                    <div class="progress progress-sm mb-3">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-teal progress-bar-indeterminate"></div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tbl_doc_pat_collection" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%;">
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="text-wrap d-none" id="toastReport">
    <div class="toast-main p-5">
        <div class="demo-static-toast">
            <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
                <div id="reportToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header text-dark">
                        <img src="~/assets/images/brand/favicon.ico" class="rounded me-2" alt="img" height="16">
                        <strong class="me-auto">Doctor/Patient Collection Report</strong>
                        <button type="button" class="btn-close btn-close" data-bs-dismiss="toast" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="toast-body" id="toastBody">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section myScripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.5/xlsx.full.min.js"></script>

    <script type="text/javascript">
        //#region Page Load
        $(function () {
            // Load Advanced Filters
            load_filters();
            // Load Report
            GetReport(0);
        });
        //#endregion

        //#region Load Advanced Filters
        // Initialize All Items
        var load_filters = function () {
            load_branches();
            load_ins_tpa();
            load_schemes();
            load_ins_payer();

            $('#select_date_from').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            $("#select_date_from").bootstrapdatepicker("setDate", "today");
            $('#select_date_to').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            $("#select_date_to").bootstrapdatepicker("setDate", "tomorrow");
            $('#select_date_from').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });
            $('#select_date_to').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });
        }
        // Load Branches
        var load_branches = function () {
            $('#select_branch').SumoSelect({
                placeholder: 'Select Branch(es)',
                captionFormat: '{0} Branch(es) Selected',
                captionFormatAllSelected: 'All {0} Branches selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            var _url = "";

            if ("@emp_designation.ToString().Contains("Administrator")" == "True") {
                _url = "@Url.Action("GetBranches", "DoctorPatientCollectionReport", new { area = "Reports" })?empId=" + @empId.ToString();
            }
            else {
                _url = "@Url.Action("GetBranches", "DoctorPatientCollectionReport", new { area = "Reports" })?setid=" + @emp_branch.ToString();
            }

            $.ajax({
                url: _url,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    $('#select_branch').html('');
                    $('#select_branch')[0].sumo.reload();

                    if ("@emp_designation.ToString().Contains("Administrator")" == "True") {
                        $.each(response, function (j) {
                            $('#select_branch')[0].sumo.add(response[j].id, response[j].text);
                            $('#select_branch')[0].sumo.selectItem(["@emp_branch.ToString()"]);
                        });
                    }
                    else {
                        $('#select_branch')[0].sumo.add(@emp_branch.ToString(), "@company.ToString()");
                        $('#select_branch')[0].sumo.selectItem(["@emp_branch.ToString()"]);
                    }
                },
                error: function (xhr) {
                    console.log("Failed to Load Branch(es)! Error Message : " + xhr.statusText);
                }
            }).done(function () {
                $('#select_branch')[0].sumo.reload();
            });
        }
        // Load Insurance TPA
        var load_ins_tpa = function () {
            $("#select_ins_tpa").SumoSelect({
                placeholder: 'Select Insurance TPA(s)',
                captionFormat: '{0} Insurance TPA(s) Selected',
                captionFormatAllSelected: 'All {0} Insurance TPAs selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $.ajax({
                url: '@Url.Action("GetInsuranceCompanies", "DoctorPatientCollectionReport", new { area = "Reports" })',
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    $('#select_ins_tpa').html('');
                    $('#select_ins_tpa')[0].sumo.reload();

                    $.each(response, function (j) {
                        $('#select_ins_tpa')[0].sumo.add(response[j].id, response[j].text);
                    });

                    $('#select_ins_tpa')[0].sumo.reload();
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                }
            }).done(function () {
                load_schemes();

                load_ins_payer();
            });
        }
        // Load Insurance Schemes
        var load_schemes = function () {
            $("#select_scheme").SumoSelect({
                placeholder: 'Select Insurance Scheme(s)',
                captionFormat: '{0} Insurance Scheme(s) Selected',
                captionFormatAllSelected: 'All {0} Insurance Schemes selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $('#select_scheme').html('');
            $('#select_scheme')[0].sumo.reload();
        }
        // Insurance Company Change Event (Load Schemes)
        $('#select_ins_tpa').on('change', function (e) {
            if ($(this).val() != "" && $(this).val() != null && $(this).val() != undefined) {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetInsuranceSchemes", "DoctorPatientCollectionReport", new { area = "Reports" })?icIds=' + $(this).val().toString(),
                    dataType: 'json',
                    success: function (response) {
                        $('#select_scheme').html('');
                        $('#select_scheme')[0].sumo.reload();

                        $.each(response, function (j) {
                            $('#select_scheme')[0].sumo.add(response[j].Value, response[j].Text);
                        });

                        $('#select_scheme')[0].sumo.reload();
                    },
                    error: function (xhr) {
                        console.log("Failed! Error Message : " + xhr.statusText);
                    }
                });
            }
            else {
                $('#select_scheme').html('');
                $('#select_scheme')[0].sumo.reload();
            }
        });
        // Load Insurance Payers
        var load_ins_payer = function () {
            $("#select_ins_payer").SumoSelect({
                placeholder: 'Select Payer(s)',
                captionFormat: '{0} Payer(s) Selected',
                captionFormatAllSelected: 'All {0} Payers selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true,
                forceCustomRendering: true,
                triggerChangeCombined: false
            });

            $('#select_ins_payer').html('');
            $('#select_ins_payer')[0].sumo.reload();
        }
        // Insurance Company Change Event (Load Payers)
        $('#select_ins_tpa').on('change', function (e) {
            if ($(this).val() != "" && $(this).val() != null && $(this).val() != undefined) {
                $.ajax({
                    url: "@Url.Action("GetInsurancePayersByIcIds", "DoctorPatientCollectionReport", new { area = "Reports" })?icIds=" + $(this).val().toString(),
                    type: "POST",
                    dataType: "json",
                    success: function (response) {
                        $('#select_ins_payer').html('');
                        var selectedTextArray = $('#select_ins_tpa option:selected').map(function () {
                            return $(this).text();
                        }).get();

                        $('#select_ins_payer').attr("placeholder", "Select Insurance Payer(s) for " + selectedTextArray.toString());
                        $('#select_ins_payer')[0].sumo.enable();
                        $('#select_ins_payer')[0].sumo.reload();

                        if (response != "") {
                            $.each(response, function (j) {
                                $('#select_ins_payer')[0].sumo.add(response[j].id, response[j].text);
                            });

                            $('#select_ins_payer')[0].sumo.reload();
                        }
                        else {
                            $('#select_ins_payer')[0].sumo.reload();
                        }
                    },
                    error: function (xhr) {
                        console.log("Failed! Error Message : " + xhr.statusText);
                    }
                });
            }
            else {
                $('#select_ins_payer').html('');
                $('#select_ins_payer')[0].sumo.reload();
            }
        });
        //#endregion

        //#region Search Report Click
        $("#btnSearch").click(function (e) {
            e.preventDefault();
            if ($("#select_branch").val() != null && $("#select_branch").val() != 0 && $("#select_branch").val() != "") {
                if (($("#select_date_from").val() != null && $("#select_date_from").val() != 0 && $("#select_date_from").val() != "") &&
                    ($("#select_date_to").val() != null && $("#select_date_to").val() != 0 && $("#select_date_to").val() != "")) {

                    let isValid = true;
                    let date_frm = moment($("#select_date_from").val(), "DD-MMMM-YYYY");
                    let date_to = moment($("#select_date_to").val(), "DD-MMMM-YYYY");

                    // Check if Date From is a valid Date
                    if ($("#select_date_from").val() != null && $("#select_date_from").val() != 0 && $("#select_date_from").val() != "" && $("#select_date_from").val() != undefined) {
                        if (!date_frm.isValid()) {
                            isValid = false;
                            e.stopPropagation();
                            return $.growl.error({
                                title: "Error",
                                message: "Invalid From Date!"
                            });
                        }
                    }
                    // Check if Date To is a valid Date
                    if ($("#select_date_to").val() != null && $("#select_date_to").val() != 0 && $("#select_date_to").val() != "" && $("#select_date_to").val() != undefined) {
                        if (!date_to.isValid()) {
                            isValid = false;
                            e.stopPropagation();
                            return $.growl.error({
                                title: "Error",
                                message: "Invalid To Date!"
                            });
                        }
                    }
                    // Check if Date Range is valid
                    if (($("#select_date_from").val() != null && $("#select_date_from").val() != 0 && $("#select_date_from").val() != "" && $("#select_date_from").val() != undefined) && ($("#select_date_to").val() != null && $("#select_date_to").val() != 0 && $("#select_date_to").val() != "" && $("#select_date_to").val() != undefined)) {
                        if (date_frm.isValid() && date_to.isValid()) {
                            if (date_to.diff(date_frm, 'days') <= -1) {
                                isValid = false;

                                var index = [];
                                index.push("select_date_from");
                                index.push("select_date_to");

                                $.each(index, function (i, v) {
                                    if (index[i] != null && index[i] != "") {
                                        var elem = $("#" + index[i]);
                                        if (elem.hasClass("select2-hidden-accessible")) {
                                            $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                        }
                                        else {
                                            $(elem).addClass(" is-invalid");
                                        }

                                        setTimeout(function () {
                                            if (elem.hasClass("select2-hidden-accessible")) {
                                                $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                            }
                                            else {
                                                $(elem).removeClass("is-invalid");
                                            }
                                        }, 5000);
                                    }
                                });

                                e.stopPropagation();

                                return $.growl.error({
                                    title: "Error!",
                                    message: "Search From Date Filter should be less than Search To Date Filter!"
                                });
                            }
                            else if (date_to.diff(date_frm, 'days') >= 31) {
                                isValid = false;

                                var index = [];
                                index.push("select_date_from");
                                index.push("select_date_to");

                                $.each(index, function (i, v) {
                                    if (index[i] != null && index[i] != "") {
                                        var elem = $("#" + index[i]);
                                        if (elem.hasClass("select2-hidden-accessible")) {
                                            $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                        }
                                        else {
                                            $(elem).addClass(" is-invalid");
                                        }

                                        setTimeout(function () {
                                            if (elem.hasClass("select2-hidden-accessible")) {
                                                $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                            }
                                            else {
                                                $(elem).removeClass("is-invalid");
                                            }
                                        }, 5000);
                                    }
                                });

                                e.stopPropagation();

                                return $.growl.error({
                                    title: "Error!",
                                    message: "The date range should not exceed 31 days!"
                                });
                            }
                        }
                    }
                    // Check If Valid
                    if (isValid) {
                        GetReport(1);
                    }
                }
                else {
                    Swal.fire({
                        title: "Attention!",
                        text: "Search From Date & To Date is Required!",
                        icon: "warning",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                    });
                }
            }
            else {
                Swal.fire({
                    title: "Attention!",
                    text: "You need to select atleast 1 Branch to Filter Report!",
                    icon: "warning",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                });
            }
        });
        //#endregion

        //#region Get Report Details
        var GetReport = function (search_type) {
            var _data = {
                "search_type"       : search_type,
                "select_branch"     : $('#select_branch').val().toString(),
                "select_ins_tpa"    : $('#select_ins_tpa').val().toString(),
                "select_scheme"     : $('#select_scheme').val().toString(),
                "select_ins_payer"  : $('#select_ins_payer').val().toString(),
                "date_from"         : $('#select_date_from').val(),
                "date_to"           : $('#select_date_to').val()
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetDoctorPatientCollectionReport", "DoctorPatientCollectionReport", new { area = "Reports" })",
                data: _data,
                beforeSend: function () {
                    $('#progress_loader').show();
                    $('#toastBody').html('');
                    $('#toastBody').html('<i class="fe fe-info me-2 text-info"></i> <b>Generating Report..</b> Please wait!');
                    $('#toastReport').removeClass("d-none");
                    $('#reportToast').show();
                },
                start_time: new Date().getTime(),
                success: function (response) {
                    if (response.isAuthorized != false) {
                        $('#progress_loader').hide();

                        //#region Load Report Details
                        BindDataTable(response);
                        //#endregion

                        //#region Toast Before / After Filtering
                        var etime = new Date().getTime() - this.start_time;
                        $('#toastBody').html('');
                        $('#toastBody').html('<i class="fe fe-check-circle me-2 text-success"></i> <b class="text-dark">Generated </b> report in about <b id="etime">' + etime + '</b> ms');
                        $('#reportToast').show();
                        //#endregion
                    }
                    else
                    {
                        console.log("You are not Authorized To View This Page!");
                    }
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                    $('#progress_loader').hide();
                }
            }).done(function () {
                setTimeout(function () {
                    $('#reportToast').fadeOut('fast');
                    $('#toastReport').addClass("d-none");
                }, 5000);
            });
        }
        //#endregion

        //#region Bind Data to Table
        var BindDataTable = function (response) {
            var _html = '';

            var doctors = response.doctors;
            var dates = response.dates;
            var report = response.collectionReport;

            var _head = `<thead><tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D;"><th rowspan="2" class="border-bottom-0 font-weight-semibold text-white text-center">Date</th>`;
            var _head2 = '';

            $.each(doctors, function (i, doctor) {
                _head += `<th class="border-bottom-0 font-weight-semibold text-white text-center" colspan="3">${doctor.emp_name}</th>`;
                _head2 += `<th class="border-bottom-0 font-weight-semibold text-white text-center border-top">No. Of Patients</th>
               <th class="border-bottom-0 font-weight-semibold text-white text-center border-top">NET</th>
               <th class="border-bottom-0 font-weight-semibold text-white text-center border-top">Avg.</th>`;
            });

            _head += '</tr><tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D;">' + _head2 + '</tr></thead>';

            _html += _head;

            var inv_date = dates.map(_data => _data.date);
            var inv_doctor = doctors.map(doctor => doctor.app_doctor);

            _html += '<tbody>';

            $.each(inv_date, function (i, date) {
                _html += `<tr><td>${moment(date).format("DD-MM-YYYY")}</td>`;

                $.each(inv_doctor, function (j, doctor) {
                    const matchingData = report.find(data => moment(date).isSame(moment(data.inv_date), 'day') && doctor === data.inv_doctor);

                    if (matchingData) {
                        _html += `<td class="text-end font-weight-semibold">${matchingData.inv_pat}</td>
                          <td class="text-end font-weight-semibold">${matchingData.inv_net.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>
                          <td class="text-end font-weight-semibold">${matchingData.inv_avg.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>`;
                    }
                    else {
                        _html += `<td class="text-end text-muted-dark">0</td><td class="text-end text-muted-dark">0.00</td><td class="text-end text-muted-dark">0.00</td>`;
                    }
                });

                _html += '</tr>';
            });

            _html += '</tbody>';

            $('#tbl_doc_pat_collection').html(_html);
        }
        //#endregion

        //#region Print Report
        document.getElementById('printReport').addEventListener('click', handlePrintButtonClick);

        function handlePrintButtonClick() {
            var printWindow = window.open('', '_blank');

            var tableData = $('#tbl_doc_pat_collection').clone();

            $(printWindow.document.body).html(tableData);

            $.ajax({
                type: "GET",
                url: "@Url.Action("PrintReport", "DoctorPatientCollectionReport", new { area = "Reports" })",
                success: function (response) {
                    if (response.isAuthorized) {
                        printWindow.print();
                    }
                    else {
                        Swal.fire({
                            title: "Access Denied!",
                            text: "You do not have enough privileges to Print this Report!",
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                        });
                    }
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                }
            });
        }

        function exportToExcel() {
            var table = document.getElementById('tbl_doc_pat_collection');
            var wb = XLSX.utils.table_to_book(table, { sheet: "Sheet1" });
            XLSX.writeFile(wb, 'exported_data.xlsx');
        }
        //#endregion
    </script>
}