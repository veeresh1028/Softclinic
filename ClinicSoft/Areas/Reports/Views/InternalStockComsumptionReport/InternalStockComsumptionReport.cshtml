@using System.Security.Claims;
@{
    ViewBag.Title = "Internal Stock Comsumption Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var empId = claims.Where(c => c.Type == ClaimTypes.Sid).Select(c => c.Value).SingleOrDefault();
    var emp_name = claims.Where(c => c.Type == ClaimTypes.GivenName).Select(c => c.Value).SingleOrDefault();
    var emp_dept = claims.Where(c => c.Type == ClaimTypes.Locality).Select(c => c.Value).SingleOrDefault();
    var emp_department = claims.Where(c => c.Type == ClaimTypes.Surname).Select(c => c.Value).SingleOrDefault();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    var company = claims.Where(c => c.Type == ClaimTypes.PrimarySid).Select(c => c.Value).SingleOrDefault();
    var emp_branch = claims.Where(c => c.Type == ClaimTypes.GroupSid).Select(c => c.Value).SingleOrDefault();
}

<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary">Internal Stock Consumption Report</h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list btn-animation">
            <button class="btn btn-vimeo ms-lg-2" type="button" id="btnPostAccount">
                <i class="fa fa-line-chart"></i> Post To Account
            </button>
            <button class="btn btn-outline-primary mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#searchFilter" aria-expanded="false" aria-controls="collapseExample">
                <i class="fa fa-filter"></i> Advanced Filters
            </button>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card mb-0">
            <div class="collapse" id="searchFilter">
                <div class="card-body">
                    <input type="hidden" id="hi_branch_selected" value="0" />
                    <div class="row">
                        <div class="col-sm-12 col-md-6 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Branch</label>
                                <select class="form-control" id="select_branch" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Department<small>(s)</small></label>
                                <select class="form-control" id="select_dept" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Doctor<small>(s)</small></label>
                                <select class="form-control select2" id="select_doctor" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Room<small>(s)</small></label>
                                <select class="form-control select2" id="select_room" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Patient <small class="ms-2 text-info">(Search By MRN/EID/Mobile/Name)</small></label>
                                <select class="form-control select2-show-search" id="select_patient"></select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Item <small class="ms-2 text-info">(Search By Name/Code)</small> </label>
                                <select class="form-control select2-show-search" id="select_item"></select>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Date From</label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_from" class="form-control" placeholder="DD-MM-YYYY" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">Date To</label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_to" class="form-control" placeholder="DD-MM-YYYY" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-2 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">&nbsp;</label>
                                <button class="btn btn-primary mb-2" type="button" id="btnSearch">
                                    <i class="fa fa-search-plus"></i> Search
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="ConsumptionAlert"></div>
    </div>
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-status bg-blue"></div>
            <div class="card-body">
                <div id="progress-loader" style="display:none;">
                    <div class="progress progress-sm mb-3">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-teal progress-bar-indeterminate"></div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tbl_internalConsumption" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                <th class="border-bottom-0 font-weight-semibold text-white">ID</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Branch</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Date</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Doctor Details</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Patient Details</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Item</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Qty</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">UoM</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Notes</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Status</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Posted</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th class="table_footer_align fs-17 font-weight-bold"><span class="text-right text-dark"> Total : &nbsp;</span></th>
                                <th class="table_footer_align fs-16 font-weight-semibold"></th>
                                <th class="table_footer_align font-weight-semibold"></th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Patient Details -->
<div class="modal fade overflow-auto" id="patient_details" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="patient_details_body">
        </div>
    </div>
</div>
<!-- End Modal Patient Details -->
<!-- Modal Doctor Details -->
<div class="modal fade overflow-auto" id="doctor_details" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="doctor_details_body">
        </div>
    </div>
</div>
<!-- End Modal Doctor Details -->
<!-- Modal Item Details -->
<div class="modal fade overflow-auto" id="ItemsHistory_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="size">
        <div class="modal-content" id="ItemsHistory_body">
        </div>
    </div>
</div>
<!-- End Modal Item Details -->

@section myScripts{
    <script type="text/javascript">
        //#region Page Load
        $(function () {
            // Focus on select2 Dropdown
            $(document).on('select2:open', () => {
                document.querySelector('.select2-search__field').focus();
            });

            $('#select_date_from').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;
                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });

            $('#select_date_to').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;
                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });

            $('#select_date_from').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });

            $("#select_date_from").bootstrapdatepicker("setDate", "today");

            $('#select_date_to').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });

            $("#select_date_to").bootstrapdatepicker("setDate", "tomorrow");

            load_branches();

            load_departments();

            load_doctors();

            load_patients();

            getStockInternalConsumption(0);
        });
        //#endregion

        //#region Advanced Filters
        var pageLoad = false;
        // Load Branches
        var load_branches = function () {
            $('#select_branch').SumoSelect({
                placeholder: 'Select Branch(es)',
                captionFormat: '{0} Branch(es) Selected',
                captionFormatAllSelected: 'All {0} Branches selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            var _url = "";

            if ("@emp_designation.ToString().Contains("Administrator")" == "True") {
                _url = "@Url.Action("GetBranches", "Employees", new { area = "Masters" })?empId=" + @empId.ToString();
            }
            else {
                _url = "@Url.Action("GetBranches", "Employees", new { area = "Masters" })?setid=" + @emp_branch.ToString();
            }

            $.ajax({
                url: _url,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    pageLoad = true;
                    $('#select_branch').html('');
                    $('#select_branch')[0].sumo.reload();

                    if ("@emp_designation.ToString().Contains("Administrator")" == "True") {
                        $.each(response, function (j) {
                            $('#select_branch')[0].sumo.add(response[j].id, response[j].text);
                            $('#select_branch')[0].sumo.selectItem(["@emp_branch.ToString()"]);
                        });
                    }
                    else {
                        $('#select_branch')[0].sumo.add(@emp_branch.ToString(), "@company.ToString()");
                        $('#select_branch')[0].sumo.selectItem(["@emp_branch.ToString()"]);
                    }
                    pageLoad = false;
                },
                error: function (xhr) {
                    console.log("Failed to Load Branch(es)! Error Message : " + xhr.statusText);
                }
            }).done(function () {
                $('#select_branch')[0].sumo.reload();
                load_rooms($("#select_branch").val());
                load_items();
            });
        }
        // Load Departments
        var load_departments = function () {
            $('#select_dept').SumoSelect({
                placeholder: 'Select Department(s)',
                captionFormat: '{0} Department(s) Selected',
                captionFormatAllSelected: 'All {0} Department(s) selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true,
                forceCustomRendering: true,
                triggerChangeCombined: false
            });

            $.ajax({
                url: '@Url.Action("GetDepartments", "AppointmentList", new { area = "Appointment" })',
                type: "GET",
                dataType: "JSON",
                async: false,
                success: function (response) {
                    $('#select_dept').html('');
                    $('#select_dept')[0].sumo.reload();

                    if ("@emp_designation.ToString()" === "Doctor")
                    {
                        $('#select_dept')[0].sumo.add(@emp_dept.ToString(), "@emp_department.ToString()");
                        $('#select_dept')[0].sumo.selectItem(["@emp_dept.ToString()"]);
                    }
                    else
                    {
                        $.each(response, function (j) {
                            $('#select_dept')[0].sumo.add(response[j].id, response[j].text);
                        });
                    }
                    $('#select_dept')[0].sumo.reload();
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                }
            });
        }
        // Load Doctors
        var load_doctors = function () {
            $("#select_doctor").SumoSelect({
                placeholder: 'Select Doctor(s)',
                captionFormat: '{0} Doctor(s) Selected',
                captionFormatAllSelected: 'All {0} Doctors selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true,
                forceCustomRendering: true,
                triggerChangeCombined: false
            });

            $('#select_doctor').html('');
            $('#select_doctor')[0].sumo.reload();
        }
        // On Departments select
        $('#select_dept').on('change', function (e) {
            if ($(this).val() != "" && $('#select_branch').val() != "") {

                var _data = {
                    "Departments": $('#select_dept').val(),
                    "Branches": $('#select_branch').val(),
                }

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetDoctorsByDepartment", "AppointmentList", new { area = "Appointment" })',
                    dataType: 'JSON',
                    data: _data,
                    success: function (response) {

                        $('#select_doctor').html('');
                        $('#select_doctor')[0].sumo.reload();

                        if ("@emp_designation.ToString()" === "Doctor") {
                            $('#select_doctor')[0].sumo.add(@empId.ToString(), "@emp_name.ToString()");
                            $('#select_doctor')[0].sumo.selectItem(["@empId.ToString()"]);
                        }
                        else {
                            $.each(response, function (j) {
                                $('#select_doctor')[0].sumo.add(response[j].id, response[j].text);
                            });
                        }
                        $('#select_doctor')[0].sumo.reload();
                    },
                    error: function (xhr) {
                        console.log("Failed! Error Message : " + xhr.statusText);
                    }
                });
            }
            else {
                $('#select_doctor').html('');
                $('#select_doctor')[0].sumo.reload();
            }
        });
        // On Branches select
        $('#select_branch').on('change', function () {
            if (!pageLoad) {

                if ($(this).val() != "" && $('#select_dept').val() != "") {

                    var _data = {
                        "Departments": $('#select_dept').val(),
                        "Branches": $('#select_branch').val(),
                    }

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetDoctorsByDepartment", "AppointmentList", new { area = "Appointment" })',
                        dataType: 'json',
                        data: _data,
                        success: function (response) {
                            $('#select_doctor').html('');
                            $('#select_doctor')[0].sumo.reload();

                            if ("@emp_designation.ToString()" === "Doctor") {
                                $('#select_doctor')[0].sumo.add(@empId.ToString(), "@emp_name.ToString()");
                                $('#select_doctor')[0].sumo.selectItem(["@empId.ToString()"]);
                            }
                            else {
                                $.each(response, function (j) {
                                    $('#select_doctor')[0].sumo.add(response[j].id, response[j].text);
                                });
                            }

                            $('#select_doctor')[0].sumo.reload();
                            load_rooms($("#select_branch").val());
                        },
                        error: function (xhr) {
                            console.log("Failed! Error Message : " + xhr.statusText);
                        }
                    });
                }
                else {
                    load_rooms($("#select_branch").val());
                    $('#select_doctor').html('');
                    $('#select_doctor')[0].sumo.reload();
                }
            }

        });
        // Load Rooms
        var load_rooms = function (app_branch) {
            $("#select_room").SumoSelect({
                placeholder: 'Select Room(s)',
                captionFormat: '{0} Room(s) Selected',
                captionFormatAllSelected: 'All {0} Rooms selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true,
                forceCustomRendering: true,
                triggerChangeCombined: false
            });

            if (app_branch != "")
            {
                var _data = {
                    "Rooms": app_branch
                }

                $.ajax({
                    url: '@Url.Action("GetRoomsByBranch", "AppointmentList", new { area = "Appointment" })',
                    type: "POST",
                    dataType: "JSON",
                    data: _data,
                    success: function (response) {

                        $('#select_room').html('');
                        $('#select_room')[0].sumo.reload();

                        $.each(response, function (j) {
                            $('#select_room')[0].sumo.add(response[j].id, response[j].text);
                            //$('#select_room')[0].sumo.selectItem([response[j].id]);
                        });

                        $('#select_room')[0].sumo.reload();
                    },
                    error: function (xhr) {
                        console.log("Failed! Error Message : " + xhr.statusText);
                    }
                });
            }
            else
            {
                $('#select_room').html('');
                $('#select_room')[0].sumo.reload();
            }
        }
        // Load Patients
        var load_patients = function () {
            $('#select_patient').select2({
                placeholder: 'Search Patient',
                width: '100%',
                allowClear: true,
                minimumInputLength: 3,
                escapeMarkup: function (markup) {
                    return markup;
                },
                ajax: {
                    url: '@Url.Action("GetPatients", "AppointmentList", new { area = "Appointment" })',
                    dataType: 'json',
                    delay: 250,
                    data: function (query) {
                        return {
                            query: query.term,
                            type: 0
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    },
                    cache: true
                }
            });
        }
        // Load Items
        var load_items = function () {
            $("#select_item").select2({
                placeholder: 'Search any Item',
                width: '100%',
                allowClear: true,
                minimumInputLength: 3,
                escapeMarkup: function (markup) {
                    return markup;
                },
                ajax: {
                    url: '@Url.Action("SearchItems", "InternalStockComsumptionReport", new { area = "Reports" })',
                    dataType: 'json',
                    delay: 250,
                    data: function (query) {
                        return {
                            query: query.term,
                            branch: $("#select_branch").val()[0],
                            type: 'withQty'
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    },
                    cache: true
                }
            });
        }
        //#endregion

        //#region Search on Button Click
        $("#btnSearch").click(function (e) {
            e.preventDefault();

            let isValid = true;
            var from_date = moment($('#select_date_from').val().trim(), "DD-MMMM-YYYY");
            var to_date = moment($('#select_date_to').val().trim(), "DD-MMMM-YYYY");

            // Check if Date From is a valid Date
            if (from_date != null && from_date != 0 && from_date != "" && from_date != undefined) {
                if (!from_date.isValid()) {
                    isValid = false;
                    e.stopPropagation();

                    return $.growl.error({
                        title: "Error",
                        message: "Invalid From Date!"
                    });
                }
            }
            // Check if Date To is a valid Date
            if (to_date != null && to_date != 0 && to_date != "" && to_date != undefined) {
                if (!to_date.isValid()) {
                    isValid = false;
                    e.stopPropagation();

                    return $.growl.error({
                        title: "Error",
                        message: "Invalid To Date!"
                    });
                }
            }

            if ((from_date != null && from_date != 0 && from_date != "" && from_date != undefined) && (to_date != null && to_date != 0 && to_date != "" && to_date != undefined)) {
                if (from_date.isValid() && to_date.isValid()) {
                    if (to_date.diff(from_date, 'days') < 0) {
                        isValid = false;
                        var index = [];

                        index.push("select_date_from");
                        index.push("select_date_to");

                        $.each(index, function (i, v) {
                            if (index[i] != null && index[i] != "") {
                                var elem = $("#" + index[i]);
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                }
                                else {
                                    $(elem).addClass(" is-invalid");
                                }

                                setTimeout(function () {
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                    }
                                    else {
                                        $(elem).removeClass("is-invalid");
                                    }
                                }, 5000);
                            }
                        });

                        e.stopPropagation();

                        return $.growl.error({
                            title: "Error!",
                            message: "Filter From Date should be less than To Date!"
                        });
                    }
                }
            }

            if (isValid) {
                getStockInternalConsumption(1);
            }
        });
        //#endregion

        //#region Load Stock Internal Consumption Data
        function getStockInternalConsumption(search_type) {
            var _data = {
                "search_type": search_type,
                "select_branch": $('#select_branch').val().toString(),
                "select_dept": $('#select_dept').val().toString(),
                "select_doctor": $('#select_doctor').val().toString(),
                "select_room": $('#select_room').val().toString(),
                "select_patient": $('#select_patient').val(),
                "select_item": $('#select_item').val(),
                "select_date_from": $('#select_date_from').val(),
                "select_date_to": $('#select_date_to').val()
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetInternalStockComsumption", "InternalStockComsumptionReport", new { area = "Reports"})",
                dataType: 'json',
                data: _data,
                beforeSend: function () {
                    $('#progress-loader').show();
                },
                success: function (response) {
                    if (response.isAuthorized) {
                        var table;

                        if ($.fn.dataTable.isDataTable('#tbl_internalConsumption')) {
                            table = $('#tbl_internalConsumption').DataTable();
                            table.clear();
                            table.rows.add(response.message).draw();
                        }
                        else {
                            BindDataTable(response.message);
                        }
                    }

                    $('#progress-loader').hide();
                },
                error: function (xhr) {
                    console.log(xhr);
                    $('#progress-loader').hide();
                    $('#RowsCountToast').hide();
                }
            });
        }
        //#endregion

        //#region Bind Datatable
        var BindDataTable = function (response) {
            var table = $("#tbl_internalConsumption").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "mData": "titId",
                    },
                    {
                        "mData": "set_company"
                    },
                    {
                        "mData": "app_fdate",
                        "render": function (app_fdate, type, full, meta) {
                            if (type === 'display' || type === 'filter') {
                                moment(app_fdate).format("DD-MM-YYYY");
                            }

                            return moment(app_fdate).format("YYYY-MM-DD");
                        }
                    },
                    {
                        "mData": "emp_name",
                        "render": function (emp_name, type, full, meta) {
                            return '<a class="font-weight-semibold text-capitalize fs-14" onclick="DoctorDetails(\'' + full.tit_doctor + '\',\'' + emp_name + '\')"><span>  ' + emp_name + '</span></a>';
                        }
                    },
                    {
                        "mData": "app_patient",
                        "render": function (app_patient, type, full, meta) {
                            return '<a class="text-dark font-weight-semibold text-capitalize fs-14" onclick="PatientDetails(\'' + app_patient + '\',\'' + full.pat_name + '\')"><span>' + full.pat_name + '</span></a>';
                        }
                    },
                    {
                        "mData": "tit_item",
                        "className": "td_max_width text-wrap text-justify",
                        "render": function (tit_item, type, full, meta) {
                            return '<a class="text-dark font-weight-semibold" onclick="ItemsHistory(\'' + full.tit_itemId + '\',\'' + full.tit_item_code + '\',\'' + full.tit_branch + '\')">' + tit_item +'</a>';
                        }
                    },
                    {
                        "mData": "tit_qty",
                        "className": 'text-right',
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "mData": "tit_uom"
                    },
                    {
                        "mData": "tit_notes",
                        "className": "td_max_width text-wrap"
                    },
                    {
                        "mData": "tit_status"
                    },
                    {
                        "mData": "tit_status2",
                        "render": function (data) {
                            if (data == "Posted")
                                return `<span class="text-success fs-14 font-weight-semibold">${data}</span>`;
                            else
                                return `<span class="text-warning fs-14 font-weight-semibold">${data}</span>`;
                        }
                    }
                ],
                order: [[1, 'desc']],
                "aoColumnDefs": [
                    {
                        "aTargets": [0],
                        "orderable": false,
                        "searchable": false,
                        "className": "select-checkbox text-center inbox-small-cells",
                        'checkboxes': {
                            'selectRow': true
                        }
                    },

                ],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Internal Stock Comsumption Report',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Internal Stock Comsumption Report',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Internal Stock Comsumption Report',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Internal Stock Comsumption Report',
                        footer: 'true',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
                        }
                    }
                ],
                language: {
                    searchPlaceholder: 'Search...',
                    zeroRecords: "No Record(s) Match",
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Code / Date / Branch / Item </span>',
                    scrollX: "100%",
                    lengthMenu: '_MENU_',
                },
                "drawCallback": function () {
                    $("#tbl_internalConsumption tr").each(function () {
                        if ($(this).find("td:eq(9)").text() === "Deleted" || $(this).find("td:eq(10)").text().trim() === "Posted") {
                            $($(this)).find("td:eq(0)").find("input[type='checkbox']").remove();
                        }
                    });
                },
                footerCallback: function (row, data, start, end, display) {
                    var api = this.api();

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                    };
                    var numFormat = $.fn.dataTable.render.number('\,', '.', 2, '').display;

                    var _total = api.column(6).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(6).footer()).html(numFormat(_total));
                }
            });

            table.buttons().container().appendTo('#tbl_internalConsumption_wrapper .col-md-6:eq(0)');
        }
        //#endregion

        //#region View Patient Details
        var isDetailViewClicked = false;
        var PatientDetails = function (patId, pat_name) {
            if (!isDetailViewClicked) {
                isDetailViewClicked = true;

                $.ajax({
                    type: "GET",
                    url: "@Url.Action("PatientDetail", "Patient", new { area = "Patient" })?patId=" + patId + "&pat_name=" + pat_name,
                    contentType: "application/json",
                    dataType: "html",
                    success: function (response) {
                        $("#patient_details_body").html(response);
                        $("#patient_details").modal("show");
                        isDetailViewClicked = false;
                    },
                    error: function (xhr) {
                        console.log("Error :" + xhr.statusText);
                        isDetailViewClicked = false;
                    }
                });
            }
        }
        //#endregion

        //#region View Doctor Details
        var DoctorDetails = function (empId, emp_name) {
            if (!isDetailViewClicked) {
                isDetailViewClicked = true;

                $.ajax({
                    type: "GET",
                    url: "@Url.Action("DoctorDetails", "Employees", new { area = "Masters" })?empId=" + empId + "&emp_name=" + emp_name,
                    contentType: "application/json",
                    dataType: "html",
                    success: function (response) {
                        $("#doctor_details_body").html(response);
                        $("#doctor_details").modal("show");

                        isDetailViewClicked = false;
                    },
                    error: function (xhr) {
                        console.log("Error :" + xhr.statusText);
                        isDetailViewClicked = false;
                    }
                });
            }
        }
        //#endregion

        //#region Item Deatil View
        var ItemsHistory = function (itemId, item_code, item_branch) {
            if (!isDetailViewClicked) {
                isDetailViewClicked = true;

                $.ajax({
                    type: "GET",
                    url: "@Url.Action("ItemHistory", "CentralStore", new { area = "MaterialManagement" })?itemId=" + itemId + "&item_code=" + item_code + "&item_branch=" + item_branch,
                    contentType: "application/json",
                    dataType: "html",
                    success: function (data) {
                        $("#ItemsHistory_body").html(data);
                        $("#ItemsHistory_modal").modal("show");
                        isDetailViewClicked = false;
                    },
                    error: function (xhr) {
                        console.log(xhr);
                        isDetailViewClicked = false;
                    }
                });
            }
        };
        //#endregion

        //#region Post Internal Stock Consumption To Account
        $('#btnPostAccount').click(function () {
            var table = $("#tbl_internalConsumption").DataTable();
            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));
            if (rows.length > 0) {
                Swal.fire({
                    title: "Are you sure you want to Post ?",
                    text: "This action will post the selected Entries to chart of account!",
                    icon: "question",
                    showCancelButton: !0,
                    confirmButtonText: 'Yes! I Confirm',
                    cancelButtonText: 'No! Cancel Please',
                    confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
                }).then(function (t) {
                    if (t.value) {
                        var _Ids = "";
                        var status_count = 0
                        $.each(rows, function (index, rowId) {
                            var _data = table.row(rowId).data();
                            if (_data.tit_status == "Used") {
                                if (index == 0)
                                    _Ids = _data.titId;
                                else
                                    _Ids += "," + _data.titId;
                            }
                            else {
                                status_count += 1
                            }
                        });
                        if (_Ids === null || _Ids === undefined || _Ids.length <= 0) {
                            if (status_count > 0) {
                                Swal.fire({
                                    title: "Alert!",
                                    text: "Selection Entry/Entries status not changed to used!",
                                    icon: "info",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                            else {
                                Swal.fire({
                                    title: "Alert!",
                                    text: "Row Selection Error. Please Refresh Page And Try Again!",
                                    icon: "info",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        }
                        else {
                            PostToAccount(_Ids);
                        }

                    }
                });
            }
            else {
                Swal.fire({
                    title: "Alert!",
                    text: "Please select at least one entry to post!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                });
            }
        });

        var PostToAccount = function (titId) {

            $.ajax({
                url: "@Url.Action("PostInternalStockConsumptionToAccount", "InternalStockComsumptionReport", new { area = "Reports" })?data=" + titId,
                type: "POST",
                dataType: "JSON",
                success: function (data) {
                    if (data.isUpdated) {
                        Swal.fire({
                            title: "Success!",
                            text: "Posted Successfully!!",
                            icon: "success",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                        });
                        getStockInternalConsumption(1);
                    }
                    else {
                        Swal.fire({
                            title: "Error!",
                            text: data.message,
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                        });
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    Swal.fire({
                        title: "Error!",
                        text: "Failed to Post to Account! Please refresh the Page and Try Again.",
                        icon: "error",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                    })
                }
            });
        };
        //#endregion

        //#region UI/UX Functions
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
        function Error_Timeout(_id) {
            setTimeout(function () {
                $(".has-error").removeClass("has-error");
                $(".error").removeClass("error");
                $("#" + _id + "-error").text("");
            }, 4200);
        }
        //#endregion
    </script>
}