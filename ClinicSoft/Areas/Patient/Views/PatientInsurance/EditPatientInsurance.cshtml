@model BusinessEntities.Patient.PatientInsuranceDetails
<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold" id="exampleModalLongTitle">Update Insurance for <strong class="text-secondary" id="pat_info"></strong></h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
</div>
<div class="modal-body p-4">
    <form id="form_Edit_Patient_Insurance" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12 mb-4 font-weight-semibold">
                <span class="text-danger" style="font-size:smaller">Required fields are marked with *</span>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">TPA<span class="text-danger">*</span></label>
                    @Html.HiddenFor(model => model.pi_patient, new { @id = "upi_patient" })
                    @Html.HiddenFor(model => model.piId, new { @id = "upiId" })
                    @Html.DropDownListFor(model => model.pi_insurance, new List<SelectListItem> { }, "Please Select", new { @class = "form-select  mb-2 select2", @id = "upi_insurance" })<br />
                </div>
            </div>
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">Payer<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(model => model.pi_payer, new List<SelectListItem> { }, "Please Select", new { @class = "form-select  mb-2 select2 ", @id = "upi_payer" })<br />
                </div>
            </div>
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">Network<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(model => model.pi_scheme, new List<SelectListItem> { }, "Please Select", new { @class = "form-select  mb-2 select2 ", @id = "upi_scheme" })<br />
                </div>
            </div>
            <div class="col-sm-1 col-lg-1">
                <div class="form-group">
                    <label class="form-label">Overall Limit</label>
                    @Html.TextBoxFor(model => model.pi_limit, new { @class = "form-control mb-2", @placeholder = "Ex:0.00", @id = "upi_limit" })
                </div>
            </div>
            <div class="col-sm-2 col-lg-2">
                <div class="form-group">
                    <label class="form-label">Ceiling Amount</label>
                    @Html.TextBoxFor(model => model.pi_ceiling, new { @class = "form-control mb-2", @placeholder = "Ex:0.00", @id = "upi_ceiling" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">Insurance Card Number<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(model => model.pi_insno, new { @class = "form-control mb-2", @placeholder = "Ex:INS123456", @id = "upi_insno" })
                </div>
            </div>
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">Policy Number<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(model => model.pi_polocyno, new { @class = "form-control mb-2", @placeholder = "Ex:PLS123456", @id = "upi_polocyno" })
                </div>
            </div>
            <div class="col-sm-3 col-md-3">
                <div class="form-group">
                    <label class="form-label">Start Date<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(model => model.pi_idate, new { @class = "form-control mb-2", @placeholder = "YYYY/MM/DD", @id = "upi_idate" })
                </div>
            </div>
            <div class="col-sm-3 col-md-3">
                <div class="form-group">
                    <label class="form-label">Expiry Date<span class="text-danger">*</span></label>
                    @Html.TextBoxFor(model => model.pi_edate, new { @class = "form-control mb-2", @placeholder = "YYYY/MM/DD", @id = "upi_edate" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">General Consultation Deduction </label>
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.pi_cded, new { @class = "form-control mb-2", @placeholder = "Ex:0.00", @id = "upi_cded" })
                        <div class="input-group-append">
                            @Html.DropDownListFor(model => model.pi_cded_type, new List<SelectListItem>
                            {
                                new SelectListItem{ Value="Fixed", Text="Fixed", Selected=true},
                                new SelectListItem{ Value="%", Text="%"}
                            }, "Please Select", new { @class = "form-select select2", @id = "upi_cded_type", @onchange = "$('#upi_cded').val('0');$('#upi_cded_limit').val('0');" })
                            @Html.TextBoxFor(model => model.pi_cded_limit, new { @class = "form-control mb-2", @placeholder = "Ex:0.00", @id = "upi_cded_limit" })
                        </div>
                    </div>
                    <div class="valid-feedback" style="color: #3904dc; display: block; ">
                        Amount - Type - Limit
                    </div>
                </div>
            </div>
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">Dental Consultation Deduction </label>
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.pi_dded, new { @class = "form-control mb-2", @placeholder = "Ex:0.00", @id = "upi_dded" })
                        <div class="input-group-append">
                            @Html.DropDownListFor(model => model.pi_dded_type, new List<SelectListItem>
                            {
                                new SelectListItem{ Value="Fixed", Text="Fixed", Selected=true},
                                new SelectListItem{ Value="%", Text="%"}
                            }, "Please Select", new { @class = "form-select select2", @id = "upi_dded_type", @onchange = "$('#upi_dded').val('0');$('#upi_dded_limit').val('0');" })
                            @Html.TextBoxFor(model => model.pi_dded_limit, new { @class = "form-control mb-2", @placeholder = "Ex:0.00", @id = "upi_dded_limit" })
                        </div>
                    </div>
                    <div class="valid-feedback" style="color: #3904dc; display: block; ">
                        Amount - Type - Limit
                    </div>
                </div>
            </div>
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">Specialist Consultation Deduction </label>
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.pi_ip_dcopay, new { @class = "form-control mb-2", @placeholder = "Ex:0.00", @id = "upi_ip_dcopay" })
                        <div class="input-group-append">
                            @Html.DropDownListFor(model => model.pi_ip_dcopay_type, new List<SelectListItem>
                            {
                                new SelectListItem{ Value="Fixed", Text="Fixed", Selected=true},
                                new SelectListItem{ Value="%", Text="%"}
                            }, "Please Select", new { @class = "form-select select2", @id = "upi_ip_dcopay_type", @onchange = "$('#upi_ip_dcopay').val('0');$('#upi_ip_dcopay_limit').val('0');" })
                            @Html.TextBoxFor(model => model.pi_ip_dcopay_limit, new { @class = "form-control mb-2", @placeholder = "Ex:0.00", @id = "upi_ip_dcopay_limit" })
                        </div>
                    </div>
                    <div class="valid-feedback" style="color: #3904dc; display: block; ">
                        Amount - Type - Limit
                    </div>
                </div>
            </div>
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">Routine Dental Co.Payment </label>
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.pi_dcopay, new { @class = "form-control mb-2", @placeholder = "Ex:0.00", @id = "upi_dcopay" })
                        <div class="input-group-append">
                            @Html.DropDownListFor(model => model.pi_dcopay_type, new List<SelectListItem>
                            {
                                new SelectListItem{ Value="Fixed", Text="Fixed", Selected=true},
                                new SelectListItem{ Value="%", Text="%"}
                            }, "Please Select", new { @class = "form-select select2", @id = "upi_dcopay_type", @onchange = "$('#upi_dcopay').val('0');$('#upi_dcopay_limit').val('0');" })
                            @Html.TextBoxFor(model => model.pi_dcopay_limit, new { @class = "form-control mb-2", @placeholder = "Ex:0.00", @id = "upi_dcopay_limit" })
                        </div>
                    </div>
                    <div class="valid-feedback" style="color: #3904dc; display: block; ">
                        Amount - Type - Limit
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">Co.Payment </label>
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.pi_copay, new { @class = "form-control", @placeholder = "Ex:0.00", @id = "upi_copay" })
                        <div class="input-group-append">
                            @Html.DropDownListFor(model => model.pi_copay_type, new List<SelectListItem>
                            {
                                new SelectListItem{ Value="Fixed", Text="Fixed", Selected=true},
                                new SelectListItem{ Value="%", Text="%"}
                            }, "Please Select", new { @class = "form-select select2", @id = "upi_copay_type", @onchange = "$('#upi_copay').val('0');$('#upi_copay_limit').val('0');" })
                            @Html.TextBoxFor(model => model.pi_copay_limit, new { @class = "form-control", @placeholder = "Ex:0.00", @id = "upi_copay_limit" })
                        </div>
                    </div>
                    <div class="valid-feedback" style="color: #3904dc; display: block; ">
                        Amount - Type - Limit
                    </div>
                </div>
            </div>
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">High Prof Dental Co.Pay </label>
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.pi_hdcopay, new { @class = "form-control", @placeholder = "Ex:0.00", @id = "upi_hdcopay" })
                        <div class="input-group-append">
                            @Html.DropDownListFor(model => model.pi_hdcopay_type, new List<SelectListItem>
                            {
                                new SelectListItem{ Value="Fixed", Text="Fixed", Selected=true},
                                new SelectListItem{ Value="%", Text="%"}
                            }, "Please Select", new { @class = "form-select select2", @id = "upi_hdcopay_type", @onchange = "$('#upi_hdcopay').val('0');$('#upi_hdcopay_limit').val('0');" })
                            @Html.TextBoxFor(model => model.pi_hdcopay_limit, new { @class = "form-control", @placeholder = "Ex:0.00", @id = "upi_hdcopay_limit" })
                        </div>
                    </div>
                    <div class="valid-feedback" style="color: #3904dc; display: block; ">
                        Amount - Type - Limit
                    </div>
                </div>
            </div>
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">Pharmacy Deduction</label>
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.pi_pded, new { @class = "form-control", @placeholder = "Ex:0.00", @id = "upi_pded" })
                        <div class="input-group-append">
                            @Html.DropDownListFor(model => model.pi_pded_type, new List<SelectListItem>
                            {
                                new SelectListItem{ Value="Fixed", Text="Fixed", Selected=true},
                                new SelectListItem{ Value="%", Text="%"}
                            }, "Please Select", new { @class = "form-select select2", @id = "upi_pded_type", @onchange = "$('#upi_pded').val('0');$('#upi_pded_limit').val('0');" })
                            @Html.TextBoxFor(model => model.pi_pded_limit, new { @class = "form-control", @placeholder = "Ex:0.00", @id = "upi_pded_limit" })
                        </div>
                    </div>
                    <div class="valid-feedback" style="color: #3904dc; display: block; ">
                        Amount - Type - Limit
                    </div>
                </div>
            </div>
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">Lab Deduction </label>
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.pi_ided, new { @class = "form-control", @placeholder = "Ex:0.00", @id = "upi_ided" })
                        <div class="input-group-append">
                            @Html.DropDownListFor(model => model.pi_ided_type, new List<SelectListItem>
                            {
                                new SelectListItem{ Value="Fixed", Text="Fixed", Selected=true},
                                new SelectListItem{ Value="%", Text="%"}
                            }, "Please Select", new { @class = "form-select select2", @id = "upi_ided_type", @onchange = "$('#upi_ided').val('0');$('#upi_ided_limit').val('0');" })
                            @Html.TextBoxFor(model => model.pi_ided_limit, new { @class = "form-control", @placeholder = "Ex:0.00", @id = "upi_ided_limit" })
                        </div>
                    </div>
                    <div class="valid-feedback" style="color: #3904dc; display: block; ">
                        Amount - Type - Limit
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">Meternity Deduction</label>
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.pi_mded, new { @class = "form-control", @placeholder = "Ex:0.00", @id = "upi_mded" })
                        <div class="input-group-append">
                            @Html.DropDownListFor(model => model.pi_mded_type, new List<SelectListItem>
                            {
                                new SelectListItem{ Value="Fixed", Text="Fixed", Selected=true},
                                new SelectListItem{ Value="%", Text="%"}
                            }, "Please Select", new { @class = "form-select select2", @id = "upi_mded_type", @onchange = "$('#upi_mded').val('0');$('#upi_mded_limit').val('0');" })
                            @Html.TextBoxFor(model => model.pi_mded_limit, new { @class = "form-control", @placeholder = "Ex:0.00", @id = "upi_mded_limit" })
                        </div>
                    </div>
                    <div class="valid-feedback" style="color: #3904dc; display: block; ">
                        Amount - Type - Limit
                    </div>
                </div>
            </div>
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">Radiology Deduction</label>
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.pi_rded, new { @class = "form-control", @placeholder = "Ex:0.00", @id = "upi_rded" })
                        <div class="input-group-append">
                            @Html.DropDownListFor(model => model.pi_rded_type, new List<SelectListItem>
                            {
                                new SelectListItem{ Value="Fixed", Text="Fixed", Selected=true},
                                new SelectListItem{ Value="%", Text="%"}
                            }, "Please Select", new { @class = "form-select select2", @id = "upi_rded_type", @onchange = "$('#upi_rded').val('0');$('#upi_rded_limit').val('0');" })
                            @Html.TextBoxFor(model => model.pi_rded_limit, new { @class = "form-control", @placeholder = "Ex:0.00", @id = "upi_rded_limit" })
                        </div>
                    </div>
                    <div class="valid-feedback" style="color: #3904dc; display: block; ">
                        Amount - Type - Limit
                    </div>
                </div>
            </div>
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">
                        Insurance Card Front
                        @if (!string.IsNullOrEmpty(Model.pi_image))
                        {
                            <a href="/Patient/PatientInsurance/DownloadFile?type=ins_front&id=@Model.piId">
                                <i class="fa fa-cloud-download text-green"></i>
                            </a>

                            <span style="cursor:pointer;" onclick="view_doc('ins_front',@Model.piId)">
                                <i class="fa fa-search-plus text-blue"></i>
                            </span>
                        }
                    </label>
                    <div class="input-group file-browser">
                        @Html.TextBoxFor(model => model.pi_image, new { @class = "form-control browse-file", @placeholder = "Choose", @id = "upi_image", @readonly = "readonly" })
                        <label class="input-group-text btn btn-primary">
                            Browse <input type="file" name="upi_image" class="file-browserinput" style="display: none;" onchange="document.getElementById('upi_image').value = this.value.split('\\').pop().split('/').pop()">
                        </label>
                    </div>
                </div>
            </div>
            <div class="col-sm-3 col-lg-3">
                <div class="form-group">
                    <label class="form-label">
                        Insurance Card Back
                        @if (!string.IsNullOrEmpty(Model.pi_image2))
                        {
                            <a href="/Patient/PatientInsurance/DownloadFile?type=ins_back&id=@Model.piId">
                                <i class="fa fa-cloud-download text-green"></i>
                            </a>

                            <span style="cursor:pointer;" onclick="view_doc('ins_back',@Model.piId)">
                                <i class="fa fa-search-plus text-blue"></i>
                            </span>
                        }
                    </label>
                    <div class="input-group file-browser">
                        @Html.TextBoxFor(model => model.pi_image2, new { @class = "form-control browse-file", @placeholder = "Choose", @id = "upi_image2", @readonly = "readonly" })
                        <label class="input-group-text btn btn-primary">
                            Browse <input type="file" name="upi_image2" class="file-browserinput" style="display: none;" onchange="document.getElementById('upi_image2').value = this.value.split('\\').pop().split('/').pop()">
                        </label>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div id="error"></div>
            <div class="col-sm-12 col-lg-12 text-center">
                <div class="btn-list btn-animation">
                    <button type="submit" class="btn btn-warning" id="btn_Edit_Patient_Insurance">Save Changes</button>
                    <button type="button" class="btn btn-outline-dark" id="btn_Edit_Reset_Insurance">Reset</button>
                    <button type="button" class="btn btn-outline-danger me-1" data-bs-dismiss="modal">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

<!-- Modal View Document -->
<div class="modal fade" id="view_doc_modal" data-bs-backdrop="static" data-bs-keyboard="false" data-modal-from="patient" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" id="size">
        <div class="modal-content" id="view_doc_modal_body">
        </div>
    </div>
</div>
<!-- End Modal View Document-->

<script type="text/javascript">

    //#region Document Load
    $(function () {
        pi_patient();

        $("#upi_insurance").select2({
            placeholder: 'Select TPA',
            width: '100%',
            dropdownParent: $('#form_Edit_Patient_Insurance'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#upi_payer").select2({
            placeholder: 'Select Payer',
            width: '100%',
            dropdownParent: $('#form_Edit_Patient_Insurance'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $("#upi_scheme").select2({
            placeholder: 'Select Network',
            width: '100%',
            dropdownParent: $('#form_Edit_Patient_Insurance'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        $('#upi_idate').bootstrapdatepicker({
            format: "dd-MM-yyyy",
            viewMode: "date",
            todayHighlight: true,
            autoclose: true,
            multidate: false,
            multidateSeparator: "-"
        });

        $("#upi_idate").bootstrapdatepicker("setDate", moment("@Model.pi_idate").format("DD-MMMM-YYYY"));

        $('#upi_edate').bootstrapdatepicker({
            format: "dd-MM-yyyy",
            viewMode: "date",
            todayHighlight: true,
            autoclose: true,
            multidate: false,
            multidateSeparator: "-"
        });

        $("#upi_edate").bootstrapdatepicker("setDate", moment("@Model.pi_edate").format("DD-MMMM-YYYY"));

        $("#upi_cded_type").select2({
            placeholder: 'Select Type',
            width: '100%',
            dropdownParent: $('#form_Edit_Patient_Insurance')
        });

        $("#upi_dded_type").select2({
            placeholder: 'Select Type',
            width: '100%',
            dropdownParent: $('#form_Edit_Patient_Insurance')
        });

        $("#upi_ip_dcopay_type").select2({
            placeholder: 'Select Type',
            width: '100%',
            dropdownParent: $('#form_Edit_Patient_Insurance')
        });

        $("#upi_dcopay_type").select2({
            placeholder: 'Select Type',
            width: '100%',
            dropdownParent: $('#form_Edit_Patient_Insurance')
        });

        $("#upi_copay_type").select2({
            placeholder: 'Select Type',
            width: '100%',
            dropdownParent: $('#form_Edit_Patient_Insurance')
        });

        $("#upi_hdcopay_type").select2({
            placeholder: 'Select Type',
            width: '100%',
            dropdownParent: $('#form_Edit_Patient_Insurance')
        });

        $("#upi_pded_type").select2({
            placeholder: 'Select Type',
            width: '100%',
            dropdownParent: $('#form_Edit_Patient_Insurance')
        });

        $("#upi_ided_type").select2({
            placeholder: 'Select Type',
            width: '100%',
            dropdownParent: $('#form_Edit_Patient_Insurance')
        });

        $("#upi_mded_type").select2({
            placeholder: 'Select Type',
            width: '100%',
            dropdownParent: $('#form_Edit_Patient_Insurance')
        });

        $("#upi_rded_type").select2({
            placeholder: 'Select Type',
            width: '100%',
            dropdownParent: $('#form_Edit_Patient_Insurance')
        });



        load_items();

        validation();
    });
    //#endregion Document Load

    //#region Patient Load for Insurance
    var pi_patient = function () {
        console.log(@Model.pi_patient);
        if (@Model.pi_patient > 0) {
            $.ajax({
                url: '@Url.Action("GetPatientInfo", "PatientInsurance", new { area = "Patient" })?patId=' + @Model.pi_patient,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    $("#pi_patient").val(@Model.pi_patient);
                    $("#pat_info").html(response);
                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr);
                }
            });
        }
        else {
            let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                "<div class='alert alert-danger' role='alert'>" +
                "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                "<strong>There is no patient is selected for update current insurance.. Please try again...&nbsp;</strong><br/><ul>";


            html += "</ul></div></div>";

            $("#error").html(html);
        }
    }
    //#endregion Patient Load for Insurance

    //#region Loading Items
    var load_items = function () {
        load_insurance_companies(0);
        load_insurance_payers();
        load_insurance_networks();
    }
    //#endregion Page Load

    //#region load insurance companies
    var load_insurance_companies = function (icId) {
        $.ajax({
            url: '@Url.Action("GetPatient_InsuranceTPA", "PatientInsurance", new { area = "Patient" })?icId=' + icId,
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {

                $('#upi_insurance').empty();
                var _data = response;
                if (_data.length > 0) {
                    $.each(response, function (j) {
                        var newOption = new Option(response[j].Text, response[j].Value, (parseInt(response[j].Value) === @Model.pi_insurance) ? true : false, (parseInt(response[j].Value) === @Model.pi_insurance) ? true : false);
                        $('#upi_insurance').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
                alert(xhr);
            }
        });
    };
    //#endregion load insurance companies

    //#region load insurance payers
    var load_insurance_payers = function () {
        $.ajax({
            url: '@Url.Action("GetPatient_InsurancePayers", "PatientInsurance", new { area = "Patient" })?ip_ins=' + $('#upi_insurance').val(),
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {

                $('#upi_payer').empty();
                var _data = response;
                if (_data.length > 0) {
                    $.each(response, function (j) {
                        var newOption = new Option(response[j].Text, response[j].Value, (parseInt(response[j].Value) === @Model.pi_payer) ? true : false, (parseInt(response[j].Value) === @Model.pi_payer) ? true : false);
                        $('#upi_payer').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
                alert(xhr);
            }
        });
    };
    //#endregion load insurance payers

    //#region load insurance networks
    var load_insurance_networks = function () {
        $.ajax({
            url: '@Url.Action("GetPatient_InsuranceNetworks", "PatientInsurance", new { area = "Patient" })?is_icId=' + $('#upi_insurance').val(),
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {

                $('#upi_scheme').empty();
                var _data = response;
                if (_data.length > 0) {
                    $.each(response, function (j) {
                        var newOption = new Option(response[j].Text, response[j].Value, (parseInt(response[j].Value) === @Model.pi_scheme) ? true : false, (parseInt(response[j].Value) === @Model.pi_scheme) ? true : false);
                        $('#upi_scheme').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
                alert(xhr);
            }
        });
    };
    //#endregion load insurance networks

    //#region Insurance Change Event
    $('#upi_insurance').on('select2:select', function (e) {
        var data = e.params.data;
        console.log(data);

        load_insurance_payers();
        load_insurance_networks();
    });
    //#endregion Insurance Change Event

    //#region validation initialization
    var validation = function () {
        $('#upi_idate').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                return false;

            }
            else {
                if (e.target.value.length >= 18)
                    return false;
            }
        });

        $('#upi_edate').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                return false;

            }
            else {
                if (e.target.value.length >= 18)
                    return false;
            }
        });


        $('#upi_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#upi_ceiling').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#upi_cded').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }
            else {
                if ($("#upi_cded_type").val() == "%") {
                    if (parseFloat(e.target.value) >= 99)
                        return false;
                }
                else {
                    if (parseFloat(e.target.value) >= 999)
                        return false;
                }
            }
        });

        $('#upi_cded_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#upi_dded').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }
            else {
                if ($("#upi_dded_type").val() == "%") {
                    if (parseFloat(e.target.value) >= 99)
                        return false;
                }
                else {
                    if (parseFloat(e.target.value) >= 999)
                        return false;
                }
            }
        });

        $('#upi_dded_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#upi_ip_dcopay').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }
            else {
                if ($("#upi_ip_dcopay_type").val() == "%") {
                    if (parseFloat(e.target.value) >= 99)
                        return false;
                }
                else {
                    if (parseFloat(e.target.value) >= 999)
                        return false;
                }
            }
        });

        $('#upi_ip_dcopay_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#upi_dcopay').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }
            else {
                if ($("#upi_dcopay_type").val() == "%") {
                    if (parseFloat(e.target.value) >= 99)
                        return false;
                }
                else {
                    if (parseFloat(e.target.value) >= 999)
                        return false;
                }
            }
        });

        $('#upi_dcopay_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#upi_copay').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }
            else {
                if ($("#upi_copay_type").val() == "%") {
                    if (parseFloat(e.target.value) >= 99)
                        return false;
                }
                else {
                    if (parseFloat(e.target.value) >= 999)
                        return false;
                }
            }
        });

        $('#upi_copay_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#upi_hdcopay').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }
            else {
                if ($("#upi_hdcopay_type").val() == "%") {
                    if (parseFloat(e.target.value) >= 99)
                        return false;
                }
                else {
                    if (parseFloat(e.target.value) >= 999)
                        return false;
                }
            }
        });

        $('#upi_hdcopay_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#upi_pded').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }
            else {
                if ($("#upi_pded_type").val() == "%") {
                    if (parseFloat(e.target.value) >= 99)
                        return false;
                }
                else {
                    if (parseFloat(e.target.value) >= 999)
                        return false;
                }
            }
        });

        $('#upi_pded_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#upi_ided').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }
            else {
                if ($("#upi_ided_type").val() == "%") {
                    if (parseFloat(e.target.value) >= 99)
                        return false;
                }
                else {
                    if (parseFloat(e.target.value) >= 999)
                        return false;
                }
            }
        });

        $('#upi_ided_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#upi_mded').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }
            else {
                if ($("#upi_mded_type").val() == "%") {
                    if (parseFloat(e.target.value) >= 99)
                        return false;
                }
                else {
                    if (parseFloat(e.target.value) >= 999)
                        return false;
                }
            }
        });

        $('#upi_mded_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $('#upi_rded').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }
            else {
                if ($("#upi_rded_type").val() == "%") {
                    if (parseFloat(e.target.value) >= 99)
                        return false;
                }
                else {
                    if (parseFloat(e.target.value) >= 999)
                        return false;
                }
            }
        });

        $('#upi_rded_limit').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });

        $.validator.addMethod('non_cash', function (value) {
            var pi_insurance = $("#upi_insurance").val();

            if (pi_insurance == 1)
            {
                return true;
            }
            else
            {
                if (value == "") {
                    return false;
                }
                else {
                    return true;
                }
            }
        }, '');

        $("#form_Edit_Patient_Insurance").validate({
            focusInvalid: true,
            rules:
            {
                "pi_insurance": {
                    required: true
                },
                "pi_payer": {
                    required: true
                },
                "pi_scheme": {
                    required: true
                },
                "pi_insno": {
                    non_cash: true
                },
                "pi_polocyno": {
                    non_cash: true
                },
                "pi_idate": {
                    non_cash: true
                },
                "pi_edate": {
                    non_cash: true
                }
            },
            messages: {
                "pi_insurance": {
                    required: "Select the TPA"
                },
                "pi_payer": {
                    required: "Select the Payer"
                },
                "pi_scheme": {
                    required: "Select the Network"
                },
                "pi_insno": {
                    non_cash: "Enter the Insurance Number"
                },
                "pi_polocyno": {
                    non_cash: "Enter the Policy Number"
                },
                "pi_idate": {
                    non_cash: "Select Issue Date"
                },
                "pi_edate": {
                    non_cash: "Select Expiry Date"
                }
            },
            highlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                } else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });


        $('#upi_insurance').on('change', function () {
            $(this).trigger('blur');
        });
        $('#upi_payer').on('change', function () {
            $(this).trigger('blur');
        });
        $('#upi_scheme').on('change', function () {
            $(this).trigger('blur');
        });
        $('#upi_insno').on('change', function () {
            $(this).trigger('blur');
        });
        $('#upi_polocyno').on('change', function () {
            $(this).trigger('blur');
        });
        $('#upi_idate').on('change', function () {
            $(this).trigger('blur');
        });
        $('#upi_edate').on('change', function () {
            $(this).trigger('blur');
        });

    };
    //#endregion validation initialization

    //#region Insert Patient Insurance Click
    $('#btn_Edit_Patient_Insurance').on('click', function (e) {
        e.preventDefault();

        if ($("#form_Edit_Patient_Insurance").valid()) {
            $('#btn_Edit_Patient_Insurance').removeClass("btn btn btn-warning");
            $('#btn_Edit_Patient_Insurance').addClass("btn btn-warning btn-loaders btn-icon");
            $('#btn_Edit_Patient_Insurance').html("Updating the Record....");

            var form = $('#form_Edit_Patient_Insurance')
            const formData = new FormData(form.get(0));

            formData.append("piId", parseInt($("#upiId").val()));
            formData.append("pi_patient", parseInt($("#upi_patient").val()));
            formData.append("pi_insurance", parseInt($("#upi_insurance").val()));
            formData.append("pi_payer", parseInt($("#upi_payer").val()));
            formData.append("pi_scheme", parseInt($("#upi_scheme").val()));
            formData.append("pi_idate ", moment($("#upi_idate").val()).format("YYYY-MM-DD"));
            formData.append("pi_edate ", moment($("#upi_edate").val()).format("YYYY-MM-DD"));
            formData.append("pi_insno", $("#upi_insno").val());
            formData.append("pi_polocyno", $("#upi_polocyno").val());
            formData.append("pi_cded_type", $("#upi_cded_type").val());
            formData.append("pi_cded", parseFloat($("#upi_cded").val()));
            formData.append("pi_cded_limit", parseFloat($("#upi_cded_limit").val()));
            formData.append("pi_ip_dcopay_type", $("#upi_ip_dcopay_type").val());
            formData.append("pi_ip_dcopay", parseFloat($("#upi_ip_dcopay").val()));
            formData.append("pi_ip_dcopay_limit", parseFloat($("#upi_ip_dcopay_limit").val()));
            formData.append("pi_dded_type", $("#upi_dded_type").val());
            formData.append("pi_dded", parseFloat($("#upi_dded").val()));
            formData.append("pi_dded_limit", parseFloat($("#upi_dded_limit").val()));
            formData.append("pi_copay_type", $("#upi_copay_type").val());
            formData.append("pi_copay", parseFloat($("#upi_copay").val()));
            formData.append("pi_copay_limit", parseFloat($("#upi_copay_limit").val()));
            formData.append("pi_dcopay_type", $("#upi_dcopay_type").val());
            formData.append("pi_dcopay", parseFloat($("#upi_dcopay").val()));
            formData.append("pi_dcopay_limit", parseFloat($("#upi_dcopay_limit").val()));
            formData.append("pi_hdcopay_type", $("#upi_hdcopay_type").val());
            formData.append("pi_hdcopay", parseFloat($("#upi_hdcopay").val()));
            formData.append("pi_hdcopay_limit", parseFloat($("#upi_hdcopay_limit").val()));
            formData.append("pi_pded_type", $("#upi_pded_type").val());
            formData.append("pi_pded", parseFloat($("#upi_pded").val()));
            formData.append("pi_pded_limit", parseFloat($("#upi_pded_limit").val()));
            formData.append("pi_ided_type", $("#upi_ided_type").val());
            formData.append("pi_ided", parseFloat($("#upi_ided").val()));
            formData.append("pi_ided_limit", parseFloat($("#upi_ided_limit").val()));
            formData.append("pi_rded_type", $("#upi_rded_type").val());
            formData.append("pi_rded", parseFloat($("#upi_rded").val()));
            formData.append("pi_rded_limit", parseFloat($("#upi_rded_limit").val()));
            formData.append("pi_mded_type", $("#upi_mded_type").val());
            formData.append("pi_mded", parseFloat($("#upi_mded").val()));
            formData.append("pi_mded_limit", parseFloat($("#upi_mded_limit").val()));
            formData.append("pi_limit", parseFloat($("#upi_limit").val()));
            formData.append("pi_ceiling", parseFloat($("#upi_ceiling").val()));
            formData.append("pi_image", $("#upi_image").val());
            formData.append("pi_image2", $("#upi_image2").val());


        $.ajax({
            type: "POST",
            url: "@Url.Action("UpdatePatientInsurance", "PatientInsurance", new { area = "Patient" })",
            dataType: 'JSON',
            contentType: false,
            processData: false,
            data: formData,
            success: function (data) {
                $('#btn_Edit_Patient_Insurance').removeClass("btn btn-warning btn-loaders btn-icon");
                $('#btn_Edit_Patient_Insurance').addClass("btn btn-warning");
                $('#btn_Edit_Patient_Insurance').html("Save Changes");

                    if (data.isSuccess) {
                        clearControls();

                        var alertPlaceholder = document.getElementById("PatientAlert");
                        function alert(e, t) {
                            var l = document.createElement("div");
                            l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                        }
                        alert("<i class='fe fe-check-circle text-white'></i> Patient Insurance Updated Successfully..!", "success");

                        $('#edit_patient_insurance_model').modal('hide');
                        GetPatientsInsurances();
                        Timeout();
                    }
                    else {
                        console.log(data);

                        let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                            "<div class='alert alert-danger' role='alert'>" +
                            "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                            "<strong>Validation Error.. Please correct before you submit the form!&nbsp;</strong><br/><ul>";

                        $.each(data.message, function (_index, value) {
                            html += "<li><small>" + value + "</small><li>";

                            var index = _index.split(',');

                            $.each(index, function (i, v) {
                                if (index[i] != null && index[i] != "") {
                                    var elem = $("#" + index[i]);
                                    console.log($("#" + index[i]));
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                    }
                                    else {
                                        $(elem).addClass(" is-invalid");
                                    }

                                    setTimeout(function () {
                                        if (elem.hasClass("select2-hidden-accessible")) {
                                            $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                        }
                                        else {
                                            $(elem).removeClass("is-invalid");
                                        }
                                    }, 5000);
                                }
                            });




                        });

                        html += "</ul></div></div>";

                        $("#error").html(html);
                    }
                },
            error: function (xhr) {
                $('#btn_Edit_Patient_Insurance').removeClass("btn btn-warning btn-loaders btn-icon");
                $('#btn_Edit_Patient_Insurance').addClass("btn btn-warning");
                $('#btn_Edit_Patient_Insurance').html("Save Changes");
                $('#edit_patient_insurance_model').modal('toggle');

                    console.log(xhr);
                }
        });
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });
    //#endregion Insert Patient Click

    //#region Clear Controls
    var clearControls = function () {
        pi_patient();

        $("#upiId").val(0);
        load_items();
        $("#upi_idate").bootstrapdatepicker("setDate", "");
        $("#upi_edate").bootstrapdatepicker("setDate", "");
        $("#upi_insno").val("");
        $("#upi_polocyno").val("");

        $("#upi_cded_type").val("Fixed");
        $("#upi_cded").val(0);
        $("#upi_cded_limit").val(0);

        $("#upi_ip_dcopay_type").val("Fixed");
        $("#upi_ip_dcopay").val(0);
        $("#upi_ip_dcopay_limit").val(0);

        $("#upi_dded_type").val("Fixed");
        $("#upi_dded").val(0);
        $("#upi_dded_limit").val(0);

        $("#upi_copay_type").val("Fixed");
        $("#upi_copay").val(0);
        $("#upi_copay_limit").val(0);

        $("#upi_dcopay_type").val("Fixed");
        $("#upi_dcopay").val(0);
        $("#upi_dcopay_limit").val(0);

        $("#upi_hdcopay_type").val("Fixed");
        $("#upi_hdcopay").val(0);
        $("#upi_hdcopay_limit").val(0);

        $("#upi_pded_type").val("Fixed");
        $("#upi_pded").val(0);
        $("#upi_pded_limit").val(0);

        $("#upi_ided_type").val("Fixed");
        $("#upi_ided").val(0);
        $("#upi_ided_limit").val(0);

        $("#upi_rded_type").val("Fixed");
        $("#upi_rded").val(0);
        $("#upi_rded_limit").val(0);

        $("#upi_mded_type").val("Fixed");
        $("#upi_mded").val(0);
        $("#upi_mded_limit").val(0);

        $("#upi_limit").val(0);
        $("#upi_ceiling").val(0);
        $("#upi_image").val("");
        $("#upi_image2").val("");
    }
    //#endregion Clear Controls

    //#region Reset
    $('#btn_Edit_Reset_Insurance').on('click', function (e) {
        e.preventDefault();
        clearControls();
    });
    //#endregion Reset

    //#region View Doc Modal
    var view_doc = function (type, id) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("ViewDocument", "PatientInsurance", new { area = "Patient" })?type=" + type + "&id=" + id,
            contentType: "application/json",
            dataType: "html",
            success: function (data) {
                $("#view_doc_modal_body").html(data);
                $("#view_doc_modal").modal("show");
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    };
    //#endregion View Doc Modal

</script>

