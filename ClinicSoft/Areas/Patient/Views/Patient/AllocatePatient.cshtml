@model BusinessEntities.Patient.PatientAndInsurance
<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold" id="exampleModalLongTitle">Allocate New File No. to Patient</h5>
    <button aria-label="Close" data-bs-dismiss="modal" class="btn-close close-patient-model" type="button"><span aria-hidden="true">×</span></button>
</div>
<div class="modal-body p-4">
    <form id="form_Patient_Merge" enctype="multipart/form-data" autocomplete="off" title="">
        @*@Html.AntiForgeryToken()*@
        <div class="row mt-2">
            <div class="col-sm-6 col-md-2 col-lg-2">
                <div class="form-group mb-2">
                    <label class="form-label font-weight-semibold">MRN #</label>
                    <input class="form-control" placeholder="Enter MRN" id="select_mrn_no" />
                </div>
            </div>
            <div class="col-sm-6 col-md-2 col-lg-2">
                <div class="form-group mb-2">
                    <label class="form-label font-weight-semibold">&nbsp;</label>
                    <button class="btn btn-primary mb-2" type="button" id="btnmtSearch">
                        <i class="fa fa-search-plus"></i> Search
                    </button>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-sm-12 col-md-12 d-flex justify-content-center">
                <div id="PatientAlert"></div>
            </div>
            <div class="col-sm-12 col-md-12 col-lg-12">
                <div class="card">
                    <div class="card-status bg-blue"></div>
                    <div class="card-body">
                        <div id="progress-loader" style="display:none;">
                            <div class="progress progress-sm mb-3">
                                <div class="progress-bar progress-bar-striped progress-bar-animated bg-teal progress-bar-indeterminate"></div>
                            </div>
                        </div>
                        <div class="table-responsive">
                            <table id="dtmTable" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                                <thead>
                                    <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                        <th class="border-bottom-0 font-weight-semibold text-white text-center"></th>
                                        <th class="border-bottom-0 font-weight-semibold text-white text-center">Photo</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white text-center">ID</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white text-center">MRN</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white">Name</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white">DOB/Gender</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white">Nationality</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white">Mobile/Email</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white">EMID</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white text-center">Status</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div id="error"></div>
            <div class="col-sm-12 col-lg-12 text-center">
                <div class="btn-list btn-animation">
                    <button type="submit" class="btn btn-success" id="btn_Allocate_Patient">Allocate New MRN#</button>
                    <button type="button" data-bs-dismiss="modal" class="btn btn-outline-danger me-1 close-patient-model">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

<script type="text/javascript">
    $(function () {
        $('#select_mrn_no').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9]/g))
                return false;
        });
    });

    //#region Search Patients
        $("#btnmtSearch").click(function (e) {

              var _data = {
                  "mrn_from": $('#select_mrn_no').val(),
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetPatientsByMRN", "Patient", new { area = "Patient" })",
                dataType: 'json',
                data: _data,
                beforeSend: function () {
                    $('#progress-loader').show();
                },
                success: function (data) {
                    $('#progress-loader').hide();

                    var table;
                    if ($.fn.dataTable.isDataTable('#dtmTable')) {
                        table = $('#dtmTable').DataTable();
                        table.clear();
                        table.rows.add(data.message).draw();
                    }
                    else {
                        BindDataTable(data.message);
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    $('#progress-loader').hide();
                }
            })
        });
    //#endregion

    //#region Bind DataTable
         var BindDataTable = function (response) {
             var table = $("#dtmTable").DataTable({
                 processing: true,
                 //"deferRender": true,
                 "pageLength": 100,
                 "retrieve": true,
                 lengthChange: true,
                 "aaData": response,
                 "aoColumns": [
                     { "mData": "patId" },
                     { "mData": "pat_photo" },
                     { "mData": "patId" },
                     { "mData": "pat_code" },
                     { "mData": "pat_name_arb" },
                     { "mData": "pat_dob" },
                     { "mData": "nationality" },
                     { "mData": "pat_mob" },
                     { "mData": "pat_emirateid" },
                     { "mData": "pat_status" }
                 ],
                 "aoColumnDefs": [
                     {
                         "aTargets": [0],
                         "orderable": false,
                         "searchable": false,
                         "className": "select-checkbox text-center",
                         'checkboxes': {
                             'selectRow': true
                         }
                     },
                     {
                         "aTargets": [1],
                         "orderable": false,
                         "searchable": false,
                         "className": "text-center",
                         "render": function (data) {
                             return '<div class="d-flex p-1 justify-content-center">' +
                                 '<img class="avatar avatar-lg brround text-center" src="' + data + '">	</img>' +
                                 '</div>';
                         }
                     },
                     {
                         "aTargets": [2],
                         "orderable": false,
                         "searchable": false,
                         "visible": false,
                         "className": "text-center",
                         "render": function (data) {
                             return '<div class="tag tag-indigo">' + data +  '</div>';
                         }
                     },
                     {
                         "aTargets": [3],
                         "className": "text-center",
                         "render": function (data) {
                             return '<div class="tag tag-danger">'+ data + '</div>';
                         }
                     },
                     {
                         "aTargets": [4],
                         "className": "text-start font-weight-semibold",
                         "render": function (data, type, full, meta) {
                             var pat_class = full.pat_class;

                             var _html = '<a href="javascript:void(0)" class="text-dark" onclick="detailPatient('+full.patId+')">'+ data +'</a>';

                             if (pat_class == 'VIP') {
                                 _html += '&nbsp;<span title="VIP Patient"><i class="fa fa-star text-orange"></i></span>';
                             }
                             else if (pat_class == 'Employee Related') {
                                 _html += '&nbsp;<span title="This Patient is related with Employee"><i class="fa fa-street-view text-info"></i></span>';
                             }
                             else if (pat_class == 'Management Related') {
                                 _html += '&nbsp;<span title="This Patient is related with Management"><i class="fa fa-handshake-o text-primary"></i></span>';
                             }
                             else {
                                 _html += '&nbsp;<i class="fa-regular fa-crown"></i>';
                             }

                             return _html;
                         }
                     },
                     {
                         "aTargets": [5],
                         "className": "text-start",
                         "render": function (data, type, full, meta) {
                             var pat_age = full.pat_age;
                             var pat_gender = full.pat_gender;

                             var html = moment(data, "M/D/YYYY h:mm:ss A").format("DD-MMMM-YYYY") +
                                 '<br/><div class="tag tag-info mt-1">' +
                                 pat_age + ' Y/s' +
                                 '<span class="tag-addon"><i class="fa fa-clock-o"></i></span>' +
                                 '</div>';

                             if (pat_gender == "Female") {
                                 html += '<div class="tag tag-primary ms-1"> Female ' +
                                     '<span class="tag-addon"><i class="fa fa-female"></i></span>' +
                                     '</div>';
                             }
                             else {
                                 html += '<div class="tag tag-primary ms-1"> Male ' +
                                     '<span class="tag-addon"><i class="fa fa-male"></i></span>' +
                                     '</div>';
                             }

                             return html;
                         }
                     },
                     {
                         "aTargets": [6],
                         "className": "text-start"
                     },
                     {
                         "aTargets": [7],
                         "orderable": false,
                         "className": "text-start",
                         "render": function (data, type, full, meta) {
                             var pat_mob = data;
                             var pat_email = full.pat_email;

                             var html = '';

                             if (data != "" && data != null && data != undefined) {
                                 html += '<div class="tag tag-success"><a style="color:white;" href="https://api.whatsapp.com/send?phone='+ data +'" >' +
                                     data +
                                     '<span class="tag-addon"><i class="fa fa-whatsapp"></i></span></a>' +
                                     '</div>';

                                 if (pat_email != "" && pat_email != null && pat_email != undefined) {
                                     html += '<br/><div class="tag tag-info mt-1"><a style="color:white;" href = "mailto:' + pat_email +'">' +
                                         pat_email +
                                         '<span class="tag-addon"><i class="fa fa-envelope-o"></i></span></a>' +
                                         '</div>';
                                 }
                             }
                             else {
                                 if (pat_email != "" && pat_email != null && pat_email != undefined) {
                                     html += '<div class="tag tag-info"><a style="color:white;" href = "mailto:' + pat_email +'">' +
                                         pat_email +
                                         '<span class="tag-addon"><i class="fa fa-envelope-o"></i></span></a>' +
                                         '</div>';
                                 }
                             }

                             return html;
                         }
                     },
                     {
                         "aTargets": [8],
                         "className": "text-start",
                         "render": function (data, type, full, meta) {
                             var id_fcard = full.id_card_front;
                             var id_bcard = full.id_card_back;

                             if (id_fcard != null && id_fcard != "" && id_fcard != undefined) {
                                 id_fcard = ' <a onclick="view_emid(' + full.patId + ')"><i class="fa fa-info-circle text-info"></i></a>';
                                 id_bcard = '';
                             }
                             else if (id_bcard != null && id_bcard != "" && id_bcard != undefined) {
                                 id_fcard = '';
                                 id_bcard = ' <a onclick="view_emid(' + full.patId + ')"><i class="fa fa-info-circle text-info"></i></a>';
                             }

                             var html = "";

                             if (data != null && data != "" && data != undefined) {
                                 let id_card_edate = moment(full.id_card_edate);
                                 if (id_card_edate.isValid()) {
                                     let today = moment();

                                     if (id_card_edate.diff(today, 'days') <= 0) {
                                         html = '<div class="text-center text-danger">' + data + id_fcard + id_bcard+'<br/>' +
                                             '<span class="badge bg-danger-light border-danger fs-11">Expired (Exp: ' + moment(id_card_edate).format("DD-MMMM-YYYY") + ') </span>' +
                                             '</div>';
                                     }
                                     else {
                                         html = '<div class="text-center">' + data + id_fcard + '<br/>' +
                                             '<span class="badge bg-success-light border-success fs-11">Active (Exp: ' + moment(id_card_edate).format("DD-MMMM-YYYY") + ') </span>' +
                                             '</div>';
                                     }
                                 }
                             }
                             else {
                                 html = '<div class="text-center"><span class="text-muted">999-9999-9999999-9</span></div>';
                             }

                             return html;
                         }
                     },
                     {
                         "aTargets": [9],
                         "className": 'text-center',
                         "render": function (data, type, full, meta) {
                             var visible = full.actionvisible;
                             var pat_status = full.pat_status;
                             if (pat_status === "New") {
                                     return '<button type="button" class="badge rounded-pill bg-success mt-2 border-success" style="width: 60px;"> New </button>'
                             }
                             else if (pat_status === "Repeat") {
                                     return '<button type="button" class="badge rounded-pill bg-warning mt-2 border-warning" style="width: 60px;">Repeat</button>'
                             }
                             else if (pat_status === "Deleted") {
                                     return '<button type="button" class="badge rounded-pill bg-danger mt-2 border-danger" style="width: 60px;">Deleted</button>'
                             }
                             else {
                                 return ''
                             }
                         }
                     }

                 ],
                 select: {
                     style: 'single',
                     selector: 'td:first-child'
                 },
                 order: [[3, 'desc']],
                 language: {
                     searchPlaceholder: 'Search...',
                     sSearch: '<span class="text-primary font-weight-semi-bold">Search By Name / MRN / Mobile / EMID</span>',
                     lengthMenu: '_MENU_',
                 },
                 scrollX: true,
                 scrollY: 500,
                 scrollCollapse: true,
                 fixedColumns: true,
                 fixedHeader: {
                     header: true,
                     footer: true
                 },
                 buttons: [
                     {
                         extend: 'excel',
                         title: 'Patients Information',
                         footer: 'true',
                         exportOptions: {
                             columns: [3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19]
                         },
                         action: function (e, dt, node, config) {
                             $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, node, config);
                             exportLogs("Employee Exported Patients to Excel!");
                         }
                     },
                     {
                         extend: 'pdf',
                         title: 'Patients Information',
                         footer: 'true',
                         exportOptions: {
                             columns: [3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19]
                         },
                         action: function (e, dt, node, config) {
                             $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, node, config);
                             exportLogs("Employee Exported Patients to PDF!");
                         }
                     },
                     {
                         extend: 'csv',
                         title: 'Patients Information',
                         footer: 'true',
                         exportOptions: {
                             columns: [3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19]
                         },
                         action: function (e, dt, node, config) {
                             $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, node, config);
                             exportLogs("Employee Exported Patients to CSV!");
                         }
                     },
                     {
                         extend: 'print',
                         title: 'Patients Information',
                         footer: 'true',
                         exportOptions: {
                             columns: [3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19]
                         },
                         action: function (e, dt, node, config) {
                             $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, node, config);
                             exportLogs("Employee Printed Patients!");
                         }
                     }
                 ]
             });
             table.buttons().container().appendTo('#dtmTable_wrapper .col-md-6:eq(0)');
        }
    //#endregion

    //#region Allocation
        $('#btn_Allocate_Patient').on('click', function (e) {
         var table = $("#dtmTable").DataTable();
             var rows = $(table.$('input[type="checkbox"]').map(function () {
                 return $(this).prop("checked") ? $(this).closest('tr') : null;
             }));
             if (rows.length > 0) {
                $.each(rows, function (index, rowId) {
                    var _data = table.row(rowId).data();
                    var _dataInsert = {
                        "patId": _data.patId,
                    }
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("UpdateMRNNo", "Patient", new { area = "Patient" })",
                        dataType: 'JSON',
                        data: _dataInsert,
                        success: function (data) {
                            if (data.success) {
                                Swal.fire({
                                    title: "Success!",
                                    text: "File# Updated Successfully!!",
                                    icon: "success",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                                })
                                GetPatients();
                            }
                            else if (data.isAuthorized == false) {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to perform this action!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                            else {
                                Swal.fire({
                                    title: "Error!",
                                    text: "Failed to update File#!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }

                        },
                        error: function (xhr) {
                            console.log(xhr);
                        }
                    });
                });
             }
             else {
                 e.preventDefault();
                 Swal.fire({
                     title: "Attention!",
                     text: "Please Select patient",
                     icon: "warning",
                     showCancelButton: 0,
                     confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                 });
             }
        });
    //#endregion
</script>
