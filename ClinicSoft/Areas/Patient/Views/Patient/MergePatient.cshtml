@model BusinessEntities.Patient.PatientAndInsurance
<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold" id="exampleModalLongTitle">Merge Patients</h5>
    <button aria-label="Close" data-bs-dismiss="modal" class="btn-close close-patient-model" type="button"><span aria-hidden="true">×</span></button>
</div>
<div class="modal-body p-4">
    <form id="form_Patient_Merge" enctype="multipart/form-data" autocomplete="off" title="">
        @Html.AntiForgeryToken()

        <div class="row mt-2">
            <div class="col-sm-6 col-md-6 col-lg-6">
                <div class="form-group">
                    <select placeholder="Select From Patient" class="form-select select2 mb-2" id="m_patient_from" name="m_patient_from">
                    </select>
                </div>
                <div class="form-group">
                    <div class="table-responsive">
                        <table id="dtTableMergeFrom" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                            <thead>
                                <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                    <th class="border-bottom-0 font-weight-semibold text-white text-center"></th>
                                    <th class="border-bottom-0 font-weight-semibold text-white">Pat.ID</th>
                                    <th class="border-bottom-0 font-weight-semibold text-white">MRN</th>
                                    <th class="border-bottom-0 font-weight-semibold text-white">Name</th>
                                    <th class="border-bottom-0 font-weight-semibold text-white">Ins.ID</th>
                                    <th class="border-bottom-0 font-weight-semibold text-white">Ins.Name</th>
                                    <th class="border-bottom-0 font-weight-semibold text-white">Exp.Date</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-6">
                <div class="form-group">
                    <select placeholder="Select To Patient" class="form-select select2 mb-2" id="m_patient_to" name="m_patient_to">
                    </select>
                </div>
                <div class="form-group">
                    <div class="table-responsive">
                        <table id="dtTableMergeTo" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
                            <thead>
                                <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                                    <th class="border-bottom-0 font-weight-semibold text-white text-center d-none"></th>
                                    <th class="border-bottom-0 font-weight-semibold text-white">Pat.ID</th>
                                    <th class="border-bottom-0 font-weight-semibold text-white">MRN</th>
                                    <th class="border-bottom-0 font-weight-semibold text-white">Name</th>
                                    <th class="border-bottom-0 font-weight-semibold text-white">Ins.ID</th>
                                    <th class="border-bottom-0 font-weight-semibold text-white">Ins.Name</th>
                                    <th class="border-bottom-0 font-weight-semibold text-white">Exp.Date</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div id="error"></div>
            <div class="col-sm-12 col-lg-12 text-center">
                <div class="btn-list btn-animation">
                    <button type="submit" class="btn btn-success" id="btn_Merge_Patient">Merge Patient</button>
                    <button type="button" data-bs-dismiss="modal" class="btn btn-outline-danger me-1 close-patient-model">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

<script type="text/javascript">
    //#region Page Load & Initialization
        $(function () {
             $("#m_patient_from").select2({
                 placeholder: 'Select Patient',
                 width: '100%',
                 dropdownParent: $('#form_Patient_Merge'),
                 minimumInputLength: 3,
                 escapeMarkup: function (markup) {
                     return markup;
                 },
                 ajax: {
                     url: '@Url.Action("SearchPatients", "Patient", new { area = "Patient" })',
                     dataType: 'json',
                     delay: 250,
                     data: function (query) {
                         var _type = 0;

                         return {
                             query: query.term,
                             type: _type
                         };
                     },
                     processResults: function (data) {
                         return {
                             results: data
                         };
                     },
                     cache: true
                 }
             });
            $("#m_patient_to").select2({
                 placeholder: 'Select Patient',
                 width: '100%',
                 dropdownParent: $('#form_Patient_Merge'),
                 minimumInputLength: 3,
                 escapeMarkup: function (markup) {
                     return markup;
                 },
                 ajax: {
                     url: '@Url.Action("SearchPatients", "Patient", new { area = "Patient" })',
                     dataType: 'json',
                     delay: 250,
                     data: function (query) {
                         var _type = 0;

                         return {
                             query: query.term,
                             type: _type
                         };
                     },
                     processResults: function (data) {
                         return {
                             results: data
                         };
                     },
                     cache: true
                 }
            });
        });
    //#endregion
    $('#m_patient_from').on('change', function () {
        var _data = {
            "pat_info": $('#m_patient_from').val().toString()
        }

        $.ajax({
            type: "GET",
            url: "@Url.Action("GetPatientMerge", "Patient", new { area = "Patient" })",
            dataType: 'json',
            data: _data,
            beforeSend: function () {
                $('#progress-loader').show();
            },
            success: function (data) {
                $('#progress-loader').hide();
                var table;
                if ($.fn.dataTable.isDataTable('#dtTableMergeFrom')) {
                    table = $('#dtTableMergeFrom').DataTable();
                    table.clear();
                    table.rows.add(data.message).draw();
                }
                else {
                    BindDataTable(data.message);
                }
            },
            error: function (xhr) {
                console.log(xhr);
                $('#progress-loader').hide();
            }
        })
    });
    //#region Bind DataTable
        var BindDataTable = function (response) {
             var table = $("#dtTableMergeFrom").DataTable({
                 processing: true,
                 //"deferRender": true,
                 "pageLength": 100,
                 "retrieve": true,
                 lengthChange: true,
                 "aaData": response,
                 "aoColumns": [
                     { "mData": "patId" },
                     { "mData": "patId" },
                     { "mData": "pat_code" },
                     { "mData": "pat_name" },
                     { "mData": "piId" },
                     { "mData": "is_ic_name" },
                     { "mData": "pi_edate" }
                 ],
                 "aoColumnDefs": [
                     {
                         "aTargets": [0],
                         "orderable": false,
                         "searchable": false,
                         "className": "select-checkbox text-center",
                         'checkboxes': {
                             'selectRow': true
                         }
                     },
                     {
                         "aTargets": [6],
                         "render": function (data, type, full, meta) {
                             var pi_edate = moment(full.pi_edate).format("DD-MM-YYYY");
                             return pi_edate;
                         }
                     }
                 ],
                 select: {
                     style: 'single',
                     selector: 'td:first-child'
                 },
                 order: [[3, 'desc']],
                 language: {
                     searchPlaceholder: 'Search...',
                     sSearch: '',
                     lengthMenu: '',
                 },
                 scrollX: true,
                 scrollY: 500,
                 scrollCollapse: true,
                 fixedColumns: true,
                 fixedHeader: {
                     header: true,
                     footer: true
                 },
                 buttons: [
                     {
                         extend: 'excel',
                         title: 'Patients Information',
                         footer: 'true',
                         exportOptions: {
                             columns: [3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19]
                         },
                         action: function (e, dt, node, config) {
                             $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, node, config);
                             exportLogs("Employee Exported Patients to Excel!");
                         }
                     },
                     {
                         extend: 'pdf',
                         title: 'Patients Information',
                         footer: 'true',
                         exportOptions: {
                             columns: [3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19]
                         },
                         action: function (e, dt, node, config) {
                             $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, node, config);
                             exportLogs("Employee Exported Patients to PDF!");
                         }
                     },
                     {
                         extend: 'csv',
                         title: 'Patients Information',
                         footer: 'true',
                         exportOptions: {
                             columns: [3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19]
                         },
                         action: function (e, dt, node, config) {
                             $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, node, config);
                             exportLogs("Employee Exported Patients to CSV!");
                         }
                     },
                     {
                         extend: 'print',
                         title: 'Patients Information',
                         footer: 'true',
                         exportOptions: {
                             columns: [3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19]
                         },
                         action: function (e, dt, node, config) {
                             $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, node, config);
                             exportLogs("Employee Printed Patients!");
                         }
                     }
                 ],
                 // Checkbox click event handler
                 //"rowCallback": function (row, data) {
                 //    debugger;
                 //    $('input[type="checkbox"]', row).on('change', function () {
                 //        var isChecked = $(this).prop('checked');
                 //        var piId = data.piId; // Adjust this based on your actual data structure
                 //        var is_ic_name = data.is_ic_name; // Adjust this based on your actual data structure
                 //        if (isChecked && is_ic_name!="Cash") {
                 //            // Call a function to handle checkbox selection, passing piId
                 //            handleCheckboxSelection(piId);
                 //        }
                 //        // Add code for handling checkbox deselection if needed
                 //    });
                 //}

             });
             table.buttons().container().appendTo('#dtTableMergeFrom_wrapper .col-md-6:eq(0)');

        }
    //#endregion

    $('#m_patient_to').on('change', function () {
        var _data = {
            "pat_info": $('#m_patient_to').val().toString()
        }

        $.ajax({
            type: "GET",
            url: "@Url.Action("GetPatientMerge", "Patient", new { area = "Patient" })",
            dataType: 'json',
            data: _data,
            beforeSend: function () {
                $('#progress-loader').show();
            },
            success: function (data) {
                $('#progress-loader').hide();
                var table;
                if ($.fn.dataTable.isDataTable('#dtTableMergeTo')) {
                    table = $('#dtTableMergeTo').DataTable();
                    table.clear();
                    table.rows.add(data.message).draw();
                }
                else {
                    BindDataTableTo(data.message);
                }
            },
            error: function (xhr) {
                console.log(xhr);
                $('#progress-loader').hide();
            }
        })
    });
    //#region Bind DataTable
    var BindDataTableTo = function (response) {
        debugger;
             var table = $("#dtTableMergeTo").DataTable({
                 processing: true,
                 //"deferRender": true,
                 "pageLength": 100,
                 "retrieve": true,
                 lengthChange: true,
                 "aaData": response,
                 "aoColumns": [
                     { "mData": "patId" },
                     { "mData": "patId" },
                     { "mData": "pat_code" },
                     { "mData": "pat_name" },
                     { "mData": "piId" },
                     { "mData": "is_ic_name" },
                     { "mData": "pi_edate" }
                 ],
                 "aoColumnDefs": [
                     {
                         "aTargets": [0],
                         "orderable": false,
                         "searchable": false,
                         "visible": false,
                         "className": "select-checkbox text-center select-all",
                         'checkboxes': {
                             'selectRow': true
                         }
                     },
                     {
                         "aTargets": [6],
                         "render": function (data, type, full, meta) {
                             var pi_edate = moment(full.pi_edate).format("DD-MM-YYYY");
                             return pi_edate;
                         }
                     }
                 ],
                 select: {
                     style: 'single',
                     selector: 'td:first-child'
                 },
                 order: [[3, 'desc']],
                 language: {
                     searchPlaceholder: 'Search...',
                     sSearch: '',
                     lengthMenu: '',
                 },
                 scrollX: true,
                 scrollY: 500,
                 scrollCollapse: true,
                 fixedColumns: true,
                 fixedHeader: {
                     header: true,
                     footer: true
                 },
                 buttons: [
                     {
                         extend: 'excel',
                         title: 'Patients Information',
                         footer: 'true',
                         exportOptions: {
                             columns: [3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19]
                         },
                         action: function (e, dt, node, config) {
                             $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, node, config);
                             exportLogs("Employee Exported Patients to Excel!");
                         }
                     },
                     {
                         extend: 'pdf',
                         title: 'Patients Information',
                         footer: 'true',
                         exportOptions: {
                             columns: [3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19]
                         },
                         action: function (e, dt, node, config) {
                             $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, node, config);
                             exportLogs("Employee Exported Patients to PDF!");
                         }
                     },
                     {
                         extend: 'csv',
                         title: 'Patients Information',
                         footer: 'true',
                         exportOptions: {
                             columns: [3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19]
                         },
                         action: function (e, dt, node, config) {
                             $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, node, config);
                             exportLogs("Employee Exported Patients to CSV!");
                         }
                     },
                     {
                         extend: 'print',
                         title: 'Patients Information',
                         footer: 'true',
                         exportOptions: {
                             columns: [3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19]
                         },
                         action: function (e, dt, node, config) {
                             $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, node, config);
                             exportLogs("Employee Printed Patients!");
                         }
                     }
                 ]

             });
             table.buttons().container().appendTo('#dtTableMergeTo_wrapper .col-md-6:eq(0)');

    }
    //#endregion

    $('#m_patient_from').on('change', function (e) {
        var selectedPiId = $(this).find(':selected').data('pi-id');
        if (selectedPiId) {
            // Include the selected piId in the AJAX request to GetPatientMerge
            //getPatientMerge(selectedPiId);

            var _data = {
                "pat_info": selectedPiId.toString()
            }

            console.log("piId:" +_data);

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetPatientBypiId", "Patient", new { area = "Patient" })",
                dataType: 'json',
                data: _data,
                beforeSend: function () {
                    $('#progress-loader').show();
                },
                success: function (data) {
                    $('#progress-loader').hide();
                    var table;
                    if ($.fn.dataTable.isDataTable('#dtTableMergeTo')) {
                        table = $('#dtTableMergeTo').DataTable();
                        table.clear();
                        table.rows.add(data.message).draw();
                    }
                    else {
                        BindDataTableTo(data.message);
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    $('#progress-loader').hide();
                }
            })
        }
    });

    $("#btn_Merge_Patient").click(function (event) {
        debugger;
        var table = $("#dtTableMergeFrom").DataTable();
        var rows = table.rows('.selected').nodes();  // Get selected rows

        var table1 = $("#dtTableMergeTo").DataTable();
        var rows1 = table1.rows('.selected').nodes(); // Get selected rows from the second table

        var _dataFrom = [];
        var _dataTo = [];
        var requestData = {
            dataFrom: [],
            dataTo: []
        };

        // Iterate over selected rows from the first table
        $.each(rows, function (index, row) {
            var rowData = table.row(row).data();
            var _obj = {
                piIdF: rowData.piId,
                patIdF: rowData.patId
            };
            requestData.dataFrom.push(_obj);
        });

        // Iterate over selected rows from the second table
        //$.each(rows1, function (index, row) {
        //    var rowData = table1.row(row).data();
        //    var _obj = {
        //        appIdT: rowData.appId,
        //        piIdT: rowData.piId,
        //        patIdT: rowData.patId
        //    };
        //    requestData.dataTo.push(_obj);
        //});
        var _obj = {
            piIdT: 0,
            patIdT: $('#m_patient_to').val()
        };
        requestData.dataTo.push(_obj);

        $.ajax({
            url: '@Url.Action("CreateMergePatient", "Patient", new { area = "Patient" })',
            type: "POST",
            dataType: "json",
            contentType: "application/json", // Specify content type
            data: JSON.stringify(requestData), // Convert the object to JSON
            async: false,
            success: function (response) {
                if (response.isSuccess == true) {
                    event.preventDefault();
                    event.stopPropagation();
                    return $.growl.notice({
                        title: "Success",
                        message: response.message
                    });
                }
                else {
                    event.preventDefault();
                    event.stopPropagation();
                    return $.growl.error({
                        title: "Error",
                        message: response.message
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });

    });


    function handleCheckboxSelection(piId) {
        console.log("Selected piId:", piId);
        debugger;
        // Check if Patient To is selected
        var selectedPatientTo = $("#m_patient_to").val();
        if (!selectedPatientTo) {

            return $.growl.error({
                title: "Oops...",
                message: "Please select the Patient To whom you want to merge."
            });
        }

        console.log("Selected patIdT:", selectedPatientTo);

        if (piId) {
            var _data = {
                "piIdF": piId.toString(),
                "patIdT": selectedPatientTo.toString()
            }

            console.log("ss:" +_data);

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetPatientBypiId", "Patient", new { area = "Patient" })",
                dataType: 'json',
                data: _data,
                beforeSend: function () {
                    $('#progress-loader').show();
                },
                success: function (data) {
                    $('#progress-loader').hide();
                    var table;
                    if ($.fn.dataTable.isDataTable('#dtTableMergeTo')) {
                        table = $('#dtTableMergeTo').DataTable();
                        table.clear();
                        table.rows.add(data.message).draw();
                    }
                    else {
                        BindDataTableTo(data.message);
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    $('#progress-loader').hide();
                }
            })
        }
    }

</script>

