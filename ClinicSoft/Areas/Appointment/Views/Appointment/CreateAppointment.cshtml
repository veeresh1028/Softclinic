@model BusinessEntities.Appointment.Appointment
<style>
    #app_ftime + span.select2-container--default,
    #app_ttime + span.select2-container--default {
        width: 80% !important;
    }
</style>

<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold" id="exampleModalLongTitle">Create New Appointment</h5>
</div>
<div class="modal-body p-4">
    <form id="form_Appointment">
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12 mb-4 font-weight-semibold">
                <span class="text-danger" style="font-size:smaller">Required fields are marked with *</span>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-sm-12 col-md-6 col-lg-4">
                <div class="form-group">
                    <label class="form-label"> Branch&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_branch, new SelectList(Model.BranchList, "id", "text"), "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-2 Nabidh">
                <div class="form-group">
                    <label class="form-label"> In / Out&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_inout, new List<SelectListItem>
                    {
                        new SelectListItem{ Value="Out Patient", Text="Out Patient", Selected=true},
                        new SelectListItem{ Value="In Patient", Text="In Patient"},
                        new SelectListItem{ Value="Emergency", Text="Emergency"},
                        new SelectListItem{ Value="Preadmit", Text="Preadmit"},
                        new SelectListItem{ Value="Recurring Patient", Text="Recurring Patient"},
                    }, "Select Visit Type", new { @class = "form-select select2 mb-4" })
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-2 Riayati d-none">
                <div class="form-group">
                    <label class="form-label">Riayati Consent&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_riayathiConsent, new List<SelectListItem>
                    {
                        new SelectListItem{ Value="Global Opt In", Text="Global Opt In"},
                        new SelectListItem{ Value="Global Opt Out", Text="Global Opt Out"},
                    }, "Select Visit Type", new { @class = "form-select select2 mb-4" })
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Room&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_room, new SelectList(Model.RoomsList, "id", "text"), "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Doctor&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_doctor, new SelectList(Model.DoctorsList, "id", "title"), "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Status&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_status, new SelectList(Model.StatusList, "text", "text"), "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-sm-12 col-md-6 col-lg-12">
                <div class="form-group">
                    <label class="form-label"> Search Patient By&nbsp;<span class="text-danger">*</span></label>
                    <div class="custom-controls d-lg-flex d-md-flex flex-row justify-content-left mb-2">
                        <label class="custom-control custom-radio">
                            <input type="radio" class="custom-control-input" name="rdo_s_patient" value="1">
                            <span class="custom-control-label">MRN</span>
                        </label>
                        <label class="custom-control custom-radio ms-sm-2 md-md-2 ms-lg-2">
                            <input type="radio" class="custom-control-input" name="rdo_s_patient" value="2">
                            <span class="custom-control-label">Name</span>
                        </label>
                        <label class="custom-control custom-radio ms-sm-2 md-md-2 ms-lg-2">
                            <input type="radio" class="custom-control-input" name="rdo_s_patient" value="3" checked>
                            <span class="custom-control-label">Mobile No</span>
                        </label>
                        <label class="custom-control custom-radio ms-sm-2 md-md-2 ms-lg-2">
                            <input type="radio" class="custom-control-input" name="rdo_s_patient" value="4">
                            <span class="custom-control-label">Emirates ID</span>
                        </label>
                        <div class="btn-list ms-sm-2 md-md-2 ms-lg-2">
                            <button class="btn btn-outline-success btn-sm" type="button" id="btnCreatePatient">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-plus me-1" viewBox="0 0 16 16">
                                    <path d="M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z" />
                                    <path fill-rule="evenodd" d="M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z" />
                                </svg>
                                Add New Patient
                            </button>
                            <button class="btn btn-outline-info btn-sm" type="button" id="btnCreateEnquiry">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-envelope-paper me-1" viewBox="0 0 16 16">
                                    <path d="M4 0a2 2 0 0 0-2 2v1.133l-.941.502A2 2 0 0 0 0 5.4V14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V5.4a2 2 0 0 0-1.059-1.765L14 3.133V2a2 2 0 0 0-2-2H4Zm10 4.267.47.25A1 1 0 0 1 15 5.4v.817l-1 .6v-2.55Zm-1 3.15-3.75 2.25L8 8.917l-1.25.75L3 7.417V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v5.417Zm-11-.6-1-.6V5.4a1 1 0 0 1 .53-.882L2 4.267v2.55Zm13 .566v5.734l-4.778-2.867L15 7.383Zm-.035 6.88A1 1 0 0 1 14 15H2a1 1 0 0 1-.965-.738L8 10.083l6.965 4.18ZM1 13.116V7.383l4.778 2.867L1 13.117Z" />
                                </svg>
                                Add New Enquiry
                            </button>
                            @*<button class="btn btn-outline-primary btn-sm ms-2" type="button" id="btnCreatePackageOrder">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-boxes me-1" viewBox="0 0 16 16">
                                        <path d="M7.752.066a.5.5 0 0 1 .496 0l3.75 2.143a.5.5 0 0 1 .252.434v3.995l3.498 2A.5.5 0 0 1 16 9.07v4.286a.5.5 0 0 1-.252.434l-3.75 2.143a.5.5 0 0 1-.496 0l-3.502-2-3.502 2.001a.5.5 0 0 1-.496 0l-3.75-2.143A.5.5 0 0 1 0 13.357V9.071a.5.5 0 0 1 .252-.434L3.75 6.638V2.643a.5.5 0 0 1 .252-.434L7.752.066ZM4.25 7.504 1.508 9.071l2.742 1.567 2.742-1.567L4.25 7.504ZM7.5 9.933l-2.75 1.571v3.134l2.75-1.571V9.933Zm1 3.134 2.75 1.571v-3.134L8.5 9.933v3.134Zm.508-3.996 2.742 1.567 2.742-1.567-2.742-1.567-2.742 1.567Zm2.242-2.433V3.504L8.5 5.076V8.21l2.75-1.572ZM7.5 8.21V5.076L4.75 3.504v3.134L7.5 8.21ZM5.258 2.643 8 4.21l2.742-1.567L8 1.076 5.258 2.643ZM15 9.933l-2.75 1.571v3.134L15 13.067V9.933ZM3.75 14.638v-3.134L1 9.933v3.134l2.75 1.571Z" />
                                        <path fill-rule="evenodd" d="M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z" />
                                    </svg>
                                    Add New Patient Package
                                </button>*@
                        </div>
                    </div>
                    @Html.DropDownListFor(m => m.app_patient, new List<SelectListItem> { }, "Search for", new { @class = "form-select select2 mb-4" })
                </div>
            </div>
        </div>
        <div class="row mt-2" id="divPackageOrderInfo">
            <label class="col-sm-12 col-md-12 col-lg-12"><span class="fs-11 text-info font-italic font-weight-semibold">This Patient has Package Order</span></label>
            <div class="col-sm-6 col-lg-6">
                <div class="form-group">
                    <label class="form-label"> Package Order</label>
                    @Html.DropDownListFor(m => m.app_package_order, new List<SelectListItem> { }, "Search for", new { @class = "form-select select2 mb-4" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-6">
                <div class="form-group">
                    <label class="form-label"> Package Service</label>
                    @Html.DropDownListFor(m => m.app_service, new List<SelectListItem> { }, "Search for", new { @class = "form-select select2 mb-4", @multiple = "multiple" })
                </div>
            </div>
        </div>
        <div class="row mt-1">
            <div class="col-sm-6 col-md-6 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Followup Type&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_type, new List<SelectListItem>
                    {
                        new SelectListItem{ Value="First Time", Text="First Time", Selected=true},
                        new SelectListItem{ Value="Follow Up", Text="Follow Up"},
                        new SelectListItem{ Value="Repeat", Text="Repeat"}
                    }, "Select Type", new { @class = "form-select select2 mb-4" })
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-2">
                <div class="form-group mb-0">
                    <label class="form-label" title="">Start Date&nbsp;<span class="text-danger">*</span> </label>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <i class="fe fe-calendar"></i>
                        </div>
                    </div>
                    @Html.TextBoxFor(model => model.app_fdate, new { @class = "form-control", @placeholder = "YYYY-MM-DD" })
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-2">
                <div class="form-group mb-0">
                    <label class="form-label"> From&nbsp;<span class="text-danger">*</span></label>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <span class="fe fe-clock"></span>
                        </div>
                    </div>
                    @Html.DropDownListFor(m => m.app_ftime, new SelectList(Model.FromTimeList, "id", "text"), "Please Select", new { @class = "form-control select2" })
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-2">
                <div class="form-group mb-0">
                    <label class="form-label"> To&nbsp;<span class="text-danger">*</span></label>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <span class="fe fe-clock"></span>
                        </div>
                    </div>
                    @Html.DropDownListFor(m => m.app_ttime, new SelectList(Model.ToTimeList, "id", "text"), "Please Select", new { @class = "form-control select2" })
                </div>
            </div>
            <div class="col-sm-6 col-md-6 col-lg-2">
                <div class="form-group">
                    <label class="form-label mb-3"> &nbsp;</label>
                    <label class="custom-switch">
                        <input type="checkbox" id="btnAppRecurring" class="custom-switch-input">
                        <span class="custom-switch-indicator"></span>
                        <span class="custom-switch-description text-azure font-weight-semibold"><i class="mdi mdi-autorenew"></i>&nbsp;Make Recurring</span>
                    </label>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="collapse" id="collapseRecurring">
                    <div class="card overflow-hidden shadow-lg shadow3">
                        <div class="card-status card-status-left bg-secondary br-bl-7 br-tl-7"></div>
                        <div class="card-body d-lg-flex">
                            <div class="col-sm-6 col-md-6 col-lg-4">
                                <div class="form-group">
                                    <div class="form-label">Recurrence Pattern</div>
                                    <div class="custom-controls-stacked">
                                        <label class="custom-control custom-radio">
                                            <input type="radio" class="custom-control-input first" name="rdo_app_recurr" value="daily" id="firstbtn">
                                            <span class="custom-control-label">Daily</span>
                                        </label>
                                        <label class="custom-control custom-radio">
                                            <input type="radio" class="custom-control-input" name="rdo_app_recurr" value="weekly">
                                            <span class="custom-control-label">Weekly</span>
                                        </label>
                                        <label class="custom-control custom-radio">
                                            <input type="radio" class="custom-control-input" name="rdo_app_recurr" value="monthly">
                                            <span class="custom-control-label">Monthly</span>
                                        </label>
                                        <label class="custom-control custom-radio">
                                            <input type="radio" class="custom-control-input" name="rdo_app_recurr" value="yearly">
                                            <span class="custom-control-label">Yearly</span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-1 col-md-1 col-lg-1 d-lg-block d-sm-none" style="max-width:fit-content;">
                                <div class="vr" style="min-height:10em"></div>
                            </div>
                            <div class="col-sm-6 col-md-3 col-lg-3">
                                <div class="form-group text-black font-weight-semibold d-none" id="daily_content">
                                    <div class="form-group mt-lg-5">
                                        <div class="custom-controls-stacked">
                                            <label class="custom-control custom-radio d-flex">
                                                <input type="radio" class="custom-control-input first" name="rdo_daily" value="rd_daily">
                                                <span class="custom-control-label">Every</span>
                                                <input type="number" class="form-control w-25 ms-2" style="margin-right: 0.5rem !important;" id="idaily" value="1" min="1" />
                                                <span class="custom-control-label">day(s)</span>
                                            </label>
                                            <label class="custom-control custom-radio">
                                                <input type="radio" class="custom-control-input" name="rdo_daily" value="rd_weekday">
                                                <span class="custom-control-label">Every Weekday</span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group text-black font-weight-semibold d-none" id="weekly_content">
                                    <label class="form-label"> &nbsp;</label>
                                    <span class="d-flex align-items-center"> Recur every <input type="number" class="form-control w-25 ms-2" style="margin-right: 0.5rem !important;" id="iweekly" value="1" min="1" /> week(s) on:</span>
                                    <div class="custom-controls-stacked d-lg-flex mt-lg-2 flex-lg-wrap">
                                        <label class="custom-control custom-checkbox">
                                            <input type="checkbox" class="custom-control-input" name="week_day" value="0" id="Sunday">
                                            <span class="custom-control-label">Sunday</span>
                                        </label>
                                        <label class="custom-control custom-checkbox ms-lg-2">
                                            <input type="checkbox" class="custom-control-input" name="week_day" value="1" id="Monday">
                                            <span class="custom-control-label">Monday</span>
                                        </label>
                                        <label class="custom-control custom-checkbox ms-lg-2">
                                            <input type="checkbox" class="custom-control-input" name="week_day" value="2" id="Tuesday">
                                            <span class="custom-control-label">Tuesday</span>
                                        </label>
                                        <label class="custom-control custom-checkbox ms-lg-2">
                                            <input type="checkbox" class="custom-control-input" name="week_day" value="3" id="Wednesday">
                                            <span class="custom-control-label">Wednesday</span>
                                        </label>
                                        <label class="custom-control custom-checkbox">
                                            <input type="checkbox" class="custom-control-input" name="week_day" value="4" id="Thursday">
                                            <span class="custom-control-label">Thursday</span>
                                        </label>
                                        <label class="custom-control custom-checkbox ms-lg-2">
                                            <input type="checkbox" class="custom-control-input" name="week_day" value="5" id="Friday">
                                            <span class="custom-control-label">Friday</span>
                                        </label>
                                        <label class="custom-control custom-checkbox ms-lg-2">
                                            <input type="checkbox" class="custom-control-input" name="week_day" value="6" id="Saturday">
                                            <span class="custom-control-label">Saturday</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="form-group text-black font-weight-semibold d-none" id="monthly_content">
                                    <label class="form-label"> &nbsp;</label>
                                    <span class="d-flex align-items-center">
                                        Day
                                        <input type="number" class="form-control w-25 ms-2" style="margin-right: 0.5rem !important;" id="imonthly" value="1" min="1" max="31" /> of every
                                        <input type="number" class="form-control w-25 ms-2" style="margin-right: 0.5rem !important;" id="imonthly1" value="1" min="1" /> month(s)
                                    </span>
                                </div>
                                <div class="form-group text-black font-weight-semibold d-none" id="yearly_content">
                                    <label class="form-label"> &nbsp;</label>
                                    <span class="d-flex align-items-center">
                                        Every&nbsp;
                                        <select class="form-control select2 custom-select" id="iyearly">
                                            <option value="0">January</option>
                                            <option value="1">Februrary</option>
                                            <option value="2">March</option>
                                            <option value="3">April</option>
                                            <option value="4">May</option>
                                            <option value="5">June</option>
                                            <option value="6">July</option>
                                            <option value="7">August</option>
                                            <option value="8">September</option>
                                            <option value="9">October</option>
                                            <option value="10">November</option>
                                            <option value="11">December</option>
                                        </select>
                                        <input type="number" class="form-control w-25 ms-2" style="margin-right: 0.5rem !important;" id="iyearly1" value="1" min="1" max="31" />
                                    </span>
                                </div>
                            </div>
                            <div class="col-sm-1 col-md-1 col-lg-1 d-lg-block d-sm-none" style="max-width:fit-content;">
                                <div class="vr" style="min-height:10em"></div>
                            </div>
                            <div class="col-sm-6 col-md-6 col-lg-3">
                                <div class="form-group mb-0">
                                    <label class="form-label" title="">End Date &nbsp;<span class="text-danger">*</span></label>
                                </div>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">
                                            <i class="fe fe-calendar"></i>
                                        </div>
                                    </div>
                                    @Html.TextBoxFor(model => model.app_tdate, new { @class = "form-control", @placeholder = "YYYY-MM-DD" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-sm-12 col-md-6 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Is it an Emergency ?</label>
                    @Html.DropDownListFor(m => m.app_emergency, new List<SelectListItem>
                    {
                        new SelectListItem{ Value="NO", Text="NO", Selected=true},
                        new SelectListItem{ Value="YES", Text="YES"}
                    }, "Emergency Type", new { @class = "form-select select2 mb-4" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Category&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_category, new List<SelectListItem>
                    {
                        new SelectListItem{ Value="MOH", Text="MOH - Riayati"},
                        new SelectListItem{ Value="DHA", Text="DHA - Dubai"},
                        new SelectListItem{ Value="DOH", Text="DOH - Abu Dhabi"},
                    }, "Insurance Type", new { @class = "form-select select2 mb-4" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Eligibility Ref. </label>
                    @Html.TextBoxFor(model => model.app_eligibility, new { @class = "form-control mb-4", @placeholder = "Eligibility #", @maxlenth = "50" })
                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-lg-6">
                <div class="form-group">
                    <label class="form-label"> Comments/Remarks</label>
                    @Html.TextAreaFor(model => model.app_comments, new { @class = "form-control mb-4", @placeholder = "Enter comments/Feedback of Appointment", @rows = "2", @maxlenth = "500" })
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-sm-12 col-lg-12 text-center">
                <button type="submit" class="btn btn-success" id="btn_Insert">Create Appointment</button>
                <button type="button" class="btn btn-outline-danger me-1" data-bs-dismiss="modal">
                    Close
                </button>
            </div>
        </div>

    </form>
</div>
<script type="text/javascript">
    //#region Document Load
    $(function () {
        $("#divPackageOrderInfo").hide();

        $("#app_inout").select2({
            placeholder: 'Select Visit Type',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Appointment')
        });
        $("#app_riayathiConsent").select2({
            placeholder: 'Select Visit Type',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Appointment')
        });
        $("#app_branch").select2({
            placeholder: 'Select a Branch',
            maximumInputLength: 6,
            width: '100%',
            dropdownParent: $('#form_Appointment')
        });

        $("#app_room").select2({
            placeholder: 'Select a Room',
            width: '100%',
            maximumInputLength: 6,
            dropdownParent: $('#form_Appointment')
        });

        $("#app_doctor").select2({
            placeholder: 'Select a Doctor',
            width: '100%',
            maximumInputLength: 6,
            dropdownParent: $('#form_Appointment')
        });

        $('#app_fdate').bootstrapdatepicker({
            format: "yyyy-mm-dd",
            viewMode: "date",
            todayHighlight: true,
            autoclose: true,
            multidate: false,
            multidateSeparator: "-",
            startDate: new Date()
        });

        $('#app_tdate').bootstrapdatepicker({
            format: "yyyy-mm-dd",
            viewMode: "date",
            todayHighlight: true,
            autoclose: true,
            multidate: false,
            multidateSeparator: "-"
        });

        $("#app_ftime").select2({
            placeholder: 'Select a TimeSlot',
            width: '100%',
            maximumInputLength: 5,
            dropdownParent: $('#form_Appointment')
        });

        $("#app_ttime").select2({
            placeholder: 'Select a TimeSlot',
            width: '100%',
            maximumInputLength: 5,
            dropdownParent: $('#form_Appointment')
        });

        $("#app_patient").select2({
            placeholder: 'Select a Patient',
            width: '100%',
            dropdownParent: $('#form_Appointment'),
            minimumInputLength: 3,
            maximumInputLength: 15,
            escapeMarkup: function (markup) {
                return markup;
            },
            ajax: {
                url: '@Url.Action("SearchPatients", "Appointment", new { area = "Appointment" })',
                dataType: 'json',
                delay: 250,
                data: function (query) {
                    return {
                        query: query.term,
                        type: $("input[name='rdo_s_patient']:checked").val()
                    };
                },
                processResults: function (data) {
                    //console.log(data);
                    return {
                        results: data
                    };
                },
                cache: true
            },

        });

         // Set the default value for app_patient
        var appInsValue = @Model.app_patient; // Make sure app_ins is an integer
        if (appInsValue > 0) {
            //console.log(appInsValue);
            setPatient(@Model.app_patient);
        }

        $("#app_type").select2({
            placeholder: 'Select Type',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Appointment')
        });

        $("#app_status").select2({
            placeholder: 'Select Status',
            width: '100%',
            maximumInputLength: 5,
            dropdownParent: $('#form_Appointment')
        });

        $("#app_emergency").select2({
            placeholder: 'Select Emergency Type',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Appointment')
        });

        $("#app_package_order").select2({
            placeholder: 'Select Package Order',
            maximumInputLength: 10,
            width: '100%',
            dropdownParent: $('#form_Appointment')
        });
        $('#app_service').SumoSelect({
            placeholder: "Select Service(s)",
            csvDispCount: 3,
            okCancelInMulti: true,
            isClickAwayOk: true,
            search: true,
            searchText: 'Enter here.',
            selectAll: true,
            dropdownParent: $('#form_Appointment')
        });

        $("#app_category").select2({
            placeholder: 'Select Insurance Type',
            width: '100%',
            minimumResultsForSearch: -1,
            dropdownParent: $('#form_Appointment')
        });

        validation();

        setTimeout(function () {
            $('.select2-selection__rendered').removeAttr('title');
        }, 100);
    });
    //#endregion

    //#region Change  Nabid/Malaffi/Riyathi
    $('#app_branch').on('select2:select', function (e) {
        var data = e.params.data;
        if ($("#app_branch").val() > 0) {
            $.ajax({
                url: '@Url.Action("GetSetupinfo", "Employees", new { area = "Masters" })?setId=' + $("#app_branch").val(),
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    if (response.length > 0) {
                        var _type = response[0].set_mnr;
                        if (_type == "Riayati") {
                            $('.Nabidh').addClass("d-none");
                            $('.Riayati').removeClass("d-none");
                        }
                        else {
                            $('.Nabidh').removeClass("d-none");
                            $('.Riayati').addClass("d-none");
                        }
                    }
                },
                error: function (xhr) {
                    console.log("Failed to Load Specilaities! Error : " + xhr.statusText);
                }
            }).done(function () {
            });

        }
        else {

        }

    });
    //#endregion

    //#region Set Patient Details
         var setPatient = function (app_ins) {
             $.ajax({
                 url: '@Url.Action("SearchPatients", "Appointment", new { area = "Appointment" })?query=' + app_ins +'&type=5',
                 type: "GET",
                 dataType: "json",
                 async: false,
                 success: function (response) {
                     var data = {
                         "id": response[0].id,
                         "text": response[0].text,
                     };

                     $("#pat_name").val(response[0].text);

                     var newOption = new Option(response[0].text, response[0].id, true, true);
                     $('#app_patient').append(newOption).trigger('change');

                     $('#app_patient').trigger({
                         type: 'select2:select',
                         params: {
                             data: data
                         }
                     });
                 },
                 error: function (xhr) {
                     console.log(xhr);
                     alert(xhr);
                 }
             });
         }
    //#endregion

    //#region Validation Initialization
    var validation = function () {
        $("#form_Appointment").validate({
            focusInvalid: true,
            rules:
            {
                app_branch: {
                    required: true
                },
                app_room: {
                    required: true
                },
                app_doctor: {
                    required: true
                },
                app_fdate: {
                    required: true
                },
                app_tdate: {
                    required: true
                },
                app_ftime: {
                    required: true
                },
                app_ttime: {
                    required: true
                },
                app_patient: {
                    required: true
                },
                app_type: {
                    required: true
                },
                app_status: {
                    required: true
                },
                app_category: {
                    required: true
                }
            },
            messages: {
                app_branch: {
                    required: "Select the Branch"
                },
                app_room: {
                    required: "Select A Room"
                },
                app_doctor: {
                    required: "Select the Doctor"
                },
                app_fdate: {
                    required: "Select Appointment Start Date"
                },
                app_tdate: {
                    required: "Select Appointment End Date"
                },
                app_ftime: {
                    required: "Select From time"
                },
                app_ttime: {
                    required: "Select To time"
                },
                app_patient: {
                    required: "Select the Patient"
                },
                app_type: {
                    required: "Select the Followup Type"
                },
                app_status: {
                    required: "Select the Appointment Status"
                },
                app_category: {
                    required: "Select Category"
                }
            },
            highlight: function (element) {
                var elem = $(element);

                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                } else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });

        $('#app_branch').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_room').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_doctor').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_fdate').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_tdate').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_ftime').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_ttime').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_patient').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_type').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_status').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_category').on('change', function () {
            $(this).trigger('blur');
        });

        $('#app_fdate').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                return false;

            }
            else {
                if (e.target.value.length >= 12)
                    return false;
            }
        });
        $('#app_tdate').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                return false;

            }
            else {
                if (e.target.value.length >= 12)
                    return false;
            }
        });
    };
    //#endregion

    //#region Patient Select Event
    $('#app_patient').on('select2:select', function (e) {
        var dataToStore = {
            patient: $('#app_patient').val(),
            branch: $('#app_branch').val()
        };
        localStorage.setItem("patientData", JSON.stringify(dataToStore));
        var _app_fdate = $('#app_fdate').val();
        var _app_doctor = $('#app_doctor').val();
        var data = e.params.data;

        if (data.id > 0) {

            $.ajax({
                url: '@Url.Action("GetPackageOrders", "Appointment", new { area = "Appointment" })?app_ins=' + data.id,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    var _data = response;
                    if (_data.length > 0) {

                        $.each(response, function (j) {
                            var newOption = new Option(response[j].po_details, response[j].poId, false,  false);
                            $('#app_package_order').append(newOption).trigger('change');
                        });

                        if ($('#btnAppRecurring').is(":checked"))
                        {
                            $("#divPackageOrderInfo").hide();
                        }
                        else
                        {
                            $("#divPackageOrderInfo").hide();
                        }
                    }
                    else {
                        $("#divPackageOrderInfo").hide();
                    }
                    //console.log(response);
                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr.statusText);
                }
            });

            if (!(_app_fdate === undefined || _app_fdate === "" || _app_fdate === null) && !(_app_doctor === undefined || _app_doctor === 0 || _app_doctor === "" || _app_doctor === null))
            {
                $.ajax({
                    url: '@Url.Action("GetAppointmentFollowupStatus", "Appointment", new { area = "Appointment" })?piId=' + data.id + "&app_doctor=" + _app_doctor + "&app_fdate=" + _app_fdate ,
                    type: "GET",
                    dataType: "json",
                    async: false,
                    success: function (response) {
                        if (response !== null && response !== "") {
                            $('#app_type').val(response).trigger('change');
                        }
                        else {
                            $('#app_type').val("First Time").trigger('change');
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr);
                        alert(xhr.statusText);
                    }
                });
            }

            $.ajax({
                url: '@Url.Action("GetEMIDExpiry", "Appointment", new { area = "Appointment" })?piId=' + data.id,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    if (response.length > 0) {
                        let id_card_edate = moment(response[0].id_card_edate);
                        let pat_emirateid = response[0].pat_emirateid;

                        if (pat_emirateid != "") {
                            if (id_card_edate.isValid()) {
                                let today = moment();
                                if (id_card_edate.diff(today, 'days') <= 0) {
                                Swal.fire({
                                    title: "EMID Expired!",
                                    html: "We've Identified, the Emirates ID of this patient was expired on <strong style='color:red;'>" + moment(id_card_edate).format("DD-MMMM-YYYY") + "</strong>.<br/> Do you wish to proceed to Book Appointment for this Patient ?",
                                    icon: "warning",
                                    showCancelButton: !0,
                                    confirmButtonText: 'Yes! I Confirm',
                                    cancelButtonText: 'No! Cancel',
                                    confirmButtonClass: "btn btn-success mt-2",
                                    cancelButtonClass: "btn btn-danger ms-2 mt-2",
                                    buttonsStyling: !1
                                }).then(function (t) {
                                    if (!t.value) {
                                        $("#app_patient").val("");
                                        $("#app_patient").text("");
                                        $('#app_type').val("First Time").trigger('change');
                                    }
                                });
                            }
                            }
                        }
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    console.log("Error : " + xhr.statusText);
                }
            });
        }
    });
    //#endregion

    //#region Package Order Select Event
    $('#app_package_order').on('select2:select', function (e) {
        $('#app_service').SumoSelect({
            placeholder: 'Select Service(s)',
            captionFormat: '{0} Service(s) Selected',
            captionFormatAllSelected: 'All {0} Service selected!',
            csvDispCount: 3,
            okCancelInMulti: true,
            isClickAwayOk: true,
            search: true,
            searchText: 'Search here...',
            selectAll: true,
            dropdownParent: $('#form_Appointment'),
        });
        var piId = $('#app_patient').val();
        var data = e.params.data;

        if (data.id > 0) {
            $.ajax({
                url: '@Url.Action("GetPackageOrderServices", "Appointment", new { area = "Appointment" })?piId=' + piId + '&poId=' + data.id,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    if (response.length > 0) {

                        $('#app_service').html('');
                        $('#app_service')[0].sumo.reload();

                        $.each(response, function (j) {
                            $('#app_service')[0].sumo.add(response[j].psId, response[j].ps_info);
                        });
                        $('#app_service')[0].sumo.reload();
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr.statusText);
                }
            });
        }
    });
    //#endregion

    //#region Book Appointment Click
    $('#btn_Insert').on('click', function (e) {
        e.preventDefault();

        if ($("#form_Appointment").valid()) {

            let isValid = true;
            var app_tdate = moment($("#app_fdate").val()).format("YYYY-MM-DD");

            var pattern = "none";
            var app_rec_days = 0;
            var app_rec_daily;

            var app_days_week;
            var app_days_month=0;

            let app_f = moment($("#app_fdate").val());
            let app_t = moment($("#app_tdate").val());
            // Check if Date From is a valid Date
            if ($("#app_fdate").val() != null && $("#app_fdate").val() != 0 && $("#app_fdate").val() != "" && $("#app_fdate").val() != undefined) {
                if (!app_f.isValid()) {
                    isValid = false;
                    e.stopPropagation();
                    return $.growl.error({
                        title: "Error",
                        message: "Invalid Appointment From Date!"
                    });
                }
            }
            // Check if Date To is a valid Date
            if ($("#app_tdate").val() != null && $("#app_tdate").val() != 0 && $("#app_tdate").val() != "" && $("#app_tdate").val() != undefined) {
                if (!app_t.isValid()) {
                    isValid = false;
                    e.stopPropagation();
                    return $.growl.error({
                        title: "Error",
                        message: "Invalid Appointment To Date!"
                    });
                }
            }
            // Check if Time Range is valid
            var startTime = moment($("#app_ftime :selected").text(), "HH:mm");
            var endTime = moment($("#app_ttime :selected").text(), "HH:mm");
            if (endTime.diff(startTime, 'minutes') <= 0) {
                isValid = false;
                var index = [];
                index.push("app_ftime");
                index.push("app_ttime");

                $.each(index, function (i, v) {
                    if (index[i] != null && index[i] != "") {
                        var elem = $("#" + index[i]);
                        if (elem.hasClass("select2-hidden-accessible")) {
                            $("#select2-" + elem.attr("id") + "-container").parent().addClass(' error');
                        }
                        else {
                            $(elem).removeClass("is-invalid");
                        }

                        setTimeout(function () {
                            if (elem.hasClass("select2-hidden-accessible")) {
                                $("#select2-" + elem.attr("id") + "-container").parent().removeClass(' error');
                            }
                            else {
                                $(elem).removeClass("is-invalid");
                            }
                        }, 5000);
                    }
                });

                e.stopPropagation();

                return $.growl.error({
                    title: "Error!",
                    message: "Apointment From Time should be less than To Time!"
                });
            }
            // Check Recurring Apointment
            if ($('#btnAppRecurring').is(":checked")) {
                // Recurring Pattern (Daily, Weekly, Monthly)
                pattern = $("input[name='rdo_app_recurr']:checked").val();

                if (pattern == "daily") {
                    // Check if Date Range is valid
                    if (($("#app_fdate").val() != null && $("#app_fdate").val() != 0 && $("#app_fdate").val() != "" && $("#app_fdate").val() != undefined) && ($("#app_tdate").val() != null && $("#app_tdate").val() != 0 && $("#app_tdate").val() != "" && $("#app_tdate").val() != undefined)) {
                        if (app_f.isValid() && app_t.isValid()) {

                            if (app_t.diff(app_f, 'days') == 0) {
                                isValid = false;

                                var index = [];
                                index.push("app_fdate");
                                index.push("app_tdate");

                                $.each(index, function (i, v) {
                                    if (index[i] != null && index[i] != "") {
                                        var elem = $("#" + index[i]);
                                        $(elem).addClass(" is-invalid");

                                        setTimeout(function () {
                                            $(elem).removeClass("is-invalid");
                                        }, 5000);
                                    }
                                });

                                e.stopPropagation();

                                return $.growl.error({
                                    title: "Error!",
                                    message: "Apointment End Date has to be greater than Start Date For Selected Recurring Pattern!"
                                });
                            }
                            else if (app_t.diff(app_f, 'days') < 0) {
                                isValid = false;

                                var index = [];
                                index.push("app_fdate");
                                index.push("app_tdate");

                                $.each(index, function (i, v) {
                                    if (index[i] != null && index[i] != "") {
                                        var elem = $("#" + index[i]);
                                        $(elem).addClass(" is-invalid");

                                        setTimeout(function () {
                                            $(elem).removeClass("is-invalid");
                                        }, 5000);
                                    }
                                });

                                e.stopPropagation();

                                return $.growl.error({
                                    title: "Error!",
                                    message: "Apointment Start Date should be less than or equal to End Date!"
                                });
                            }
                        }
                    }
                    // Daily Validations
                    app_rec_days = $("#idaily").val();

                    app_rec_daily = $("input[name='rdo_daily']:checked").val();

                    app_tdate = moment($("#app_tdate").val()).format("YYYY-MM-DD");
                    if (app_rec_days == "") {
                        isValid = false;
                        e.stopPropagation();
                        var index = [];
                        index.push("idaily");

                        $.each(index, function (i, v) {
                            if (index[i] != null && index[i] != "") {
                                var elem = $("#" + index[i]);
                                $(elem).addClass(" is-invalid");

                                setTimeout(function () {
                                    $(elem).removeClass("is-invalid");
                                }, 5000);
                            }
                        });

                        return $.growl.error({
                            title: "Error!",
                            message: "Please Enter day(s)!"
                        });
                    }
                }
                else if (pattern == "weekly") {
                    // Check if Date Range is valid
                    if (($("#app_fdate").val() != null && $("#app_fdate").val() != 0 && $("#app_fdate").val() != "" && $("#app_fdate").val() != undefined) && ($("#app_tdate").val() != null && $("#app_tdate").val() != 0 && $("#app_tdate").val() != "" && $("#app_tdate").val() != undefined)) {
                        if (app_f.isValid() && app_t.isValid()) {
                            if (app_t.diff(app_f, 'days') < 7) {
                                isValid = false;

                                var index = [];
                                index.push("app_fdate");
                                index.push("app_tdate");

                                $.each(index, function (i, v) {
                                    if (index[i] != null && index[i] != "") {
                                        var elem = $("#" + index[i]);
                                        $(elem).addClass(" is-invalid");

                                        setTimeout(function () {
                                            $(elem).removeClass("is-invalid");
                                        }, 5000);
                                    }
                                });

                                e.stopPropagation();

                                return $.growl.error({
                                    title: "Error!",
                                    message: "Apointment End Date should be minimum 7 days For Selected Recurring Pattern!"
                                });
                            }
                            else if (app_t.diff(app_f, 'days') < 0) {
                                isValid = false;

                                var index = [];
                                index.push("app_fdate");
                                index.push("app_tdate");

                                $.each(index, function (i, v) {
                                    if (index[i] != null && index[i] != "") {
                                        var elem = $("#" + index[i]);
                                        $(elem).addClass(" is-invalid");

                                        setTimeout(function () {
                                            $(elem).removeClass("is-invalid");
                                        }, 5000);
                                    }
                                });

                                e.stopPropagation();

                                return $.growl.error({
                                    title: "Error!",
                                    message: "Apointment Start Date should be less than or equal to End Date!"
                                });
                            }
                        }
                    }
                    // Validate Textbox
                    app_rec_days = $("#iweekly").val();
                    if (app_rec_days == "") {
                        e.stopPropagation();
                        isValid = false;

                        var index = [];
                        index.push("iweekly");

                        $.each(index, function (i, v) {
                            if (index[i] != null && index[i] != "") {
                                var elem = $("#" + index[i]);
                                $(elem).addClass(" is-invalid");

                                setTimeout(function () {
                                    $(elem).removeClass("is-invalid");
                                }, 5000);
                            }
                        });

                        return $.growl.error({
                            title: "Error!",
                            message: "Please enter no. of week(s) to recur!"
                        });
                    }
                    // Validate Checkboxes
                    app_days_week = $.map($(':checkbox[name=week_day]:checked'), function (n, i) {
                        return n.value;
                    }).join(',');

                    if (app_days_week == "") {
                        e.stopPropagation();
                        isValid = false;

                        return $.growl.error({
                            title: "Error!",
                            message: "Please check day(s) of the week!"
                        });
                    }
                    app_tdate = moment($("#app_tdate").val()).format("YYYY-MM-DD");
                }
                else if (pattern == "monthly") {
                    // Check if Date Range is valid
                    if (($("#app_fdate").val() != null && $("#app_fdate").val() != 0 && $("#app_fdate").val() != "" && $("#app_fdate").val() != undefined) && ($("#app_tdate").val() != null && $("#app_tdate").val() != 0 && $("#app_tdate").val() != "" && $("#app_tdate").val() != undefined)) {
                        if (app_f.isValid() && app_t.isValid()) {
                            if (app_t.diff(app_f, 'days') < 30) {
                                isValid = false;

                                var index = [];
                                index.push("app_fdate");
                                index.push("app_tdate");

                                $.each(index, function (i, v) {
                                    if (index[i] != null && index[i] != "") {
                                        var elem = $("#" + index[i]);
                                        $(elem).addClass(" is-invalid");

                                        setTimeout(function () {
                                            $(elem).removeClass("is-invalid");
                                        }, 5000);
                                    }
                                });

                                e.stopPropagation();

                                return $.growl.error({
                                    title: "Error!",
                                    message: "Apointment End Date should be minimum 1 month!"
                                });
                            }
                            else if (app_t.diff(app_f, 'days') < 0) {
                                isValid = false;

                                var index = [];
                                index.push("app_fdate");
                                index.push("app_tdate");

                                $.each(index, function (i, v) {
                                    if (index[i] != null && index[i] != "") {
                                        var elem = $("#" + index[i]);
                                        $(elem).addClass(" is-invalid");

                                        setTimeout(function () {
                                            $(elem).removeClass("is-invalid");
                                        }, 5000);
                                    }
                                });

                                e.stopPropagation();

                                return $.growl.error({
                                    title: "Error!",
                                    message: "Apointment Start Date should be less than or equal to End Date!"
                                });
                            }
                        }
                    }
                    app_days_month = $("#imonthly").val();
                    app_rec_days = $("#imonthly1").val();
                    app_tdate = moment($("#app_tdate").val()).format("YYYY-MM-DD");
                }
                else if (pattern == "yearly") {
                    // Check if Date Range is valid
                    if (($("#app_fdate").val() != null && $("#app_fdate").val() != 0 && $("#app_fdate").val() != "" && $("#app_fdate").val() != undefined) && ($("#app_tdate").val() != null && $("#app_tdate").val() != 0 && $("#app_tdate").val() != "" && $("#app_tdate").val() != undefined)) {
                        if (app_f.isValid() && app_t.isValid()) {
                            if (app_t.diff(app_f, 'days') < 366) {
                                isValid = false;

                                var index = [];
                                index.push("app_fdate");
                                index.push("app_tdate");

                                $.each(index, function (i, v) {
                                    if (index[i] != null && index[i] != "") {
                                        var elem = $("#" + index[i]);
                                        $(elem).addClass(" is-invalid");

                                        setTimeout(function () {
                                            $(elem).removeClass("is-invalid");
                                        }, 5000);
                                    }
                                });

                                e.stopPropagation();

                                return $.growl.error({
                                    title: "Error!",
                                    message: "Apointment End Date should be minimum 1 year!"
                                });
                            }
                            else if (app_t.diff(app_f, 'days') < 0) {
                                isValid = false;

                                var index = [];
                                index.push("app_fdate");
                                index.push("app_tdate");

                                $.each(index, function (i, v) {
                                    if (index[i] != null && index[i] != "") {
                                        var elem = $("#" + index[i]);
                                        $(elem).addClass(" is-invalid");

                                        setTimeout(function () {
                                            $(elem).removeClass("is-invalid");
                                        }, 5000);
                                    }
                                });

                                e.stopPropagation();

                                return $.growl.error({
                                    title: "Error!",
                                    message: "Apointment Start Date should be less than or equal to End Date!"
                                });
                            }
                        }
                    }

                    app_days_month = $("#iyearly").val();
                    app_rec_days = $("#iyearly1").val();
                    app_tdate = moment($("#app_tdate").val()).format("YYYY-MM-DD");
                }
            }
            var _toast_html = "";
            var _app_service = "0";
            var _app_package_order = "";

            _app_service = $("#app_service").val().join(', '),
            _app_package_order = $("#app_package_order").val();

            var app_inout_ = $("#app_inout").val();

            if ($("#app_riayathiConsent").val() != "") {
                app_inout_ = $("#app_riayathiConsent").val();
            }

            var _appData = {
                "app_room"              : $("#app_room").val(),
                "app_fdate"             : moment($("#app_fdate").val()).format("YYYY-MM-DD"),
                "app_tdate"             : app_tdate,
                "app_ftime"             : $("#app_ftime").val(),
                "app_ttime"             : $("#app_ttime").val(),
                "app_doc_ftime"         : $("#app_ftime :selected").text(),
                "app_doc_ttime"         : $("#app_ttime :selected").text(),
                "app_ins"               : $("#app_patient").val(),
                "app_doctor"            : $("#app_doctor").val(),
                "app_type"              : $("#app_type").val(),
                "app_status"            : $("#app_status").val(),
                "app_branch"            : $("#app_branch").val(),
                "app_inout"             : app_inout_,
                "app_emergency"         : $("#app_emergency").val(),
                "app_eligibility"       : $("#app_eligibility").val(),
                "app_reason_for_visit"  : $("#app_comments").val(),
                "app_package_order"     : _app_package_order,
                "app_comments"          : $("#app_comments").val(),
                "app_service"           : _app_service,
                "app_category"          : $("#app_category").val(),
                "app_rec_pattern"       : pattern,
                "app_rec_daily"         : app_rec_daily,
                "app_rec_days"          : app_rec_days,
                "app_days_week"         : app_days_week,
                "app_days_month"        : app_days_month,

            }

            if (isValid) {
                if (pattern == "none") {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("InsertAppointment", "Appointment", new { area = "Appointment" })",
                        dataType: 'json',
                        data: _appData,
                        success: function (response) {

                            let _id = parseInt(response.value);
                            var msg = JSON.stringify(response.message);
                            var _toast_html = "";

                            if (_id !== undefined && _id !== "" && _id !== null) {
                                if (_id === -2) {
                                    _toast_html = toast_html('error', 'Appointment', '<i class="fe fe-alert-triangle me-2 text-warning"></i> Appointment already exists with the same Room!');
                                }
                                if (_id === -1) {
                                    _toast_html = toast_html('warning', 'Appointment', '<i class="fe fe-alert-triangle me-2 text-warning"></i> Appointment already exists with the same details!');
                                }
                                else if (_id > 0) {
                                    _toast_html = toast_html('success', 'Appointment', '<i class="fe fe-check-circle me-2 text-success"></i> ' + msg + '!');

                                    Calendar.init();
                                }
                                else {
                                    _toast_html = toast_html('error', 'Appointment', '<i class="fe fe-slash me-2 text-danger"></i> Failed to Book Appointment. Please Try Again!');
                                }
                            }
                            else {
                                _toast_html = toast_html('error', 'Appointment', '<i class="fe fe-slash me-2 text-danger"></i> Failed to Book Appointment. Please Try Again!');
                            }

                            $('#create_appointment_modal').modal('toggle');
                            var calenderToast = document.getElementById('calenderToast');
                            calenderToast.innerHTML = _toast_html;
                            var toast = new bootstrap.Toast(calenderToast)
                            toast.show();
                        },
                        error: function (xhr) {
                            console.log(xhr);
                            $('#create_appointment_modal').modal('toggle');

                            var _toast_html = toast_html('error', 'Appointment', 'Error while Booking Appointment! ' + xhr.statusText);
                            var calenderToast = document.getElementById('calenderToast');
                            calenderToast.innerHTML = _toast_html;
                            var toast = new bootstrap.Toast(calenderToast)
                            toast.show();
                        }
                    });
                }
                else {
                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("BulkAppointmentsOverview", "Appointment", new { area = "Appointment" })",
                        dataType: 'html',
                        data: _appData,
                        success: function (response) {
                            $("#confirm_modal_body").html(response);
                            $("#confirm_modal").modal("show");
                        },
                        error: function (xhr) {
                            console.log(xhr);
                            $('#create_appointment_modal').modal('toggle');

                            var _toast_html = toast_html('error', 'Appointment', 'Error while Booking Appointments! ' + xhr.statusText);
                            var calenderToast = document.getElementById('calenderToast');
                            calenderToast.innerHTML = _toast_html;
                            var toast = new bootstrap.Toast(calenderToast)
                            toast.show();
                        }
                    });
                }
            }
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });
    //#endregion

    //#region Branch Selection
    $('#app_branch').on('select2:select', function (e) {
        var data = e.params.data;
        if (data.id > 0) {
            loadRoomsByBranch(data);
            loadDoctorsByBranch(data);
        }
    });
    //#endregion

    //#region Load Rooms By Branch
    var loadRoomsByBranch = function (data) {
         $.ajax({
            url: '@Url.Action("GetRoomsByBranch", "Appointment", new { area = "Appointment" })?app_branch=' + data.id,
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                //console.log(response);
                $('#app_room').empty();
                var _data = response;
                if (_data.length > 0) {
                    $.each(response, function (j) {
                        var newOption = new Option(response[j]["Text"], response[j]["Value"], (@Model.app_room === response[j]["Value"]) ? true :false,  (@Model.app_room === response[j]["Value"]) ? true :false);
                        $('#app_room').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
                alert(xhr);
            }
        });
    }
    //#endregion

    //#region Load Doctors By Branch
    var loadDoctorsByBranch = function (data) {
         $.ajax({
            url: '@Url.Action("GetDoctorsByBranch", "Appointment", new { area = "Appointment" })?app_branch=' + data.id,
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                //console.log(response);
                $('#app_doctor').empty();
                var _data = response;
                if (_data.length > 0) {
                    $.each(response, function (j) {
                        var newOption = new Option(response[j]["Text"], response[j]["Value"],  (@Model.app_doctor === response[j]["Value"]) ? true :false,  (@Model.app_doctor === response[j]["Value"]) ? true :false);
                        $('#app_doctor').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
                alert(xhr);
            }
        });
    }
    //#endregion

    //#region Toast Body
    var toast_html = function (type, heading, content) {
        var div = "";

        if (type === "success") {
            div = '<div class="toast-header bg-success text-white">';
        }
        else if (type === "error") {
            div = '<div class="toast-header bg-danger text-white">';
        }
        else if (type === "info") {
            div = '<div class="toast-header bg-info text-white">';
        }
        else if (type === "warning") {
            div = '<div class="toast-header bg-warning text-white">';
        }
        else {
            div = '<div class="toast-header bg-primary text-white">';
        }

        var html = div +
            '<img src="../../assets/images/brand/favicon.png" class="rounded me-2" alt="CS9" height="16"><strong class="me-auto">' + heading +'</strong>' +
            '<small>just now</small>' +
            '<button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close">' +
            '<span aria-hidden="true">×</span>' +
            '</button>' +
            '</div>' +
            '<div class="toast-body">' +
            content
            '</div>';

        return html;
    }
    //#endregion

    //#region Create Patient
    $('#btnCreatePatient').on('click', function (e) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("CreatePatient", "Patient", new { area = "Patient" })",
            contentType: "application/json",
            dataType: "html",
            //data: app,
            success: function (data) {
                $('#create_appointment_modal').modal('hide');
                $('#create_patient_modal').attr("data-modal-from", "create-appointment");

                $("#create_patient_modal_body").html(data);
                $('#create_patient_modal').modal('show');
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    });
    //#endregion

    //#region Create Patient On Modal Close
    $('#create_patient_modal').on('hidden.bs.modal', function () {
        if (localStorage.getItem("newPatient") != null) {
            var patient = JSON.parse(localStorage.getItem("newPatient"));
            setPatient(patient.piId);
            localStorage.removeItem("newPatient");
        }
    });
    //#endregion

    //#region Create Enquiry
    $('#btnCreateEnquiry').on('click', function (e) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("CreateInquiryPatient", "Patient", new { area = "Patient" })",
            contentType: "application/json",
            dataType: "html",
            success: function (data) {
                $('#create_appointment_modal').modal('hide');
                $('#inquiry_modal').attr("data-modal-from", "create-appointment");

                $("#inquiry_modal_body").html(data);
                $('#inquiry_modal').modal('show');
            },
            error: function (xhr) {
                console.log("Error : " + xhr.statusText);
            }
        });
    });
    //#endregion

    //#region Create Enquiry Patient On Modal Close
    $('#inquiry_modal').on('hidden.bs.modal', function () {
        if (localStorage.getItem("newInquiry") != null) {
            var patient = JSON.parse(localStorage.getItem("newInquiry"));

            setPatient(patient.piId);

            $('#app_status').val("Enquiry").trigger("change");

            localStorage.removeItem("newInquiry");
        }
    });
    //#endregion

    //#region Set Patient Details
    var setPatient = function (app_ins) {
        $.ajax({
            url: '@Url.Action("SearchPatients", "Appointment", new { area = "Appointment" })?query=' + app_ins +'&type=5',
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                var data = {
                    "id": response[0].id,
                    "text": response[0].text,
                };

                var newOption = new Option(response[0].text, response[0].id, true, true);
                $('#app_patient').append(newOption).trigger('change');

                $('#app_patient').trigger({
                    type: 'select2:select',
                    params: {
                        data: data
                    }
                });
            },
            error: function (xhr) {
                console.log(xhr);
                alert(xhr.statusText);
            }
        });
    }
    //#endregion

    //#region Recurring Appointment
    $('input[id^="btnAppRecurring"]').click(function () {
        if ($(this).prop('checked')) {
            $("#collapseRecurring").addClass("show");
            $('input:radio[name="rdo_app_recurr"]').filter(`[value="daily"]`).prop('checked', true).trigger("change");
            $('input:radio[name="rdo_daily"]').filter(`[value="rd_daily"]`).prop('checked', true).trigger("change");
            $("#daily_content").removeClass("d-none");
            $("#weekly_content").addClass("d-none");
            $("#monthly_content").addClass("d-none");
            $("#yearly_content").addClass("d-none");
            $("#imonthly").val(new Date().getDate());
            $("#iyearly1").val(new Date().getDate());
            $("#iyearly").select2({
                placeholder: 'Select Month',
                width: '50%',
                dropdownParent: $("#form_Appointment")
            });
            $("#iyearly").val(new Date().getMonth()).trigger('change');
            $("#divPackageOrderInfo").hide();
        }
        else {
            $("#collapseRecurring").removeClass("show");

            if ($('#app_patient').val() > 0) {
                $.ajax({
                    url: '@Url.Action("GetPackageOrders", "Appointment", new { area = "Appointment" })?app_ins=' + $('#app_patient').val(),
                    type: "GET",
                    dataType: "json",
                    async: false,
                    success: function (response) {
                        var _data = response;
                        if (_data.length > 0) {

                            $.each(response, function (j) {
                                var newOption = new Option(response[j].po_details, response[j].poId, false,  false);
                                $('#app_package_order').append(newOption).trigger('change');
                            });

                            $("#divPackageOrderInfo").hide();
                        }
                        else {
                            $("#divPackageOrderInfo").hide();
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr.statusText);
                    }
                });
            }
        }
    });

    $('input[type=radio][name=rdo_app_recurr]').change(function () {
        if ($(this).val() == 'daily') {
            $("#daily_content").removeClass("d-none");
            $("#weekly_content").addClass("d-none");
            $("#monthly_content").addClass("d-none");
            $("#yearly_content").addClass("d-none");
            $("#app_tdate").bootstrapdatepicker("setDate", "+1w");
        }
        else if ($(this).val() == 'weekly') {
            $("#weekly_content").removeClass("d-none");
            $("#daily_content").addClass("d-none");
            $("#monthly_content").addClass("d-none");
            $("#yearly_content").addClass("d-none");
            var today = moment().format('dddd');
            $("#" + today).prop('checked', true);
            $("#app_tdate").bootstrapdatepicker("setDate", "+10w");

        }
        else if ($(this).val() == 'monthly') {
            $("#daily_content").addClass("d-none");
            $("#weekly_content").addClass("d-none");
            $("#monthly_content").removeClass("d-none");
            $("#yearly_content").addClass("d-none");
            $("#app_tdate").bootstrapdatepicker("setDate", "+6m");
        }
        else if ($(this).val() == 'yearly') {
            $("#daily_content").addClass("d-none");
            $("#weekly_content").addClass("d-none");
            $("#monthly_content").addClass("d-none");
            $("#yearly_content").removeClass("d-none");
            $("#app_tdate").bootstrapdatepicker("setDate", "+10y");
        }
    });
    //#endregion

    //#region Create Patient
    @*$('#btnCreatePackageOrder').on('click', function (e) {
        if ($('#app_patient').val() > 0) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("CreatePatientPackage", "Packages", new { area = "EMR" })",
                contentType: "application/json",
                dataType: "html",
                //data: app,
                success: function (data) {
                    $('#create_appointment_modal').modal('hide');
                    $('#patient_package_modal').attr("data-modal-from", "create-appointment");
                    $("#patient_package_body").html(data);
                    $("#patient_package_modal").modal("show");
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }
        else {
            Swal.fire({
                title: "Invalid Patient!",
                text: "Please Select Patient To Create Package",
                icon: "warning",
                showCancelButton: 0,
                confirmButtonColor: "#0bb197",
                cancelButtonColor: "#ff3d60",
            });
        }

    });*@
    //#endregion

    //#region Create Enquiry Patient On Modal Close
        //$('#patient_package_modal').on('hidden.bs.modal', function () {
        //    if (localStorage.getItem("newpackage") != null) {
        //        var package = JSON.parse(localStorage.getItem("newpackage"));
        //        setPackage(package.poId);
        //        localStorage.removeItem("newpackage");
        //    }
        //});
    //#endregion

    //#region Set Patient Details
        var setPackage = function (poId) {
            $.ajax({
                url: '@Url.Action("GetPackageOrders", "Appointment", new { area = "Appointment" })?app_ins=' + $('#app_patient').val(),
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    var _data = response;
                    if (_data.length > 0) {
                        var data = {
                            "id": response[0].poId,
                            "text": response[0].po_details,
                        };

                        var newOption = new Option(response[0].po_details, response[0].poId, true, true);
                        $('#app_package_order').append(newOption).trigger('change');

                        $('#app_package_order').trigger({
                            type: 'select2:select',
                            params: {
                                data: data
                            }
                        });
                        if ($('#btnAppRecurring').is(":checked"))
                        {
                            $("#divPackageOrderInfo").hide();
                        }
                        else
                        {
                            $("#divPackageOrderInfo").hide();
                        }
                    }
                    else {
                        $("#divPackageOrderInfo").hide();
                    }
                    //console.log(response);
                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr.statusText);
                }
                });
        }
    //#endregion

    //#region Package Order Select Event
    $('#po_package').on('select2:select', function (e) {
        var data = e.params.data;
        if (data.id > 0) {
            $.ajax({
                url: '@Url.Action("GetPackageServices", "Appointment", new { area = "Appointment" })?query=' + $('#po_package').val(),
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    var _data = response;
                    if (_data.length > 0) {
                        $.each(response, function (j) {
                            var newOption = new Option(response[j].text, response[j].id, false,  false);
                            $('#po_service').append(newOption).trigger('change');
                        });
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr.statusText);
                }
            });
        }
    });
    //#endregion
</script>