@model BusinessEntities.Appointment.Appointment
<div class="modal-header py-3 px-4">
    <h5 class="modal-title text-primary font-weight-semibold" id="exampleModalLongTitle">Create New Appointment</h5>
</div>
<div class="modal-body p-4">
    <form id="form_Appointment" >
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12 mb-4 font-weight-semibold">
                <span class="text-danger" style="font-size:smaller">Required fields are marked with *</span>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-sm-12 col-md-4 col-lg-4">
                <div class="form-group">
                    <label class="form-label"> Branch&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_branch, (IEnumerable<SelectListItem>)ViewData["BranchList"], "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-6 col-md-2 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> In/Out&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_inout, new List<SelectListItem>
                    {
                        new SelectListItem{ Value="Out Patient", Text="Out Patient", Selected=true},
                        new SelectListItem{ Value="In Patient", Text="In Patient"},
                        new SelectListItem{ Value="Emergency", Text="Emergency"},
                        new SelectListItem{ Value="Preadmit", Text="Preadmit"},
                        new SelectListItem{ Value="Recurring patient", Text="Recurring Patient"},
                    }, "Select Visit Type", new { @class = "form-select select2 mb-4" })
                </div>
            </div>
            <div class="col-sm-6 col-md-2 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Room&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_room, (IEnumerable<SelectListItem>)ViewData["RoomList"], "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-6 col-md-2 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Doctor&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_doctor, (IEnumerable<SelectListItem>)ViewData["DoctorsList"], "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-6 col-md-2 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Followup Type&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_type, new List<SelectListItem>
                    {
                        new SelectListItem{ Value="First Time", Text="First Time", Selected=true},
                        new SelectListItem{ Value="Follow Up", Text="Follow Up"},
                        new SelectListItem{ Value="Repeat", Text="Repeat"}
                    }, "Select Type", new { @class = "form-select select2 mb-4" })
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-sm-6 col-md-2 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Date&nbsp;<span class="text-danger">*</span> </label>
                    @Html.TextBoxFor(model => model.app_fdate, new { @class = "form-control mb-4", @placeholder = "YYYY/MM/DD" })
                </div>
            </div>
            <div class="col-sm-6 col-md-2 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> From&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_ftime, (IEnumerable<SelectListItem>)ViewData["FromTimeList"], "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-6 col-md-2 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> To&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_ttime, (IEnumerable<SelectListItem>)ViewData["ToTimeList"], "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-6 col-md-2 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Status&nbsp;<span class="text-danger">*</span></label>
                    @Html.DropDownListFor(m => m.app_status, (IEnumerable<SelectListItem>)ViewData["StatusList"], "Please Select", new { @class = "form-select select2" })
                </div>
            </div>
            <div class="col-sm-6 col-md-2 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Is it an Emergency?</label>
                    @Html.DropDownListFor(m => m.app_emergency, new List<SelectListItem>
                    {
                        new SelectListItem{ Value="NO", Text="NO", Selected=true},
                        new SelectListItem{ Value="YES", Text="YES"}
                    }, "Emergency Type", new { @class = "form-select select2 mb-4" })
                </div>
            </div>
            <div class="col-sm-6 col-md-2 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Eligibility Ref. </label>
                    @Html.TextBoxFor(model => model.app_eligibility, new { @class = "form-control mb-4", @placeholder = "Eligibility #" })
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="form-group">
                <label class="form-label"> Search Patient By&nbsp;<span class="text-danger">*</span></label>
                <div class="custom-controls d-flex flex-row justify-content-left">
                    <label class="custom-control custom-radio">
                        <input type="radio" class="custom-control-input" name="rdo_s_patient" value="1">
                        <span class="custom-control-label">MRN</span>
                    </label>
                    <label class="custom-control custom-radio ms-2">
                        <input type="radio" class="custom-control-input" name="rdo_s_patient" value="2">
                        <span class="custom-control-label">Name</span>
                    </label>
                    <label class="custom-control custom-radio ms-2">
                        <input type="radio" class="custom-control-input" name="rdo_s_patient" value="3" checked>
                        <span class="custom-control-label">Mobile No</span>
                    </label>
                    <label class="custom-control custom-radio ms-2">
                        <input type="radio" class="custom-control-input" name="rdo_s_patient" value="4">
                        <span class="custom-control-label">Emirates ID</span>
                    </label>

                    <div class="btn-list ms-2">
                        <button class="btn btn-outline-success btn-sm" type="button" id="btnCreatePatient">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-plus me-1" viewBox="0 0 16 16">
                                <path d="M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z" />
                                <path fill-rule="evenodd" d="M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z" />
                            </svg>
                            Add New Patient
                        </button>
                        <button class="btn btn-outline-info btn-sm" type="button" id="btnCreateEnquiry">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-envelope-paper me-1" viewBox="0 0 16 16">
                                <path d="M4 0a2 2 0 0 0-2 2v1.133l-.941.502A2 2 0 0 0 0 5.4V14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V5.4a2 2 0 0 0-1.059-1.765L14 3.133V2a2 2 0 0 0-2-2H4Zm10 4.267.47.25A1 1 0 0 1 15 5.4v.817l-1 .6v-2.55Zm-1 3.15-3.75 2.25L8 8.917l-1.25.75L3 7.417V2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v5.417Zm-11-.6-1-.6V5.4a1 1 0 0 1 .53-.882L2 4.267v2.55Zm13 .566v5.734l-4.778-2.867L15 7.383Zm-.035 6.88A1 1 0 0 1 14 15H2a1 1 0 0 1-.965-.738L8 10.083l6.965 4.18ZM1 13.116V7.383l4.778 2.867L1 13.117Z" />
                            </svg>
                            Add New Enquiry
                        </button>
                    </div>
                </div>

                @Html.DropDownListFor(m => m.app_patient, new List<SelectListItem> { }, "Search for", new { @class = "form-select select2 mb-4" })
            </div>
        </div>
        <div id="divPackageOrderInfo" class="row mt-2">
            <label class="col-sm-12 col-lg-12"><span class="fs-11 text-info font-italic font-weight-semibold">This Patient have Package Order</span></label>
            <div class="col-sm-6 col-lg-6">
                <div class="form-group">
                    <label class="form-label"> Package Order</label>
                    @Html.DropDownListFor(m => m.app_package_order, new List<SelectListItem> { }, "Search for", new { @class = "form-select select2 mb-4" })
                </div>
            </div>
            <div class="col-sm-6 col-lg-6">
                <div class="form-group">
                    <label class="form-label"> Package Service</label>
                    @Html.DropDownListFor(m => m.app_service, new List<SelectListItem> { }, "Search for", new { @class = "form-select select2 mb-4" })
                </div>
            </div>
        </div>
        
        <div class="row mt-2">
            <div class="col-sm-2 col-lg-2">
                <div class="form-group">
                    <label class="form-label"> Insurance Type</label>
                    @Html.DropDownListFor(m => m.app_category, new List<SelectListItem>
                    {
                        new SelectListItem{ Value="MOH", Text="MOH - Riayati"},
                        new SelectListItem{ Value="DHA", Text="DHA - Dubai"},
                        new SelectListItem{ Value="DOH", Text="DOH - Abu Dhabi"},
                    }, "Insurance Type", new { @class = "form-select select2 mb-4" })
                </div>
            </div>
            <div class="col-sm-6 col-lg-6">
                <div class="form-group">
                    <label class="form-label"> Comments/Remarks</label>
                    @Html.TextAreaFor(model => model.app_comments, new { @class = "form-control mb-4", @placeholder = "Enter comments/Feedback of Appointment", @rows = "2" })
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-sm-12 col-lg-12 text-center">
                <button type="submit" class="btn btn-success" id="btn_Insert">Create Appointment</button>
                <button type="button" class="btn btn-outline-danger me-1" data-bs-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </form>
</div>

<script type="text/javascript">
    //#region Document Load
    $(function () {
        $("#divPackageOrderInfo").hide();

        $("#app_inout").select2({
            placeholder: 'Select Visit Type',
            width: '100%',
            dropdownParent: $('#create_appointment_modal')
        });

        $("#app_branch").select2({
            placeholder: 'Select a Branch',
            width: '100%',
            dropdownParent: $('#create_appointment_modal')
        });

        $("#app_room").select2({
            placeholder: 'Select a Room',
            width: '100%',
            dropdownParent: $('#create_appointment_modal')
        });

        $("#app_doctor").select2({
            placeholder: 'Select a Doctor',
            width: '100%',
            dropdownParent: $('#create_appointment_modal')
        });

        $('#app_fdate').bootstrapdatepicker({
            format: "yyyy-mm-dd",
            viewMode: "date",
            todayHighlight: true,
            autoclose: true,
            multidate: false,
            multidateSeparator: "-"
        });


        $("#app_ftime").select2({
            placeholder: 'Select a TimeSlot',
            width: '100%',
            dropdownParent: $('#create_appointment_modal')
        });

        $("#app_ttime").select2({
            placeholder: 'Select a TimeSlot',
            width: '100%',
            dropdownParent: $('#create_appointment_modal')
        });

        $("#app_patient").select2({
            placeholder: 'Select a Patient',
            width: '100%',
            dropdownParent: $('#create_appointment_modal'),
            minimumInputLength: 3,
            escapeMarkup: function (markup) {
                return markup;
            },
            ajax: {
                url: '@Url.Action("SearchPatients", "RoomScheduler", new { area = "Appointment" })',
                dataType: 'json',
                delay: 250,
                data: function (query) {
                    return {
                        query: query.term,
                        type: $("input[name='rdo_s_patient']:checked").val()
                    };
                },
                processResults: function (data) {
                    return {
                        results: data
                    };
                },
                cache: true
            }
        });

        $("#app_type").select2({
            placeholder: 'Select Type',
            width: '100%',
            dropdownParent: $('#create_appointment_modal')
        });

        $("#app_status").select2({
            placeholder: 'Select Status',
            width: '100%',
            dropdownParent: $('#create_appointment_modal')
        });

        $("#app_emergency").select2({
            placeholder: 'Select Emergency Type',
            width: '100%',
            dropdownParent: $('#create_appointment_modal')
        });

        $("#app_package_order").select2({
            placeholder: 'Select Package Order',
            width: '100%',
            dropdownParent: $('#create_appointment_modal')
        });

        $("#app_service").select2({
            placeholder: 'Select Service',
            width: '100%',
            dropdownParent: $('#create_appointment_modal'),
            escapeMarkup: function (markup) {
                return markup;
            }
        });
        $("#app_category").select2({
            placeholder: 'Select Insurance Type',
            width: '100%',
            dropdownParent: $('#create_appointment_modal')
        });

        validation();
    });
    //#endregion

    //#region Validation Initialization
    var validation = function () {
        $("#form_Appointment").validate({
            focusInvalid: true,
            rules:
            {
                app_branch: {
                    required: true
                },
                app_room: {
                    required: true
                },
                app_doctor: {
                    required: true
                },
                app_fdate: {
                    required: true
                },
                app_ftime: {
                    required: true
                },
                app_ttime: {
                    required: true
                },
                app_patient: {
                    required: true
                },
                app_type: {
                    required: true
                },
                app_status: {
                    required: true
                }
            },
            messages: {
                app_branch: {
                    required: "Select the Branch"
                },
                app_room: {
                    required: "Select the Room"
                },
                app_doctor: {
                    required: "Select the Doctor"
                },
                app_fdate: {
                    required: "Select the Appointment Date"
                },
                app_ftime: {
                    required: "Select the From time"
                },
                app_ttime: {
                    required: "Select the To time"
                },
                app_patient: {
                    required: "Select the Patient"
                },
                app_type: {
                    required: "Select the Followup Type"
                },
                app_status: {
                    required: "Select the Appointment Status"
                }
            },
            highlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                } else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });

        $('#app_branch').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_room').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_doctor').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_fdate').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_ftime').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_ttime').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_patient').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_type').on('change', function () {
            $(this).trigger('blur');
        });
        $('#app_status').on('change', function () {
            $(this).trigger('blur');
        });

        $('#app_fdate').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                return false;

            }
            else {
                if (e.target.value.length >= 10)
                    return false;
            }
        });
    };
    //#endregion

    //#region Patient Select Event
    $('#app_patient').on('select2:select', function (e) {
        var _app_fdate = $('#app_fdate').val();
        var _app_doctor = $('#app_doctor').val();
        var data = e.params.data;

        if (data.id > 0) {
            $.ajax({
                url: '@Url.Action("GetPackageOrders", "RoomScheduler", new { area = "Appointment" })?app_ins=' + data.id,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    var _data = response;
                    if (_data.length > 0) {

                        $.each(response, function (j) {
                            var newOption = new Option(response[j].po_details, response[j].poId, false,  false);
                            $('#app_package_order').append(newOption).trigger('change');
                        });

                        $("#divPackageOrderInfo").show();
                    }
                    else {
                        $("#divPackageOrderInfo").hide();
                    }
                    console.log(response);
                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr);
                }
            });

            if (!(_app_fdate === undefined || _app_fdate === "" || _app_fdate === null) &&
                !(_app_doctor === undefined || _app_doctor === 0 || _app_doctor === "" || _app_doctor === null)

            ) {
                $.ajax({
                url: '@Url.Action("GetAppointmentFollowupStatus", "RoomScheduler", new { area = "Appointment" })?piId=' + data.id + "&app_doctor=" + _app_doctor + "&app_fdate=" + _app_fdate ,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    if (response !== null && response !== "") {
                        $('#app_type').val(response).trigger('change');
                    }
                    else {
                        $('#app_type').val("First Time").trigger('change');
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr);
                }
            });
            }
        }
    });
    //#endregion

    //#region Package Order Select Event
    $('#app_package_order').on('select2:select', function (e) {
        var piId = $('#app_patient').val();
        var data = e.params.data;

        if (data.id > 0) {
            $.ajax({
                url: '@Url.Action("GetPackageOrderServices", "RoomScheduler", new { area = "Appointment" })?piId=' + piId + '&poId=' + data.id,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (response) {
                    var _data = response;
                    if (_data.length > 0) {
                        $.each(response, function (j) {
                            var newOption = new Option(response[j].ps_info, response[j].psId, false,  false);
                            $('#app_service').append(newOption).trigger('change');
                        });
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr);
                }
            });
        }
    });
    //#endregion

    //#region Branch Selection
    $('#app_branch').on('select2:select', function (e) {
        var data = e.params.data;
        if (data.id > 0) {
            loadRoomsByBranch(data);
            loadDoctorsByBranch(data);
        }
    });
    //#endregion

    //#region Load Rooms By Branch
    var loadRoomsByBranch = function (data) {
         $.ajax({
            url: '@Url.Action("GetRoomsByBranch", "RoomScheduler", new { area = "Appointment" })?app_branch=' + data.id,
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                $('#app_room').empty();
                var _data = response;
                if (_data.length > 0) {
                    $.each(response, function (j) {
                        var newOption = new Option(response[j]["Text"], response[j]["Value"], (@Model.app_room === response[j]["Value"]) ? true :false,  (@Model.app_room === response[j]["Value"]) ? true :false);
                        $('#app_room').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
                alert(xhr);
            }
        });
    }
    //#endregion

    //#region Load Doctors By Branch
    var loadDoctorsByBranch = function (data) {
         $.ajax({
            url: '@Url.Action("GetDoctorsByBranch", "RoomScheduler", new { area = "Appointment" })?app_branch=' + data.id,
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                $('#app_doctor').empty();
                var _data = response;
                if (_data.length > 0) {
                    $.each(response, function (j) {
                        var newOption = new Option(response[j]["Text"], response[j]["Value"],  (@Model.app_doctor === response[j]["Value"]) ? true :false,  (@Model.app_doctor === response[j]["Value"]) ? true :false);
                        $('#app_doctor').append(newOption).trigger('change');
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
                alert(xhr);
            }
        });
    }
    //#endregion

    //#region Book Appointment Click
    $('#btn_Insert').on('click', function (e) {
        e.preventDefault();

        // Check if Time Range is valid
        var startTime = moment($("#app_ftime :selected").text(), "HH:mm");
        var endTime = moment($("#app_ttime :selected").text(), "HH:mm");
        if (endTime.diff(startTime, 'minutes') <= 0) {
            isValid = false;
            var index = [];
            index.push("app_ftime");
            index.push("app_ttime");

            $.each(index, function (i, v) {
                if (index[i] != null && index[i] != "") {
                    var elem = $("#" + index[i]);
                    if (elem.hasClass("select2-hidden-accessible")) {
                        $("#select2-" + elem.attr("id") + "-container").parent().addClass(' error');
                    }
                    else {
                        $(elem).removeClass("is-invalid");
                    }

                    setTimeout(function () {
                        if (elem.hasClass("select2-hidden-accessible")) {
                            $("#select2-" + elem.attr("id") + "-container").parent().removeClass(' error');
                        }
                        else {
                            $(elem).removeClass("is-invalid");
                        }
                    }, 5000);
                }
            });

            e.stopPropagation();

            return $.growl.error({
                title: "Error!",
                message: "Apointment From Time should be less than To Time!"
            });
        }

        if ($("#form_Appointment").valid()) {
            var _appData = {
                "app_room"              : $("#app_room").val(),
                "app_fdate"             : moment($("#app_fdate").val()).format("YYYY-MM-DD"),
                "app_tdate"             : moment($("#app_fdate").val()).format("YYYY-MM-DD"),
                "app_ftime"             : $("#app_ftime").val(),
                "app_ttime"             : $("#app_ttime").val(),
                "app_ins"               : $("#app_patient").val(),
                "app_doctor"            : $("#app_doctor").val(),
                "app_type"              : $("#app_type").val(),
                "app_status"            : $("#app_status").val(),
                "app_branch"            : $("#app_branch").val(),
                "app_inout"             : $("#app_inout").val(),
                "app_emergency"         : $("#app_emergency").val(),
                "app_eligibility"       : $("#app_eligibility").val(),
                "app_reason_for_visit"  : "",
                "app_package_order"     : $("#app_package_order").val(),
                "app_comments"          : $("#app_comments").val(),
                "app_service"           : $("#app_service").val(),
                "app_category"          : $("#app_category").val(),
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("InsertAppointment", "RoomScheduler", new { area = "Appointment" })",
                dataType: 'JSON',
                data: _appData,
                success: function (data) {
                    let _id = parseInt(data);
                    var _toast_html = "";

                    if (_id !== undefined && _id !== "" && _id !== null) {
                        if (_id === -1) {
                            _toast_html = toast_html('info', 'Appointment', '<i class="fe fe-alert-triangle me-2 text-warning"></i> Appointment already exist with same details!');
                        }
                        else if (_id > 0) {
                            _toast_html = toast_html('success', 'Appointment', '<i class="fe fe-check-circle me-2 text-success"></i> You have successfully Booked Appointment!');
                            Calendar.init();
                        }
                        else {
                            _toast_html = toast_html('error', 'Appointment', '<i class="fe fe-slash me-2 text-danger"></i> Failed to Book Appointment. Please Try Again!');
                        }
                    }
                    else {
                        _toast_html = toast_html('error', 'Appointment', '<i class="fe fe-slash me-2 text-danger"></i> Failed to Book Appointment. Please Try Again!');
                    }

                    $('#create_appointment_modal').modal('toggle');
                    var calenderToast = document.getElementById('calenderToast');
                    calenderToast.innerHTML = _toast_html;
                    var toast = new bootstrap.Toast(calenderToast)
                    toast.show();
                },
                error: function (xhr) {
                    $('#create_appointment_modal').modal('toggle');

                    var _toast_html = toast_html('error', 'Appointment', 'Error while booking Appointment!');
                    var calenderToast = document.getElementById('calenderToast');
                    calenderToast.innerHTML = _toast_html;
                    var toast = new bootstrap.Toast(calenderToast)
                    toast.show();
                }
            });
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });
    //#endregion

    //#region Toast Body
    var toast_html = function (type, heading, content) {
        var div = "";

        if (type === "success") {
            div = '<div class="toast-header bg-success text-white">';
        }
        else if (type === "error") {
            div = '<div class="toast-header bg-danger text-white">';
        }
        else if (type === "info") {
            div = '<div class="toast-header bg-info text-white">';
        }
        else if (type === "warning") {
            div = '<div class="toast-header bg-warning text-white">';
        }
        else {
            div = '<div class="toast-header bg-primary text-white">';
        }

        var html = div +
            '<strong class="me-auto">' + heading +'</strong>' +
            '<small>just now</small>' +
            '<button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close">' +
            '<span aria-hidden="true">×</span>' +
            '</button>' +
            '</div>' +
            '<div class="toast-body">' +
            content
            '</div>';

        return html;
    }
    //#endregion

    //#region Create Patient
    $('#btnCreatePatient').on('click', function (e) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("CreatePatient", "Patient", new { area = "Patient" })",
            contentType: "application/json",
            dataType: "html",
            //data: app,
            success: function (data) {
                $("#create_patient_modal_body").html(data);
                $('#create_patient_modal').modal('show');
                $('#create_appointment_modal').modal('hide');
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    });
    //#endregion

    //#region Create Patient On Modal Close
    $('#create_patient_modal').on('hidden.bs.modal', function () {
        if (localStorage.getItem("newPatient") != null) {
            var patient = JSON.parse(localStorage.getItem("newPatient"));
            console.log(patient);
            setPatient(patient.piId);
            localStorage.removeItem("newPatient");
        }
    })
    //#endregion

    //#region Create Enquiry
    $('#btnCreateEnquiry').on('click', function (e) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("CreateInquiryPatient", "Patient", new { area = "Patient" })",
            contentType: "application/json",
            dataType: "html",
            success: function (data) {
                $('#create_appointment_modal').modal('hide');
                $('#inquiry_modal').attr("data-modal-from", "create-appointment");

                $("#inquiry_modal_body").html(data);
                $('#inquiry_modal').modal('show');
            },
            error: function (xhr) {
                console.log("Error : " + xhr.statusText);
            }
        });
    });
    //#endregion

    //#region Create Enquiry Patient On Modal Close
    $('#inquiry_modal').on('hidden.bs.modal', function () {
        if (localStorage.getItem("newInquiry") != null) {
            var patient = JSON.parse(localStorage.getItem("newInquiry"));
            setPatient(patient.piId);
            $('#app_status').val("Enquiry").trigger("change");
            localStorage.removeItem("newInquiry");
        }
    });
    //#endregion

    //#region Set Patient Details
    var setPatient = function (app_ins) {
        $.ajax({
            url: '@Url.Action("SearchPatients", "Appointment", new { area = "Appointment" })?query=' + app_ins +'&type=5',
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                var data = {
                    "id": response[0].id,
                    "text": response[0].text,
                };

                var newOption = new Option(response[0].text, response[0].id, true, true);
                $('#app_patient').append(newOption).trigger('change');

                $('#app_patient').trigger({
                    type: 'select2:select',
                    params: {
                        data: data
                    }
                });

            },
            error: function (xhr) {
                console.log(xhr);
                alert(xhr);
            }
        });
    }
    //#endregion
</script>

