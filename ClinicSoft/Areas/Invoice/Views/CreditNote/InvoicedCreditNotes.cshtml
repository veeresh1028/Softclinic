@model BusinessEntities.Invoice.CreditNoteViewModel

<div class="modal-header py-3 px-4" id="cn_head_div">
    <h5 class="modal-title text-primary font-weight-semibold" id="exampleModalLongTitle">New Credit Note</h5>
    <button type="button" class="btn-close close-modal" data-bs-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body p-4" id="cn_div">
    <div class="row">
        <div class="col-md-3">
            <ul class="list-group">
                <li class="list-group-item">
                    ID
                    <span class="badgetext badge bg-info rounded-pill">@Model.info.invId</span>
                </li>
                <li class="list-group-item">
                    Invoice No
                    <span class=" badgetext badge bg-info rounded-pill">@Model.info.inv_no</span>
                </li>
                <li class="list-group-item">
                    Invoice Date
                    <span class=" badgetext badge bg-info rounded-pill">@Model.info.inv_date.ToString("DD-MMMM-YYYY")</span>
                </li>
            </ul>
        </div>
        <div class="col-md-3">
            <ul class="list-group">
                <li class="list-group-item">
                    Net
                    <span class="badgetext badge bg-success rounded-pill">@Model.info.inv_net.ToString("N2")</span>
                </li>
                <li class="list-group-item">
                    VAT
                    <span class=" badgetext badge bg-success rounded-pill">@Model.info.inv_vat.ToString("N2")</span>
                </li>
                <li class="list-group-item">
                    Net + VAT
                    @{ decimal net_vat = Model.info.inv_net + Model.info.inv_vat; }
                    <span class=" badgetext badge bg-success rounded-pill">@net_vat.ToString("N2")</span>
                </li>
            </ul>
        </div>
        <div class="col-md-3">
            <ul class="list-group">
                <li class="list-group-item">
                    Credit Note Net
                    <span class="badgetext badge bg-danger rounded-pill">@Model.info.invc_net.ToString("N2")</span>
                </li>
                <li class="list-group-item">
                    Credit Note VAT
                    <span class=" badgetext badge bg-danger rounded-pill">@Model.info.invc_vat.ToString("N2")</span>
                </li>
                <li class="list-group-item">
                    C/Note Net + VAT
                    @{ decimal cnet_vat = Model.info.invc_net + Model.info.invc_vat; }
                    <span class=" badgetext badge bg-danger rounded-pill">@cnet_vat.ToString("N2")</span>
                </li>
            </ul>
        </div>
        <div class="col-md-3">
            <ul class="list-group">
                <li class="list-group-item">
                    Total(Excluded Voucher & Loyalty)
                    <span class="badgetext badge bg-warning rounded-pill">@Model.info.rec_total.ToString("N2")</span>
                </li>
                <li class="list-group-item">
                    Total With CN
                    <span class=" badgetext badge bg-warning rounded-pill">@Model.info.paid.ToString("N2")</span>
                </li>
                <li class="list-group-item">
                    Balance
                    <span class=" badgetext badge bg-warning rounded-pill">@Model.info.balance.ToString("N2")</span>
                </li>
            </ul>
        </div>
    </div>

    @if (Model.items.Count > 0)
    {
        <div class="row">
            <h5 class="text-primary font-weight-semibold">Select Items &amp; Make Credit Note</h5>
            <div>
                <div class="table-responsive" style="min-height:200px;">
                    <table class="table table-bordered card-table table-vcenter text-nowrap">
                        <thead>
                            <tr class="border-top">
                                <th class="w-5 text-center">
                                    <label class="custom-control custom-checkbox">
                                        <input type="checkbox" class="custom-control-input" id="chkall" onclick="chk_all_items(this.checked)">
                                        <span class="custom-control-label"></span>
                                    </label>
                                </th>
                                <th class="w-5 text-center">#</th>
                                <th class="w-40 text-wrap">TREATMENT</th>
                                <th class="w-15 text-end">QTY</th>
                                <th class="w-10 text-end">NET</th>
                                <th class="w-10 text-end">VAT</th>
                                <th class="w-15 text-end">NET+VAT</th>
                            </tr>
                        </thead>
                        <tbody id="cn_items">
                            @{
                                int count = 0;
                                foreach (BusinessEntities.Invoice.CreditNoteItems i in Model.items)
                                {
                                    count++;
                                    decimal v_net_vat = i.pt_net + i.pt_vat;
                                    <tr>
                                        <td class="w-5 text-center">
                                            <label class="custom-control custom-checkbox">
                                                <input type="checkbox" class="custom-control-input" id="chk-@i.ptId" onclick="chk_item(@i.ptId, this.checked)">
                                                <span class="custom-control-label"></span>
                                            </label>
                                        </td>
                                        <td class="w-5 text-center">@count.ToString("D2")</td>
                                        <td class="w-40 text-wrap">@i.pt_tr_code - @i.pt_tr_name</td>
                                        <td class="w-15 text-end">
                                            <input type="hidden" id="hi-@i.ptId" value="@i.pt_qty" />
                                            <input class="form-control text-end ptId" placeholder="" type="text" id="txt-@i.ptId" value="@i.pt_qty.ToString("N2")" readonly>
                                        </td>
                                        <td class="w-10 text-end">@i.pt_net.ToString("N2")</td>
                                        <td class="w-10 text-end">@i.pt_vat.ToString("N2")</td>
                                        <td class="w-15 text-end">@v_net_vat.ToString("N2")</td>
                                    </tr>
                                }
                            }
                        </tbody>
                        <tfoot>
                            <tr class="border-top border-bottom">
                                <td colspan="3">
                                    <a class="btn btn-success" href="javascript:void(0);" id="btnCreditNote"><i class="fe fe-plus"></i> Add Credit Note</a>
                                </td>
                                <td class="text-end font-weight-semibold">@Model.items.Sum(m => m.pt_qty).ToString("N2")</td>
                                <td class="text-end font-weight-semibold">@Model.items.Sum(m => m.pt_net).ToString("N2")</td>
                                <td class="text-end font-weight-semibold">@Model.items.Sum(m => m.pt_vat).ToString("N2")</td>
                                <td class="text-end font-weight-semibold">@Model.items.Sum(m => (m.pt_net) + (m.pt_vat)).ToString("N2")</td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    }

    @if (Model.details.Count > 0)
    {
        <div class="row">
            <h5 class="text-danger font-weight-semibold">Credit Notes of Invoice (@Model.info.inv_no) </h5>
            <div>
                <div class="table-responsive" style="min-height:200px;">
                    <table class="table table-hover card-table table-vcenter text-nowrap">
                        <thead class="border-bottom-0 pt-3 pb-3">
                            <tr>
                                <th class="text-center">#</th>
                                <th class="text-wrap">C/Note No</th>
                                <th class="text-end">NET</th>
                                <th class="text-end">VAT</th>
                                <th class="text-end">NET+VAT</th>
                                <th class="text-end">STATUS</th>
                                <th class="text-center"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int _count = 0;
                                foreach (BusinessEntities.Invoice.CreditNoteDetails i in Model.details)
                                {
                                    _count++;
                                    decimal v_net_vat = i.invc_net + i.invc_vat;
                                    <tr>
                                        <td class="text-center">@_count.ToString("D2")</td>
                                        <td class="text-wrap"><span class="badge bg-info">@i.invc_no</span></td>
                                        <td class="text-end">@i.invc_net.ToString("N2")</td>
                                        <td class="text-end">@i.invc_vat.ToString("N2")</td>
                                        <td class="text-end">@v_net_vat.ToString("N2")</td>
                                        <td class="text-end">
                                            @{
                                                if (i.invc_status.Trim().ToLower() == "deleted")
                                                {
                                                    <span class="dot-label bg-danger me-2 w-2 h-2"></span><span class="text-danger">Deleted</span>
                                                }
                                                else if (i.invc_status.Trim().ToLower() == "paid")
                                                {
                                                    <span class="dot-label bg-success me-2 w-2 h-2"></span><span class="text-success">Paid</span>
                                                }
                                                else if (i.invc_status.Trim().ToLower() == "unpaid")
                                                {
                                                    <span class="dot-label bg-info me-2 w-2 h-2"></span><span class="text-info">Unpaid</span>
                                                }
                                                else if (i.invc_status.Trim().ToLower() == "partly paid")
                                                {
                                                    <span class="dot-label bg-warning me-2 w-2 h-2"></span><span class="text-warning">Partly Paid</span>
                                                }
                                                else
                                                {
                                                    <span class="dot-label bg-dark me-2 w-2 h-2"></span><span class="text-dark">@i.invc_status</span>
                                                }
                                            }
                                        </td>
                                        <td class="text-center">
                                            @{
                                                if (i.invc_status.Trim().ToLower() != "deleted")
                                                {
                                                    <a href="javascript:void(0);" class="btn btn-outline-danger" onclick="deleteCreditNote(@i.invcId)">Delete</a>
                                                    <a href="javascript:void(0);" class="btn btn-outline-primary" onclick="printCreditNote(@i.invcId)">Print</a>
                                                }
                                                else
                                                {
                                                    <a href="javascript:void(0);" class="btn btn-outline-danger disabled" >Delete</a>
                                                    <a href="javascript:void(0);" class="btn btn-outline-primary disabled" >Print</a>
                                                }
                                                <a href="javascript:void(0);" class="btn btn-outline-dark" onclick="logCN(@i.invcId)">Log</a>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                        <tfoot>
                            <tr class="border-top">
                                <td colspan="2"></td>
                                <td class="text-end font-weight-semibold">@Model.details.Sum(m => m.invc_net).ToString("N2")</td>
                                <td class="text-end font-weight-semibold">@Model.details.Sum(m => m.invc_vat).ToString("N2")</td>
                                <td class="text-end font-weight-semibold">@Model.details.Sum(m => (m.invc_net) + (m.invc_vat)).ToString("N2")</td>
                                <td colspan="2"></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    }

</div>

<script type="text/javascript">
    //#region Load Event
    $(function () {
        if (localStorage.getItem("cn_from") === "credit_notes") {
            $("#cn_head_div").hide();
            $("#cn_div").removeClass("p-4");
            localStorage.removeItem("cn_from");
        }

        $('.ptId').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;
        });
    });
    //#endregion Load Event

    var chk_all_items = function (isChecked) {
        $('[id^=chk-]').prop('checked', isChecked);

        if (isChecked) {
            $('[id^=txt-]').removeAttr('readonly');
        }
        else {
            $('[id^=txt-]').attr('readonly', 'readonly');
        }
    }

    var chk_item = function (id, isChecked) {
        let el = $("#txt-" + id);
        let hi_el = $("#hi-" + id);

        if (isChecked) {
            el.removeAttr('readonly');
        }
        else {
            el.attr('readonly', 'readonly');
            var actual_qty = parseFloat(hi_el.val());
            $("#txt-" + id).val(actual_qty);
        }
    }

    $('[id^=txt-]').on('focusout', function () {
        let id = $(this).attr('id');
        let id_removed_txt = id.replace("txt-","");
        let hi_el = $("#hi-" + id_removed_txt);
        var actual_qty = parseFloat(hi_el.val());
        var val = parseFloat($(this).val());

        if (val >= 1) {
            if (val > actual_qty) {
                $("#" + id).val(actual_qty);
            }
        }
        else {
            $("#" + id).val(actual_qty);
        }
    });

    //Generate Credit Note
    $('#btnCreditNote').on('click', function (event) {
        var tempArr = [];
        var total_net = 0;
        var total_vat = 0;

        $("#cn_items input[type=checkbox]:checked").each(function () {
            var row = $(this).closest("tr")[0];
            var values = row.cells[3].innerHTML;
            var net = row.cells[4].innerHTML;
            total_net += parseFloat(net);
            var vat = row.cells[5].innerHTML;
            total_vat += parseFloat(vat);

            const document = new DOMParser().parseFromString(values, "text/html");
            var textbox = $(document).find('.ptId');

            tempArr.push({
                "id": parseInt($(textbox).attr('id').replace("txt-", "").trim()),
                "value": parseInt($(textbox).val())
            });
        });

        if (tempArr.length > 0) {
            Swal.fire({
                title: "This action will Create a Credit Note!",
                html: "Are you sure you want to make credit note. <br/>Once its reflected it will reflect in invoice and receipts.",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2",
                cancelButtonClass: "btn btn-danger ms-2 mt-2",
                buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    var _data = {
                        items: tempArr,
                        invId: parseInt(@Model.info.invId),
                        net: parseFloat(total_net),
                        vat: parseFloat(total_vat),
                    };

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("CreateNewCreditNote", "CreditNote", new { area = "Invoice" })",
                        data: _data,
                        success: function (response) {
                            if (response.isSuccess) {
                                get_credit_notes();
                                $("#addnew_cn_modal").modal("hide");
                                event.preventDefault();
                                event.stopPropagation();
                                return $.growl.notice({
                                    title: "Success",
                                    message: response.message
                                });
                            }
                            else {
                                event.preventDefault();
                                event.stopPropagation();
                                return $.growl.error({
                                    title: "Error",
                                    message: response.message
                                });
                            }
                        },
                        error: function (xhr) {
                            console.log("Failed! Error Message : " + xhr.statusText);
                        }
                    });
                }
                else {
                    event.preventDefault();
                    Swal.fire({
                        title: "Attention!",
                        text: "Please Select atleast one item in the list to make credit note",
                        icon: "warning",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                    });
                }
            });
        }
    });

    //#region Delete Credit Note
        var deleteCreditNote = function (invcId) {
            Swal.fire({
            title: "Are you sure you want to delete this Credit Note?",
            html: "This action will delete this Credit Note and Will reflect the calculation in your invoice and receipts!",
            icon: "question",
            showCancelButton: !0,
            confirmButtonText: 'Yes! I Confirm',
            cancelButtonText: 'No! Cancel Please',
            confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: '@Url.Action("DeleteCreditNote", "CreditNote", new { area = "Invoice" })?invcId=' + invcId ,
                        type: "POST",
                        dataType: "JSON",
                        success: function (data) {
                            console.log(data)
                            if (data.isAuthorized) {
                                if (data.isSuccess) {
                                    return $.growl.notice({
                                        title: "Success",
                                        message: "Credit Note is Deleted Successfully!"
                                    });
                                    get_credit_notes();
                                    $("#addnew_cn_modal").modal("hide");
                                }
                                else {
                                    Swal.fire({
                                        title: "Error!",
                                        text: "Failed to Delete the Credit Note!",
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to delete this Credit Note!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Delete Credit Note! Please refresh the page and try again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    });
                }
            });
        }
        //#endregion Delete Invoice

        //#region Print Cash Invoice
        var printCreditNote = function (invcId) {
            window.open("@Url.Action("PrintCreditNote", "CreditNote", new { area = "Invoice" })?invcId=" + invcId, "Credit Note Print");
        }
        //#endregion
</script>
