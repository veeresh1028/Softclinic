@model BusinessEntities.EMR.PatientTreatments
@using System.Linq;
@using System.Security.Claims;
@using BusinessEntities;
@{
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    EMRInfo emr = (EMRInfo)TempData["emr_data"];
    TempData.Keep("emr_data");
    ViewBag.Title = "Dental Cash Treatments";
}

<style type="text/css">
    @@media (min-width: 768px) {
        .col-md-6 {
            flex: 0 0 100% !important;
            max-width: 100% !important;
        }
    }

    #tbl_DentCashTreatments_wrapper .dataTables_scroll .dataTables_scrollBody {
        min-height: 200px;
    }

    #tbl_PreDentCashTreatments_wrapper .dataTables_scroll .dataTables_scrollBody {
        min-height: auto;
    }

    #dtTable_dentAddTreatments_wrapper .dataTables_scroll .dataTables_scrollBody {
        min-height: 100px;
    }
</style>

<div id="dentCashTreatment_Add" style="display:none;">
    <form id="form_DentCash_Treatment" autocomplete="off" ondrop="return false;" onpaste="return false;" oncut="return false;">
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label class="form-label text-black">Treatments &amp; Procedures&nbsp;<span class="text-danger">*</span></label>
                    <select placeholder="Select Any" class="form-select select2 mb-2" id="pt_treatment" name="pt_treatment">
                    </select>
                    <input type="hidden" value="0" id="hi_pt_tr_code">
                    <input type="hidden" value="0" id="hi_pt_tr_name">
                    <input type="hidden" value="0" id="hi_isPackage">
                </div>
            </div>

            <div class="col-md-2">
                <div class="form-group">
                    <label class="form-label text-black">Notes&nbsp;</label>
                    <input class="form-control text-start " placeholder="Enter Notes" type="text" id="pt_notes" name="pt_notes">
                </div>
            </div>

            <div class="col-md-2 teeth">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Teeth&nbsp;</label>
                    <div class="form-group mb-3">
                        <select class="form-control" id="pt_teeth" multiple="multiple">
                        </select>
                    </div>
                </div>
            </div>

            <div class="col-md-2 surface">
                <div class="form-group mb-3">
                    <label class="form-label text-black">Surface&nbsp;</label>
                    <div class="form-group mb-3">
                        <select class="form-control" id="pt_sur" multiple="multiple">
                        </select>
                    </div>
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-group">
                    <label class="form-label text-black">Qty&nbsp;<span class="text-danger">*</span></label>
                    <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="1.00" id="pt_qty" name="pt_qty" oninput="validate(this,1000)">
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-group">
                    <label class="form-label text-black">Session</label>
                    <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="1" id="pt_ses" name="pt_ses" oninput="validate(this,100)">
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-group">
                    <label class="form-label text-black">Unit Price&nbsp;<span class="text-danger">*</span></label>
                    <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" id="pt_uprice" name="pt_uprice" oninput="validate(this,100000)">
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-group">
                    <label class="form-label text-black">Total&nbsp;<span class="text-danger">*</span></label>
                    <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" id="pt_total" name="pt_total" oninput="validate(this,0)" readonly>
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-group">
                    <label class="form-label text-black">Discount</label>
                    <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" id="pt_disc" name="pt_disc" oninput="validate(this,100000)">
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-group">
                    <label class="form-label text-black">Disc. Type</label>
                    <select placeholder="Select Any" class="form-select select2 mb-2" id="pt_disc_type" name="pt_disc_type">
                        <option value="0">%</option>
                        <option value="1" selected>Fixed</option>
                    </select>
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-group">
                    <label class="form-label text-black">Disc. Value</label>
                    <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" id="pt_disc_value" name="pt_disc_value" oninput="validate(this,0)" readonly>
                </div>
            </div>

            <div class="col-md-2">
                <div class="form-group">
                    <label class="form-label text-black">Coupon</label>
                    <select placeholder="Select Any" class="form-select select2 mb-2" id="pt_coupon" name="pt_coupon">
                    </select>
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-group">
                    <label class="form-label text-black">Coupon Disc.</label>
                    <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" id="pt_coupon_disc" name="pt_coupon_disc" oninput="validate(this,0)" readonly>
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-group">
                    <label class="form-label text-black">NET&nbsp;<span class="text-danger">*</span></label>
                    <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" id="pt_net" name="pt_net" oninput="validate(this,0)" readonly>
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-group">
                    <label class="form-label text-black">VAT %</label>
                    <select placeholder="Select Any" class="form-select select2 mb-2" id="pt_vat_type" name="pt_vat_type">
                        <option value="0" id="pt_vat_type_0">0 %</option>
                        <option value="5" id="pt_vat_type_5">5 %</option>
                        <option value="Exempt" id="pt_vat_type_Exempt">Exempt</option>
                    </select>
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-group mt-4">
                    <div class="custom-controls-stacked">
                        <label class="custom-control custom-radio">
                            <input type="radio" class="custom-control-input" name="rdoVATType" value="Inclusive" id="rdoVATIn">
                            <span class="custom-control-label text-black">Inclusive</span>
                        </label>
                        <label class="custom-control custom-radio">
                            <input type="radio" class="custom-control-input" name="rdoVATType" value="Exclusive" id="rdoVATEx" checked="checked">
                            <span class="custom-control-label text-black">Exclusive</span>
                        </label>
                    </div>
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-group">
                    <label class="form-label text-black">VAT&nbsp;<span class="text-danger">*</span></label>
                    <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" id="pt_vat" name="pt_vat" oninput="validate(this,0)" readonly>
                    <input type="hidden" value="0" id="hi_pt_vat">
                    <input type="hidden" value="0" id="hi_pt_vat2">
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-group">
                    <label class="form-label text-black">NET + VAT&nbsp;<span class="text-danger">*</span></label>
                    <input class="form-control text-end font-weight-semibold" placeholder="" type="text" value="0.00" id="pt_netvat" name="pt_netvat" oninput="validate(this,0)" readonly>
                </div>
            </div>

            <div class="col-md-2">
                <div class="btn-list btn-animation">
                    <button type="submit" class="btn btn-info" id="btnAddTreatment"> Select Treatment</button>
                    <button type="button" class="btn btn-outline-dark" id="btn_Reset">Reset</button>
                </div>
            </div>

            <div class="col-md-4">
                <label class="form-label mt-1">&nbsp;<span class="text-danger" id="error_msg"></span></label>
            </div>
        </div>
    </form>

    <div class="card mt-2" id="listItems">
        <div class="card-body p-0">
            <div class="table-responsive" style="min-height:unset;">
                <table id="dtTable_dentAddTreatments" class="table table-striped table-bordered" style="width:100%">
                    <thead>
                        <tr class="text-white bg-secondary">
                            <th class="border-bottom-0 font-weight-semibold text-white text-end">ID</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">CPT Code</th>
                            <th class="border-bottom-0 font-weight-semibold text-white text-wrap">Treatment &amp; Procedures</th>
                            <th class="border-bottom-0 font-weight-semibold text-white text-center">Type</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Qty</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Session</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Unit Price</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Total</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Disc</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Disc. Type</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Discount</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Coupon. Id</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Coupon</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Coup.Disc</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">NET</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">VAT</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">NET + VAT</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Tooth</th>
                            <th class="border-bottom-0 font-weight-semibold text-white">Surfaces</th>
                            <th class="border-bottom-0 font-weight-semibold text-white"></th>
                            <th class="border-bottom-0 font-weight-semibold text-white"></th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th></th>
                            <th></th>
                            <th class="text-end fs-16 font-weight-bold text-right">Total:</th>
                            <th></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                            <th class="text-end fs-14 font-weight-semibold"></th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12 col-md-12 text-center">
            <button type="button" class="btn btn-success d-none" id="btnConfirmBilling"><i class="fe fe-check-circle"></i> Confirm Treatment(s)</button>
        </div>
    </div>
</div>

<div id="dentCashTreatment_Edit"></div>

<div class="row pb-2">
    <div class="col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="errorCreate"></div>
    </div>
</div>

<form id="form_DentCash" class="needs-validation" autocomplete="off">
    @Html.AntiForgeryToken()
    <input type="hidden" id="dchiInvId" value="0" />

    <div class="row">
        <div class="col-sm-6 col-md-4 col-lg-2">
            <label class="mt-4 text-dark font-weight-semibold">Update Status</label>
            <div class="wd-150 mg-b-30">
                <div class="input-group">
                    @Html.DropDownListFor(m => m.pt_status, new List<SelectListItem>
                     {
                        new SelectListItem{ Text="Approved", Value = "Approved" },
                        new SelectListItem{ Text="Rejected", Value = "Rejected" },
                        new SelectListItem{ Text="In Review", Value = "In Review" },
                        new SelectListItem{ Text="Cancelled", Value = "Cancelled" },
                        new SelectListItem{ Text="Existing", Value = "Existing" },
                        new SelectListItem{ Text="Plan", Value = "Plan" },
                        new SelectListItem{ Text="Completed", Value = "Completed" },
                        new SelectListItem{ Text="Declined", Value = "Declined" }
                     }, "Select Status", new { @class = "form-select select2", @id = "upt_status" })
                </div>
            </div>
        </div>

        <div class="col-sm-6 col-md-2 col-lg-1">
            <div class="btn-animation">
                <label class="mt-4">&nbsp;</label>
                <div class="wd-150 mg-b-30">
                    <div class="input-group">
                        <button type="submit" class="btn btn-warning" id="btn_Update_Status">Update</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="row mt-2">
    <div class="col-sm-12 col-md-12 d-flex justify-content-center">
        <div id="errorDental"></div>
        <div id="errorSummary"></div>
    </div>
</div>

<div class="table-responsive mt-4" id="dentcashtreat">
    <table id="tbl_DentCashTreatments" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%; cursor: pointer;">
        <thead>
            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D;">
                <th class="border-bottom-0 font-weight-semibold text-white text-center"></th>
                <th class="border-bottom-0 font-weight-semibold text-white">#</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Time</th>
                <th class="border-bottom-0 font-weight-semibold text-white">CPT Code</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Treatment</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Teeth</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Surface</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Qty</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Session</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Unit Price</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Gross</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Discount</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Coupon</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Coupon<br />Disc</th>
                <th class="border-bottom-0 font-weight-semibold text-white">NET</th>
                <th class="border-bottom-0 font-weight-semibold text-white">VAT</th>
                <th class="border-bottom-0 font-weight-semibold text-white">NET + VAT</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Status</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Notes</th>
                <th class="border-bottom-0 font-weight-semibold text-white"><i class="fe fe-more-vertical" style="font-size: 20px;"></i></th>
                <th class="border-bottom-0 font-weight-semibold text-white">Start Time</th>
                <th class="border-bottom-0 font-weight-semibold text-white">End Time</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Status</th>
                <th class="border-bottom-0 font-weight-semibold text-white">Lab Status</th>
            </tr>
        </thead>
        <tfoot>
            <tr>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th class="text-end text-dark font-weight-semibold fs-17">Total :</th>
                <th class="table_footer_align fs-16"></th>
                <th class="table_footer_align fs-16"></th>
                <th class="table_footer_align fs-16"></th>
                <th class="table_footer_align fs-16"></th>
                <th class="table_footer_align fs-16"></th>
                <th class="table_footer_align fs-16"></th>
                <th class="table_footer_align fs-16"></th>
                <th class="table_footer_align fs-16"></th>
                <th class="table_footer_align fs-16"></th>
                <th class="table_footer_align fs-16"></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </tfoot>
    </table>
</div>

<!-- Modal Treatment Items Details -->
<div class="modal fade overflow-auto" id="treatment_item_details" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="invoice-list">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="treatment_item_details_body">
        </div>
    </div>
</div>
<!-- End Modal Treatment Items Details -->
<!-- Modal Treatment Attachments Details -->
<div class="modal fade overflow-auto" id="treatment_attachments_details" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="treatment_attachments_details_body">
        </div>
    </div>
</div>
<!-- End Modal Treatment Attachments Details -->

<script type="text/javascript">
    var isInvoiced = true;
    var item_arr = [];

    //#region Page Load
    $(function () {
        $(document).on('select2:open', () => {
            document.querySelector('.select2-search__field').focus();
        });

        validation();
        load_Surfaces();
        addDentCashTreatment();

        getDentCashTreatments();

        $("#upt_status").select2({
            placeholder: 'Select Status',
            width: '100%',
            dropdownParent: $('#form_DentCash')
        });
    });
    //#endregion

    //#region Load Dental Cash Treatments
    var getDentCashTreatments = function () {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetAllPatientTreatments", "PatientTreatments", new { area = "EMR" })?appId=" + "@emr.appId" + "&pt_type=Cash",
            success: function (response) {
                if (!response.isAuthorized) {
                    var table;

                    if ($.fn.dataTable.isDataTable('#tbl_DentCashTreatments')) {
                        table = $('#tbl_DentCashTreatments').DataTable();
                        table.clear();
                        table.rows.add(response).draw();
                    }
                    else {
                        BindDentalCashTreat(response);
                    }
                }
                else {
                    console.log("You are not Authorized!");
                }
            },
            error: function (xhr) {
                console.log(xhr);
            }
        }).done(function () {
            resizedt("tbl_DentCashTreatments");
        });
    }
    //#endregion

    //#region Bind Dental Cash Datatable
    var BindDentalCashTreat = function (response) {
        var numFormat = $.fn.dataTable.render.number('\,', '.', 2, '').display;

        var table = $("#tbl_DentCashTreatments").DataTable({
            fixedHeader: {
                header: true,
                footer: true
            },
            processing: true,
            "deferRender": true,
            "pageLength": 25,
            "retrieve": true,
            lengthChange: true,
            "aaData": response,
            "aoColumns": [
                {
                    "mData": "ptId",
                    "orderable": false,
                    "className": "select-checkbox text-center inbox-small-cells",
                    'checkboxes': {
                        'selectRow': true
                    }
                },
                {
                    "mData": "ptId",
                    "orderable": false,
                    "searchable": false,
                    "className": "text-center",
                    "render": function (data, type, row, meta) {
                        let _index = (meta.row) + 1;

                        if (_index >= 10) {
                            return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>" + _index + "</a>";
                        }
                        else {
                            return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>0" + _index + "</a>";
                        }
                    }
                },
                {
                    "mData": "pt_date_collected",
                    "className": 'text-center',
                    "render": function (pt_date_collected, type, full, meta) {
                        var date_rec = full.pt_date_received;

                        var dt = '';

                        if (type === 'display' || type === 'filter') {
                            var collec = moment(pt_date_collected).format("DD-MM-YYYY");
                            var rec = moment(date_rec).format("DD-MM-YYYY");

                            if (collec == "31-12-1899") {
                                dt += '<span class="badge bg-success-light mb-1">Start Time</span><br/>' +
                                    '<i class="fe fe-clock text-dark"></i> <b class="text-muted">N/A<b><br/>';
                            }
                            else {
                                dt += '<span class="badge bg-success-light mb-1">Start Time</span><br/>' +
                                    '<i class="fe fe-clock text-dark"></i> <b class="text-dark">' + moment(pt_date_collected).format(" HH:mm") + '</b><br/>';
                            }

                            if (rec == "31-12-1899") {
                                dt += '<span class="badge bg-danger-light mb-1">End Time</span><br/>' +
                                    '<i class="fe fe-clock text-dark"></i> <b class="text-muted">N/A<b><br/>';
                            }
                            else {
                                dt += '<span class="badge bg-danger-light mb-1 mt-1">End Time</span><br/>' +
                                    '<i class="fe fe-clock text-dark"></i> <b class="text-dark">' + moment(date_rec).format(" HH:mm") + '<b>';
                            }

                            return dt;
                        }

                        return moment(pt_date_collected).format(" HH:mm");
                    }
                },
                {
                    "mData": "tr_code",
                    "render": function (tr_code, type, full, meta) {
                        var _html = tr_code;
                        var req = full.tr_norm_range;

                        if (req == "Yes") {
                            _html += "<br /> <span class='text-danger'>(Attachment Required!)</span>";
                        }

                        return _html;
                    }
                },
                {
                    "mData": "tr_name_type",
                    "className": 'text-wrap text-justify'
                },
                {
                    "mData": "pt_teeth",
                    "className": 'text-center'
                },
                { "mData": "pt_sur" },
                {
                    "mData": "pt_qty",
                    "className": 'text-right',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_ses",
                    "className": 'text-right'
                },
                {
                    "mData": "pt_uprice",
                    "className": 'text-right',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_total",
                    "className": 'text-right',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_disc",
                    "className": 'text-right',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_coupon",
                    "className": 'text-left'
                },
                {
                    "mData": "pt_coupon_disc",
                    "className": 'text-left',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_net",
                    "className": 'text-right',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_vat",
                    "className": 'text-right',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_net_vat",
                    "className": 'text-right',
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_status",
                    "className": 'text-center',
                    "render": function (pt_status, type, full, meta) {
                        var _more = '<b>' + pt_status + '</b><br />';
                        var lab_status = full.pt_lab_status;

                        if (lab_status != "") {
                            _more += '<span class="text-secondary" title="Lab Status">' + lab_status + '</span>';
                        }
                        else {
                            _more += '<span class="text-muted">N/A</span>';
                        }

                        return _more;
                    }
                },
                {
                    "mData": "pt_notes",
                    "className": 'text-justify text-wrap',
                    "render": function (pt_notes) {
                        if (pt_notes != "") {
                            return pt_notes;
                        }
                        else {
                            return '<span class="text-muted">N/A</span>';
                        }
                    }
                },
                {
                    "mData": "ptId",
                    "className": 'btn-edit text-center',
                    "orderable": false,
                    "searchable": false,
                    "render": function (ptId, type, full, meta) {
                        var status = full.pt_status;
                        var allocated = full.isAllocated;

                        var more = '<div class="dropdown"><a type="button" class="" data-bs-toggle="dropdown"><i class="fe fe-more-vertical" style="font-size: 20px;"></i></a>' +
                                '<div class="dropdown-menu" style="min-width:auto">';

                            var edit_and_delete = '<a class="edit dropdown-item text-dark fw-bold" onclick="editDentCashTreatment(\'' + ptId + '\')"><i class="fe fe-edit-2 text-success" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Edit</a>' +
                                '<a class="dropdown-item text-dark fw-bold" onclick="deleteDentalCashTreatments(\'' + ptId + '\',\'' + status + '\')"><i class="fe fe-trash text-danger" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Delete</a>' +
                                '<a class="dropdown-item text-dark fw-bold" onclick="addItems(\'' + ptId + '\')"><i class="fe fe-folder-plus text-primary curpointer" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Items</a>' +
                                '<a class="dropdown-item text-dark fw-bold remrk" onclick="addAttachements(\'' + ptId + '\')"><i class="fa fa-comments-o text-dark" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Attachments</a>' +
                                '</div>' +
                                '</div>';

                            var no_edit = '<a class="dropdown-item text-dark fw-bold" onclick="deleteDentalCashTreatments(\'' + ptId + '\',\'' + status + '\')"><i class="fe fe-trash text-danger" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Delete</a>' +
                                '<a class="dropdown-item text-dark fw-bold" onclick="addItems(\'' + ptId + '\')"><i class="fe fe-folder-plus text-primary curpointer" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Items</a>' +
                                '<a class="dropdown-item text-dark fw-bold remrk" onclick="addAttachements(\'' + ptId + '\')"><i class="fa fa-comments-o text-dark" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Attachments</a>' +
                                '</div>' +
                                '</div>';

                            var no_delete = '<a class="edit dropdown-item text-dark fw-bold" onclick="editDentCashTreatment(\'' + ptId + '\')"><i class="fe fe-edit-2 text-success" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Edit</a>' +
                                '<a class="dropdown-item text-dark fw-bold" onclick="addItems(\'' + ptId + '\')"><i class="fe fe-folder-plus text-primary curpointer" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Items</a>' +
                                '<a class="dropdown-item text-dark fw-bold remrk" onclick="addAttachements(\'' + ptId + '\')"><i class="fa fa-comments-o text-dark" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Attachments</a>' +
                                '</div>' +
                                '</div>';

                            var no_edit_and_no_delete = '<a class="dropdown-item text-dark fw-bold" onclick="addItems(\'' + ptId + '\')"><i class="fe fe-folder-plus text-primary curpointer" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Items</a>' +
                                '<a class="dropdown-item text-dark fw-bold remrk" onclick="addAttachements(\'' + ptId + '\')"><i class="fa fa-comments-o text-dark" style="font-size: 15px;margin-right: 0.5rem;cursor:pointer"></i>&nbsp;Attachments</a>' +
                                '</div>' +
                                '</div>';

                        if (allocated == 0) {
                            if ("@emp_designation.ToString()" === "Super Administrator") {
                                more += edit_and_delete;
                            }
                            else {
                                if ("@emr.set_emr_lock" == "NoLock") {
                                    more += edit_and_delete;
                                }
                                else {
                                    if ("@emr.app_ae_date" >= "@emr.today") {
                                        more += edit_and_delete;
                                    }
                                    else {
                                        if (status == "Approved" || status == "Rejected" || status == "Partially Approved") {
                                            more += no_edit;
                                        }
                                        else {
                                            more += edit_and_delete;
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            if ("@emp_designation.ToString()" === "Super Administrator") {
                                more += no_delete;
                            }
                            else {
                                if ("@emr.set_emr_lock" == "NoLock") {
                                    more += no_delete;
                                }
                                else {
                                    if ("@emr.app_ae_date" >= "@emr.today") {
                                        more += no_delete;
                                    }
                                    else {
                                        if (status == "Approved" || status == "Rejected" || status == "Partially Approved") {
                                            more += no_edit_and_no_delete;
                                        }
                                        else {
                                            more += no_delete;
                                        }
                                    }
                                }
                            }
                        }

                        return more;
                    }
                },
                //#region Hidden Export Columns
                {
                    "visible": false,
                    "mData": "pt_date_collected",
                    "render": function (pt_date_collected, type, full, meta) {
                        if (type === 'display' || type === 'filter') {
                            var dc = moment(pt_date_collected).format("DD-MM-YYYY");

                            if (dc == "31-12-1899") {
                                return '';
                            }
                            else {
                                return moment(pt_date_collected).format(" HH:mm");
                            }
                        }

                        return moment(pt_date_collected).format(" HH:mm");
                    }
                },
                {
                    "visible": false,
                    "mData": "pt_date_received",
                    "render": function (pt_date_received, type, full, meta) {
                        if (type === 'display' || type === 'filter') {
                            var dc = moment(pt_date_received).format("DD-MM-YYYY");

                            if (dc == "31-12-1899") {
                                return '';
                            }
                            else {
                                return moment(pt_date_received).format(" HH:mm");
                            }
                        }

                        return moment(pt_date_received).format(" HH:mm");
                    }
                },
                {
                    "visible": false,
                    "mData": "pt_status",
                    "render": function (pt_status, type, full, meta) {
                        return pt_status;
                    }
                },
                {
                    "visible": false,
                    "mData": "pt_lab_status",
                    "render": function (pt_lab_status, type, full, meta) {
                        return pt_lab_status;
                    }
                },
                //#endregion
            ],
            order: [[1, 'asc']],
            language: {
                searchPlaceholder: 'Search...',
                sSearch: '<span class="text-primary font-weight-semi-bold">Search Treatment(s)</span>',
                lengthMenu: '_MENU_',
                scrollX: "100%",
            },
            searching: false,
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },
            scrollX: true,
            scrollY: 500,
            scrollCollapse: true,
            buttons: [
                {
                    extend: 'excel',
                    title: 'Dental Cash Treatments',
                    footer: 'true',
                    exportOptions: {
                        columns: [3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 22, 23, 18]
                    }
                },
                {
                    extend: 'pdf',
                    title: 'Dental Cash Treatments',
                    footer: 'true',
                    exportOptions: {
                        columns: [3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 22, 23, 18]
                    }
                },
                {
                    extend: 'csv',
                    title: 'Dental Cash Treatments',
                    footer: 'true',
                    exportOptions: {
                        columns: [3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 22, 23, 18]
                    }
                },
                {
                    extend: 'print',
                    title: 'Dental Cash Treatments',
                    className: 'btn btn-primary',
                    footer: 'true',
                    exportOptions: {
                        columns: [3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 22, 23, 18]
                    }
                },
                {
                    text: '<i class="fe fe-check-circle"></i> Generate Invoice',
                    className: 'btn btn-outline-success ms-2',
                    action: function (e, dt, node, config) {
                        e.preventDefault();

                        generateInvoice();
                    }
                },
                {
                    text: '<i class="fe fe-layout"></i> Print Quotation',
                    className: 'btn btn-outline-success ms-2',
                    action: function (e, dt, node, config) {
                        e.preventDefault();

                        print_Quotation();
                    }
                },
                {
                    text: '<i class="fe fe-layers"></i> Create Package',
                    className: 'btn btn-outline-success ms-2',
                    action: function (e, dt, node, config) {
                        e.preventDefault();

                        Create_Package();
                    }
                }
            ],
            "footerCallback": function (row, data, start, end, display) {
                var api = this.api();

                var intVal = function (i) {
                    return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                };

                var total = api.column(7).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(7).footer()).html(numFormat(total));

                total = api.column(8).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(8).footer()).html(numFormat(total));

                total = api.column(9).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(9).footer()).html(total);

                total = api.column(10).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(10).footer()).html(total);

                total = api.column(11).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(11).footer()).html(numFormat(total));

                total = api.column(12).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(12).footer()).html(numFormat(total));

                total = api.column(13).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(13).footer()).html(numFormat(total));

                total = api.column(14).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(14).footer()).html(numFormat(total));

                total = api.column(15).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(15).footer()).html(numFormat(total));

                total = api.column(16).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(16).footer()).html(numFormat(total));
            }
        });

        table.buttons().container().appendTo('#tbl_DentCashTreatments_wrapper .col-sm-12:eq(0)');
    };
    //#endregion

    //#region Add Dental Cash Treatments
    function addDentCashTreatment() {
        $('#dentCashTreatment_Edit').hide();

        $("#listItems").hide();

        $("#pt_treatment").select2({
            placeholder: 'Select Treatment/Procedure',
            width: '100%',
            dropdownParent: $('#form_DentCash_Treatment'),
            minimumInputLength: 3,
            escapeMarkup: function (markup) {
                return markup;
            },
            ajax: {
                url: '@Url.Action("SearchTreatments", "Invoice", new { area = "Invoice" })',
                dataType: 'json',
                delay: 250,
                data: function (query) {
                    return {
                        query: query.term,
                        appId: '@emr.appId'
                    };
                },
                processResults: function (data) {
                    return {
                        results: data
                    };
                },
                cache: true
            }
        });

        $("#pt_vat_type").select2({
            placeholder: 'Select VAT Type',
            width: '100%',
            dropdownParent: $('#form_DentCash_Treatment')
        });

        $("#pt_disc_type").select2({
            placeholder: 'Select Discount Type',
            width: '100%',
            dropdownParent: $('#form_DentCash_Treatment')
        });

        $("#pt_coupon").select2({
            placeholder: 'Select Coupon',
            width: '100%',
            dropdownParent: $('#form_DentCash_Treatment')
        });

        $('#pt_teeth').SumoSelect({
            placeholder: 'Select Tooth(s)',
            captionFormat: '{0} Tooth(s) Selected',
            captionFormatAllSelected: 'All {0} Tooth selected!',
            csvDispCount: 3,
            okCancelInMulti: true,
            isClickAwayOk: true,
            search: true,
            searchText: 'Search here...',
            selectAll: true,
            dropdownParent: $('#form_DentCash_Treatment'),
        });

        $("#dentCashTreatment_Add").show();
    }

    //#region Load Teeth
    var load_Teeth = function () {
        $('#pt_teeth').SumoSelect({
            placeholder: 'Select Tooth(s)',
            captionFormat: '{0} Tooth(s) Selected',
            captionFormatAllSelected: 'All {0} Tooth selected!',
            csvDispCount: 3,
            okCancelInMulti: true,
            isClickAwayOk: true,
            search: true,
            searchText: 'Search here...',
            selectAll: true,
            dropdownParent: $('#form_DentCash_Treatment'),
        });

        $.ajax({
            url: '@Url.Action("GetTeeth", "PatientTreatments", new { area = "EMR" })?query=',
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                $('#pt_teeth').html('');
                $('#pt_teeth')[0].sumo.reload();

                $.each(response, function (j) {
                    $('#pt_teeth')[0].sumo.add(response[j].text, response[j].text);
                });
            },
            error: function (xhr) {
                console.log("Failed to Load Branch(es)! Error Message : " + xhr.statusText);
            }
        }).done(function () {
            $('#pt_teeth')[0].sumo.reload();
        });
    }
    //#endregion

    //#region Load Surfaces
    var load_Surfaces = function () {
        $('#pt_sur').SumoSelect({
            placeholder: 'Select Surface(s)',
            captionFormat: '{0} Surface(s) Selected',
            captionFormatAllSelected: 'All {0} Surfaces selected!',
            csvDispCount: 3,
            okCancelInMulti: true,
            isClickAwayOk: true,
            search: true,
            searchText: 'Search here...',
            selectAll: true,
            dropdownParent: $('#form_DentCash_Treatment'),
        });

        $.ajax({
            url: '@Url.Action("GetToothSurface", "OralExamination", new { area = "EMR" })?query=',
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                $('#pt_sur').html('');
                $('#pt_sur')[0].sumo.reload();

                $.each(response, function (j) {
                    $('#pt_sur')[0].sumo.add(response[j].id, response[j].text);
                    //$('#select_dept')[0].sumo.selectItem([response[j].id]);
                });
            },
            error: function (xhr) {
                console.log("Failed to Load Branch(es)! Error Message : " + xhr.statusText);
            }
        }).done(function () {
            $('#pt_sur')[0].sumo.reload();
        });
    }
    //#endregion

    //#region Validation Initialisation
    var validation = function () {
        $('#pt_qty').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;

            if (!/^\d*\.?\d{0,3}$/.test(inputValue) || inputValue.split('.').length > 2) {
                return false;
            }
        });

        $('#pt_ses').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;

            if (String.fromCharCode(charCode).match(/[^0-9]/g))
                return false;
        });

        $('#pt_uprice').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;

            if (!/^\d*\.?\d{0,3}$/.test(inputValue) || inputValue.split('.').length > 2) {
                return false;
            }
        });

        $('#pt_total').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;

            if (!/^\d*\.?\d{0,3}$/.test(inputValue) || inputValue.split('.').length > 2) {
                return false;
            }
        });

        $('#pt_disc').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;

            if (!/^\d*\.?\d{0,3}$/.test(inputValue) || inputValue.split('.').length > 2) {
                return false;
            }
        });

        $('#pt_disc_value').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;

            if (!/^\d*\.?\d{0,3}$/.test(inputValue) || inputValue.split('.').length > 2) {
                return false;
            }
        });

        $('#pt_coupon_disc').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;

            if (!/^\d*\.?\d{0,3}$/.test(inputValue) || inputValue.split('.').length > 2) {
                return false;
            }
        });

        $('#pt_net').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;

            if (!/^\d*\.?\d{0,3}$/.test(inputValue) || inputValue.split('.').length > 2) {
                return false;
            }
        });

        $('#pt_vat').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;

            if (!/^\d*\.?\d{0,3}$/.test(inputValue) || inputValue.split('.').length > 2) {
                return false;
            }
        });

        $('#pt_netvat').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode;
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g))
                return false;

            if (!/^\d*\.?\d{0,3}$/.test(inputValue) || inputValue.split('.').length > 2) {
                return false;
            }
        });

        $("#form_DentCash_Treatment").validate({
            focusInvalid: true,
            rules:
            {
                "pt_treatment": {
                    required: true
                },
                "pt_qty": {
                    required: true,
                    minlength: 1,
                    min: 1,
                    max: 1000
                },
                "pt_ses": {
                    required: true,
                    minlength: 1,
                    min: 0,
                    max: 100
                },
                "pt_uprice": {
                    required: true,
                    minlength: 1,
                    min: 1,
                    max: 100000
                },
                "pt_total": {
                    required: true,
                    minlength: 1,
                    min: 1
                },
                "pt_disc": {
                    required: true,
                    minlength: 1,
                    min: 0,
                    max: 100000
                },
                "pt_disc_type": {
                    required: true
                },
                "pt_disc_value": {
                    required: true,
                    minlength: 1,
                    min: 0
                },
                "pt_coupon_disc": {
                    required: true,
                    minlength: 1,
                    min: 0
                },
                "pt_net": {
                    required: true,
                    minlength: 1,
                    min: 1
                },
                "pt_vat": {
                    required: true,
                    minlength: 1
                },
                "pt_netvat": {
                    required: true,
                    minlength: 1,
                    min: 1
                },
            },
            messages: {
                "pt_treatment": {
                    required: "Select Treatment"
                },
                "pt_qty": {
                    required: "Enter Qty",
                    minlength: "Give atleast 0",
                    min: "Min. Qty is 1",
                    max: "Max. Qty is 1000"
                },
                "pt_ses": {
                    required: "Enter Session",
                    minlength: "Min. 1 Degit",
                    min: "Min. Value is 0",
                    max: "Max. Value is 100"
                },
                "pt_uprice": {
                    required: "Enter Unit Price",
                    minlength: "Give atleast 0",
                    min: "Min. Value is 1",
                    max: "Max. Value is 100000"
                },
                "pt_total": {
                    required: "Enter Total",
                    minlength: "Give atleast 0",
                    min: "Min. Value is 1"
                },
                "pt_disc": {
                    required: "Enter Discount",
                    minlength: "Give atleast 0",
                    min: "Min. Value is 0",
                    max: "Max. Value is 100000"
                },
                "pt_disc_type": {
                    required: "Select Discount Type"
                },
                "pt_disc_value": {
                    required: "Enter Discount Value",
                    minlength: "Give atleast 0",
                    min: "Min. Value is 0"
                },
                "pt_coupon_disc": {
                    required: "Enter Coupon Value",
                    minlength: "Give atleast 0",
                    min: "Min. Value is 0"
                },
                "pt_net": {
                    required: "Enter Net",
                    minlength: "Give atleast 0",
                    min: "Min. Value is 1"
                },
                "pt_vat": {
                    required: "Enter VAT",
                    minlength: "Give atleast 0"
                },
                "pt_netvat": {
                    required: "Enter Net+VAT",
                    minlength: "Give atleast 0",
                    min: "Min. Value is 1"
                },
            },
            highlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                } else {
                    elem.parent().addClass('has-error');
                }
                $(element).parent().addClass('has-error');
            },
            unhighlight: function (element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                } else {
                    elem.removeClass('has-error');
                }
                $(element).parent().removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'text-danger fw-bold',
            errorPlacement: function (error, element) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    element = $("#select2-" + elem.attr("id") + "-container").parent();
                    error.insertAfter(element);
                } else {
                    error.insertAfter(element);
                }
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });

        $('#pt_treatment').on('change', function () {
            $(this).trigger('blur');
        });

        $('#pt_vat_type').on('change', function () {
            $(this).trigger('blur');
        });

        $('#pt_qty').on('change', function () {
            $(this).trigger('blur');
        });

        $('#pt_ses').on('change', function () {
            $(this).trigger('blur');
        });

        $('#pt_uprice').on('change', function () {
            $(this).trigger('blur');
        });

        $('#pt_total').on('change', function () {
            $(this).trigger('blur');
        });

        $('#pt_disc').on('change', function () {
            $(this).trigger('blur');
        });

        $('#pt_disc_type').on('change', function () {
            $(this).trigger('blur');
        });

        $('#pt_disc_value').on('change', function () {
            $(this).trigger('blur');
        });

        $('#pt_coupon').on('change', function () {
            $(this).trigger('blur');
        });

        $('#pt_coupon_disc').on('change', function () {
            $(this).trigger('blur');
        });

        $('#pt_net').on('change', function () {
            $(this).trigger('blur');
        });

        $('#pt_vat').on('change', function () {
            $(this).trigger('blur');
        });

        $('#pt_netvat').on('change', function () {
            $(this).trigger('blur');
        });
    }
    //#endregion

    //#region Validate Max value for Controls
    var validate = function (e, max) {
        var t = e.value;
        var j = (t.indexOf(".") >= 0) ? (t.substr(0, t.indexOf(".")) + t.substr(t.indexOf("."), 3)) : t;
        e.value = (max == 0) ? j : ((j >= max) ? max : j);
    }
    //#endregion

    //#region Focus In/Out Events
    $("#pt_qty").focusin(function () {
        localStorage.setItem("temp_qty", $(this).val());
    });

    $("#pt_qty").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 1) {
            localStorage.removeItem("temp_qty");
            calculation();
        }
        else {
            $(this).val(localStorage.getItem("temp_qty"));
            localStorage.removeItem("temp_qty");
        }
    });

    $("#pt_ses").focusin(function () {
        localStorage.setItem("temp_ses", $(this).val());
    });

    $("#pt_ses").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 1) {
            localStorage.removeItem("temp_ses");
            calculation();
        }
        else {
            $(this).val(localStorage.getItem("temp_ses"));
            localStorage.removeItem("temp_ses");
        }
    });

    $("#pt_uprice").focusin(function () {
        localStorage.setItem("temp_uprice", $(this).val());
    });

    $("#pt_uprice").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 0) {
            localStorage.removeItem("temp_uprice");
            calculation();
        }
        else {
            $(this).val(localStorage.getItem("temp_uprice"));
            localStorage.removeItem("temp_uprice");
        }
    });

    $("#pt_disc").focusin(function () {
        localStorage.setItem("temp_disc", $(this).val());
    });

    $("#pt_disc").focusout(function () {
        var val = parseFloat($(this).val());
        if (val >= 0) {
            localStorage.removeItem("temp_disc");
            $('#pt_coupon').val(0).trigger('change');
            $('#pt_coupon_disc').val("0.00");
            calculation();
        }
        else {
            $(this).val(localStorage.getItem("temp_disc"));
            localStorage.removeItem("temp_disc");
        }
    });
    //#endregion

    //#region Treatment Select Event
    $('#pt_treatment').on('select2:select', function (e) {
        var data = e.params.data;
        var isPackage = 0;

        if (data.text.toLowerCase().includes("package")) { isPackage = 1; }

        $.ajax({
            url: '@Url.Action("SelectTreatment", "Invoice", new { area = "Invoice" })?trId=' + data.id + "&appId=" + @emr.appId + "&isPackage=" + isPackage,
            type: "GET",
            dataType: "json",
            async: false,
            success: function (response) {
                load_coupons(response["tr_coupons"]);

                $("#hi_pt_tr_code").val(response["tr_values"].tr_code);
                $("#hi_pt_tr_name").val(response["tr_values"].tr_name);
                $("#hi_isPackage").val(isPackage);
                $("#pt_qty").val("1.00");
                $("#pt_ses").val("1");
                $("#pt_uprice").val(response["tr_values"].tr_price);
                $("#pt_disc").val(response["tr_values"].tr_disc);
                $("#hi_pt_vat").val(response["tr_values"].tr_vat);
                $("#hi_pt_vat2").val(response["tr_values"].tr_vat2);

                var disc_type = response["tr_values"].tr_disc_type;

                if (disc_type == "%") {
                    disc_type = 0;
                }
                else {
                    disc_type = 1;
                }

                $('#pt_disc_type').val(disc_type).trigger('change');

                if (response["tr_values"].tr_vat == 0) {
                    $('#pt_vat_type').val(0).trigger('change');
                }
                else {
                    $('#pt_vat_type').val(5).trigger('change');
                }

                if (response["tr_values"].tr_tooth == "Required") {
                    load_Teeth();
                }
                else {
                    $('#pt_teeth').html('');
                    $('#pt_teeth')[0].sumo.reload();
                }

                calculation();
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    });
    //#endregion

    //#region Change / Load & Calculation Events
    // Coupon Change Event
    $('#pt_coupon').on('select2:select', function (e) {
        calculation();
    });

    // VAT Type Change Event
    $('#pt_vat_type').on('select2:select', function (e) {
        calculation();
    });

    // VAT Inclusive/Exclusive Event
    $('input[type=radio][name=rdoVATType]').change(function () {
        calculation();
    });

    // Discount Type Change Event
    $('#pt_disc_type').on('select2:select', function (e) {
        $('#pt_coupon').val(0).trigger('change');
        $('#pt_coupon_disc').val("0.00");

        calculation();
    });

    // Load Coupons
    var load_coupons = function (data) {
        $('#pt_coupon').empty();

        if (data.length > 0) {
            var newOption1 = new Option("Select Coupons", 0, true, true);

            $('#pt_coupon').append(newOption1).trigger('change');

            $.each(data, function (j) {
                var val = data[j].disc_name + " - " + data[j].disc_float + "%";

                var newOption = new Option(val, data[j].discId, false, false);

                $('#pt_coupon').append(newOption).trigger('change');
            });
        }
    }

    // Calculation for Treatments
    var calculation = function () {
        var pt_qty = $("#pt_qty").val();
        var pt_uprice = $("#pt_uprice").val();

        var pt_total = parseFloat(pt_qty) * parseFloat(pt_uprice);
        $("#pt_total").val(pt_total);

        var coupon_value = 0;
        var pt_disc_value = 0;

        if (parseInt($("#pt_coupon").val()) > 0) {
            $("#pt_disc").val(pt_disc_value);

            var coupon_name = $("#pt_coupon option:selected").text();
            var coupon_arr = coupon_name.split("-");
            var coupon_per = coupon_arr[1].trim().replace("%", "");
            coupon_value = (parseFloat(pt_total) * parseFloat(coupon_per)) / 100;
        }
        else {
            var pt_disc = $("#pt_disc").val();

            if (parseInt($("#pt_disc_type").val()) == 1) {
                pt_disc_value = parseFloat(pt_disc);
            }
            else if (parseInt($("#pt_disc_type").val()) == 0) {
                pt_disc_value = (parseFloat(pt_total) * parseFloat(pt_disc)) / 100;
            }
        }

        $("#pt_disc_value").val(pt_disc_value);
        $("#pt_coupon_disc").val(coupon_value);

        var pt_net = parseFloat(pt_total) - (parseFloat(pt_disc_value) + parseFloat(coupon_value));
        $("#pt_net").val(pt_net);

        var pt_vat = 0;

        if ($("#pt_vat_type").val() == "5") {
            pt_vat = (parseFloat(pt_net) * 5) / 100;
        }

        if (pt_vat > 0) {
            var rdoVAT = $("input[name='rdoVATType']:checked").val();

            if (rdoVAT === "Inclusive") {
                pt_net = parseFloat(pt_net) - parseFloat(pt_vat);

                $("#pt_net").val(pt_net);
            }
        }

        $("#pt_vat").val(pt_vat);

        var pt_netvat = parseFloat(pt_net) + parseFloat(pt_vat);
        $("#pt_netvat").val(pt_netvat);

        if (!(pt_disc_value == 0 && pt_total == 0)) {
            if (pt_disc_value >= pt_total) {
                $("#error_msg").html("Discount should be less than Total Amount");
                $("#pt_total").attr("style", "border:1px solid red;color:red;");
                $("#pt_disc_value").attr("style", "border:1px solid red;color:red;");
            }
            else {
                $("#error_msg").html("");
                $("#pt_total").attr("style", "border:1px solid #ecebf1;color:#728096;");
                $("#pt_disc_value").attr("style", "border:1px solid #ecebf1;color:#728096;");

                if (!(coupon_value == 0 && pt_total == 0)) {
                    if (coupon_value >= pt_total) {
                        $("#pt_total").attr("style", "border:1px solid red;color:red;");
                        $("#pt_coupon_disc").attr("style", "border:1px solid red;color:red;");
                        $("#error_msg").html("Coupon Discount should be less than Total Amount");
                    }
                    else {
                        $("#pt_total").attr("style", "border:1px solid #ecebf1;color:#728096;");
                        $("#pt_coupon_disc").attr("style", "border:1px solid #ecebf1;color:#728096;");
                        $("#error_msg").html("");
                    }
                }
                else {
                    $("#pt_total").attr("style", "border:1px solid #ecebf1;color:#728096;");
                    $("#pt_coupon_disc").attr("style", "border:1px solid #ecebf1;color:#728096;");
                    $("#error_msg").html("");
                }
            }
        }
        else {
            $("#error_msg").html("");
            $("#pt_total").attr("style", "border:1px solid #ecebf1;color:#728096;");
            $("#pt_disc_value").attr("style", "border:1px solid #ecebf1;color:#728096;");
        }
    }
    //#endregion

    //#region Bind Temporary Array
    // Add Treatment Click
    $('#btnAddTreatment').on('click', function (e) {
        e.preventDefault();

        if ($("#form_DentCash_Treatment").valid()) {
            var exists = false;

            //if (item_arr.length > 0) {
            //    exists = item_arr.some(function (check) {
            //        return (check.ptId == $("#pt_treatment").val()) && (check.pt_teeth == value);
            //    });
            //}

            if (item_arr.length > 0) {
                exists = item_arr.some(function (check) {
                    var existingTeeth = check.pt_teeth.split(',').map(function (t) { return t.trim(); });
                    var inputTeeth = $("#pt_teeth").val().toString().toString().split(',').map(function (t) { return t.trim(); });

                    return (check.ptId == $("#pt_treatment").val()) &&
                        (inputTeeth.some(function (t) { return existingTeeth.includes(t); }));
                });
            }

            if (exists) {
                var data = $("#hi_pt_tr_name").val();

                data = (data.length >= 75) ? (data.substring(0, 75) + "...") : data;

                Swal.fire({
                    title: "Duplicate Item!",
                    html: "<strong style='color:red;'>" + data + "</strong><br/> already Exists in the list! Please delete existing & Add again.",
                    icon: "warning",
                    showCancelButton: 0,
                    confirmButtonText: 'Okay',
                    confirmButtonClass: "btn btn-success mt-2",
                    buttonsStyling: !1
                });
            }
            else {
                $("#cashtreat").hide();

                $("#listItems").show();

                bindTreatment();

                clearData();

                if ("@emp_designation.ToString()" === "Super Administrator") {
                    $("#btnConfirmBilling").removeClass("d-none");
                }
                else {
                    if ("@emr.set_emr_lock" == "NoLock") {
                        if ("@emr.app_ae_date" >= "@emr.today") {
                            $("#btnConfirmBilling").removeClass("d-none");
                        }
                        else {
                            console.log("EMR Locked!");
                        }
                    }
                    else {
                        $("#btnConfirmBilling").removeClass("d-none");
                    }
                }
            }
        }
        else {
            $('.modal-body').animate({
                scrollTop: ($('.has-error').offset().top - 300)
            }, 2000);
        }
    });

    // Bind Dental Cash Treatment to Array
    var bindTreatment = function () {
        var surfaces = $("#pt_sur option:selected").map(function () {
            return $(this).text();
        }).get().join(', ');

        var values = ($("#pt_teeth").val().toString()).split(',');

        $.each(values, function (index, value) {
            var data = {
                "ptId": $("#pt_treatment").val(),
                "pt_appId": @emr.appId,
                "pt_tr_code": $("#hi_pt_tr_code").val(),
                "pt_tr_name": $("#hi_pt_tr_name").val(),
                "pt_vat_type": $("#pt_vat_type").val(),
                "pt_notes": $("#pt_notes").val().trim(),
                "pt_qty": parseFloat($("#pt_qty").val()).toFixed(2),
                "pt_ses": parseFloat($("#pt_ses").val()),
                "pt_uprice": parseFloat($("#pt_uprice").val()).toFixed(2),
                "pt_total": parseFloat($("#pt_total").val()).toFixed(2),
                "pt_disc": parseFloat($("#pt_disc").val()).toFixed(2),
                "pt_disc_type": $("#pt_disc_type option:selected").text(),
                "pt_disc_value": parseFloat($("#pt_disc_value").val()).toFixed(2),
                "pt_coupon": $("#pt_coupon").val(),
                "pt_coupon_value": $("#pt_coupon option:selected").text(),
                "pt_coupon_disc": parseFloat($("#pt_coupon_disc").val()).toFixed(2),
                "pt_net": parseFloat($("#pt_net").val()).toFixed(2),
                "pt_vat": parseFloat($("#pt_vat").val()).toFixed(2),
                "pt_netvat": parseFloat($("#pt_netvat").val()).toFixed(2),
                "pt_sur": surfaces,
                "pt_teeth": value,
                "pt_type": "Cash",
                "isPackage": parseInt($("#hi_isPackage").val())
            }

            item_arr.push(data);

            GetSelectedItems(item_arr);
        });
    }

    // Load Dental Cash Items
    var GetSelectedItems = function (response) {
        if (response != null && response != undefined) {
            var table;

            if ($.fn.dataTable.isDataTable('#dtTable_dentAddTreatments')) {
                table = $('#dtTable_dentAddTreatments').DataTable();
                table.clear();
                table.rows.add(response).draw();
            }
            else {
                BindTempTreatments(response);
            }
        }
    }

    // Bind Treatments to DataTable
    var BindTempTreatments = function (response) {
        var numberRenderer1 = $.fn.dataTable.render.number(',', '.', 2,).display;

        var table = $("#dtTable_dentAddTreatments").DataTable({
            processing: true,
            paging: false,
            ordering: false,
            info: false,
            "searching": false,
            "retrieve": true,
            lengthChange: false,
            "aaData": response,
            "aoColumns": [
                {
                    "visible": false,
                    "mData": "ptId"
                },
                { "mData": "pt_tr_code" },
                {
                    "mData": "pt_tr_name",
                    "className": "fs-13 text-nowrap",
                    "render": function (data, type, full, meta) {

                        if (full.isPackage == 1) {
                            var val = (data.length >= 75) ? (data.substring(0, 75) + "...") : data;
                            return val + '<span class="pull-right"><span class="badge bg-danger"> <small class="fs-9">PACKAGE <small></span></span>';
                        }
                        else {
                            var val = (data.length >= 75) ? (data.substring(0, 75) + "...") : data;
                            return val;
                        }
                    }
                },
                {
                    "mData": "pt_vat_type",
                    "visible": false,
                    "className": "fs-13 text-center",
                    "render": function (data) {
                        var val = (data === "0") ? "0% VAT" : ((data === "5") ? "5% VAT" : "Exempt");
                        return val;
                    }
                },
                {
                    "mData": "pt_qty",
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_ses",
                    "className": "fs-13 text-end",
                    "visible": false,
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_uprice",
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_total",
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_disc",
                    "className": "fs-13 text-end",
                    "visible": false,
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                { "visible": false, "mData": "pt_disc_type" },
                {
                    "mData": "pt_disc_value",
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                { "visible": false, "mData": "pt_coupon" },
                { "visible": false, "mData": "pt_coupon_value" },
                {
                    "mData": "pt_coupon_disc",
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_net",
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_vat",
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                {
                    "mData": "pt_netvat",
                    "className": "fs-13 text-end",
                    "render": $.fn.dataTable.render.number(',', '.', 2)
                },
                { "mData": "pt_teeth" },
                { "mData": "pt_sur" },
                {
                    "mData": "ptId",
                    "className": "fs-13 text-center dt-delete",
                    "render": function (data) {
                        var html = "<i class='fe fe-trash text-danger curpointer' id='remove-item' style='font-size: 15px;'></i>";

                        return html;
                    }
                },
                {
                    "mData": "isPackage",
                    "className": "fs-13 text-center dt-delete",
                    "render": function (data, type, full, meta) {
                        if (data === 1) {
                            return "<a id='pk_" + full.ptId + "' data-bs-toggle='popover'><i class='fe fe-list text-primary curpointer' id='package-info' style='font-size: 15px;'></i></a>";
                        }
                        else {
                            return '';
                        }
                    }
                }
            ],
            scrollX: true,
            scrollY: 500,
            scrollCollapse: true,
            fixedColumns: true,
            fixedHeader: {
                header: true,
                footer: true
            },
            footerCallback: function (row, data, start, end, display) {
                var api = this.api();

                // Remove the formatting to get integer data for summation
                var intVal = function (i) {
                    return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                };

                total_qty = api.column(4).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(4).footer()).html(numberRenderer1(total_qty.toFixed(2)));

                total_ses = api.column(5).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(5).footer()).html(numberRenderer1(total_ses.toFixed(2)));

                total_unitprice = api.column(6).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(6).footer()).html(numberRenderer1(total_unitprice.toFixed(2)));

                total_invtotal = api.column(7).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(7).footer()).html(numberRenderer1(total_invtotal.toFixed(2)));
                $("#lbl_inv_total").html(numberRenderer1(total_invtotal.toFixed(2)));

                total_disc = api.column(8).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(8).footer()).html(numberRenderer1(total_disc.toFixed(2)));

                total_disc_val = api.column(10).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(10).footer()).html(numberRenderer1(total_disc_val.toFixed(2)));

                total_coupon_val = api.column(13).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(13).footer()).html(numberRenderer1(total_coupon_val.toFixed(2)));
                $("#lbl_inv_disc").html(numberRenderer1((total_coupon_val + total_disc_val).toFixed(2)));

                total_net = api.column(14).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(14).footer()).html(numberRenderer1(total_net.toFixed(2)));
                $("#lbl_inv_net").html(numberRenderer1(total_net.toFixed(2)));

                total_vat = api.column(15).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(15).footer()).html(numberRenderer1(total_vat.toFixed(2)));
                $("#lbl_inv_vat").html(numberRenderer1(total_vat.toFixed(2)));

                total_netvat = api.column(16).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                $(api.column(16).footer()).html(numberRenderer1(total_netvat.toFixed(2)));
                $("#lbl_inv_netvat").html(numberRenderer1(total_netvat.toFixed(2)));
            },
            "fnDrawCallback": function (settings) {
                var _ptId;

                //#region Load Packages
                $(settings.aoData).each(function (index) {
                    _trisPackage = settings.aoData[index]._aData["isPackage"];

                    if (_trisPackage == 1) {
                        _ptId = settings.aoData[index]._aData["ptId"];
                    }

                    $('#pk_' + _ptId).each(function () {
                        var popId = $(this).attr('id');
                        var tgId = popId.substr(popId.lastIndexOf("_") + 1);

                        var pendings = "";
                        var html = "";

                        $.ajax({
                            type: "GET",
                            url: "@Url.Action("GetPackages", "Invoice", new { area= "Invoice" })?tgId=" + tgId,
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                $.each(response, function (j) {
                                    pendings += (
                                        '<li class="listorder">' + response[j]["tr_code"] + " - " + response[j]["tr_name"] + '</li>'
                                    );
                                    html = '<p class="mb-0 mt-1 fs-14 font-weight-semibold"><ul class="list-group text-dark">' + pendings + '</ul></p>';
                                });

                                $('#' + popId).popover({
                                    trigger: 'hover',
                                    placement: 'right',
                                    title: 'Package Treatments',
                                    container: '#form_DentCash_Treatment',
                                    html: true,
                                    content: html
                                }).popover({ trigger: "hover" });
                            },
                            error: function (xhr) {
                                console.log("Failed! Error Message : " + xhr.statusText);
                            }
                        });
                    });
                });
                //#endregion
            }
        });

        table.buttons().container().appendTo('#dtTable_dentAddTreatments_wrapper .col-md-6:eq(0)');

        // Remove Items From DataTable
        table.on('click', '#remove-item', function (e) {
            var row = $(this).parents('tr');
            var data_row = table.row($(this).closest('tr')).data();

            Swal.fire({
                title: "Are you sure you want to delete this Treatment From List?",
                text: "This action will delete the item permanently!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2",
                cancelButtonClass: "btn btn-danger ms-2 mt-2",
                buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    item_arr = $.grep(item_arr, function (n, i) {
                        return (n.ptId !== data_row.ptId);
                    });

                    if ($(row).hasClass('child')) {
                        table.row($(row).prev('tr')).remove().draw();
                    }
                    else {
                        table.row(row).remove().draw();
                    }

                    Swal.fire({
                        title: "Success!",
                        text: "Treatment Deleted Successfully!",
                        icon: "success",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                    });

                    if (item_arr.length == 0) {
                        $("#btnConfirmBilling").addClass("d-none");
                    }
                }
            });
        });

        resizedt();
    }
    //#endregion

    //#region Generate Dental Cash Treatments
    $('#btnConfirmBilling').on('click', function (e) {
        e.preventDefault();

        if (item_arr.length > 0) {
            var _invoice = {
                treatment_items: item_arr,
            }

            $.ajax({
                url: '@Url.Action("InsertPatientTreatments", "PatientTreatments", new { area = "EMR" })',
                type: "POST",
                dataType: "json",
                data: _invoice,
                async: false,
                success: function (data) {
                    var alertPlaceholder = document.getElementById("errorCreate");

                    function alert(e, t) {
                        var l = document.createElement("div");
                        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                    }

                    if (data.isSuccess) {
                        $("#dchiInvId").val(data.invId);

                        alert("<i class='fe fe-check-circle text-white'></i> " + data.message + "", "success");

                        Timeout();

                        item_arr.length = 0;

                        getDentCashTreatments();

                        $("#listItems").hide();

                        $("#cashtreat").show();

                        $("#btnConfirmBilling").addClass("d-none");
                    }
                    else {
                        if (data.invId == -2) {
                            alert("<i class='fe fe-alert-triangle text-white'></i> " + data.message + "", "warning");
                        }
                        else {
                            alert("<i class='fe fe-minus-circle text-white'></i> " + data.message + "", "danger");
                        }

                        Timeout();
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }
    });
    //#endregion

    //#region Clear Items
    // Reset Click
    $('#btn_Reset').on('click', function (e) {
        e.preventDefault();

        clearData();

        $("#lbl_inv_total").html("0.00");
        $("#lbl_inv_disc").html("0.00");
        $("#lbl_inv_net").html("0.00");
        $("#lbl_inv_vat").html("0.00");
        $("#lbl_inv_netvat").html("0.00");

        if (item_arr.length > 0) {
            $('#btnConfirmBilling').removeClass("d-none");
        }
        else {
            $('#btnConfirmBilling').addClass("d-none");
        }
    });

    // Clear Data
    var clearData = function () {
        $("#pt_treatment").empty();
        $('#pt_vat_type').val("0").trigger('change');
        $("#rdoVATEx").prop("checked", true);
        $("#pt_qty").val("1.00");
        $("#pt_ses").val("1");
        $("#pt_uprice").val("0.00");
        $("#pt_total").val("0.00");
        $("#pt_disc").val("0.00");
        $('#pt_disc_type').val(1).trigger('change');
        $("#pt_disc_value").val("0.00");
        $("#pt_coupon").empty();
        $("#pt_coupon_disc").val("0.00");
        $("#pt_net").val("0.00");
        $("#pt_vat").val("0.00");
        $("#pt_netvat").val("0.00");
        $("#hi_pt_tr_code").val("0");
        $("#hi_pt_tr_name").val("0");
        $("#hi_isPackage").val("0");
        $("#hi_pt_vat").val("0");
        $("#hi_pt_vat2").val("0");
        $('#pt_teeth').html('');
        $('#pt_teeth')[0].sumo.reload();
        $('#pt_sur')[0].sumo.unSelectAll();
    }
    //#endregion
    //#endregion

    //#region Edit Dental Cash Treatments
    function editDentCashTreatment(ptId) {
        $('#dentCashTreatment_Add').hide();

        $.ajax({
            type: "GET",
            url: "@Url.Action("EditDentCashTreatment", "PatientTreatments", new { area = "EMR" })?ptId=" + ptId + "&appId=" + @emr.appId,
            contentType: "application/json",
            dataType: "html",
            success: function (data) {
                $("#dentCashTreatment_Edit").html(data);
                $("#dentCashTreatment_Edit").show();
            },
            error: function (xhr) {
                console.log("Error while Editing Dental Cash Treatment : " + xhr.statusText);
            }
        });
    }
    //#endregion

    //#region Add Items
    function addItems(ptId) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("TreatmentItems", "TreatmentItems", new { area = "EMR" })?ptId=" + ptId,
            contentType: "application/json",
            dataType: "html",
            success: function (response) {
                localStorage.setItem("ptId", ptId)

                $('#treatment_item_details').attr("data-modal-from", "Patient-Treatment");
                $("#treatment_item_details_body").html(response);
                $("#treatment_item_details").modal("show");
            },
            error: function (xhr) {
                console.log("Error :" + xhr.statusText);
            }
        });
    }
    //#endregion

    //#region Add Attachements
    function addAttachements(ptId) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("TreatmentAttachements", "TreatmentAttachements", new { area = "EMR" })?ptId=" + ptId,
            contentType: "application/json",
            dataType: "html",
            success: function (response) {
                $('#treatment_attachments_details').attr("data-modal-from", "Patient-Treatment");

                $("#treatment_attachments_details_body").html(response);

                $("#treatment_attachments_details").modal("show");
            },
            error: function (xhr) {
                console.log("Error :" + xhr.statusText);
            }
        });
    }
    //#endregion

    //#region Delete Cash Treatments
    var deleteDentalCashTreatments = function (ptId) {
        Swal.fire({
            title: "Are you sure you want to delete this Patient Treatment ?",
            text: "The selected Dental Insurance Treatment will be deleted!",
            icon: "question",
            showCancelButton: !0,
            confirmButtonText: 'Yes! I Confirm',
            cancelButtonText: 'No! Cancel Please',
            confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
        }).then(function (t) {
            if (t.value) {
                $.ajax({
                    url: '@Url.Action("DeleteTreatments", "PatientTreatments", new { area = "EMR" })?data=' + ptId,
                    type: "POST",
                    dataType: 'json',
                    success: function (data) {
                        if (data.isAuthorized) {
                            if (data.isSuccess) {
                                Swal.fire({
                                    title: "Success!",
                                    text: "Patient Treatment Deleted Successfully!",
                                    icon: "success",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                                });

                                getDentCashTreatments();
                            }
                            else {
                                Swal.fire({
                                    title: "Forbidden!",
                                    text: "An active Patient Treatment with the same details already exists.",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        }
                        else {
                            Swal.fire({
                                title: "Access Denied!",
                                text: "You do not have Enough Privileges to Delete this Patient Treatment!",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: "Error!",
                            text: "Failed to Delete Patient Treatment! Please Refresh The Page & Try Again.",
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                        });
                    }
                });
            }
        });
    }
    //#endregion

    //#region Generate Invoice
    function generateInvoice() {
        var table = $("#tbl_DentCashTreatments").DataTable();
        var rows = $(table.$('input[type="checkbox"]').map(function () {
            return $(this).prop("checked") ? $(this).closest('tr') : null;
        }));

        if (rows.length > 0) {
            $.each(rows, function (index, rowId) {
                var _data = table.row(rowId).data();
                var _dataInsert = {
                    "ptId": _data.ptId,
                    "inv_appId": @Model.appId,
                    "inv_no": '@Model.inv_no',
                    "pat_code": '@Model.pat_code',
                    "pat_name": '@Model.pat_name',
                    "inv_date": '@Model.inv_date',
                    "inv_total": _data.pt_total,
                    "inv_tdisc": 0,
                    "inv_tdisc_type": "Fixed",
                    "inv_net": _data.pt_net,
                    "inv_disc": _data.pt_disc_value,
                    "inv_tded": 0,
                    "inv_lded": 0,
                    "inv_rded": 0,
                    "inv_mded": 0,
                    "inv_copay": 0,
                    "inv_dcopay": 0,
                    "inv_share": 0,
                    "inv_notes": "",
                    "inv_ic_name": "Cash",
                    "inv_type": "Cash",
                    "inv_insurance": 1,
                    "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                }

                if (_data.pt_status == "Selected") {
                    isInvoiced = false;
                }

                if (isInvoiced) {
                    Swal.fire({
                        title: "Treatment Already Invoiced!",
                        text: "The selected Treatment is Already Invoiced!",
                        icon: "info",
                        showCancelButton: !0,
                        confirmButtonText: 'Yes! Proceed',
                        cancelButtonText: 'No! Cancel Please',
                        confirmButtonClass: "btn btn-success mt-2",
                        cancelButtonClass: "btn btn-danger ms-2 mt-2",
                        buttonsStyling: !1
                    }).then(function (t) {
                        if (t.value) {
                            isInvoiced = false;
                        }
                    });
                }

                if (!isInvoiced) {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GenerateInvoice", "PatientTreatments", new { area = "EMR" })",
                        dataType: 'json',
                        data: _dataInsert,
                        success: function (data) {
                            $("#dchiInvId").val(data.invId);

                            if (data.isSuccess) {
                                if (data.invId > 0) {
                                    Swal.fire({
                                        title: "Success!",
                                        text: data.message,
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197"
                                    });

                                    getDentCashTreatments();
                                    Timeout()
                                    window.open("@Url.Action("PrintInvoice", "Invoice", new { area = "Invoice" })?invId=" + $("#dchiInvId").val(), "Print Invoice")
                                }
                                else {
                                    let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                        "<div class='alert alert-warning' role='alert'>" +
                                        "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                        "<strong>Warning.. Notes Alredy Exists..</strong><br/>" +
                                        "</div></div>";
                                    $("#errorCreate").html(html);
                                }
                            }
                            else {
                                let html = "<div class='alert alert-danger alert-dismissible' role='alert'>" +
                                    "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='Close' aria-label='Close'>×</button>" +
                                    "<strong>Error! " + data.message + "</strong><br/>" +
                                    "</div>";
                                $("#errorCreate").html(html);
                                Timeout();
                            }

                        },
                        error: function (xhr) {
                            Timeout();
                        }
                    });
                }
            });
        }
        else {
            Swal.fire({
                title: "Attention!",
                text: "Please Select Atleast One Treatment To Invoice!",
                icon: "info",
                showCancelButton: 0,
                confirmButtonColor: "#0bb197",
                cancelButtonColor: "#ff3d60"
            });
        }
    }
    //#endregion

    //#region Create Package
    function Create_Package() {
        var table = $("#tbl_DentCashTreatments").DataTable();

        var rows = $(table.$('input[type="checkbox"]').map(function () {
            return $(this).prop("checked") ? $(this).closest('tr') : null;
        }));

        if (rows.length > 0) {
            $.each(rows, function (index, rowId) {
                var _data = table.row(rowId).data();

                var _dataInsert = {
                    "ptId": _data.ptId,
                }

                if (_data.pt_status == "Invoiced") {
                    isInvoiced = true;
                }

                if (!isInvoiced) {
                    Swal.fire({
                        title: "Invoice The Selected Treatment To Create Package",
                        text: "Can't Create Package!",
                        icon: "info",
                        showCancelButton: !0,
                        confirmButtonText: 'Yes! Proceed',
                        cancelButtonText: 'No! Cancel Please',
                        confirmButtonClass: "btn btn-success mt-2",
                        cancelButtonClass: "btn btn-danger ms-2 mt-2",
                        buttonsStyling: !1,
                    }).then(function (t) {
                        if (t.value) {
                            isInvoiced = true;
                        }
                    });
                }

                if (isInvoiced) {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("CreatePackage", "PatientTreatments", new { area = "EMR" })",
                        dataType: 'json',
                        data: _dataInsert,
                        success: function (data) {
                            $("#dchiInvId").val(data.invId);

                            if (data.isSuccess) {
                                if (data.invId > 0) {
                                    var alertPlaceholder = document.getElementById("errorCreate");
                                    function alert(e, t) {
                                        var l = document.createElement("div");
                                        l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" role="alert">' + e +
                                            '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                    }

                                    alert("<i class='fe fe-check-circle text-white'></i> Package Created Successfully for the selected Treatment!", "success");
                                }
                                else {
                                    let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                        "<div class='alert alert-warning' role='alert'>" +
                                        "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                        "<strong>Warning.. Notes Alredy Exists..</strong><br/>" +
                                        "</div></div>";
                                    $("#errorCreate").html(html);
                                    Timeout()
                                }
                            }
                            else {
                                let html = "<div class='alert alert-danger alert-dismissible' role='alert'>" +
                                    "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='Close' aria-label='Close'>×</button>" +
                                    "<strong>Error.. " + data.message + "</strong><br/>" +
                                    "</div>";
                                $("#errorCreate").html(html);
                                Timeout();
                            }
                        },
                        error: function (xhr) {
                            Timeout();
                        }
                    });
                }
            });
        }
        else {
            Swal.fire({
                title: "Attention!",
                text: "Please Select atleast 1 Treatment in the list to Create Package!",
                icon: "info",
                showCancelButton: 0,
                confirmButtonColor: "#0bb197",
                cancelButtonColor: "#ff3d60"
            });
        }
    }
    //#endregion

    //#region Update Status Click
    $('#btn_Update_Status').on('click', function (e) {
        e.preventDefault();

        var table = $("#tbl_DentCashTreatments").DataTable();

        var rows = $(table.$('input[type="checkbox"]').map(function () {
            return $(this).prop("checked") ? $(this).closest('tr') : null;
        }));

        if ($("#upt_status").val() != null && $("#upt_status").val() != "") {
            if (rows.length > 0) {
                $('#btn_Update_Status').removeClass("btn btn-warning");
                $('#btn_Update_Status').addClass("btn btn-warning btn-loaders btn-icon disabled");
                $('#btn_Update_Status').html("Updating...");

                $.each(rows, function (index, rowId) {
                    var _data = table.row(rowId).data();

                    var _dataInsert = {
                        "ptId": _data.ptId,
                        "pt_status": $("#upt_status :selected").val(),
                        "pt_notes": ""
                    }

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("UpdatePatientTreatmentStatus", "PatientTreatments", new { area = "EMR" })",
                        dataType: 'json',
                        data: _dataInsert,
                        success: function (data) {
                            $('#btn_Update_Status').removeClass("btn btn-warning btn-loaders btn-icon disabled");
                            $('#btn_Update_Status').addClass("btn btn-warning");
                            $('#btn_Update_Status').html("Update");

                            var alertPlaceholder = document.getElementById("errorCreate");

                            function alert(e, t) {
                                var l = document.createElement("div");
                                l.innerHTML = '<div class="alert alert-light-' + t + ' alert-dismissible" role="alert">' + e +
                                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                            }

                            if (data.isSuccess) {
                                if (data.invId > 0) {
                                    alert("<i class='fe fe-check-circle text-success'></i> Patient Treatment(s) Status Updated Successfully!", "success");

                                    $("#upt_status").val("").trigger("change");

                                    getDentCashTreatments();
                                }
                                else {
                                    alert("<i class='fe fe-alert-triangle text-warning'></i> " + data.message + "", "warning");
                                }
                            }
                            else {
                                alert("<i class='fe fe-minus-circle text-danger'></i> " + data.message + "!", "danger");
                            }

                            Timeout();
                        },
                        error: function (xhr) {
                            console.log(xhr);
                            $('#btn_Update_Status').removeClass("btn btn-success btn-loaders btn-icon disabled");
                            $('#btn_Update_Status').addClass("btn btn-success");
                            $('#btn_Update_Status').html("Save Changes");
                        }
                    });
                });
            }
            else {
                Swal.fire({
                    title: "Attention!",
                    text: "Please Select atleast 1 Treatment in the list to Update Status!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197",
                    cancelButtonColor: "#ff3d60"
                });
            }
        }
        else {
            Swal.fire({
                title: "Attention!",
                text: "Please Select Any Status to Update!",
                icon: "info",
                showCancelButton: 0,
                confirmButtonColor: "#0bb197",
                cancelButtonColor: "#ff3d60"
            });
        }
    });
    //#endregion

    //#region Print Qutation
    function print_Quotation() {
        var table = $("#tbl_DentCashTreatments").DataTable();

        var rows = $(table.$('input[type="checkbox"]').map(function () {
            return $(this).prop("checked") ? $(this).closest('tr') : null;
        }));

        if (rows.length > 0) {
            var _objArray = [];

            $.each(rows, function (index, rowId) {
                var _data = table.row(rowId).data();

                var _obj = {
                    "id": _data.ptId
                };

                _objArray.push(_obj);
            });

            var idsString = _objArray.map(obj => obj.id).join(',');

            $.ajax({
                url: '@Url.Action("Print_Insurance_Quotation", "PatientTreatments", new { area = "EMR" })',
                type: "POST",
                dataType: "json",
                data: { ids: idsString },
                async: false,
                success: function (response) {
                    if (response.isSuccess == true) {
                        window.open(response.message.PublicPath)
                    }
                    else {
                        Swal.fire({
                            title: "Error!",
                            text: response.message,
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197",
                            cancelButtonColor: "#ff3d60"
                        });
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }
        else {
            Swal.fire({
                title: "Attention!",
                text: "Please Select atleast 1 Treatment in the list to Print Quotation!",
                icon: "info",
                showCancelButton: 0,
                confirmButtonColor: "#0bb197",
                cancelButtonColor: "#ff3d60"
            });
        }
    }
    //#endregion

    //#region Copy Previous Dental Treatment
    function copyPrevious(ptId) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("CopyInsuranceTreatment", "PatientTreatments", new { area = "EMR" })?pt_appId=" + @emr.appId +"&ptId=" + ptId + "&type=Dental",
            success: function (response) {
                if (response.isAuthorized) {
                    if (response.isSuccess) {
                        getDentCashTreatments();

                        Swal.fire({
                            title: "Success!",
                            text: response.message,
                            icon: "success",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197"
                        });
                    }
                    else {
                        if (response.val == -1) {
                            Swal.fire({
                                title: "Duplicate!",
                                text: response.message,
                                icon: "warning",
                                confirmButtonColor: "#0bb197"
                            });
                        }
                        else {
                            Swal.fire({
                                title: "Error!",
                                text: response.message,
                                icon: "error",
                                confirmButtonColor: "#0bb197"
                            });
                        }
                    }
                }
                else {
                    Swal.fire({
                        title: "Access Denied!",
                        text: "You do not have enough priveleges to Copy Treatment!",
                        icon: "error",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197",
                        cancelButtonColor: "#ff3d60"
                    });
                }
            },
            error: function (xhr) {
                console.log(xhr);
            }
        });
    }
    //#endregion

    //#region Move Previous Dental Treatment
    function movePrevious(ptId) {
        Swal.fire({
            title: "Are you sure you want to Move this Treatment ?",
            text: "The selected Treatment will be moved to the current Appointment!",
            icon: "question",
            showCancelButton: !0,
            confirmButtonText: 'Yes! Confirm',
            cancelButtonText: 'No! Cancel Please',
            confirmButtonClass: "btn btn-success mt-2",
            cancelButtonClass: "btn btn-danger ms-2 mt-2",
            buttonsStyling: !1
        }).then(function (t) {
            if (t.value) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("MoveInsuranceTreatment", "PatientTreatments", new { area = "EMR" })?pt_appId=" + @emr.appId +"&ptId=" + ptId + "&type=Dental",
                    success: function (response) {
                        if (response.isAuthorized) {
                            if (response.isSuccess) {
                                getPreviousDentCashTreatments();
                                getDentCashTreatments();

                                Swal.fire({
                                    title: "Success!",
                                    text: response.message,
                                    icon: "success",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197"
                                });
                            }
                            else {
                                if (response.val == -1) {
                                    Swal.fire({
                                        title: "Forbidden!",
                                        text: response.message,
                                        icon: "warning",
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else if (response.val == -2) {
                                    Swal.fire({
                                        title: "Duplicate!",
                                        text: response.message,
                                        icon: "warning",
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                                else {
                                    Swal.fire({
                                        title: "Error!",
                                        text: response.message,
                                        icon: "error",
                                        confirmButtonColor: "#0bb197"
                                    });
                                }
                            }
                        }
                        else {
                            Swal.fire({
                                title: "Access Denied!",
                                text: response.message,
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197",
                                cancelButtonColor: "#ff3d60"
                            });
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr);
                    }
                });
            }
        });
    }
    //#endregion

    //#region UI/UX Functions
    function resizedt(tbl_name) {
        setTimeout(function () {
            var tables = $.fn.dataTable.tables({ visible: true, api: true });
            if (tables) {
                $('#' + tbl_name).DataTable().columns.adjust();
            }
        }, 450);
    }

    function Timeout() {
        window.setTimeout(function () {
            $(".alert").fadeTo(500, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 4200);
    }
    //#endregion
</script>
