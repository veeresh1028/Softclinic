@using System.Security.Claims;
@{
    ViewBag.Title = "Invoices";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var empId = claims.Where(c => c.Type == ClaimTypes.Sid).Select(c => c.Value).SingleOrDefault();
    var emp_name = claims.Where(c => c.Type == ClaimTypes.GivenName).Select(c => c.Value).SingleOrDefault();
    var emp_dept = claims.Where(c => c.Type == ClaimTypes.Locality).Select(c => c.Value).SingleOrDefault();
    var emp_department = claims.Where(c => c.Type == ClaimTypes.Surname).Select(c => c.Value).SingleOrDefault();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    var company = claims.Where(c => c.Type == ClaimTypes.PrimarySid).Select(c => c.Value).SingleOrDefault();
    var emp_branch = claims.Where(c => c.Type == ClaimTypes.GroupSid).Select(c => c.Value).SingleOrDefault();
}

<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title mb-0 text-primary">
            <span data-lang-key="invoices">Invoices</span>
        </h4>
    </div>
    <div class="page-rightheader">
        <div class="btn-list btn-animation">
            <button class="btn btn-outline-primary mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#searchFilter" aria-expanded="false" aria-controls="collapseExample">
                <i class="fa fa-filter"></i> 
                <span data-lang-key="advance-filter">Advanced Filters</span>
            </button>
            <button class="btn btn-outline-info" type="button" id="btnInv_Verified">
                <i class="fe fe-check-circle"></i> 
                <span data-lang-key="verify-invoice">Verify Invoice</span>
            </button>
            <button class="btn btn-vimeo ms-lg-2" type="button" id="btnPostAccount">
                <i class="fa fa-line-chart"></i> 
                <span data-lang-key="post-to-account">Post To Account</span>
            </button>
            <button class="btn btn-warning" type="button" id="btnInv_Email">
                <i class="fa fa-envelope"></i> 
                <span data-lang-key="send-email">Send Invoices in Email</span>
            </button>
            <button class="btn btn-green" type="button" id="btnInv_Whatsapp">
                <i class="fa fa-whatsapp"></i> 
                <span data-lang-key="send-whatsup">Send Invoices in Whatsapp</span>
            </button>
            @*<button class="btn btn-secondary" type="button" id="btnInv_PostToAccount">
                    <i class="fe fe-plus-circle"></i> Post to Account
                </button>*@
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card mb-0">
            <div class="card-status bg-blue"></div>
            <div class="collapse" id="searchFilter">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-6 col-md-4 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="branches">Branch<small>(es)</small></span></label>
                                <select class="form-control" id="select_branch" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="departments">Department<small>(s)</small></span></label>
                                <select class="form-control" id="select_dept" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="doctors">Doctor<small>(s)</small></span></label>
                                <select class="form-control" id="select_doctor" multiple="multiple">
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="from-date">From Date</span></label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_from_inv" class="form-control" placeholder="Select Invoice Date From" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="to-date">To Date</span></label>
                            </div>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                        <i class="fe fe-calendar"></i>
                                    </div>
                                </div>
                                <input id="select_date_to_inv" class="form-control" placeholder="Select Invoice Date To" type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-1">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="invoice-number">Invoice No.</span></label>
                                <input id="select_inv_no" class="form-control" placeholder="Invoice No." type="text" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-3">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key= "patient-search">Patient<small class="ms-2 text-info">(Search By MRN/EID/Mobile/Name)</small></span></label>
                                <select class="form-control select2-show-search" id="select_patient"></select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="type">Type<small>(s)</small></span></label>
                                <select class="form-control select2-show-search" id="select_type" multiple="multiple"></select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="status">Status<small>(es)</small></span></label>
                                <select class="form-control select2-show-search" id="select_status" multiple="multiple"></select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key= "insurance TPA">Insurance TPA<small>(s)</small></span></label>
                                <select class="form-control select2-show-search" id="select_tpa" multiple="multiple"></select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-2">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">
                                    <span data-lang-key="insurance-payers">Insurance Payer<small>(s)</small></span></label>
                                <select class="form-control select2-show-search" id="select_payer" multiple="multiple"></select>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-4 col-lg-1">
                            <div class="form-group mb-2">
                                <label class="form-label font-weight-semibold">&nbsp;</label>
                                <button class="btn btn-primary mb-2" type="button" id="btnSearch">
                                    <i class="fa fa-search-plus"></i> 
                                    <span data-lang-key="search">Search</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="row mb-lg-3 mb-sm-2">
                    <div class="col-md-12">
                        <small>
                            <span class="text-info">
                                <span data-lang-key="disc">Disc. - <strong>Discount</strong></span> | <span data-lang-key="patient-share">Share - <strong>Patient Share</strong></span>  | <span data-lang-key="net">Net - <strong>Net Amount</strong></span> | VAT - <strong>Patient VAT</strong> |
                                <span data-lang-key="credit-not-CN">CN - <strong>Credit Note</strong></span> | CN.VAT - <strong>Credit Note VAT</strong> | <span data-lang-key="actual-net-a.net">A.Net - <strong>Actual Net</strong></span> | <span data-lang-key="p.paid">P.Paid - <strong>Patient Paid</strong></span> | <span data-lang-key="p.bal">P.Bal - <strong>Patient Balance</strong></span>
                            </span>
                        </small>
                    </div>
                </div>
                <div id="progress-loader" style="display:none;">
                    <div class="progress progress-sm mb-3">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-teal progress-bar-indeterminate"></div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="tbl_invoices" class="table table-striped table-bordered text-nowrap resize-table" style="width: 100%;">
                        <thead>
                            <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D;">
                                <th class="border-bottom-0 font-weight-semibold text-white"></th>
                                <th class="border-bottom-0 font-weight-semibold text-white"></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="invoice-info">Invoice Info</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="patient-appointment info">Patient & Appointment Info</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="gross">Gross</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="disc">Disc.</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="share">Share</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="net">Net</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">VAT</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">CN</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">CN.VAT</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">A.Net</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Net+Vat</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">P.Paid</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">P.Bal</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">I.Paid</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">I.Bal</th>
                                <th class="border-bottom-0 font-weight-semibold text-white">Outs.</th>
                                <th class="border-bottom-0 font-weight-semibold text-white"><i class="fe fe-more-vertical" style="font-size: 20px;"></i></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="invoice-number">Invoice Number</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="invoice-status">Invoice Status</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="invoice-madeby">Invoice MadeBy</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="invoice-date">Invoice Date</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="invoice-type">Invoice Type</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="invoice-category">Invoice Category</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="mrn">MRN</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="patient-name">Patient Name</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="patient-type">Patient Type</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="EID-number">EID Number</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="EID-expiry">EID Expiry</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="visit-id">Visit ID</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="appointment-date">Appointment Date</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="from-to- date">From/To date</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    
                                    <span data-lang-key="doctor-license">Doctor License</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="doctor-name">Doctor Name</span></th>
                                <th class="border-bottom-0 font-weight-semibold text-white">
                                    <span data-lang-key="doctor-department">Doctor Department</span></th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th class="text-end text-dark font-weight-semibold fs-16">
                                    <span data-lang-key="total">Total:</span></th>
                                <th class="table_footer_align fs-14"></th>
                                <th class="table_footer_align fs-14"></th>
                                <th class="table_footer_align fs-14"></th>
                                <th class="table_footer_align fs-14"></th>
                                <th class="table_footer_align fs-14"></th>
                                <th class="table_footer_align fs-14"></th>
                                <th class="table_footer_align fs-14"></th>
                                <th class="table_footer_align fs-14"></th>
                                <th class="table_footer_align fs-14"></th>
                                <th class="table_footer_align fs-14"></th>
                                <th class="table_footer_align fs-14"></th>
                                <th class="table_footer_align fs-14"></th>
                                <th class="table_footer_align fs-14"></th>
                                <th class="table_footer_align fs-14"></th>
                                <th colspan="17" class="text-end fs-14 font-weight-semibold"></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Patient Details -->
<div class="modal fade overflow-auto" id="patient_details" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="invoice-list">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="patient_details_body">
        </div>
    </div>
</div>
<!-- End Modal Patient Details -->
<!-- Modal Cash Invoice Details -->
<div class="modal fade overflow-auto" id="edit_cash_invoice" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="invoice-list">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="edit_cash_invoice_body">
        </div>
    </div>
</div>
<!-- End Modal Cash Invoice Details -->
<!-- Modal Treatment Items Details -->
<div class="modal fade overflow-auto" id="treatment_item_details" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="invoice-list">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="treatment_item_details_body">
        </div>
    </div>
</div>
<!-- End Modal Treatment Items Details -->
<!-- Modal Invoice Log Details -->
<div class="modal fade overflow-auto" id="invoice_log_details" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="invoice-list">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="invoice_log_details_body">
        </div>
    </div>
</div>
<!-- End Modal Invoice Log Details -->
<!-- Modal New Receipts -->
<div class="modal fade overflow-auto" id="new_receipts" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="invoice-list">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="new_receipts_body">
        </div>
    </div>
</div>
<!-- End Modal New Receipts -->
<!-- Modal New Insurance Receipt -->
<div class="modal fade overflow-auto" id="new_ins_receipts" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true" data-modal-from="invoice-list">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" id="new_ins_receipts_body">
        </div>
    </div>
</div>
<!-- End Modal New Insurance Receipt -->

@section myScripts{
    <script type="text/javascript">
        //#region Page Load & Initialization
        $(function () {
            // Toggle Sidebar
            $("body").addClass("app sidebar-mini sidenav-toggled");
            // Focus on select2 Dropdown
            $(document).on('select2:open', () => {
                document.querySelector('.select2-search__field').focus();
            });
            // Load Advanced Filters
            load_filters();
            // Load Invoices
            GetInvoices();
        });
        //#endregion

        //#region Datatable Client Side Processing
        // Get Invoices
        var GetInvoices = function () {

            var _data = {
                "branch_ids": $('#select_branch').val().toString(),
                "dept_ids": $('#select_dept').val().toString(),
                "emp_ids": $('#select_doctor').val().toString(),
                "inv_no": $('#select_inv_no').val(),
                "patient": $('#select_patient').val(),
                "inv_types": $('#select_type').val().toString(),
                "inv_statuses": $('#select_status').val().toString(),
                "ic_codes": $('#select_tpa').val().toString(),
                "ip_codes": $('#select_payer').val().toString(),
                "inv_date_from": $('#select_date_from_inv').val(),
                "inv_date_to": $('#select_date_to_inv').val()
            }

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetInvoices", "Invoice", new { area = "Invoice" })",
                data: _data,
                beforeSend: function () {
                    $('#progress-loader').show();
                },
                start_time: new Date().getTime(),
                success: function (response) {
                    $('#progress-loader').hide();

                    //#region Load Datatable
                    var table;
                    if ($.fn.dataTable.isDataTable('#tbl_invoices')) {
                        table = $('#tbl_invoices').DataTable();
                        table.clear();
                        table.rows.add(response).draw();
                    }
                    else {
                        BindDataTable(response);
                    }

                    setTimeout(function () {
                        $('#tbl_invoices').DataTable().columns.adjust().draw();
                    }, 450);
                    //#endregio
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                    $('#progress-loader').hide();
                }
            }).done(function () {
                //resizedt();
            });
        }
        // Bind Datatable
        var BindDataTable = function (response) {
            var numberRenderer1 = $.fn.dataTable.render.number(',', '.', 2,).display;

            var table = $("#tbl_invoices").DataTable({
                processing: true,
                "deferRender": true,
                "pageLength": 50,
                "retrieve": true,
                lengthChange: true,
                "aaData": response,
                "aoColumns": [
                    { "mData": "invId" },
                    {
                        className: 'dt-control  pt-4',
                        orderable: false,
                        data: null,
                        defaultContent: '<span class="fs-15 text-success font-weight-bold spn-control"><i class="fa fa-plus-circle"></i></span>'
                    },
                    { "mData": "inv_no" },
                    { "mData": "patId" },
                    { "mData": "inv_total" },
                    { "mData": "inv_disc" },
                    { "mData": "pat_share" },
                    { "mData": "inv_net" },
                    { "mData": "inv_vat" },
                    { "mData": "inv_incv_net" },
                    { "mData": "inv_incv_vat" },
                    { "mData": "inv_act_net" },
                    { "mData": "inv_netvat" },
                    { "mData": "paid_amount" },
                    { "mData": "patient_balance" },
                    { "mData": "ins_paid_amount" },
                    { "mData": "ins_balance" },
                    { "mData": "balance" },
                    { "mData": "invId" },
                    { "mData": "inv_no" },
                    { "mData": "inv_status" },
                    { "mData": "inv_madeby" },
                    { "mData": "inv_date" },
                    { "mData": "app_ic_code" },
                    { "mData": "inv_print_status" },
                    { "mData": "pat_code" },
                    { "mData": "pat_name" },
                    { "mData": "pat_class" },
                    { "mData": "pat_emirateid" },
                    { "mData": "id_card_edate" },
                    { "mData": "appId" },
                    { "mData": "app_fdate" },
                    { "mData": "app_doc_ftime" },
                    { "mData": "emp_license" },
                    { "mData": "emp_name" },
                    { "mData": "emp_dept_name" },
                    { "mData": "inv_status2" },
                    { "mData": "inv_type" },

                ],
                "aoColumnDefs": [
                    {
                        "aTargets": [0],
                        "orderable": false,
                        "searchable": false,
                        "className": "select-checkbox text-center inbox-small-cells",
                        'checkboxes': {
                            'selectRow': true
                        }
                    },
                    {
                        "aTargets": [2],
                        "className": 'text-center p-2 text-wrap',
                        "render": function (data, type, full, meta) {
                            var html = data + "<br/><span class='text-primary' style='color:#FF00FF !important;'>" + full.appId + "</span><br/>" ;                            
                            if (full.inv_status == "Unpaid") {
                                html += "<span class='dot-label bg-danger me-2 w-2 h-2'></span><span class='text-danger'>Unpaid</span>";
                            }
                            else if (full.inv_status == "Paid") {
                                html += "<span class='dot-label bg-success me-2 w-2 h-2'></span><span class='text-success'>Paid</span>";
                            }
                            else if (full.inv_status == "Partly Paid") {
                                html += "<span class='dot-label bg-warning me-2 w-2 h-2'></span><span class='text-warning'>Partly Paid</span>";
                            }
                            else if (full.inv_status == "Deleted") {
                                html += "<span class='dot-label bg-danger me-2 w-2 h-2'></span><span class='text-danger'>Deleted</span>";
                            }
                            else {
                                html += "<span class='dot-label bg-dark me-2 w-2 h-2'></span><span class='text-dark'>" + full.inv_status + "</span>";
                            }

                            html += '<br/>';

                            if (full.inv_status2 == "Not-Verified") {
                                html += "<span class='text-danger ms-2'><i class='fe fe-minus-circle me-2'></i>Not-Verified</span><br/>";
                            }
                            else if (full.inv_status2 == "Posted") {
                                html += "<span class='text-success ms-2'><i class='fe fe-plus-circle me-2'></i>Posted</span><br/>";
                            }
                            else if (full.inv_status2 == "Verified") {
                                html += "<span class='text-primary ms-2'><i class='fe fe-check-circle me-2'></i>Verified</span><br/>";
                            }
                            else {
                                html += "<span class='text-dark ms-2'><i class='fe fe-help-circle me-2'></i>" + full.inv_status + "</span><br/>";
                            }

                            html += full.inv_madeby + "<br/><i class='fe fe-calendar text-dark'></i> <b class='text-dark me-1'>" + moment(full.inv_date).format("DD-MM-YYYY") + "</b><br/>" +
                                "<span class='text-info'><small>" + full.app_ic_name + " (" + full.app_ic_code + ")</small></span><br/><span class='text-primary' style='color:#e403ff !important;'>" + full.inv_print_status + "</span></br><span class='text-primary' style='color:#0000FF !important;'>" + full.app_category + "</span></br><span class='text-primary' style='color:#0000FF !important;'>" + full.pt_auth_code + "</span>";

                            return html;
                        }
                    },
                    {
                        "aTargets": [3],
                        "render": function (data, type, full, meta) {
                            var pat_det = '';
                            var pat_class = full.pat_class;
                            var gender = full.pat_gender;
                            var emid = full.pat_emirateid;

                            if (emid == "") {
                                emid = "999-9999-9999999-9";
                            }

                            // Check Patient Class
                            if (pat_class === 'VIP') {
                                pat_det += '<a onclick="patientDetails(\'' + data + '\',\'' + full.pat_name + '\')"><span class="text-dark font-weight-semibold text-capitalize fs-14">' + full.pat_name + '</span>&nbsp;<span title="Patient is a VIP"><i class="fa fa-star text-orange"></i></span></a> ';
                            }
                            else if (pat_class === 'Employee Related') {
                                pat_det += '<a onclick="patientDetails(\'' + data + '\',\'' + full.pat_name + '\')"><span class="text-dark font-weight-semibold text-capitalize fs-14">' + full.pat_name + '</span>&nbsp;<span title="This Patient is related with an Employee"><i class="fa fa-street-view text-info"></i></span></a> ';
                            }
                            else if (pat_class === 'Management Related') {
                                pat_det += '<a onclick="patientDetails(\'' + data + '\',\'' + full.pat_name + '\')"><span class="text-dark font-weight-semibold text-capitalize fs-14">' + full.pat_name + '</span>&nbsp;<span title="This Patient is related to the Management"><i class="fa fa-handshake-o text-primary"></i></span></a> ';
                            }
                            else {
                                pat_det += '<a onclick="patientDetails(\'' + data + '\',\'' + full.pat_name + '\')"><span class="text-dark font-weight-semibold text-capitalize fs-14">' + full.pat_name + '</span></a> ';
                            }

                            pat_det += '<br/><span class="btn-indigo btn-sm">' + full.pat_code + '</span>'
                            // Check EMID Expiry
                            if (emid != null && emid != "" && emid != undefined) {

                                let id_card_edate = moment(full.id_card_edate);
                                if (id_card_edate.isValid()) {
                                    let today = moment();
                                    if (id_card_edate.diff(today, 'days') <= 0) {
                                        pat_det += ' <div class="badge bg-danger-transparent font-weight-semibold mt-2" style="margin-left:5px;font-size: 0.9em">' + emid + '<span class="tag-addon"><i class="fa fa-exclamation-circle" title="EMID Expired on ' + moment(id_card_edate).format("DD-MMMM-YYYY") + '" style="color:#ff0000;"></i></span></div>';
                                    }
                                    else {
                                        pat_det += '<span class="badge bg-primary-transparent text-dark ms-2 font-weight-bold" style="font-size: 0.9em;">' + emid + '</span>';
                                    }
                                }
                            }
                            pat_det += '<br/><div class="tag bg-white border-1 border-dark font-weight-semibold mt-2 text-dark" title="Patient Balance">' + numberRenderer1(full.pat_tot_balance) + '<span class="tag-addon tag-orange"><i class="fa fa-money"></i></span></div>'
                            var date_app = moment(full.app_fdate).format("DD-MM-YYYY");

                            var app_info = '<div class="tag tag-success font-weight-semibold me-2">' + data + '<span class="tag-addon"><i class="fe fe-user-check"></i></span></div>' +
                                '<i class="fe fe-calendar text-dark"></i> <b class="text-dark me-1">' + date_app + '</b> <i class="fe fe-clock text-dark"></i> <b class="text-dark">' + full.app_doc_ftime + ' - ' + full.app_doc_ttime + '<b><br/>' +
                                '<span class="font-weight-semibold text-capitalize fs-14" style="color:' + full.emp_color + '"> <i class="fa fa-circle"></i> ' + full.emp_name + '</span>' +
                                '<div class="tag tag-secondary font-weight-semibold ms-2">' + full.emp_dept_name + '<span class="tag-addon"><i class="fe fe-activity"></i></span></div><div class="tag tag-default border-dark text-dark font-weight-semibold ms-2">' + full.emp_license + '</div><br/>';


                            var html = pat_det + "<hr style='margin-top: 0.5rem;margin-bottom: 0.5rem;border-top: 1px solid #142d9d;'>" + app_info;

                            return html;
                        }
                    },
                    {
                        "aTargets": [4],
                        "className": "text-end fs-12 font-weight-semibold",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [5],
                        "className": "text-end fs-12 font-weight-semibold",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [6],
                        "className": "text-end fs-12 font-weight-semibold",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [7],
                        "className": "text-end fs-12 font-weight-semibold",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [8],
                        "className": "text-end fs-12 font-weight-semibold",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [9],
                        "className": "text-end fs-12 font-weight-semibold",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [10],
                        "className": "text-end fs-12 font-weight-semibold",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [11],
                        "className": "text-end fs-12 font-weight-semibold",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [12],
                        "className": "text-end fs-12 font-weight-semibold",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [13],
                        "className": "text-end fs-12 font-weight-semibold",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [14],
                        "className": "text-end fs-12 font-weight-semibold",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [15],
                        "className": "text-end fs-12 font-weight-semibold",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [16],
                        "className": "text-end fs-12 font-weight-semibold",
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [17],
                        "className": "text-end fs-12 font-weight-semibold",
                        "visible": false,
                        "render": $.fn.dataTable.render.number(',', '.', 2)
                    },
                    {
                        "aTargets": [18],
                        "className": 'text-center',
                        "orderable": false,
                        "searchable": false,
                        "render": function (invId, type, full, meta) {
                            var inv_status = full.inv_status;
                            var inv_estatus = full.inv_estatus;
                            var inv_status2 = full.inv_status2;
                            var patId = full.patId;
                            var appId = full.appId;
                            var inv_type = full.inv_type;
                            var inv_dept = full.emp_dept_name;

                            var more = '<div class="dropdown"><a type="button" class="" data-bs-toggle="dropdown"><i class="fe fe-more-vertical" style="font-size: 20px;"></i></a>' +
                                '<div class="dropdown-menu" style="min-width:auto">';

                            if (inv_status != "Deleted" && inv_status2 != "Verified" && inv_estatus != "Submitted") {
                                if (inv_status2 != "Posted") {
                                    more += `<a class="dropdown-item text-dark fw-bold" href="javascript:void(0)" onclick="editInvoice('${invId}', '${patId}', '${appId}', '${inv_type}', '${inv_dept}')"><i class="fe fe-edit-2 text-success" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Edit</a>`;

                                    if (inv_status != "Partly Paid" && inv_status != "Paid") {
                                        more += '<a class="dropdown-item text-dark fw-bold" href="javascript:void(0)" onclick="deleteInvoice(\'' + invId + '\')"><i class="fe fe-trash text-danger" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Delete</a>';
                                    }
                                }

                                if (inv_type == "Cash") {
                                    more += '<a class="dropdown-item text-dark fw-bold" href="javascript:void(0)" onclick="printInvoice(\'' + invId + '\')"><i class="fe fe-printer text-dark" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Print</a>';
                                }
                                else {
                                    more += '<a class="dropdown-item text-dark fw-bold" href="javascript:void(0)" onclick="printInsInvoice(\'' + invId + '\')"><i class="fe fe-printer text-dark" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Print</a>';
                                }
                            }

                            if (inv_status != "Deleted" && inv_status2 != "Verified" && inv_status2 != "Posted") {
                                if (inv_type == "Cash") {
                                    more += '<a class="dropdown-item text-dark fw-bold" href="javascript:void(0)"  onclick="newReceipt(\'' + invId + '\', \'' + patId + '\')"><i class="fe fe-file-plus text-indigo" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Receipts</a>';
                                }
                                else {
                                    more += '<a class="dropdown-item text-dark fw-bold" href="javascript:void(0)"  onclick="newInsReceipt(\'' + invId + '\', \'' + patId + '\')"><i class="fe fe-file-plus text-indigo" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Receipts</a>';
                                }
                            }
                            more += '<a class="dropdown-item text-dark fw-bold" href="javascript:void(0)"  onclick="sendWhatsapp(\'' + invId + '\', \'' + full.inv_no + '\', \'' + full.pat_mob + '\', \'' + full.pat_email + '\', \'' + patId + '\', \'' + full.pat_name + '\')"><i class="fa fa-whatsapp text-success" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Send in Whatsapp</a>' +
                                '<a class="dropdown-item text-dark fw-bold" href="javascript:void(0)"  onclick="sendEmail(\'' + invId + '\', \'' + full.inv_no + '\', \'' + full.pat_mob + '\', \'' + full.pat_email + '\', \'' + patId + '\', \'' + full.pat_name + '\')"><i class="fe fe-mail text-secondary" style="font-size: 15px;margin-right: 0.5rem;"></i>&nbsp;Send in Mail</a>'+
                                '<a class="dropdown-item text-dark fw-bold" href="javascript:void(0)" onclick="invoiceLog(\'' + invId + '\')"><i class="fe fe-eye" style="font-size: 15px;margin-right: 0.5rem;color:#046058"></i>&nbsp;Logs</a>' +
                                '</div>' +
                                '</div>';

                            return more;
                        }
                    },
                    {
                        "aTargets": [19],
                        "visible": false
                    },
                    {
                        "aTargets": [20],
                        "visible": false
                    },
                    {
                        "aTargets": [21],
                        "visible": false
                    },
                    {
                        "aTargets": [22],
                        "visible": false,
                        "render": function (data, type, full, meta) {
                            if (type === 'display' || type === 'filter') {
                                return moment(data).format("DD-MM-YYYY");
                            }

                            return moment(data).format("YYYY-MM-DD");
                        }
                    },
                    {
                        "aTargets": [23],
                        "visible": false
                    },
                    {
                        "aTargets": [24],
                        "visible": false
                    },
                    {
                        "aTargets": [25],
                        "visible": false
                    },
                    {
                        "aTargets": [26],
                        "visible": false
                    },
                    {
                        "aTargets": [27],
                        "visible": false
                    },
                    {
                        "aTargets": [28],
                        "visible": false
                    },
                    {
                        "aTargets": [29],
                        "visible": false,
                        "render": function (data, type, full, meta) {
                            if (type === 'display' || type === 'filter') {
                                return moment(data).format("DD-MM-YYYY");
                            }

                            return moment(data).format("YYYY-MM-DD");
                        }
                    },
                    {
                        "aTargets": [30],
                        "visible": false
                    },
                    {
                        "aTargets": [31],
                        "visible": false,
                        "render": function (data) {
                            return moment(data).format("DD-MM-YYYY");
                        }
                    },
                    {
                        "aTargets": [32],
                        "visible": false,
                        "render": function (data, type, full, meta) {
                            return full.app_doc_ftime + ' - ' + full.app_doc_ttime;
                        }
                    },
                    {
                        "aTargets": [33],
                        "visible": false
                    },
                    {
                        "aTargets": [34],
                        "visible": false
                    },
                    {
                        "aTargets": [35],
                        "visible": false
                    },
                    {
                        "aTargets": [36],
                        "visible": false
                    },
                    {
                        "aTargets": [37],
                        "visible": false
                    }
                ],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                order: [[21, 'desc']],
                fixedHeader: {
                    header: true,
                    footer: true
                },
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Invoices',
                        footer: 'true',
                        exportOptions: {
                            columns: [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,36, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Invoices to Excel!");
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Invoices',
                        footer: 'true',
                        orientation: 'landscape',
                        pageSize: 'LEGAL',
                        exportOptions: {
                            columns: [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Invoices to PDF!");
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Invoices',
                        footer: 'true',
                        exportOptions: {
                            columns: [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, node, config);
                            exportLogs("Employee Exported Invoices to CSV!");
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Invoices',
                        footer: 'true',
                        exportOptions: {
                            columns: [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
                        },
                        action: function (e, dt, node, config) {
                            $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, node, config);
                            exportLogs("Employee Printed Invoices!");
                        }
                    }
                ],
                language: {
                    searchPlaceholder: 'Search...',
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search Invoice </span>',
                    lengthMenu: '_MENU_',
                },
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                fixedColumns: true,
                footerCallback: function (row, data, start, end, display) {
                    var api = this.api();

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
                    };


                    total_inv_total = api.column(4).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(4).footer()).html(numberRenderer1(total_inv_total.toFixed(2)));

                    total_inv_disc = api.column(5).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(5).footer()).html(numberRenderer1(total_inv_disc.toFixed(2)));

                    total_pat_share = api.column(6).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(6).footer()).html(numberRenderer1(total_pat_share.toFixed(2)));

                    total_inv_net = api.column(7).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(7).footer()).html(numberRenderer1(total_inv_net.toFixed(2)));

                    total_inv_vat = api.column(8).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(8).footer()).html(numberRenderer1(total_inv_vat.toFixed(2)));

                    total_inv_incv_net = api.column(9).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(9).footer()).html(numberRenderer1(total_inv_incv_net.toFixed(2)));

                    total_inv_incv_vat = api.column(10).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(10).footer()).html(numberRenderer1(total_inv_incv_vat.toFixed(2)));

                    total_inv_act_net = api.column(11).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(11).footer()).html(numberRenderer1(total_inv_act_net.toFixed(2)));

                    total_paid_amount = api.column(12).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(12).footer()).html(numberRenderer1(total_paid_amount.toFixed(2)));

                    total_patient_balance = api.column(13).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(13).footer()).html(numberRenderer1(total_patient_balance.toFixed(2)));

                    total_ins_paid_amount = api.column(14).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(14).footer()).html(numberRenderer1(total_ins_paid_amount.toFixed(2)));

                    total_ins_balance = api.column(15).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(15).footer()).html(numberRenderer1(total_ins_balance.toFixed(2)));

                    total_balance = api.column(16).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(16).footer()).html(numberRenderer1(total_balance.toFixed(2)));

                    total_balance = api.column(17).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
                    $(api.column(17).footer()).html(numberRenderer1(total_balance.toFixed(2)));
                },
                rowCallback: function (row, data, index) {
                    if (data.inv_status === "Deleted") {
                        $('td:eq(0)', row).find("input[type='checkbox']").remove();
                    }
                },
            });

            table.buttons().container().appendTo('#tbl_invoices_wrapper .col-md-6:eq(0)');

            // Add event listener for opening and closing details
            table.on('click', 'td.dt-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);
                var _span = tr.find('.spn-control');
                if (row.child.isShown()) {
                    $(_span).removeClass('text-danger');
                    $(_span).addClass('text-success');
                    $(_span).html('<i class="fa fa-plus-circle"></i>');
                    row.child.hide();
                    tr.removeClass('shown');

                    localStorage.removeItem("patId");
                    localStorage.removeItem("pat_info");
                } else {

                    $(_span).removeClass('text-success');
                    $(_span).addClass('text-danger');
                    $(_span).html('<i class="fa fa-minus-circle"></i>');

                    var _data = table.row(this).data();

                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("InvoiceItems", "Invoice", new { area = "Invoice" })?appId=' + _data.appId + "&invId=" + _data.invId + "&inv_insurance=" + _data.inv_insurance,
                        contentType: "application/json",
                        dataType: "html",
                        success: function (response) {
                            row.child(response).show();
                            tr.addClass('shown');
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });

                }
            });
        }
        //#endregion

        //#region Dropdown Bindings
        // Initialize All Items
        var load_filters = function () {
            load_branches();
            load_departments();
            load_doctors();
            load_patients();
            load_types();
            load_status();
            load_tpa();
            load_payer();

            $('#select_date_from_inv').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            $("#select_date_from_inv").bootstrapdatepicker("setDate", "today");
            $('#select_date_to_inv').bootstrapdatepicker({
                format: "dd-MM-yyyy",
                viewMode: "date",
                todayHighlight: true,
                autoclose: true,
                multidate: false,
                multidateSeparator: "-"
            });
            $("#select_date_to_inv").bootstrapdatepicker("setDate", "today");

            $('#select_date_from_inv').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });

            $('#select_date_to_inv').keypress(function (e) {
                var charCode = (e.which) ? e.which : e.keyCode
                if (String.fromCharCode(charCode).match(/[^0-9./-]/g)) {
                    return false;

                }
                else {
                    if (e.target.value.length >= 18)
                        return false;
                }
            });
        }

        // Load Branches
        var load_branches = function () {
            $('#select_branch').SumoSelect({
                placeholder: 'Select Branch(es)',
                captionFormat: '{0} Branch(es) Selected',
                captionFormatAllSelected: 'All {0} Branches selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $.ajax({
            url: '@Url.Action("GetBranches", "Invoice", new { area = "Invoice" })',
            type: "GET",
            dataType: "JSON",
            async: false,
            success: function (response) {
                pageLoad = true;
                $('#select_branch').html('');
                $('#select_branch')[0].sumo.reload();

                $.each(response, function (j) {
                        $('#select_branch')[0].sumo.add(response[j].id, response[j].text);
                        $('#select_branch')[0].sumo.selectItem(["@emp_branch.ToString()"]);
                });
                pageLoad = false;
            },
            error: function (xhr) {
                console.log("Failed! Error Message : " + xhr.statusText);
            }
            }).done(function (){
                $('#select_branch')[0].sumo.reload();
            });
        }

        // Load Departments
        var load_departments = function () {
            $('#select_dept').SumoSelect({
                placeholder: 'Select Department(s)',
                captionFormat: '{0} Department(s) Selected',
                captionFormatAllSelected: 'All {0} Department(s) selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $.ajax({
                url: '@Url.Action("GetDepartments", "Invoice", new { area = "Invoice" })',
                type: "GET",
                dataType: "JSON",
                async: false,
                success: function (response) {
                    $('#select_dept').html('');
                    $('#select_dept')[0].sumo.reload();

                    $.each(response, function (j) {
                        $('#select_dept')[0].sumo.add(response[j].id, response[j].text);
                        //$('#select_dept')[0].sumo.selectItem([response[j].id]);
                    });

                    $('#select_dept')[0].sumo.reload();
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                }
            });
        }
        // Load Doctors
        var load_doctors = function () {
            $("#select_doctor").SumoSelect({
                placeholder: 'Select Doctor(s)',
                captionFormat: '{0} Doctor(s) Selected',
                captionFormatAllSelected: 'All {0} Doctors selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $('#select_doctor').html('');
            $('#select_doctor')[0].sumo.reload();
        }
        // On Departments select
        $('#select_dept').on('change', function (e) {
            if ($(this).val() != "" && $('#select_branch').val() != "") {

                var _data = {
                    "Departments": $('#select_dept').val(),
                    "Branches": $('#select_branch').val(),
                }

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetDoctorsByDepartment", "Invoice", new { area = "Invoice" })',
                    dataType: 'JSON',
                    data: _data,
                    success: function (response) {

                        $('#select_doctor').html('');
                        $('#select_doctor')[0].sumo.reload();

                        $.each(response, function (j) {
                            $('#select_doctor')[0].sumo.add(response[j].id, response[j].text);
                            //$('#select_doctor')[0].sumo.selectItem([response[j].id]);
                        });

                        $('#select_doctor')[0].sumo.reload();
                    },
                    error: function (xhr) {
                        console.log("Failed! Error Message : " + xhr.statusText);
                    }
                });
            }
            else {
                $('#select_doctor').html('');
                $('#select_doctor')[0].sumo.reload();
            }
        });

        // Load Patients
        var load_patients = function () {

            $('#select_patient').select2({
                placeholder: 'Search Patient',
                width: '100%',
                allowClear: true,
                minimumInputLength: 3,
                escapeMarkup: function (markup) {
                    return markup;
                },
                ajax: {
                    url: '@Url.Action("GetPatients", "AppointmentList", new { area = "Appointment" })',
                    dataType: 'json',
                    delay: 250,
                    data: function (query) {
                        return {
                            query: query.term,
                            type: 0
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data
                        };
                    },
                    cache: true
                }
            });
        }

        // Load Types
        var load_types = function () {
            $('#select_type').SumoSelect({
                placeholder: 'Select Type(s)',
                captionFormat: '{0} Type(s) Selected',
                captionFormatAllSelected: 'All {0} Type(s) selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $('#select_type').html('');
            $('#select_type')[0].sumo.reload();

            $('#select_type')[0].sumo.add("Cash", "Cash");
            $('#select_type')[0].sumo.add("Insurance", "Insurance");

            $('#select_type')[0].sumo.reload();


        }

        // Load Status
        var load_status = function () {
            $('#select_status').SumoSelect({
                placeholder: 'Select Status(es)',
                captionFormat: '{0} Status(es) Selected',
                captionFormatAllSelected: 'All {0} Status(es) selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $('#select_status').html('');
            $('#select_status')[0].sumo.reload();

            $('#select_status')[0].sumo.add("Unpaid", "Unpaid");
            $('#select_status')[0].sumo.add("Partly Paid", "Partly Paid");
            $('#select_status')[0].sumo.add("Paid", "Paid");
            $('#select_status')[0].sumo.add("Deleted", "Deleted");


            $('#select_status')[0].sumo.reload();


        }

        // Load Doctors
        var load_tpa = function () {
            $("#select_tpa").SumoSelect({
                placeholder: 'Select Insurance TPA(s)',
                captionFormat: '{0} Insurance TPA(s) Selected',
                captionFormatAllSelected: 'All {0} Insurance TPAs selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $.ajax({
                url: '@Url.Action("GetInsuranceTPA", "Invoice", new { area = "Invoice" })',
                type: "GET",
                dataType: "JSON",
                async: false,
                success: function (response) {
                    $('#select_tpa').html('');
                    $('#select_tpa')[0].sumo.reload();

                    $.each(response, function (j) {
                        $('#select_tpa')[0].sumo.add(response[j].Value, response[j].Text);
                    });

                    $('#select_tpa')[0].sumo.reload();
                },
                error: function (xhr) {
                    console.log("Failed! Error Message : " + xhr.statusText);
                }
            });
        }

        // Load Payers
        var load_payer = function () {
            $("#select_payer").SumoSelect({
                placeholder: 'Select Insurance Payer(s)',
                captionFormat: '{0} Insurance Payer(s) Selected',
                captionFormatAllSelected: 'All {0} Insurance Payers selected!',
                csvDispCount: 3,
                okCancelInMulti: true,
                isClickAwayOk: true,
                search: true,
                searchText: 'Search here...',
                selectAll: true
            });

            $('#select_payer').html('');
            $('#select_payer')[0].sumo.reload();
        }
        //#endregion

        //#region Insurance Change Event
        $('#select_tpa').on('change', function (e) {
            if ($(this).val() != "" && $(this).val() != null && $(this).val() != undefined) {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetInsurancePayers", "Invoice", new { area = "Invoice" })?ip_ins=' + $(this).val(),
                    dataType: 'json',
                    success: function (response) {
                        $('#select_payer').html('');
                        $('#select_payer')[0].sumo.reload();

                        $.each(response, function (j) {
                            $('#select_payer')[0].sumo.add(response[j].Value, response[j].Text);
                        });

                        $('#select_payer')[0].sumo.reload();
                    },
                    error: function (xhr) {
                        console.log("Failed! Error Message : " + xhr.statusText);
                    }
                });
            }
            else {
                $('#select_payer').html('');
                $('#select_payer')[0].sumo.reload();
            }
        });
        //#endregion

        //#region View Patient Details
        var patientDetails = function (patId, pat_name) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("PatientDetail", "Patient", new { area = "Patient" })?patId=" + patId + "&pat_name=" + pat_name,
                contentType: "application/json",
                dataType: "html",
                success: function (response) {
                    $("#patient_details_body").html(response);
                    $("#patient_details").modal("show");
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Search Patients
        $("#btnSearch").click(function (e) {
            e.preventDefault();

            if (($("#select_dept").val() != null && $("#select_dept").val() != 0 && $("#select_dept").val() != "" && $("#select_dept").val() != undefined) ||
                ($("#select_doctor").val() != null && $("#select_doctor").val() != 0 && $("#select_doctor").val() != "" && $("#select_doctor").val() != undefined) ||
                ($("#select_inv_no").val() != null && $("#select_inv_no").val() != 0 && $("#select_inv_no").val() != "" && $("#select_inv_no").val() != undefined) ||
                ($("#select_patient").val() != null && $("#select_patient").val() != 0 && $("#select_patient").val() != "" && $("#select_patient").val() != undefined) ||
                ($("#select_type").val() != null && $("#select_type").val() != 0 && $("#select_type").val() != "" && $("#select_type").val() != undefined) ||
                ($("#select_status").val() != null && $("#select_status").val() != 0 && $("#select_status").val() != "" && $("#select_status").val() != undefined) ||
                ($("#select_tpa").val() != null && $("#select_tpa").val() != 0 && $("#select_tpa").val() != "" && $("#select_tpa").val() != undefined) ||
                ($("#select_payer").val() != null && $("#select_payer").val() != 0 && $("#select_payer").val() != "" && $("#select_payer").val() != undefined) ||
                ($("#select_date_from_inv").val() != null && $("#select_date_from_inv").val() != 0 && $("#select_date_from_inv").val() != "" && $("#select_date_from_inv").val() != undefined) ||
                ($("#select_date_to_inv").val() != null && $("#select_date_to_inv").val() != 0 && $("#select_date_to_inv").val() != "" && $("#select_date_to_inv").val() != undefined)) {

                let isValid = true;

                let inv_frm = moment($("#select_date_from_inv").val());
                let inv_to = moment($("#select_date_to_inv").val());


                // Check if Date From is a valid Date
                if ($("#select_date_from_inv").val() != null && $("#select_date_from_inv").val() != 0 && $("#select_date_from_inv").val() != "" && $("#select_date_from_inv").val() != undefined) {
                    if (!inv_frm.isValid()) {
                        isValid = false;
                        e.stopPropagation();
                        return $.growl.error({
                            title: "Error",
                            message: "Invalid Date Selection for Invoiced From"
                        });
                    }
                }

                // Check if Date To is a valid Date
                if ($("#select_date_to_inv").val() != null && $("#select_date_to_inv").val() != 0 && $("#select_date_to_inv").val() != "" && $("#select_date_to_inv").val() != undefined) {
                    if (!inv_to.isValid()) {
                        isValid = false;
                        e.stopPropagation();
                        return $.growl.error({
                            title: "Error",
                            message: "Invalid Date Selection for Invoiced To"
                        });
                    }
                }
                // Check if Date Range is valid
                if (($("#select_date_from_inv").val() != null && $("#select_date_from_inv").val() != 0 && $("#select_date_from_inv").val() != "" && $("#select_date_from_inv").val() != undefined) &&
                    ($("#select_date_to_inv").val() != null && $("#select_date_to_inv").val() != 0 && $("#select_date_to_inv").val() != "" && $("#select_date_to_inv").val() != undefined)) {
                    if (inv_frm.isValid() && inv_to.isValid()) {
                        if (inv_to.diff(inv_frm, 'days') <= -1) {
                            isValid = false;

                            var index = [];
                            index.push("select_date_from_inv");
                            index.push("select_date_to_inv");

                            $.each(index, function (i, v) {
                                if (index[i] != null && index[i] != "") {
                                    var elem = $("#" + index[i]);
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                    }
                                    else {
                                        $(elem).addClass(" is-invalid");
                                    }

                                    setTimeout(function () {
                                        if (elem.hasClass("select2-hidden-accessible")) {
                                            $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                        }
                                        else {
                                            $(elem).removeClass("is-invalid");
                                        }
                                    }, 5000);
                                }
                            });

                            e.stopPropagation();
                            return $.growl.error({
                                title: "Error",
                                message: "Invoiced From Date should be less than To Date!"
                            });
                        }
                    }
                }

                if (isValid) {
                    GetInvoices();
                }

            }
            else {
                Swal.fire({
                    title: "Attention!",
                    text: "Search by Either of the following filters : Department(s) / Doctor(s) / Invoiced Date / Invoice No. / Patient / Invoice Type(s) / Invoice Status(es) / TPA(s) / Payer(s)",
                    icon: "warning",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                });
            }
        });
        //#endregion

        //#region Print Cash Invoice
        var printInvoice = function (invId) {
            window.open("@Url.Action("PrintInvoice", "Invoice", new { area = "Invoice" })?invId=" + invId, "Invoice Print");
        }
        //#endregion

        //#region Print Insurance Invoice
        var printInsInvoice = function (invId) {
            window.open("@Url.Action("printInsInvoice", "Invoice", new { area = "Invoice" })?invId=" + invId, "Invoice Print");
        }
        //#endregion

        //#region Edit Cash Invoice
        var editInvoice = function (invId, patId, appId, inv_type, ins_dept) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetEMRPatientInfo", "Appointment", new { area = "Appointment" })' + "?appId=" + appId,
                dataType: 'json',
                success: function (response) {
                },
                error: function (xhr) {
                    console.log(xhr.statusText);
                }
            });

            $.ajax({
                type: "GET",
                url: "@Url.Action("EditCashInvoice", "Invoice", new { area = "Invoice" })?invId=" + invId + "&patId=" + patId + "&inv_type=" + inv_type + "&ins_dept=" + ins_dept,
                contentType: "application/json",
                dataType: "html",
                success: function (response) {
                    $("#edit_cash_invoice_body").html(response);
                    $("#edit_cash_invoice").modal("show");
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Delete Invoice
        var deleteInvoice = function (invId) {
            Swal.fire({
            title: "Are you sure you want to delete this Invoice?",
            html: "This action will delete this Invoice and will Change your Appointment status as <span class='text-danger'>Arrived</span>, and will Delete all the <span class='text-danger'>treatments and receipts</span> its included!",
            icon: "question",
            showCancelButton: !0,
            confirmButtonText: 'Yes! I Confirm',
            cancelButtonText: 'No! Cancel Please',
            confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: '@Url.Action("DeleteInvoice", "Invoice", new { area = "Invoice" })?invId=' + invId ,
                        type: "POST",
                        dataType: "json",
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.isSuccess) {
                                    Swal.fire({
                                        title: "Success!",
                                        text: "Invoice was Deleted Successfully!",
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                                    });
                                    GetInvoices();
                                }
                                else {
                                    Swal.fire({
                                        title: "Error!",
                                        text: "Failed to Delete the Invoice!",
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have enough privileges to delete this Invoice!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }
                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Delete Invoice! Please refresh the page and try again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                    });
                }
            });
        }
        //#endregion

        //#region Invoice Logs
        var invoiceLog = function (invId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("InvoiceLogs", "Invoice", new { area = "Invoice" })?invId=" + invId,
                contentType: "application/json",
                dataType: "html",
                success: function (response) {
                    $("#invoice_log_details_body").html(response);
                    $("#invoice_log_details").modal("show");
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                }
            });
        }
        //#endregion

        //#region Verify Invoice
        $("#btnInv_Verified").click(function (event) {
            var table = $("#tbl_invoices").DataTable();
            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));

            if (rows.length > 0) {
                Swal.fire({
                        title: "This action will Change Invoice Status!",
                    html: "Are you sure you want to change the status to <span class='text-danger'>Verified</span> ? <br/>P.S.: Once status is Verified you can't do any operation on the invoice and receipts",
                        icon: "question",
                        showCancelButton: !0,
                        confirmButtonText: 'Yes! I confirm',
                        cancelButtonText: 'No! Cancel Please',
                        confirmButtonClass: "btn btn-success mt-2",
                        cancelButtonClass: "btn btn-danger ms-2 mt-2",
                        buttonsStyling: !1
                    }).then(function (t) {
                        if (t.value) {
                            var _invIds = [];

                            $.each(rows, function (index, rowId) {
                                var _data = table.row(rowId).data();
                                _invIds.push(_data.invId);
                            });

                            var invoiceBulkStatus = {
                                invIds: _invIds
                            }
                            console.log(invoiceBulkStatus);

                            $.ajax({
                                url: '@Url.Action("UpdateBulkInvoiceStatus", "Invoice", new { area = "Invoice" })',
                                type: "POST",
                                dataType: "json",
                                data: invoiceBulkStatus,
                                async: false,
                                success: function (response) {
                                    if (response.isSuccess) {
                                        GetInvoices();
                                        event.preventDefault();
                                        event.stopPropagation();
                                        return $.growl.notice({
                                            title: "Success",
                                            message: response.message
                                        });
                                    }
                                    else {
                                        event.preventDefault();
                                        event.stopPropagation();
                                        return $.growl.error({
                                            title: "Error",
                                            message: response.message
                                        });
                                    }
                                },
                                error: function (xhr) {
                                    console.log(xhr);
                                }
                            });

                        }
                    });
            }
            else {
                event.preventDefault();
                Swal.fire({
                    title: "Attention!",
                    text: "Please Select atleast one invoice in the list to update the status",
                    icon: "warning",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                });
            }

        });
        //#endregion

        //#region Post Invoice To Account Old
        $("#btnInv_PostToAccount").click(function (event) {
            var table = $("#tbl_invoices").DataTable();
            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));

            if (rows.length > 0) {
                Swal.fire({
                        title: "This action will Post selected Invoice to Chart of Account!",
                        html: "Are you sure you want to post selected invoice(s) to <span class='text-danger'>Chart of Accounts</span> ? <br/>Once it's posted to Account you can't do any operation on the invoice and receipts ?",
                        icon: "question",
                        showCancelButton: !0,
                        confirmButtonText: 'Yes! I confirm',
                        cancelButtonText: 'No! Cancel Please',
                        confirmButtonClass: "btn btn-success mt-2",
                        cancelButtonClass: "btn btn-danger ms-2 mt-2",
                        buttonsStyling: !1
                    }).then(function (t) {
                        if (t.value) {
                            var _invIds = [];

                            $.each(rows, function (index, rowId) {
                                var _data = table.row(rowId).data();
                                _invIds.push(_data.invId);
                            });

                            var invoiceBulkStatus = {
                                invIds: _invIds
                            }

                            $.ajax({
                                url: '@Url.Action("PostToAccountInvoice", "Invoice", new { area = "Invoice" })',
                                type: "POST",
                                dataType: "json",
                                data: invoiceBulkStatus,
                                async: false,
                                success: function (response) {
                                    if (response.isSuccess) {
                                        GetInvoices();
                                        event.preventDefault();
                                        event.stopPropagation();
                                        return $.growl.notice({
                                            title: "Success",
                                            message: response.message
                                        });
                                    }
                                    else {
                                        event.preventDefault();
                                        event.stopPropagation();
                                        return $.growl.error({
                                            title: "Error",
                                            message: response.message
                                        });
                                    }
                                },
                                error: function (xhr) {
                                    console.log(xhr);
                                }
                            });

                        }
                    });
            }
            else {
                event.preventDefault();
                Swal.fire({
                    title: "Attention!",
                    text: "Please Select atleast one invoice in the list to Post To Chart Of Accounts",
                    icon: "warning",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                });
            }
        });
        //#endregion

        //#region Post Invoice To Account
        $('#btnPostAccount').click(function () {
            var table = $("#tbl_invoices").DataTable();
            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));
            if (rows.length > 0) {
                Swal.fire({
                    title: "Are you sure you want to Post ?",
                    text: "This action will post the selected Invoice(s) to chart of account!",
                    icon: "question",
                    showCancelButton: !0,
                    confirmButtonText: 'Yes! I Confirm',
                    cancelButtonText: 'No! Cancel Please',
                    confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
                }).then(function (t) {
                    if (t.value) {
                        var _Ids = "";
                        $.each(rows, function (index, rowId) {
                            var _data = table.row(rowId).data();
                            if (index == 0)
                                _Ids = _data.invId;
                            else
                                _Ids += "," + _data.invId;
                        });
                        if (_Ids === null || _Ids === undefined || _Ids.length <= 0) {
                            Swal.fire({
                                title: "Alert!",
                                text: "Row Selection Error. Please Refresh Page And Try Again!",
                                icon: "info",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                        }
                        else {
                            PostToAccount(_Ids);
                        }
                    }
                });
            }
            else {
                Swal.fire({
                    title: "Alert!",
                    text: "Please select at least one Invoice to post!",
                    icon: "info",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                });
            }
        });

        var PostToAccount = function (pinvId) {

            $.ajax({
                url: "@Url.Action("PostSalesInvoiceToAccount", "Invoice", new { area = "Invoice" })?data=" + pinvId,
                type: "POST",
                dataType: "JSON",
                success: function (data) {
                    if (data.isUpdated) {
                        Swal.fire({
                            title: "Success!",
                            text: "Posted Successfully!!",
                            icon: "success",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                        });
                        GetInvoices();
                    }
                    else {
                        Swal.fire({
                            title: "Error!",
                            text: data.message,
                            icon: "error",
                            showCancelButton: 0,
                            confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                        });
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    Swal.fire({
                        title: "Error!",
                        text: "Failed to Post to Account! Please refresh the Page and Try Again.",
                        icon: "error",
                        showCancelButton: 0,
                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                    })
                }
            });
        };
        //#endregion

        //#region Export General Logs
        var exportLogs = function (desc) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("ExportLogs", "AuditLogs", new { area = "Common" })?desc="+ desc,
                contentType: "application/json",
                dataType: "json"
            });
        }
        //#endregion

        //#region Media Communciation
        $("#btnInv_Email").click(function (event) {
            var table = $("#tbl_invoices").DataTable();
            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));

            if (rows.length > 0) {
                $.each(rows, function (index, rowId) {
                    var _data = table.row(rowId).data();

                    var _obj = {
                        "id": _data.invId,
                        "ref_no": _data.inv_no,
                        "mobile": _data.pat_mob,
                        "email": _data.pat_email,
                        "user": _data.patId,
                        "user_name": _data.pat_name
                    }

                    $.ajax({
                        url: '@Url.Action("SendInvoiceInEmail", "Invoice", new { area = "Invoice" })',
                        type: "POST",
                        dataType: "json",
                        data: _obj,
                        async: false,
                        success: function (response) {
                            if (response.isSuccess == true) {
                                event.preventDefault();
                                event.stopPropagation();
                                return $.growl.notice({
                                    title: "Success",
                                    message: response.message
                                });
                            }
                            else {
                                event.preventDefault();
                                event.stopPropagation();
                                return $.growl.error({
                                    title: "Error",
                                    message: response.message
                                });
                            }
                        },
                        error: function (xhr) {
                            console.log(xhr);
                        }
                    });
                });
            }
            else {
                Swal.fire({
                    title: "Attention!",
                    text: "Please Select atleast one invoice in the list to send e-Mail",
                    icon: "warning",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197",
                    cancelButtonColor: "#ff3d60",
                });
            }

        });

        $("#btnInv_Whatsapp").click(function (event) {
            var table = $("#tbl_invoices").DataTable();
            var rows = $(table.$('input[type="checkbox"]').map(function () {
                return $(this).prop("checked") ? $(this).closest('tr') : null;
            }));

            if (rows.length > 0) {
                $.each(rows, function (index, rowId) {
                    var _data = table.row(rowId).data();

                    var _obj = {
                        "id": _data.invId,
                        "ref_no": _data.inv_no,
                        "mobile": _data.pat_mob,
                        "email": _data.pat_email,
                        "user": _data.patId,
                        "user_name": _data.pat_name
                    }

                    $.ajax({
                        url: '@Url.Action("SendInvoiceInWhatsapp", "Invoice", new { area = "Invoice" })',
                        type: "POST",
                        dataType: "json",
                        data: _obj,
                        async: false,
                        success: function (response) {
                            if (response.isSuccess == true) {
                                if (response.data["status"] == "success") {
                                    event.preventDefault();
                                    event.stopPropagation();
                                    return $.growl.notice({
                                        title: "Success",
                                        message: response.message
                                    });
                                }
                                else {
                                    event.preventDefault();
                                    event.stopPropagation();
                                    return $.growl.warning({
                                        title: "Pending",
                                        message: response.message
                                    });
                                }
                            }
                            else {
                                event.preventDefault();
                                event.stopPropagation();
                                return $.growl.error({
                                    title: "Error",
                                    message: response.message
                                });
                            }
                        },
                        error: function (xhr) {
                            console.log(xhr);
                        }
                    })
                });
            }
            else {
                Swal.fire({
                    title: "Attention!",
                    text: "Please Select atleast one invoice in the list to send whatsapp",
                    icon: "warning",
                    showCancelButton: 0,
                    confirmButtonColor: "#0bb197",
                    cancelButtonColor: "#ff3d60",
                });
            }
        });

        var sendEmail = function (invId, inv_no, pat_mob, pat_email, patId, pat_name) {
            var _obj = {
                "id": parseInt(invId),
                "ref_no": inv_no,
                "mobile": pat_mob,
                "email": pat_email,
                "user": parseInt(patId),
                "user_name": pat_name
            }

            $.ajax({
                url: '@Url.Action("SendInvoiceInEmail", "Invoice", new { area = "Invoice" })',
                type: "POST",
                dataType: "json",
                data: _obj,
                async: false,
                success: function (response) {
                    if (response.isSuccess == true) {
                        return $.growl.notice({
                            title: "Success",
                            message: response.message
                        });
                    }
                    else {
                        return $.growl.error({
                            title: "Error",
                            message: response.message
                        });
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });
        }

        var sendWhatsapp = function (invId, inv_no, pat_mob, pat_email, patId, pat_name) {
            var _obj = {
                "id": parseInt(invId),
                "ref_no": inv_no,
                "mobile": pat_mob,
                "email": pat_email,
                "user": parseInt(patId),
                "user_name": pat_name
            }

            $.ajax({
                url: '@Url.Action("SendInvoiceInWhatsapp", "Invoice", new { area = "Invoice" })',
                type: "POST",
                dataType: "json",
                data: _obj,
                async: false,
                success: function (response) {
                    if (response.isSuccess == true) {
                        if (response.data["status"] == "success") {
                            return $.growl.notice({
                                title: "Success",
                                message: response.message
                            });
                        }
                        else {
                            return $.growl.warning({
                                title: "Pending",
                                message: response.message
                            });
                        }
                    }
                    else {
                        return $.growl.error({
                            title: "Error",
                            message: response.message
                        });
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            })
        }
        //#endregion

        //#region Receipt for Invoices
        var newReceipt = function (invId, patId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("InvoiceReceipts", "Receipt", new { area = "Invoice" })?invId=" + invId + "&patId=" + patId + "&rec_date=" + moment().format("YYYY-MM-DD"),
                contentType: "application/json",
                dataType: "html",
                success: function (response) {
                    $("#new_receipts_body").html(response);
                    $("#new_receipts").modal("show");
                    //localStorage.setItem("rec_from", "invoice_receipts");

                    //$("#inv_tab_content").html('');

                    //var _contents = '<div class="tab-pane active" id="' + inv_contentId + '">' +
                    //    '<div class="card-body p-0" id="' + inv_contentId + '">' +
                    //    response +
                    //    '</div>' +
                    //    '</div>';

                    //$("#inv_tab_content").html(_contents);
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                }
            });
        }

        var newInsReceipt = function (invId, patId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("InsuranceInvoiceReceipt", "InsuranceReceipts", new { area = "Invoice" })?invId=" + invId + "&patId=" + patId + "&rec_date=" + moment().format("YYYY-MM-DD"),
                contentType: "application/json",
                dataType: "html",
                success: function (response) {
                    $("#new_ins_receipts_body").html(response);
                    $("#new_ins_receipts").modal("show");
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                }
            });
        }
        //#endregion
    </script>
}
