@using System.Linq;
@using System.Security.Claims;
@using BusinessEntities;
@{
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    EMRInfo emr = (EMRInfo)TempData["emr_data"];
    TempData.Keep("emr_data");
    ViewBag.Title = "Index";
}
<div class="row">
    <div class="col-sm-12 col-md-12 col-lg-12">
        <div class="row">
            <div class="col-sm-12 col-md-12 col-lg-12 mb-4 font-weight-semibold">
                <span class="text-danger" style="font-size:smaller">Required fields are marked with *</span>
            </div>
        </div>
        <div id="narrative_add" style="display:none;">
        </div>
        <div id="narrative_edit">
        </div>
        <div class="table-responsive">
            <table id="tbl_narrative" class="table table-striped table-bordered text-nowrap" style="width: 100%; cursor: pointer;">
                <thead>
                    <tr style="color: #fff !important; background-color: #3C457D; border-color: #3C457D; ">
                        <th class="border-bottom-0 font-weight-semibold text-white">#</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Narrative Diagnosis</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Final Diagnosis</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Edit</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Delete</th>
                    </tr>
                </thead>
            </table>
        </div>
        <div>
            <h4 class="page-title mb-0 text-primary ">
                Previous History
            </h4>
        </div>
        <div class="table-responsive">
            <table id="tbl_Prenarrative" class="table table-striped table-bordered text-nowrap" style="width: 100%; cursor: pointer;">
                <thead>
                    <tr style="color: #fff !important; background-color: #808080; border-color: #3C457D; ">
                        <th class="border-bottom-0 font-weight-semibold text-white">#</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Date</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Doctor</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Narrative Diagnosis</th>
                        <th class="border-bottom-0 font-weight-semibold text-white">Final Diagnosis</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>
<!-- Create Diagnosis Modal -->
<div class="modal fade" id="create_diag_modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" id="sizeC">
        <div class="modal-content" id="create_diag_body">
        </div>
    </div>
</div>
<!-- End Create Diagnosis Modal -->

<script>
    //#region Page Load
        $(function () {
            GetNarrativeDiagnosis();
            GetPreviousNarrativeDiagnosis();
            AddNarrativeDiagnosis();
            $("#narrative_add").show();
        });
    //#endregion Page Load

    //#region Load NarrativeDiagnosis
        var GetNarrativeDiagnosis = function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAllNarrativeDiagnosis", "NarrativeDiagnosis", new { area = "EMR" })?appId=" + "@emr.appId",
                success: function (response) {

                    if (response.isAuthorized != false) {
                        var table;
                        if ($.fn.dataTable.isDataTable('#tbl_narrative')) {
                            table = $('#tbl_narrative').DataTable();
                            table.clear();
                            table.rows.add(response).draw();
                        }
                        else {
                            BindDataTableNarrative(response);
                        }
                    }
                    else {
                        console.log("You are not Authorized!");
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            })
        }
    //#endregion Load NarrativeDiagnosis

    //#region Load PreviousNarrativeDiagnosis
        var GetPreviousNarrativeDiagnosis = function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetAllPreNarrativeDiagnosis", "NarrativeDiagnosis", new { area = "EMR" })?appId=" + "@emr.appId" + "&patId=" + @emr.patId,
                success: function (response) {
                    if (response.isAuthorized != false) {
                        var table;
                        if ($.fn.dataTable.isDataTable('#tbl_Prenarrative')) {
                            table = $('#tbl_Prenarrative').DataTable();
                            table.clear();
                            table.rows.add(response).draw();
                        }
                        else {
                            console.log(response);
                            BindDataTableNarrativeP(response);
                        }
                    }
                    else {
                        console.log("You are not Authorized!");
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            })
        }
    //#endregion Load PreviousNarrativeDiagnosis

    //#region Bind Datatable
        var BindDataTableNarrative = function (response) {
            var table = $("#tbl_narrative").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "mData": "ntdId",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-center",
                        "render": function (data, type, row, meta) {
                            let _index = (meta.row) + 1;
                            if (_index >= 10) {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>" + _index + "</a>";
                            }
                            else {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>0" + _index + "</a>";
                            }
                        }
                    },

                    {
                        "mData": "ntd_1",
                        "className": 'text-left',

                    },
                    {
                        "mData": "ntd_2",
                        "className": 'text-left',

                    },

                    {
                        "mData": "ntdId",
                        "className": 'btn-edit text-center',
                        "orderable": false,
                        "searchable": false,
                        "render": function (ntdId, type, full, meta) {
                            var status = full.ntd_status;
                            if (status === "Active") {
                                if ("@emp_designation.ToString()" === "Super Administrator") {
                                    return '<button type="button"  onclick="EditNarrativeDiagnosis(' + ntdId + ')" class="btn btn-sm btn-outline-primary">Edit</button>';
                                }
                                else {
                                    if ("@emr.set_emr_lock" == "NoLock") {
                                        return '<button type="button"  onclick="EditNarrativeDiagnosis(' + ntdId + ')" class="btn btn-sm btn-outline-primary">Edit</button>';


                                    }
                                    else {
                                        if ("@emr.app_ae_date" >= "@emr.today") {
                                            return '<button type="button"  onclick="EditNarrativeDiagnosis(' + ntdId + ')" class="btn btn-sm btn-outline-primary">Edit</button>';
                                        }
                                        else {
                                                return ''
                                            }
                                    }
                                }
                            }
                            else {
                                return ''
                            }
                        }
                    },
                    {
                        "mData": "ntdId",
                        "className": 'btn-delete text-center',
                        "orderable": false,
                        "searchable": false,
                        "render": function (ntdId, type, full, meta) {
                            var status = full.ntd_status;
                            if (status === "Active") {
                                if ("@emp_designation.ToString()" === "Super Administrator") {
                                    return '<button type="button" onclick="DeleteNarrativeDiagnosis(' + ntdId + ')" class="btn btn-sm btn-outline-danger">Delete</button>';
                                }
                                else {
                                    if ("@emr.set_emr_lock" == "NoLock") {
                                        return '<button type="button" onclick="DeleteNarrativeDiagnosis(' + ntdId + ')" class="btn btn-sm btn-outline-danger">Delete</button>';


                                        }
                                    else {
                                        if ("@emr.app_ae_date" >= "@emr.today") {
                                            return '<button type="button" onclick="DeleteNarrativeDiagnosis(' + ntdId + ')" class="btn btn-sm btn-outline-danger">Delete</button>';
                                        }
                                        else {
                                            return ''
                                            }
                                    }
                                }

                            }
                            else {
                                return ''
                            }
                        }
                    }
                ],
                order: [[0, 'asc']],
                language: {
                    searchPlaceholder: 'Search...',
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Narrative Diagnosis</span>',
                    lengthMenu: '_MENU_',
                    scrollX: "100%",
                },
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Narrative Diagnosis',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3,4]
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Narrative Diagnosis',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3,4]
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Narrative Diagnosis',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3,4]
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Narrative Diagnosis',
                        footer: 'true',
                        exportOptions: {
                            columns: [0, 1, 2, 3,4]
                        }
                    }
                ]
            });
            table.buttons().container().appendTo('#tbl_narrative_wrapper .col-md-6:eq(0)');
        };
    //#endregion Bind Datatable

    //#region Previous Bind Datatable
        var BindDataTableNarrativeP = function (response) {
            var table = $("#tbl_Prenarrative").DataTable({
                fixedHeader: {
                    header: true,
                    footer: true
                },
                processing: true,
                "deferRender": true,
                "pageLength": 100,
                "retrieve": true,
                lengthChange: true,
                "aaData": response,
                "aoColumns": [
                    {
                        "mData": "ntdId",
                        "orderable": false,
                        "searchable": false,
                        "className": "text-center",
                        "render": function (data, type, row, meta) {
                            let _index = (meta.row) + 1;
                            if (_index >= 10) {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>" + _index + "</a>";
                            }
                            else {
                                return "<a href='javascript:void(0)' class='fs-13 font-weight-bold'>0" + _index + "</a>";
                            }
                        }
                    },
                    {
                        "mData": "app_fdate",
                        "className": "text-left",
                        "render": function (data) {
                            return moment(data).format('DD-MM-YYYY')
                        }
                    },
                    {
                        "mData": "doctor_name",
                        "className": "text-left"
                    },
                    {
                        "mData": "ntd_1",
                        "className": 'text-left',

                    },
                    {
                        "mData": "ntd_2",
                        "className": 'text-left',

                    },

                ],
                order: [[0, 'asc']],
                language: {
                    searchPlaceholder: 'Search...',
                    sSearch: '<span class="text-primary font-weight-semi-bold">Search By Narrative Diagnosis</span>',
                    lengthMenu: '_MENU_',
                    scrollX: "100%",
                },
                scrollX: true,
                scrollY: 500,
                scrollCollapse: true,
                buttons: [
                    {
                        extend: 'excel',
                        title: 'Previous Narrative Diagnosis',
                        footer: 'true',
                        className:'oldbutton',
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Previous Narrative Diagnosis',
                        footer: 'true',
                        className: 'oldbutton',
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Previous NarrativeDiagnosis',
                        footer: 'true',
                        className: 'oldbutton',
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Previous NarrativeDiagnosis',
                        footer: 'true',
                        className: 'oldbutton',
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    }
                ]
            });
            table.buttons().container().appendTo('#tbl_Prenarrative_wrapper .col-md-6:eq(0)');
        };
    //#endregion Previous Bind Datatable

    //#region Add NarrativeDiagnosis
        function AddNarrativeDiagnosis() {
            $('#narrative_edit').hide();
            var x = $("#narrative_add");
            x.load("@Url.Action("CreateNarrativeDiagnosis", "NarrativeDiagnosis", new { area = "EMR" })", function () {
                $("#narrative_add").show();
            });
        }
    //#endregion Add NarrativeDiagnosis

    //#region Edit NarrativeDiagnosis
        function EditNarrativeDiagnosis(ntdId) {
            $('#narrative_add').hide();
            var x = $("#narrative_edit");
            x.load("@Url.Action("EditNarrativeDiagnosis", "NarrativeDiagnosis", new { area = "EMR" })?ntdId=" + ntdId + "&appId=" + @emr.appId, function () {
                $("#narrative_edit").show();
            });
            //hide the Copy Data
            var dt = $('#tbl_Prenarrative').DataTable();
            dt.columns([4]).visible(false);

        }
    //#endregion Edit NarrativeDiagnosis



    //#region Delete NarrativeDiagnosis
        var DeleteNarrativeDiagnosis = function (ntdId) {
            Swal.fire({
                title: "Are you sure you want to delete this Narrative Diagnosis ?",
                text: "The selected Narrative Diagnosis will be deleted!",
                icon: "question",
                showCancelButton: !0,
                confirmButtonText: 'Yes! I Confirm',
                cancelButtonText: 'No! Cancel Please',
                confirmButtonClass: "btn btn-success mt-2", cancelButtonClass: "btn btn-danger ms-2 mt-2", buttonsStyling: !1
            }).then(function (t) {
                if (t.value) {
                    $.ajax({
                        url: '@Url.Action("DeleteNarrativeDiagnosis", "NarrativeDiagnosis", new { area = "EMR" })?ntdId=' + ntdId,
                        type: "POST",
                        dataType: 'JSON',
                        success: function (data) {
                            if (data.isAuthorized) {
                                if (data.success) {
                                    Swal.fire({
                                        title: "Success!",
                                        text: "Narrative Diagnosis Deleted Successfully!",
                                        icon: "success",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60"
                                    });
                                    GetNarrativeDiagnosis();
                                }
                                else {
                                    Swal.fire({
                                        title: "Error!",
                                        text: "You Can't Change the status! Already exist an active Narrative Diagnosis",
                                        icon: "error",
                                        showCancelButton: 0,
                                        confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                    });
                                }
                            }
                            else {
                                Swal.fire({
                                    title: "Access Denied!",
                                    text: "You do not have Enough Privileges to Delete this Narrative Diagnosis!",
                                    icon: "error",
                                    showCancelButton: 0,
                                    confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                                });
                            }

                        },
                        error: function (xhr) {
                            Swal.fire({
                                title: "Error!",
                                text: "Failed to Delete Narrative Diagnosis! Please Refresh The Page & Try Again.",
                                icon: "error",
                                showCancelButton: 0,
                                confirmButtonColor: "#0bb197", cancelButtonColor: "#ff3d60",
                            });
                            GetNarrativeDiagnosis();
                        }
                    });
                }
            });
        }
    //#endregion Delete NarrativeDiagnosis

    //#region Resize Datatable
        function resizedt() {
            setTimeout(function () {
                $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
            }, 350);
        }
    //#endregion Resize Datatable

    //#region Alert Timeout
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
    //#endregion Alert Timeout
</script>

