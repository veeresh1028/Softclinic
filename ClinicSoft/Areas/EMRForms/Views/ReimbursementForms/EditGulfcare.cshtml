
@using System.Linq;
@using System.Security.Claims;
@using BusinessEntities;
@model BusinessEntities.EMRForms.Gulfcare
@{
    var claims = ClaimsPrincipal.Current.Identities.First().Claims.ToList();
    var emp_designation = claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).SingleOrDefault();
    EMRInfo emr = (EMRInfo)TempData["emr_data"];
    TempData.Keep("emr_data");
}
<form id="form_EditGulfcare" class="needs-validation fs-14" >

    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.gucnId)
    @Html.HiddenFor(m => m.gucn_appId)

    <div class="row">
        <div class="col-lg-12 col-xl-12 col-md-12 col-sm-12">
            <div>
                <h5 class="font-weight-bold ps-3">Section 1 – Member Information</h5>
            </div>
            <div class="card-body">
                <div class="row outer-border">
                    <div class="col-lg-12 col-md-12 ps-0">
                        <div class="form-group row">
                            <div class="d-flex col-sm-12 col-md-12 col-lg-6 ps-0">
                                <label class="col-md-4 form-label">Patient name (as printed on card)</label>
                                <div class="d-flex  justify-content-center w-8  form-label">
                                    :
                                </div>
                                <div class="col-md-6">
                                    <span class="font-weight-normal1 text-capitalize text-left">@emr.pat_name&nbsp;</span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="d-flex col-sm-12 col-md-12 col-lg-6 ps-0">
                                <label class="col-md-4 form-label">Membership number from your card</label>
                                <div class="d-flex  justify-content-center w-8  form-label">
                                    :
                                </div>
                                <div class="col-md-6">
                                    <span class="font-weight-normal1 text-capitalize text-left">@emr.pi_insno&nbsp;</span>
                                </div>
                            </div>
                            <div class="d-flex col-sm-12 col-md-12 col-lg-6 ps-0">
                                <label class="col-md-4 form-label">Date Of Birth</label>
                                <div class="d-flex  justify-content-center w-8  form-label">
                                    :
                                </div>
                                <div class="col-md-6">

                                    <span class="font-weight-normal1 text-capitalize text-left">@emr.pat_dob&nbsp;</span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="d-flex col-sm-12 col-md-12 col-lg-6 ps-0">
                                <label class="col-md-4 form-label">
                                    Principal name (as printed on card)
                                </label>
                                <div class="d-flex  justify-content-center w-8  form-label">
                                    :
                                </div>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(m => m.gucn_1, new { @class = "form-control", @id = "ugucn_1", @maxlength = "10" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="d-flex col-sm-12 col-md-12 col-lg-6 ps-0">
                                <label class="col-md-4 form-label">
                                    Principal contact information
                                </label>
                                <div class="d-flex  justify-content-center w-8  form-label">
                                    :
                                </div>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(m => m.gucn_2, new { @class = "form-control", @id = "ugucn_2", @maxlength = "10" })
                                </div>
                            </div>
                            <div class="d-flex col-sm-12 col-md-12 col-lg-6 ps-0">
                                <label class="col-md-4 form-label">Mob number</label>
                                <div class="d-flex  justify-content-center w-8  form-label">
                                    :
                                </div>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(m => m.gucn_3, new { @class = "form-control", @id = "ugucn_3", @maxlength = "20" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="d-flex col-sm-12 col-md-12 col-lg-6 ps-0">
                                <label class="col-md-4 form-label">E-mail</label>
                                <div class="d-flex  justify-content-center w-8  form-label">
                                    :
                                </div>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(m => m.gucn_4, new { @class = "form-control", @id = "ugucn_4", @maxlength = "20" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div>
                <h5 class="font-weight-bold ps-3 text-black text-justify text-center">
                    Section 2 – Medical Information <br />(To be fully completed by patient’s medical practitioner – all boxes must be completed in BLOCK letters.)
                </h5>
            </div>
            <div class="card-body">
                <div class="row outer-border">
                    <div class="col-sm-6 col-md-12 col-lg-6">
                        <div class="form-group">
                            <label class="form-label">Country of treatment </label>
                            @Html.TextBoxFor(m => m.gucn_5, new { @class = "form-control", @id = "ugucn_5", @maxlength = "20" })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-12 col-lg-6">
                        <div class="form-group">
                            <label class="form-label">Provider name and contact information</label>
                            @Html.TextBoxFor(m => m.gucn_6, new { @class = "form-control", @id = "ugucn_6", @maxlength = "20" })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-12 col-lg-6">
                        <div class="form-group">
                            <label class="form-label">Date when first symptoms were noticed</label>
                            @Html.TextBoxFor(m => m.gucn_7, new { @class = "form-control", @id = "ugucn_7", @maxlength = "20" })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-12 col-lg-6">
                        <div class="form-group">
                            <label class="form-label">Physician name and contact information </label>
                            @Html.TextBoxFor(m => m.gucn_8, new { @class = "form-control", @id = "ugucn_8", @maxlength = "20" })
                        </div>
                    </div>

                    <div class="col-md-12 col-lg-6">
                        <div class="form-group">
                            <p>I declare that I am the patient’s medical practitioner, and that the particulars given are to the best of my knowledge true and correct</p>
                        </div>
                    </div>
                    <div class="col-md-12 col-lg-6">
                        <div class="form-group">
                            <label class="form-label">Physician signature and official stamp :</label>
                            <img alt="stamp" src="@emr.doc_sign" id="doc_sign" class="avatar avatar-xl bsquare" />
                        </div>
                    </div>
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <p class="text-black text-justify text-center">Please provide details of diagnosis (primary and secondary) or symptom(s) and prescribed treatment(s) or investigation(s).</p>
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-12 col-lg-6">
                        <div class="form-group">
                            <label class="form-label">Symptoms </label>
                            @Html.TextAreaFor(m => m.gucn_9, new { @class = "form-control", @row = "2", @id = "ugucn_9" })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-12 col-lg-6">
                        <div class="form-group">
                            <label class="form-label">Treatment / investigation</label>
                            @Html.TextAreaFor(m => m.gucn_10, new { @class = "form-control", @row = "2", @id = "ugucn_10" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-12 col-md-12 col-lg-12">
                    <h5 class="font-weight-bold ps-3">
                        Section 3 – Claimed Invoices
                    </h5>
                    <div class="col-md-12">
                        <div class="table-responsive">
                            <table id="tbl_1" class="table table-striped table-bordered text-nowrap" style="width: 100%; cursor: pointer;">
                                <thead>
                                    <tr style="color: #fff !important; background-color: #808080; border-color: #3C457D; ">
                                        <th class="border-bottom-0 font-weight-semibold text-white">No</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white" style="min-width:200px">Invoice number</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white" style="min-width:200px">Claimed amount</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white" style="min-width:200px">Currency</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white">No</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white" style="min-width:200px">Invoice number</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white" style="min-width:200px">Claimed amount</th>
                                        <th class="border-bottom-0 font-weight-semibold text-white" style="min-width:200px">Currency</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>1</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_11, new { @class = "form-control", @id = "ugucn_11", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_12, new { @class = "form-control", @id = "ugucn_12", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_13, new { @class = "form-control", @id = "ugucn_13", @maxlength = "20" })</td>
                                        <td>5</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_14, new { @class = "form-control", @id = "ugucn_14", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_15, new { @class = "form-control", @id = "ugucn_15", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_16, new { @class = "form-control", @id = "ugucn_16", @maxlength = "20" })</td>
                                    </tr>
                                    <tr>
                                        <td>2</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_17, new { @class = "form-control", @id = "ugucn_17", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_18, new { @class = "form-control", @id = "ugucn_18", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_19, new { @class = "form-control", @id = "ugucn_19", @maxlength = "20" })</td>
                                        <td>6</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_20, new { @class = "form-control", @id = "ugucn_20", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_21, new { @class = "form-control", @id = "ugucn_21", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_22, new { @class = "form-control", @id = "ugucn_22", @maxlength = "20" })</td>
                                    </tr>
                                    <tr>
                                        <td>3</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_23, new { @class = "form-control", @id = "ugucn_23", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_24, new { @class = "form-control", @id = "ugucn_24", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_25, new { @class = "form-control", @id = "ugucn_25", @maxlength = "20" })</td>
                                        <td>7</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_26, new { @class = "form-control", @id = "ugucn_26", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_27, new { @class = "form-control", @id = "ugucn_27", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_28, new { @class = "form-control", @id = "ugucn_28", @maxlength = "20" })</td>
                                    </tr>
                                    <tr>
                                        <td>4</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_29, new { @class = "form-control", @id = "ugucn_29", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_30, new { @class = "form-control", @id = "ugucn_30", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_31, new { @class = "form-control", @id = "ugucn_31", @maxlength = "20" })</td>
                                        <td>8</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_32, new { @class = "form-control", @id = "ugucn_32", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_33, new { @class = "form-control", @id = "ugucn_33", @maxlength = "20" })</td>
                                        <td>@Html.TextBoxFor(m => m.gucn_34, new { @class = "form-control", @id = "ugucn_34", @maxlength = "20" })</td>
                                    </tr>
                                    <tr>
                                        <td colspan="3">Total claimed amount per currency</td>
                                        <td colspan="5">@Html.TextBoxFor(m => m.gucn_41, new { @class = "form-control", @id = "ugucn_41", @maxlength = "20" })</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div>
                <h5 class="font-weight-bold ps-3 text-black text-justify text-center">
                    Section 4 – Settlement
                </h5>
            </div>
            <div class="card-body">
                <div class="row outer-border">
                    <div class="col-sm-12 col-md-12 col-lg-12">
                        <div class="form-group row d-flex">
                            <label class="text-black  col-md-6 col-lg-3">Settlement currency : Settlement by </label>
                            <div class="custom-controls d-lg-flex d-md-flex flex-row justify-content-left col-md-2 col-lg-3">
                                <label class="custom-control custom-checkbox ms-sm-2 md-md-2 ms-lg-2">
                                    <input type="checkbox" class="custom-control-input" name="gucn_checkbox" value="1" id="1">
                                    <span class="custom-control-label">Cheque</span>
                                </label>
                            </div>
                            <div class="custom-controls d-lg-flex d-md-flex flex-row justify-content-left col-md-4 col-lg-3">
                                <label class="custom-control custom-checkbox ms-sm-2 md-md-2 ms-lg-2">
                                    <input type="checkbox" class="custom-control-input" name="gucn_checkbox" value="2" id="2">
                                    <span class="custom-control-label">Wire Transfer</span>
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <div class="form-group">
                            <label class="form-label">(A) Bank name</label>
                            @Html.TextBoxFor(m => m.gucn_35, new { @class = "form-control", @id = "ugucn_35", @maxlength = "20" })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <div class="form-group">
                            <label class="form-label">(B) Account title</label>
                            @Html.TextBoxFor(m => m.gucn_36, new { @class = "form-control", @id = "ugucn_36", @maxlength = "20" })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <div class="form-group">
                            <label class="form-label">(C) IBAN number / Account number </label>
                            @Html.TextBoxFor(m => m.gucn_37, new { @class = "form-control", @id = "ugucn_37", @maxlength = "20" })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <div class="form-group">
                            <label class="form-label">(D) SWIFT code  </label>
                            @Html.TextBoxFor(m => m.gucn_38, new { @class = "form-control", @id = "ugucn_38", @maxlength = "20" })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <div class="form-group">
                            <label class="form-label">(E) Bank address </label>
                            @Html.TextBoxFor(m => m.gucn_39, new { @class = "form-control", @id = "ugucn_39", @maxlength = "20" })
                        </div>
                    </div>
                    <div class="col-sm-6 col-md-6">
                        <div class="form-group">
                            <label class="form-label">(F) Beneficiary address </label>
                            @Html.TextBoxFor(m => m.gucn_40, new { @class = "form-control", @id = "ugucn_40", @maxlength = "20" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group text-black font-weight-bold text-justify">
                            <h4 class="text-black font-weight-bold">Important Notes:</h4>
                            <p>
                                Please submit the medical reports from your treating physician, pharmacy prescriptions, investigations requests and their results,
                                invoices with itemized breakdown and original receipts. In case of online submission, please retain the original documents as they may be
                                required to finalize your claim.
                            </p>
                            <p>
                                NAS prior approval is required for all non-emergency hospitalizations. Before admission, you are kindly required to e-mail a detailed medical
                                report and cost estimate of the proposed treatment on official letterhead duly signed and stamped by the treating physician to claimscenter@nas.ae.
                            </p>
                            <p>Cheques are issued in the name of the principal and are valid for 6 months from the date of issue.</p>
                            <p>
                                For transfers within the U.A.E., fields (A), (B) and (C) are mandatory. For transfers outside the U.A.E., please complete all fields in the settlement
                                section above. In case IBAN is not available in the destination country (e.g. India), please enter bank account number in lieu of IBAN number.
                            </p>
                            <p>
                                Claim settlements in currencies other than your bank account currency may result in foreign exchange charges. Please check with your bank regarding
                                these and any additional fees that may be charged by your bank on incoming remittances.
                            </p>
                            <p>
                                NAS bears no liability for any incorrect bank account details provided above. Furthermore, any charges related to corrective action shall be deducted
                                from the final settlement.
                            </p>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group row outer-border">
                            <h4 class="text-black font-weight-bold">Patient's declaration and conset</h4>
                            <p>
                                I, the undersigned, confirm that I am the patient/patient’s spouse or guardian (if patient is under 18 years of age) and I wish to claim benefits
                                and declare that all the particulars given above are to the best of my knowledge true and correct. In addition, I authorize and request any hospital,
                                physician, and any other health provider to furnish NAS Administration Services with the complete information including copies of their records in
                                connection with medical treatment and/ or other services provided to me or to my dependent. I also agree that a copy of this consent shall have the
                                validity of the original. Signature of the principal and or spouse
                            </p>
                            <div class="col-sm-12 col-md-6 col-lg-6">
                                <div>
                                    <div class="form-group mb-3" style="display:none" id="upatimg"><img alt="Signature" src="" id="upat_sign" class="avatar avatar-xl bsquare" /></div>
                                </div>
                                <label class="form-label"> Signature of the Insured/Guardian:</label>
                            </div>
                            <div class="col-sm-12 col-md-6 col-lg-6">
                                <div>
                                    <label class="form-label text-red text-left" id="upsb_date_witness" name="">&nbsp;</label>
                                </div>
                                <label class="form-label">Date:</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-2">
        <div class="col-sm-12 col-md-12 col-lg-12 text-center">
            <div class="btn-list btn-animation">
                <button type="submit" class="btn btn-warning btn-sm" id="btn_Update_Gulfcare">Save Changes</button>
                <button type="submit" class="btn btn-sm btn-outline-danger" id="btn_Delete_Gulfcare">Delete</button>
                <button type="button" class="btn btn-sm btn-outline-light " id="btn_Print_RadioDeci" onclick="PrintGulfcare()">
                    <i class="fa fa-print">&nbsp;&nbsp;</i>Print
                </button>
                <div class="btn-group mr-2">
                    <div class="dropdown">
                        <button type="button" class="btn-sm btn-secondary me-2 mb-2 dropdown-toggle" data-bs-toggle="dropdown">
                            <i class="fa fa-paint-brush">&nbsp;&nbsp;</i> Patient
                        </button>
                        <div class="dropdown-menu">
                            <a class="dropdown-item" onclick="openSignaturePad('patient')">Tab</a>
                            <a class="dropdown-item" onclick="openWacomTabSignaturePad('patient')">Wacom Tab</a>
                        </div>
                    </div>
                </div>
                <button type="button" class="btn btn-outline-danger" id="btn_Close_EditGulfcare" style="display:none">
                    Close
                </button>
            </div>
        </div>
    </div>
</form>

<script type="text/javascript">
    //#region Partial View Onload
        var formName1 = $(form_EditGulfcare).closest('form').attr('name');
        $(function () {
            validate();
            GetSignaturename('patient');
            GetCheckedValues("@Model.gucn_checkbox");
        });
    //#endregion

    //#region Get CheckedValues
        var GetCheckedValues = function (checknames) {
            var str = checknames;
            var myarray = str.split(',');
            for (var i = 0; i < myarray.length; i++) {
                $('.custom-control-input').each(function () {
                    if (this.id == myarray[i]) {
                        $("#" +this.id).attr('checked', 'checked');
                        $("#" +this.id).prop("checked", true);
                    }
                });
            }

        }
    //#endregion

    //#region Update  Button Click
        $('#btn_Update_Gulfcare').on('click', function (e) {
                e.preventDefault();
            if ($("#form_EditGulfcare").valid()) {
                console.log($("#gucnId").val());
                $('#btn_Update_Gulfcare').removeClass("btn btn-success");
                $('#btn_Update_Gulfcare').addClass("btn btn-success btn-loaders btn-icon");
                $('#btn_Update_Gulfcare').html("Updating the Record....");
                var gucn_chkbox = "";
                $('.custom-control-input:checked').each(function (index) {
                    gucn_chkbox = gucn_chkbox + ',' + $(this).val();
                });
                var gucn_checkbox = gucn_chkbox.substring(1);
                var _dataInsert = {
                    "gucnId": @Model.gucnId,
                    "gucn_appId": @emr.appId,
                    "gucn_checkbox": gucn_checkbox,
                    "gucn_1": $("#ugucn_1").val(),
                    "gucn_1": $("#ugucn_1").val(),
                    "gucn_2": $("#ugucn_2").val(),
                    "gucn_3": $("#ugucn_3").val(),
                    "gucn_4": $("#ugucn_4").val(),
                    "gucn_5": $("#ugucn_5").val(),
                    "gucn_6": $("#ugucn_6").val(),
                    "gucn_7": $("#ugucn_7").val(),
                    "gucn_8": $("#ugucn_8").val(),
                    "gucn_9": $("#ugucn_9").val(),
                    "gucn_10": $("#ugucn_10").val(),
                    "gucn_11": $("#ugucn_11").val(),
                    "gucn_12": $("#ugucn_12").val(),
                    "gucn_13": $("#ugucn_13").val(),
                    "gucn_14": $("#ugucn_14").val(),
                    "gucn_15": $("#ugucn_15").val(),
                    "gucn_16": $("#ugucn_16").val(),
                    "gucn_17": $("#ugucn_17").val(),
                    "gucn_18": $("#ugucn_18").val(),
                    "gucn_19": $("#ugucn_19").val(),
                    "gucn_20": $("#ugucn_20").val(),
                    "gucn_21": $("#ugucn_21").val(),
                    "gucn_22": $("#ugucn_22").val(),
                    "gucn_23": $("#ugucn_23").val(),
                    "gucn_24": $("#ugucn_24").val(),
                    "gucn_25": $("#ugucn_25").val(),
                    "gucn_26": $("#ugucn_26").val(),
                    "gucn_27": $("#ugucn_27").val(),
                    "gucn_28": $("#ugucn_28").val(),
                    "gucn_29": $("#ugucn_29").val(),
                    "gucn_30": $("#ugucn_30").val(),
                    "gucn_31": $("#ugucn_31").val(),
                    "gucn_32": $("#ugucn_32").val(),
                    "gucn_33": $("#ugucn_33").val(),
                    "gucn_34": $("#ugucn_34").val(),
                    "gucn_35": $("#ugucn_35").val(),
                    "gucn_36": $("#ugucn_36").val(),
                    "gucn_37": $("#ugucn_37").val(),
                    "gucn_38": $("#ugucn_38").val(),
                    "gucn_39": $("#ugucn_39").val(),
                    "gucn_40": $("#ugucn_40").val(),
                    "gucn_41": $("#ugucn_41").val(),
                    "gucn_42": '',
                    "gucn_43": '',
                    "__RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                }
                console.log(_dataInsert)
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("UpdateGulfcare", "ReimbursementForms", new { area = "EMRForms" })",
                    dataType: 'JSON',
                    data: _dataInsert,
                    success: function (data) {
                        $('#btn_Update_Gulfcare').removeClass("btn btn-warning btn-loaders btn-icon");
                        $('#btn_Update_Gulfcare').addClass("btn btn-warning");
                        $('#btn_Update_Gulfcare').html("Save Changes");
                        if (data.isSuccess) {
                            if (data.isInserted) {
                                GetGulfcare();
                                var alertPlaceholder = document.getElementById("Alert");
                                function alert(e, t) {
                                    var l = document.createElement("div");
                                    l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible"  role="alert">' + e +
                                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                }
                                alert("<i class='fe fe-check-circle text-white'></i> Gulfcare Updated Successfully!", "success");
                                Timeout();
                                $("#gulfcare_edit").show();
                                $("#gulfcare_edit").hide();
                            }
                            else {
                                let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                    "<div class='alert alert-warning' role='alert'>" +
                                    "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                    "<strong>Warning.. Gulfcare Alredy Exists..</strong><br/>" +
                                    "</div></div>";
                                $("#error").html(html);
                            }
                        }
                        else
                        {
                            let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                "<div class='alert alert-danger' role='alert'>" +
                                "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                "<strong>Validation Error.. Please correct before you submit the form!&nbsp;</strong><br/><ul>";
                            $.each(data.message, function (index, value) {
                                html += "<li><small>" + value + "</small><li>";
                                var elem = $("#" + index);
                                if (elem.hasClass("select2-hidden-accessible")) {
                                    $("#select2-" + elem.attr("id") + "-container").parent().addClass('error');
                                }
                                else {
                                    $(elem).addClass(" is-invalid");
                                }

                                setTimeout(function () {
                                    if (elem.hasClass("select2-hidden-accessible")) {
                                        $("#select2-" + elem.attr("id") + "-container").parent().removeClass('error');
                                    }
                                    else {
                                        $(elem).removeClass("is-invalid");
                                    }
                                }, 5000);
                            });
                            html += "</ul></div></div>";
                            $("#error").html(html);
                        }
                    },
                    error: function (xhr) {
                        $('#btn_Update_Gulfcare').removeClass("btn btn-warning btn-loaders btn-icon");
                        $('#btn_Update_Gulfcare').addClass("btn btn-warning");
                        $('#btn_Update_Gulfcare').html("Save Changes");
                        Timeout();
                    }
                });

            }
            else {
                $('.modal-body').animate({
                    scrollTop: ($('.has-error').offset().top - 300)
                }, 2000);
            }
        });
    //#endregion

    //#region Delete Click
        $('#btn_Delete_Gulfcare').on('click', function (e) {
            e.preventDefault();
            $('#btn_Delete_Gulfcare').removeClass("btn btn-success");
            $('#btn_Delete_Gulfcare').addClass("btn btn-success btn-loaders btn-icon");
            $('#btn_Delete_Gulfcare').html("Deleting the Record....");

                $.ajax({
                    url: '@Url.Action("DeleteGulfcare", "ReimbursementForms", new { area = "EMRForms" })?gucnId=' + $("#gucnId").val(),
                    type: "POST",
                    dataType: 'JSON',
                    success: function (data) {
                        $('#btn_Delete_Gulfcare').removeClass("btn btn-success btn-loaders btn-icon");
                        $('#btn_Delete_Gulfcare').addClass("btn btn-warning");
                        $('#btn_Delete_Gulfcare').html("Delete");
                        if (data.isAuthorized) {
                            if (data.success) {
                                var alertPlaceholder = document.getElementById("Alert");
                                function alert(e, t) {
                                    var l = document.createElement("div");
                                    l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" >' + e +
                                        '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                                }
                                alert("<i class='fe fe-check-circle text-white'></i> Gulfcare Claim Deleted Successfully!", "success");
                                clearControls();
                                $("#gulfcare_edit").hide();
                                $("#gulfcare_edit").show();
                                Addgulfcare();
                            }
                            else {
                                let html = "<div class='col-12 col-sm-12 col-md-12 d-flex justify-content-center'>" +
                                    "<div class='alert alert-warning' role='alert'>" +
                                    "<button type='button' class='btn-close mr-negative-16' data-bs-dismiss='alert' aria-hidden='true' aria-label='Close'>×</button>" +
                                    "<strong>Error!.. Failed to Delete..</strong><br/>" +
                                    "</div></div>";
                                $("#error").html(html);
                            }
                        }
                        else {
                            var alertPlaceholder = document.getElementById("Alert");
                            function alert(e, t) {
                                var l = document.createElement("div");
                                l.innerHTML = '<div class="alert alert-' + t + ' alert-dismissible" >' + e +
                                    '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-hidden="Close">x</button></div>', alertPlaceholder.append(l)
                            }
                            alert("<i class='fe fe-check-circle text-white'></i> You do not have Enough Privileges to Delete this Designation!", "Access Denied!");
                        }
                    },
                    error: function (xhr) {
                        $('#btn_Delete_Gulfcare').removeClass("btn btn-success btn-loaders btn-icon");
                        $('#btn_Delete_Gulfcare').addClass("btn btn-Delete");
                        $('#btn_Delete_Gulfcare').html("Delete");
                        Timeout();
                    }
                })
        });
    //#endregion

    //#region Wacom Tab Signature
        var openWacomTabSignaturePad = function (id) {
            var _data = {
                "patId": @emr.patId,
                "person": id,
                "form": formName1,
                "appId": @emr.appId,
                "formname":"Gulfcare",
                "formlink":"PrintGulfcareClaim.aspx",
                "eSign":""
            }
            $.ajax({
                type: "GET",
                url: "@Url.Action("WacomTabSignaturePad", "WacomTabSignaturePad", new { area = "Common" })",
                contentType: "application/json",
                dataType: "html",
                data: _data,
                success: function (response) {
                    $("#signature_pad_body").html(response);
                    $("#signature_pad").modal("show");
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                }
            });
        }
    //#endregion

    //#region Signature
        var openSignaturePad = function (id) {
            var _data = {
                "patId": @emr.patId,
                "person": id,
                "form": formName1,
                "appId": @emr.appId,
                "formname":"Gulfcare",
                "formlink":"PrintGulfcareClaim.aspx",
                "eSign":""
            }
            $.ajax({
                type: "GET",
                url: "@Url.Action("SignaturePad", "SignaturePad", new { area = "Common" })",
                contentType: "application/json",
                dataType: "html",
                data: _data,
                success: function (response) {
                    $("#signature_pad_body").html(response);
                    $("#signature_pad").modal("show");
                },
                error: function (xhr) {
                    console.log("Error :" + xhr.statusText);
                }
            });
        }
    //#endregion

    //#region Get Signature
        var GetSignaturename = function  (person) {
            $.ajax({
                url: '@Url.Action("GetSignature", "SignaturePad", new { area = "Common" })?appId=' + @emr.appId + '&person=' + person + '&form=Gulfcare',
                    type: "GET",
                    dataType: "json",
                    async: false,
                success: function (response) {
                    console.log("fgxghszd");
                    console.log(response);
                    let sign = response[0].psb_sign;
                    var date = moment(response[0].psb_date_created).format("DD-MM-YYYY HH:mm");
                    if (response[0].person == "patient") {
                        $("#upatimg").show();
                        $("#upat_sign").attr("src", sign);
                        $("#upsb_date_witness").text(date);
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                    alert(xhr);
                }

            });
        };
    //#endregion

    //#region Validation Initialization
    var validate = function () {
        $('#ugucn_12').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 1000000) {
                return false;
            }
        });
        $("#ugucn_12").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#ugucn_12").val(0.00);
            }
        });
        $('#ugucn_15').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 1000000) {
                return false;
            }
        });
        $("#ugucn_15").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#ugucn_15").val(0.00);
            }
        });
        $('#ugucn_18').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 1000000) {
                return false;
            }
        });
        $("#ugucn_18").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#ugucn_18").val(0.00);
            }
        });
        $('#ugucn_21').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 1000000) {
                return false;
            }
        });
        $("#ugucn_21").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#ugucn_21").val(0.00);
            }
        });
        $('#ugucn_24').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 1000000) {
                return false;
            }
        });
        $("#ugucn_24").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#ugucn_24").val(0.00);
            }
        });
        $('#ugucn_27').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 1000000) {
                return false;
            }
        });
        $("#ugucn_27").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#ugucn_27").val(0.00);
            }
        });
        $('#ugucn_30').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 1000000) {
                return false;
            }
        });
        $("#ugucn_30").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#ugucn_30").val(0.00);
            }
        });
        $('#ugucn_33').keypress(function (e) {
            var charCode = (e.which) ? e.which : e.keyCode
            var inputValue = $(this).val() + String.fromCharCode(charCode);

            if (String.fromCharCode(charCode).match(/[^0-9.]/g)) {
                return false;
            }

            if (parseFloat(inputValue) > 1000000) {
                return false;
            }
        });
        $("#ugucn_33").on('input', function () {
            var disc = $(this).val();
            if (disc == "" || disc == null || disc == undefined) {
                $("#ugucn_33").val(0.00);
            }
        });
    }

//#endregion

    //#region Alert Timeout
        function Timeout() {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 4200);
        }
    //#endregion

    //#region Clear Controls
        var clearControls = function () {
            $("#ugucn_1").val("");
            $("#ugucn_2").val("");
            $("#ugucn_3").val("");
            $("#ugucn_4").val("");
            $("#ugucn_5").val("");
            $("#ugucn_6").val("");
            $("#ugucn_7").val("");
            $("#ugucn_8").val("");
            $("#ugucn_9").val("");
            $("#ugucn_10").val("");
            $("#ugucn_11").val("");
            $("#ugucn_12").val("");
            $("#ugucn_13").val("");
            $("#ugucn_14").val("");
            $("#ugucn_15").val("");
            $("#ugucn_16").val("");
            $("#ugucn_17").val("");
            $("#ugucn_18").val("");
            $("#ugucn_19").val("");
            $("#ugucn_20").val("");
            $("#ugucn_21").val("");
            $("#ugucn_22").val("");
            $("#ugucn_23").val("");
            $("#ugucn_24").val("");
            $("#ugucn_25").val("");
            $("#ugucn_26").val("");
            $("#ugucn_27").val("");
            $("#ugucn_28").val("");
            $("#ugucn_29").val("");
            $("#ugucn_30").val("");
            $("#ugucn_31").val("");
            $("#ugucn_32").val("");
            $("#ugucn_33").val("");
            $("#ugucn_34").val("");
            $("#ugucn_35").val("");
            $("#ugucn_36").val("");
            $("#ugucn_37").val("");
            $("#ugucn_38").val("");
            $("#ugucn_39").val("");
            $("#ugucn_40").val("");
            $("#ugucn_41").val("");
            $("#ugucn_42").val("");
            $("#ugucn_43").val("");
        }
    //#endregion

    //#region Print Gulfcare Request
        function PrintGulfcare() {
            window.open("@Url.Action("PrintGulfcare", "ReimbursementForms", new { area = "EMRForms" })?gucnId=" + @Model.gucnId)
        }
    //#endregion

</script>
<style>
    .outer-border {
        border: 2px solid #000; /* You can adjust the border thickness and color as needed */
        padding: 10px; /* Optional: Add padding for spacing */
    }
</style>